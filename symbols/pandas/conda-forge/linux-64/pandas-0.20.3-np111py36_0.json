{
 "*": {
  "data": {
   "imports": [
    "pandas.core.dtypes.common"
   ]
  },
  "type": "star-import"
 },
 "pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "get_versions",
    "pandas._libs.lib",
    "pandas._libs.tslib",
    "pandas.hard_dependencies",
    "pandas.missing_dependencies",
    "pandas.module",
    "pandas.util._depr_module._DeprecatedModule",
    "pandas.v",
    "str"
   ]
  },
  "type": "module"
 },
 "pandas._DeprecatedModule": {
  "data": {
   "shadows": "pandas.util._depr_module._DeprecatedModule"
  },
  "type": "import"
 },
 "pandas.__doc__": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandas.__docformat__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pandas.__version__": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandas._hashtable": {
  "data": {
   "shadows": "pandas._libs.hashtable"
  },
  "type": "import"
 },
 "pandas._lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas._libs": {
  "data": {},
  "type": "module"
 },
 "pandas._tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas._version": {
  "data": {
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "module"
 },
 "pandas._version.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas._version.get_versions": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas._version.json",
    "pandas._version.version_json"
   ]
  },
  "type": "function"
 },
 "pandas._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandas._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas._version.version_json": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.api": {
  "data": {},
  "type": "module"
 },
 "pandas.api.types": {
  "data": {},
  "type": "module"
 },
 "pandas.api.types.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.api.types.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.api.types.IntervalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.IntervalDtype"
  },
  "type": "import"
 },
 "pandas.api.types.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.api.types.infer_dtype": {
  "data": {
   "shadows": "pandas._libs.lib.infer_dtype"
  },
  "type": "import"
 },
 "pandas.api.types.union_categoricals": {
  "data": {
   "shadows": "pandas.core.dtypes.concat.union_categoricals"
  },
  "type": "import"
 },
 "pandas.compat": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ImportError",
    "NameError",
    "StringIO.StringIO",
    "__builtin__.filter",
    "__builtin__.map",
    "__builtin__.range",
    "__builtin__.zip",
    "bytes",
    "cStringIO.StringIO",
    "chr",
    "dateutil.parser.parse",
    "distutils.version.LooseVersion",
    "exec",
    "int",
    "io.StringIO",
    "pandas.compat.PY2",
    "pandas.compat.PY3",
    "pandas.compat.binary_type",
    "pandas.compat.dateutil",
    "pandas.compat.functools",
    "pandas.compat.itertools",
    "pandas.compat.long",
    "pandas.compat.raise_with_traceback",
    "pandas.compat.re",
    "pandas.compat.string_types",
    "pandas.compat.sys",
    "pandas.compat.types",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.compat.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pandas.compat.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "pandas.compat.DeepChainMap": {
  "data": {
   "shadows": "pandas.compat.chainmap.DeepChainMap"
  },
  "type": "import"
 },
 "pandas.compat.FileNotFoundError": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "pandas.compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.OrderedDefaultdict": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "pandas.compat.OrderedDefaultdict.__init__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.callable",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDefaultdict.__missing__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDefaultdict.__reduce__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.compat.PY2": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.compat.PY3": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.compat.PY35": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.compat.PY36": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.compat.ResourceWarning": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.compat.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pandas.compat._EAW_MAP": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "pandas.compat._date_parser": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "pandas.compat._name_re": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "pandas.compat.add_metaclass": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "pandas.compat.add_metaclass.wrapper": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "metaclass"
   ]
  },
  "type": "function"
 },
 "pandas.compat.binary_type": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "pandas.compat.bind_method": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.types",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.compat.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "pandas.compat.bytes_to_str": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pandas.compat.cPickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.compat.cStringIO": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.compat.callable": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.compat.chainmap.ChainMap": {
  "data": {
   "shadows": "pandas.compat.chainmap_impl.ChainMap"
  },
  "type": "import"
 },
 "pandas.compat.chainmap.DeepChainMap": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.compat.chainmap_impl.ChainMap"
   ]
  },
  "type": "class"
 },
 "pandas.compat.chainmap.DeepChainMap.__delitem__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.__setitem__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.new_child": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.compat.chainmap_impl.ChainMap": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "pandas.compat.chainmap_impl.ChainMap.__bool__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__contains__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__delitem__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__getitem__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__iter__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "iter",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__len__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__missing__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__repr__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.compat.chainmap_impl.recursive_repr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__setitem__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.clear": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.copy": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.fromkeys": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.get": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.new_child": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.parents": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.pop": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.popitem": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "pandas.compat.chainmap_impl.get_ident": {
  "data": {
   "shadows": "_thread.get_ident"
  },
  "type": "import"
 },
 "pandas.compat.chainmap_impl.recursive_repr": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "getattr",
    "set",
    "user_function"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function.wrapper": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_thread.get_ident",
    "id",
    "user_function"
   ]
  },
  "type": "function"
 },
 "pandas.compat.class_types": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "pandas.compat.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.compat.east_asian_len": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "UnicodeError",
    "isinstance",
    "len",
    "pandas.compat._EAW_MAP",
    "pandas.compat.text_type",
    "sum",
    "unicodedata.east_asian_width"
   ]
  },
  "type": "function"
 },
 "pandas.compat.east_asian_width": {
  "data": {
   "shadows": "unicodedata.east_asian_width"
  },
  "type": "import"
 },
 "pandas.compat.filter": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pandas.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.compat.httplib": {
  "data": {
   "shadows": "http.client"
  },
  "type": "import"
 },
 "pandas.compat.import_lzma": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "backports.lzma"
   ]
  },
  "type": "function"
 },
 "pandas.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandas.compat.integer_types": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pandas.compat.intern": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pandas.compat.is_platform_32bit": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pandas.compat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_linux": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_little_endian": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_mac": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_windows": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.isidentifier": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "pandas.compat._name_re"
   ]
  },
  "type": "function"
 },
 "pandas.compat.iteritems": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.iterkeys": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.compat.itervalues": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.lfilter": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.compat.lmap": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandas.compat.long": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pandas.compat.lrange": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "pandas.compat.lzip": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pandas.compat.lzma": {
  "data": {
   "shadows": "backports.lzma"
  },
  "type": "import"
 },
 "pandas.compat.map": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pandas.compat.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.compat.next": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "pandas.compat.numpy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "pandas.compat.numpy._nlv",
    "pandas.compat.numpy._np_version",
    "pandas.compat.numpy.re"
   ]
  },
  "type": "module"
 },
 "pandas.compat.numpy.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.numpy.__all__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandas.compat.numpy._nlv": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p10": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p11": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p12": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p13": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p14": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p8": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p9": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.compat.numpy._tz_regex": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.compat.OrderedDict",
    "pandas.compat.numpy.function.ARGMINMAX_DEFAULTS",
    "pandas.compat.numpy.function.ARGSORT_DEFAULTS",
    "pandas.compat.numpy.function.ARGSORT_DEFAULTS_KIND",
    "pandas.compat.numpy.function.CLIP_DEFAULTS",
    "pandas.compat.numpy.function.COMPRESS_DEFAULTS",
    "pandas.compat.numpy.function.CUM_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.CompatValidator",
    "pandas.compat.numpy.function.LOGICAL_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.MINMAX_DEFAULTS",
    "pandas.compat.numpy.function.REPEAT_DEFAULTS",
    "pandas.compat.numpy.function.RESHAPE_DEFAULTS",
    "pandas.compat.numpy.function.ROUND_DEFAULTS",
    "pandas.compat.numpy.function.SORT_DEFAULTS",
    "pandas.compat.numpy.function.STAT_DDOF_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.STAT_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.TAKE_DEFAULTS",
    "pandas.compat.numpy.function.TRANSPOSE_DEFAULTS"
   ]
  },
  "type": "module"
 },
 "pandas.compat.numpy.function.ARGMINMAX_DEFAULTS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.ARGSORT_DEFAULTS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.ARGSORT_DEFAULTS_KIND": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CLIP_DEFAULTS": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.COMPRESS_DEFAULTS": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CUM_FUNC_DEFAULTS": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CompatValidator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.compat.numpy.function.CompatValidator.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util._validators.validate_args",
    "pandas.util._validators.validate_args_and_kwargs",
    "pandas.util._validators.validate_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.CompatValidator.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.LOGICAL_FUNC_DEFAULTS": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.MINMAX_DEFAULTS": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.REPEAT_DEFAULTS": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.RESAMPLER_NUMPY_OPS": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.RESHAPE_DEFAULTS": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.ROUND_DEFAULTS": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.SORT_DEFAULTS": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.STAT_DDOF_FUNC_DEFAULTS": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.STAT_FUNC_DEFAULTS": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.TAKE_DEFAULTS": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.TRANSPOSE_DEFAULTS": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.UnsupportedFunctionCall": {
  "data": {
   "shadows": "pandas.errors.UnsupportedFunctionCall"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.is_bool": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.process_skipna": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmax": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argmax_with_skipna": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.process_skipna",
    "pandas.compat.numpy.function.validate_argmax"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmin": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argmin_with_skipna": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.process_skipna",
    "pandas.compat.numpy.function.validate_argmin"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_args": {
  "data": {
   "shadows": "pandas.util._validators.validate_args"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_args_and_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_args_and_kwargs"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_argsort": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argsort_kind": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argsort_with_ascending": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_argsort_kind",
    "pandas.core.dtypes.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_clip": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_clip_with_axis": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_clip"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_compress": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_cum_func": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_cum_func_with_skipna": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_cum_func",
    "pandas.core.dtypes.common.is_bool"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_cumsum": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_expanding_func": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "pandas.errors.UnsupportedFunctionCall"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_groupby_func": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len",
    "pandas.errors.UnsupportedFunctionCall",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_kwargs"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_logical_func": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_max": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_mean": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_min": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_repeat": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_resampler_func": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.compat.numpy.function.RESAMPLER_NUMPY_OPS",
    "pandas.errors.UnsupportedFunctionCall"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_reshape": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_rolling_func": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "pandas.errors.UnsupportedFunctionCall"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_round": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_sort": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_stat_ddof_func": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_stat_func": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_sum": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_take": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_take_with_convert": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_take"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_transpose": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_transpose_for_generic": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.numpy.function.validate_transpose",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_window_func": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "pandas.errors.UnsupportedFunctionCall"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.compat.numpy.np_array_datetime64_compat": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.array",
    "pandas.compat.numpy._np_version_under1p11",
    "pandas.compat.numpy.tz_replacer",
    "pandas.compat.string_and_binary_types"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.np_datetime64_compat": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.compat.numpy._np_version_under1p11",
    "pandas.compat.numpy.tz_replacer"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.compat.numpy.string_and_binary_types": {
  "data": {
   "shadows": "pandas.compat.string_and_binary_types"
  },
  "type": "import"
 },
 "pandas.compat.numpy.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.compat.numpy.tz_replacer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.numpy._tz_regex",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.compat.openpyxl_compat": {
  "data": {},
  "type": "module"
 },
 "pandas.compat.openpyxl_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.openpyxl_compat.is_compat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "pandas.compat.openpyxl_compat.openpyxl",
    "pandas.compat.openpyxl_compat.start_ver",
    "pandas.compat.openpyxl_compat.stop_ver"
   ]
  },
  "type": "function"
 },
 "pandas.compat.openpyxl_compat.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.compat.openpyxl_compat.start_ver": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.compat.openpyxl_compat.stop_ver": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.compat.parse_date": {
  "data": {
   "lineno": 373
  },
  "type": "constant"
 },
 "pandas.compat.pickle_compat": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.pickle_compat.Unpickler",
    "pandas.compat.pickle_compat.copy",
    "pandas.compat.pickle_compat.load_newobj",
    "pandas.compat.pickle_compat.load_newobj_ex",
    "pandas.compat.pickle_compat.load_reduce",
    "pickle.NEWOBJ",
    "pickle.NEWOBJ_EX",
    "pickle.REDUCE"
   ]
  },
  "type": "module"
 },
 "pandas.compat.pickle_compat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.Unpickler": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pickle.Unpickler"
   ]
  },
  "type": "class"
 },
 "pandas.compat.pickle_compat.Unpickler.find_class": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "__import__",
    "getattr",
    "pandas.compat.pickle_compat._class_locations_map",
    "pandas.compat.pickle_compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat._class_locations_map": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.compat.pickle_compat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.load": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pandas.compat.pickle_compat.Unpickler"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "issubclass",
    "object.__new__",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj_ex": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "issubclass",
    "object.__new__",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_reduce": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "func",
    "getattr",
    "isinstance",
    "len",
    "object.__new__",
    "pandas.compat.pickle_compat.sys",
    "pandas.compat.string_types",
    "print",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.pkl": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.compat.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.compat.raise_with_traceback": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Ellipsis",
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.range": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pandas.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.compat.reduce": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pandas.compat.set_function_name": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "pandas.compat.signature": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.compat.inspect"
   ]
  },
  "type": "function"
 },
 "pandas.compat.str_to_bytes": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas.compat.string_and_binary_types": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "pandas.compat.string_types": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "pandas.compat.strlen": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "UnicodeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.compat.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.compat.text_type": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "pandas.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pandas.compat.u": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.compat.u_safe": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.compat.unichr": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pandas.compat.zip": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pandas.computation": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.expressions": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.expressions.set_option": {
  "data": {
   "shadows": "pandas.set_option"
  },
  "type": "import"
 },
 "pandas.computation.expressions.set_use_numexpr": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.computation.expressions.warnings",
    "pandas.set_option"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expressions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.conftest": {
  "data": {},
  "type": "module"
 },
 "pandas.conftest.InteractiveShell": {
  "data": {
   "shadows": "IPython.core.interactiveshell.InteractiveShell"
  },
  "type": "import"
 },
 "pandas.conftest.add_imports": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.conftest.numpy",
    "pandas.conftest.pandas",
    "pandas.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.conftest.configure_tests": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.conftest.pandas",
    "pandas.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.conftest.ip": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "IPython.core.interactiveshell.InteractiveShell",
    "pandas.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.conftest.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.conftest.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.conftest.pytest_addoption": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pandas.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.conftest.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pandas.conftest.spmatrix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "getattr",
    "pandas.conftest.pytest",
    "pandas.util.testing._skip_if_no_scipy",
    "scipy.sparse"
   ]
  },
  "type": "function"
 },
 "pandas.conftest.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.core": {
  "data": {},
  "type": "module"
 },
 "pandas.core.algorithms": {
  "data": {
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.uint8",
    "pandas._libs.algos.diff_2d_float32",
    "pandas._libs.algos.diff_2d_float64",
    "pandas._libs.algos.diff_2d_int16",
    "pandas._libs.algos.diff_2d_int32",
    "pandas._libs.algos.diff_2d_int64",
    "pandas._libs.algos.diff_2d_int8",
    "pandas._libs.algos.rank_1d_float64",
    "pandas._libs.algos.rank_1d_int64",
    "pandas._libs.algos.rank_1d_object",
    "pandas._libs.algos.rank_1d_uint64",
    "pandas._libs.algos.rank_2d_float64",
    "pandas._libs.algos.rank_2d_int64",
    "pandas._libs.algos.rank_2d_object",
    "pandas._libs.algos.rank_2d_uint64",
    "pandas._libs.algos.take_1d_bool_bool",
    "pandas._libs.algos.take_1d_bool_object",
    "pandas._libs.algos.take_1d_float32_float32",
    "pandas._libs.algos.take_1d_float32_float64",
    "pandas._libs.algos.take_1d_float64_float64",
    "pandas._libs.algos.take_1d_int16_float64",
    "pandas._libs.algos.take_1d_int16_int16",
    "pandas._libs.algos.take_1d_int16_int32",
    "pandas._libs.algos.take_1d_int16_int64",
    "pandas._libs.algos.take_1d_int32_float64",
    "pandas._libs.algos.take_1d_int32_int32",
    "pandas._libs.algos.take_1d_int32_int64",
    "pandas._libs.algos.take_1d_int64_float64",
    "pandas._libs.algos.take_1d_int64_int64",
    "pandas._libs.algos.take_1d_int8_float64",
    "pandas._libs.algos.take_1d_int8_int32",
    "pandas._libs.algos.take_1d_int8_int64",
    "pandas._libs.algos.take_1d_int8_int8",
    "pandas._libs.algos.take_1d_object_object",
    "pandas._libs.algos.take_2d_axis0_bool_bool",
    "pandas._libs.algos.take_2d_axis0_bool_object",
    "pandas._libs.algos.take_2d_axis0_float32_float32",
    "pandas._libs.algos.take_2d_axis0_float32_float64",
    "pandas._libs.algos.take_2d_axis0_float64_float64",
    "pandas._libs.algos.take_2d_axis0_int16_float64",
    "pandas._libs.algos.take_2d_axis0_int16_int16",
    "pandas._libs.algos.take_2d_axis0_int16_int32",
    "pandas._libs.algos.take_2d_axis0_int16_int64",
    "pandas._libs.algos.take_2d_axis0_int32_float64",
    "pandas._libs.algos.take_2d_axis0_int32_int32",
    "pandas._libs.algos.take_2d_axis0_int32_int64",
    "pandas._libs.algos.take_2d_axis0_int64_float64",
    "pandas._libs.algos.take_2d_axis0_int64_int64",
    "pandas._libs.algos.take_2d_axis0_int8_float64",
    "pandas._libs.algos.take_2d_axis0_int8_int32",
    "pandas._libs.algos.take_2d_axis0_int8_int64",
    "pandas._libs.algos.take_2d_axis0_int8_int8",
    "pandas._libs.algos.take_2d_axis0_object_object",
    "pandas._libs.algos.take_2d_axis1_bool_bool",
    "pandas._libs.algos.take_2d_axis1_bool_object",
    "pandas._libs.algos.take_2d_axis1_float32_float32",
    "pandas._libs.algos.take_2d_axis1_float32_float64",
    "pandas._libs.algos.take_2d_axis1_float64_float64",
    "pandas._libs.algos.take_2d_axis1_int16_float64",
    "pandas._libs.algos.take_2d_axis1_int16_int16",
    "pandas._libs.algos.take_2d_axis1_int16_int32",
    "pandas._libs.algos.take_2d_axis1_int16_int64",
    "pandas._libs.algos.take_2d_axis1_int32_float64",
    "pandas._libs.algos.take_2d_axis1_int32_int32",
    "pandas._libs.algos.take_2d_axis1_int32_int64",
    "pandas._libs.algos.take_2d_axis1_int64_float64",
    "pandas._libs.algos.take_2d_axis1_int64_int64",
    "pandas._libs.algos.take_2d_axis1_int8_float64",
    "pandas._libs.algos.take_2d_axis1_int8_int32",
    "pandas._libs.algos.take_2d_axis1_int8_int64",
    "pandas._libs.algos.take_2d_axis1_int8_int8",
    "pandas._libs.algos.take_2d_axis1_object_object",
    "pandas._libs.algos.take_2d_multi_bool_bool",
    "pandas._libs.algos.take_2d_multi_bool_object",
    "pandas._libs.algos.take_2d_multi_float32_float32",
    "pandas._libs.algos.take_2d_multi_float32_float64",
    "pandas._libs.algos.take_2d_multi_float64_float64",
    "pandas._libs.algos.take_2d_multi_int16_float64",
    "pandas._libs.algos.take_2d_multi_int16_int16",
    "pandas._libs.algos.take_2d_multi_int16_int32",
    "pandas._libs.algos.take_2d_multi_int16_int64",
    "pandas._libs.algos.take_2d_multi_int32_float64",
    "pandas._libs.algos.take_2d_multi_int32_int32",
    "pandas._libs.algos.take_2d_multi_int32_int64",
    "pandas._libs.algos.take_2d_multi_int64_float64",
    "pandas._libs.algos.take_2d_multi_int64_int64",
    "pandas._libs.algos.take_2d_multi_int8_float64",
    "pandas._libs.algos.take_2d_multi_int8_int32",
    "pandas._libs.algos.take_2d_multi_int8_int64",
    "pandas._libs.algos.take_2d_multi_int8_int8",
    "pandas._libs.algos.take_2d_multi_object_object",
    "pandas._libs.hashtable.Float64HashTable",
    "pandas._libs.hashtable.Float64Vector",
    "pandas._libs.hashtable.Int64HashTable",
    "pandas._libs.hashtable.Int64Vector",
    "pandas._libs.hashtable.ObjectVector",
    "pandas._libs.hashtable.PyObjectHashTable",
    "pandas._libs.hashtable.StringHashTable",
    "pandas._libs.hashtable.UInt64HashTable",
    "pandas._libs.hashtable.UInt64Vector",
    "pandas.core.algorithms._view_wrapper",
    "pandas.core.algorithms.take_nd",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "module"
 },
 "pandas.core.algorithms.ABCCategorical": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCCategorical"
  },
  "type": "import"
 },
 "pandas.core.algorithms.ABCIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndex"
  },
  "type": "import"
 },
 "pandas.core.algorithms.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndexClass"
  },
  "type": "import"
 },
 "pandas.core.algorithms.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.algorithms.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.algorithms.Index": {
  "data": {
   "shadows": "pandas.core.series.Index"
  },
  "type": "import"
 },
 "pandas.core.algorithms.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.algorithms.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.algorithms.SelectN": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.algorithms.SelectN.__init__": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.is_valid_dtype_n_method": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_complex_dtype",
    "pandas.core.dtypes.common.is_numeric_dtype",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.nlargest": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.nsmallest": {
  "data": {
   "lineno": 1007
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "pandas.core.algorithms.SelectN"
   ]
  },
  "type": "class"
 },
 "pandas.core.algorithms.SelectNFrame.__init__": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "list",
    "pandas.core.algorithms.SelectNFrame",
    "pandas.core.dtypes.common.is_list_like",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame.compute": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "get_indexer",
    "getattr",
    "len",
    "pandas.Int64Index",
    "pandas.core.algorithms.duplicated"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame.compute.get_indexer": {
  "data": {
   "lineno": 1116
  },
  "type": "function"
 },
 "pandas.core.algorithms.SelectNSeries": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "pandas.core.algorithms.SelectN"
   ]
  },
  "type": "class"
 },
 "pandas.core.algorithms.SelectNSeries.compute": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "min",
    "numpy.nonzero",
    "numpy.s_",
    "pandas._libs.algos.kth_smallest",
    "pandas.core.algorithms._ensure_data"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.algorithms.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.algorithms._convert_wrapper": {
  "data": {
   "lineno": 1187
  },
  "type": "function"
 },
 "pandas.core.algorithms._convert_wrapper.wrapper": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._diff_special": {
  "data": {
   "lineno": 1553
  },
  "type": "constant"
 },
 "pandas.core.algorithms._ensure_arraylike": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas._libs.lib.infer_dtype",
    "pandas._libs.lib.list_to_object_array",
    "pandas.core.dtypes.generic.ABCCategorical",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._ensure_data": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr",
    "numpy.asarray",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.core.dtypes.common._ensure_float64",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common._ensure_uint64",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_complex_dtype",
    "pandas.core.dtypes.common.is_datetime64_any_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.common.is_signed_integer_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.dtypes.common.is_unsigned_integer_dtype",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._ensure_float64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_float64"
  },
  "type": "import"
 },
 "pandas.core.algorithms._ensure_int64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_int64"
  },
  "type": "import"
 },
 "pandas.core.algorithms._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.core.algorithms._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.core.algorithms._ensure_uint64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_uint64"
  },
  "type": "import"
 },
 "pandas.core.algorithms._get_data_algo": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas._libs.lib.infer_dtype",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.dtypes.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._get_hashtable_algo": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas._libs.hashtable",
    "pandas._libs.lib.infer_dtype",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.algorithms._hashtables"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._get_take_nd_function": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "pandas.core.algorithms._convert_wrapper",
    "pandas.core.algorithms._take_1d_dict",
    "pandas.core.algorithms._take_2d_axis0_dict",
    "pandas.core.algorithms._take_2d_axis1_dict"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._get_take_nd_function.func": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.algorithms._take_nd_object",
    "pandas.core.dtypes.common._ensure_int64"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._hashtables": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pandas.core.algorithms._np_version_under1p10": {
  "data": {
   "shadows": "pandas.compat.numpy._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.core.algorithms._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.core.algorithms._rank1d_functions": {
  "data": {
   "lineno": 895
  },
  "type": "constant"
 },
 "pandas.core.algorithms._rank2d_functions": {
  "data": {
   "lineno": 902
  },
  "type": "constant"
 },
 "pandas.core.algorithms._reconstruct_data": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_period_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._take_1d_dict": {
  "data": {
   "lineno": 1234
  },
  "type": "constant"
 },
 "pandas.core.algorithms._take_2d_axis0_dict": {
  "data": {
   "lineno": 1260
  },
  "type": "constant"
 },
 "pandas.core.algorithms._take_2d_axis1_dict": {
  "data": {
   "lineno": 1287
  },
  "type": "constant"
 },
 "pandas.core.algorithms._take_2d_multi_dict": {
  "data": {
   "lineno": 1314
  },
  "type": "constant"
 },
 "pandas.core.algorithms._take_2d_multi_object": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._take_nd_object": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "pandas.core.dtypes.common._ensure_platform_int",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._value_counts_arraylike": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy.NaN",
    "numpy.insert",
    "pandas._libs.hashtable",
    "pandas._libs.hashtable.value_count_int64",
    "pandas._libs.tslib.iNaT",
    "pandas.core.algorithms._ensure_arraylike",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.algorithms._reconstruct_data",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms._view_wrapper": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "pandas.core.algorithms._view_wrapper.wrapper": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "f",
    "fill_wrap",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.algos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.core.algorithms.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.core.algorithms.checked_add_with_arr": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "OverflowError",
    "_broadcast",
    "bool",
    "numpy.empty",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.checked_add_with_arr._broadcast": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "numpy.broadcast_to",
    "numpy.empty",
    "pandas._libs.lib.isscalar",
    "pandas.compat.numpy._np_version_under1p10"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.algorithms.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.algorithms.cut": {
  "data": {
   "shadows": "pandas.core.reshape.tile.cut"
  },
  "type": "import"
 },
 "pandas.core.algorithms.diff": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "f",
    "int",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float64",
    "numpy.nan",
    "numpy.object_",
    "pandas.TimedeltaIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.core.algorithms._diff_special",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.core.algorithms.duplicated": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas._libs.hashtable",
    "pandas.core.algorithms._ensure_data"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.factorize": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "hash_klass",
    "isinstance",
    "len",
    "pandas.Index",
    "pandas.core.algorithms._ensure_arraylike",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.algorithms._get_data_algo",
    "pandas.core.algorithms._hashtables",
    "pandas.core.algorithms._reconstruct_data",
    "pandas.core.algorithms.safe_sort",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "vec_klass"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.htable": {
  "data": {
   "shadows": "pandas._libs.hashtable"
  },
  "type": "import"
 },
 "pandas.core.algorithms.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_categorical": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_complex_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_complex_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_datetime64_any_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_interval_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_interval_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_numeric_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_numeric_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_signed_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_signed_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_sparse": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_sparse"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.is_unsigned_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_unsigned_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.algorithms.isin": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "isinstance",
    "len",
    "list",
    "numpy.in1d",
    "numpy.ndarray",
    "object",
    "pandas._libs.hashtable.ismember_float64",
    "pandas._libs.hashtable.ismember_int64",
    "pandas._libs.hashtable.ismember_object",
    "pandas._libs.lib.list_to_object_array",
    "pandas._np_version_under1p8",
    "pandas.compat.PY3",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.dtypes.generic.ABCIndex",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.isnull",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.algorithms.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.algorithms.match": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "min",
    "pandas.Series",
    "pandas._libs.hashtable",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.algorithms._get_hashtable_algo",
    "pandas.core.common._asarray_tuplesafe"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.maybe_promote": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_promote"
  },
  "type": "import"
 },
 "pandas.core.algorithms.mode": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "getattr",
    "isinstance",
    "numpy.sort",
    "pandas.Series",
    "pandas._libs.hashtable",
    "pandas.core.algorithms._ensure_arraylike",
    "pandas.core.algorithms._ensure_data",
    "pandas.core.algorithms._reconstruct_data",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.core.algorithms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.algorithms.quantile": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "_get_score",
    "numpy.asarray",
    "numpy.float64",
    "numpy.sort",
    "pandas._libs.algos.arrmap_float64",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.quantile._get_score": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "_interpolate",
    "int",
    "len",
    "numpy.ceil",
    "numpy.floor",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.quantile._interpolate": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "pandas.core.algorithms.rank": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "pandas.core.algorithms._get_data_algo"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.safe_sort": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hash_klass",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.empty",
    "numpy.int_",
    "numpy.putmask",
    "pandas.Index",
    "pandas._libs.lib.infer_dtype",
    "pandas.compat.PY3",
    "pandas.core.algorithms._get_data_algo",
    "pandas.core.algorithms._hashtables",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.dtypes.common.is_list_like",
    "sort_mixed"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.safe_sort.sort_mixed": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sort",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common._ensure_object"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.algorithms.take_1d": {
  "data": {
   "lineno": 1478
  },
  "type": "constant"
 },
 "pandas.core.algorithms.take_2d_multi": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.algorithms._convert_wrapper",
    "pandas.core.algorithms._take_2d_multi_dict",
    "pandas.core.dtypes.cast.maybe_promote",
    "pandas.core.dtypes.common._ensure_int64"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.take_2d_multi.func": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.algorithms._take_2d_multi_object"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.take_nd": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "len",
    "list",
    "numpy.arange",
    "numpy.empty",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.algorithms._get_take_nd_function",
    "pandas.core.dtypes.cast.maybe_promote",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.core.dtypes.common.is_categorical",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.core.dtypes.common.is_interval_dtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.unique": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "pandas._libs.hashtable",
    "pandas.core.algorithms._ensure_arraylike",
    "pandas.core.algorithms._get_hashtable_algo",
    "pandas.core.algorithms._reconstruct_data",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.unique1d": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "pandas.core.algorithms.value_counts": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "getattr",
    "isinstance",
    "len",
    "numpy.array",
    "pandas.core.algorithms._value_counts_arraylike",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_sparse",
    "pandas.core.reshape.tile.cut",
    "pandas.core.series.Index",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.algorithms.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandas.core.api": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.api._removals",
    "pandas.util._depr_module._DeprecatedModule"
   ]
  },
  "type": "module"
 },
 "pandas.core.api.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.api.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.index.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.core.api.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.api.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.offsets.DateOffset"
  },
  "type": "import"
 },
 "pandas.core.api.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Float64Index": {
  "data": {
   "shadows": "pandas.core.index.Float64Index"
  },
  "type": "import"
 },
 "pandas.core.api.Grouper": {
  "data": {
   "shadows": "pandas.core.groupby.Grouper"
  },
  "type": "import"
 },
 "pandas.core.api.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.api.IndexSlice": {
  "data": {
   "shadows": "pandas.core.indexing.IndexSlice"
  },
  "type": "import"
 },
 "pandas.core.api.Int64Index": {
  "data": {
   "shadows": "pandas.core.index.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.api.Interval": {
  "data": {
   "shadows": "pandas.core.indexes.interval.Interval"
  },
  "type": "import"
 },
 "pandas.core.api.IntervalIndex": {
  "data": {
   "shadows": "pandas.core.index.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.core.api.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.api.NaT": {
  "data": {
   "shadows": "pandas.core.index.NaT"
  },
  "type": "import"
 },
 "pandas.core.api.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.core.api.Panel4D": {
  "data": {
   "shadows": "pandas.core.panel4d.Panel4D"
  },
  "type": "import"
 },
 "pandas.core.api.Period": {
  "data": {
   "shadows": "pandas.core.indexes.period.Period"
  },
  "type": "import"
 },
 "pandas.core.api.PeriodIndex": {
  "data": {
   "shadows": "pandas.core.index.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.api.RangeIndex": {
  "data": {
   "shadows": "pandas.core.index.RangeIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.api.TimeGrouper": {
  "data": {
   "shadows": "pandas.core.resample.TimeGrouper"
  },
  "type": "import"
 },
 "pandas.core.api.Timedelta": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.Timedelta"
  },
  "type": "import"
 },
 "pandas.core.api.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.index.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.core.api.UInt64Index": {
  "data": {
   "shadows": "pandas.core.index.UInt64Index"
  },
  "type": "import"
 },
 "pandas.core.api.WidePanel": {
  "data": {
   "shadows": "pandas.core.panel.WidePanel"
  },
  "type": "import"
 },
 "pandas.core.api._DeprecatedModule": {
  "data": {
   "shadows": "pandas.util._depr_module._DeprecatedModule"
  },
  "type": "import"
 },
 "pandas.core.api._removals": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.core.api.bdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.bdate_range"
  },
  "type": "import"
 },
 "pandas.core.api.date_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.date_range"
  },
  "type": "import"
 },
 "pandas.core.api.datetools": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.core.api.describe_option": {
  "data": {
   "shadows": "pandas.core.config.describe_option"
  },
  "type": "import"
 },
 "pandas.core.api.factorize": {
  "data": {
   "shadows": "pandas.core.algorithms.factorize"
  },
  "type": "import"
 },
 "pandas.core.api.get_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.get_dummies"
  },
  "type": "import"
 },
 "pandas.core.api.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.api.groupby": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.api.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.api.interval_range": {
  "data": {
   "shadows": "pandas.core.indexes.interval.interval_range"
  },
  "type": "import"
 },
 "pandas.core.api.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.api.lreshape": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.lreshape"
  },
  "type": "import"
 },
 "pandas.core.api.match": {
  "data": {
   "shadows": "pandas.core.algorithms.match",
   "symbols_in_volume": [
    "pandas.core.algorithms.match"
   ]
  },
  "type": "import"
 },
 "pandas.core.api.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.api.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.core.api.options": {
  "data": {
   "shadows": "pandas.core.config.options"
  },
  "type": "import"
 },
 "pandas.core.api.period_range": {
  "data": {
   "shadows": "pandas.core.indexes.period.period_range"
  },
  "type": "import"
 },
 "pandas.core.api.pivot": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.pivot_simple"
  },
  "type": "import"
 },
 "pandas.core.api.pnow": {
  "data": {
   "shadows": "pandas.core.indexes.period.pnow"
  },
  "type": "import"
 },
 "pandas.core.api.reset_option": {
  "data": {
   "shadows": "pandas.core.config.reset_option"
  },
  "type": "import"
 },
 "pandas.core.api.set_eng_float_format": {
  "data": {
   "shadows": "pandas.io.formats.format.set_eng_float_format"
  },
  "type": "import"
 },
 "pandas.core.api.set_option": {
  "data": {
   "shadows": "pandas.core.config.set_option"
  },
  "type": "import"
 },
 "pandas.core.api.timedelta_range": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.core.api.to_datetime": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.to_datetime"
  },
  "type": "import"
 },
 "pandas.core.api.to_numeric": {
  "data": {
   "shadows": "pandas.core.tools.numeric.to_numeric"
  },
  "type": "import"
 },
 "pandas.core.api.to_timedelta": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.core.api.unique": {
  "data": {
   "shadows": "pandas.core.algorithms.unique"
  },
  "type": "import"
 },
 "pandas.core.api.value_counts": {
  "data": {
   "shadows": "pandas.core.algorithms.value_counts"
  },
  "type": "import"
 },
 "pandas.core.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.api.wide_to_long": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.wide_to_long"
  },
  "type": "import"
 },
 "pandas.core.base": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "pandas.core.base.ABCDataFrame": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCDataFrame"
  },
  "type": "import"
 },
 "pandas.core.base.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndexClass"
  },
  "type": "import"
 },
 "pandas.core.base.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.base.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.core.base.AccessorProperty": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.AccessorProperty.__delete__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__get__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__init__": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__set__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.base.DataError": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "pandas.core.base.GroupByError"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.base.GroupByError": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.GroupByMixin": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.GroupByMixin._dispatch": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer.f": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._gotitem": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.core.base.IndexOpsMixin": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "object",
    "pandas.core.base._shared_docs",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.IndexOpsMixin._reduce": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._update_inplace": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._values": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmax": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "pandas.core.nanops.nanargmax"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmin": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "pandas.core.nanops.nanargmin"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.base": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.data": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.drop_duplicates": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "isinstance",
    "numpy.logical_not",
    "pandas.core.base._indexops_doc_kwargs",
    "pandas.core.base._shared_docs",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.util._decorators.Appender",
    "pandas.util._validators.validate_bool_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.duplicated": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.bool",
    "numpy.zeros",
    "pandas.core.algorithms.duplicated",
    "pandas.core.base._indexops_doc_kwargs",
    "pandas.core.base._shared_docs",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.empty": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.factorize": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "pandas.core.algorithms.factorize"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.flags": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.hasnans": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing.isnull",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_monotonic": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "pandas.Index",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_monotonic_decreasing": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "pandas.Index",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_unique": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.item": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "IndexError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.itemsize": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.max": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "pandas.core.nanops.nanmax"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.memory_usage": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "hasattr",
    "pandas._libs.lib.memory_usage_of_objects",
    "pandas.core.dtypes.common.is_object_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.min": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "pandas.core.nanops.nanmin"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nbytes": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.ndim": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nunique": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "len",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.searchsorted": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "pandas.core.base._shared_docs",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution",
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.shape": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.size": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.strides": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.transpose": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_transpose"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.unique": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "hasattr",
    "pandas.core.algorithms.unique1d",
    "pandas.core.base._indexops_doc_kwargs",
    "pandas.core.base._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.value_counts": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "pandas.core.algorithms.value_counts"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.NoNewAttributesMixin.__setattr__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "object.__setattr__",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin._freeze": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "_create_delegator_method",
    "_create_delegator_property",
    "classmethod",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_method": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_method.f": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property._getter": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property._setter": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_method": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_property_get": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_property_set": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.PandasObject.__dir__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dir",
    "set",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject.__sizeof__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "pandas.core.base.PandasObject",
    "pandas.core.dtypes.common.is_scalar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject.__unicode__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object.__repr__"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._constructor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._dir_additions": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._dir_deletions": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._reset_cache": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "object",
    "pandas.compat.builtins.max",
    "pandas.compat.builtins.min",
    "pandas.compat.builtins.sum",
    "set"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.SelectionMixin.__getitem__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_agg",
    "_agg_1dim",
    "all",
    "any",
    "dict",
    "f",
    "getattr",
    "is_aggregator",
    "is_any_frame",
    "is_any_series",
    "isinstance",
    "len",
    "list",
    "nested_renaming_depr",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.compat.iterkeys",
    "pandas.compat.itervalues",
    "pandas.compat.string_types",
    "pandas.core.base.SpecificationError",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.dtypes.generic.ABCDataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.reshape.concat.concat",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "func",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_1dim": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pandas.core.base.SpecificationError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_2dim": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.is_any_frame": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "pandas.compat.itervalues",
    "pandas.core.dtypes.generic.ABCDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.is_any_series": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "pandas.compat.itervalues",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.nested_renaming_depr": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.base.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate_multiple_funcs": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "len",
    "pandas.Series",
    "pandas.core.base.DataError",
    "pandas.core.base.SpecificationError",
    "pandas.core.common._get_callable_name",
    "pandas.core.dtypes.cast.is_nested_object",
    "pandas.core.reshape.concat.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._gotitem": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_builtin_func": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_cython_func": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._obj_with_exclusions": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.core.dtypes.generic.ABCDataFrame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selected_obj": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selection_list": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selection_name": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._shallow_copy": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "obj_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._try_aggregate_string_function": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "f",
    "getattr",
    "isinstance",
    "len",
    "numpy",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.aggregate": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.ndim": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.base.SpecificationError": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.core.base.GroupByError"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.StringMixin": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.StringMixin.__bytes__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__repr__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__str__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__unicode__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.core.base._indexops_doc_kwargs": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.base._shared_docs": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.core.base.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.core.base.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.base.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.base.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.base.concat": {
  "data": {
   "shadows": "pandas.core.reshape.concat.concat"
  },
  "type": "import"
 },
 "pandas.core.base.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.base.duplicated": {
  "data": {
   "shadows": "pandas.core.algorithms.duplicated"
  },
  "type": "import"
 },
 "pandas.core.base.factorize": {
  "data": {
   "shadows": "pandas.core.algorithms.factorize"
  },
  "type": "import"
 },
 "pandas.core.base.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.base.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.base.is_nested_object": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.is_nested_object"
  },
  "type": "import"
 },
 "pandas.core.base.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.base.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.base.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.base.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.base.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.core.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.base.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.base.unique1d": {
  "data": {
   "shadows": "pandas.core.algorithms.unique1d"
  },
  "type": "import"
 },
 "pandas.core.base.validate_bool_kwarg": {
  "data": {
   "shadows": "pandas.util._validators.validate_bool_kwarg"
  },
  "type": "import"
 },
 "pandas.core.base.value_counts": {
  "data": {
   "shadows": "pandas.core.algorithms.value_counts"
  },
  "type": "import"
 },
 "pandas.core.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.common": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "pandas._libs.lib.values_from_object",
    "pandas.api.types",
    "pandas.core.common.m",
    "pandas.core.common.outer",
    "pandas.core.common.sys",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.core.common.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.common.AbstractMethodError": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "pandas.core.common.AbstractMethodError.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pandas.core.common.AbstractMethodError.__str__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pandas.core.common.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.common.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.core.common.RangeIndex": {
  "data": {
   "shadows": "pandas.core.index.RangeIndex"
  },
  "type": "import"
 },
 "pandas.core.common.SettingWithCopyError": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.core.common.SettingWithCopyWarning": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.core.common.UnsortedIndexError": {
  "data": {
   "shadows": "pandas.errors.UnsortedIndexError"
  },
  "type": "import"
 },
 "pandas.core.common.UnsupportedFunctionCall": {
  "data": {
   "shadows": "pandas.errors.UnsupportedFunctionCall"
  },
  "type": "import"
 },
 "pandas.core.common._NS_DTYPE": {
  "data": {
   "shadows": "pandas.core.dtypes.common._NS_DTYPE"
  },
  "type": "import"
 },
 "pandas.core.common._all_none": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "pandas.core.common._all_not_none": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pandas.core.common._any_none": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pandas.core.common._apply_if_callable": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "callable",
    "maybe_callable"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._asarray_tuplesafe": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "numpy.asarray",
    "numpy.empty",
    "numpy.object_",
    "object",
    "pandas._libs.lib.list_to_object_array",
    "pandas.compat.string_types",
    "pandas.core.index.Index",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._consensus_name_attr": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pandas.core.common._count_not_none": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._default_index": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pandas.core.index.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._dict_compat": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "dict",
    "key",
    "pandas.compat.iteritems",
    "pandas.core.common._maybe_box_datetimelike"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._get_callable_name": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "functools.partial",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._get_info_slice": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._index_labels_to_array": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.compat.string_types",
    "pandas.core.common._asarray_tuplesafe",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._iterable_not_string": {
  "data": {
   "shadows": "pandas.core.dtypes.inference._iterable_not_string"
  },
  "type": "import"
 },
 "pandas.core.common._long_prod": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._maybe_box": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._maybe_box_datetimelike": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas._libs.tslib.Timedelta",
    "pandas._libs.tslib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._maybe_make_list": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._maybe_match_name": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._mut_exclusive": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._not_none": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "pandas.core.common._random_state": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.random",
    "numpy.random.RandomState",
    "pandas.api.types.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._try_sort": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Exception",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.common._values_from_object": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "pandas.core.common._where_compat": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.where",
    "pandas._libs.tslib.ints_to_pydatetime",
    "pandas.core.dtypes.common._NS_DTYPE"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.array_equivalent": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pandas.core.common.warnings",
    "pandas.core.dtypes.missing.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.common": {
  "data": {
   "shadows": "pandas.core.dtypes.common"
  },
  "type": "import"
 },
 "pandas.core.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.common.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.core.common.difference": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "list",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.flatten": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.core.dtypes.inference._iterable_not_string"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.common.groupby": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "dict.iteritems"
   ]
  },
  "type": "class"
 },
 "pandas.core.common.groupby.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "key"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.groupby.__iter__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "dict.items",
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.in_interactive_session": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "check_main"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.in_interactive_session.check_main": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "__main__",
    "hasattr",
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.in_ipnb": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.in_ipython_frontend": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "get_ipython",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.in_qtconsole": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.intersection": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.is_bool_indexer": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.ndarray",
    "numpy.object_",
    "pandas._libs.lib.is_bool_array",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.is_full_slice": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.is_null_slice": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.common.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.core.common.iterpairs": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "iter",
    "next",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.common.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.core.common.m": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.common.main": {
  "data": {
   "shadows": "__main__"
  },
  "type": "import"
 },
 "pandas.core.common.map_indices_py": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.missing": {
  "data": {
   "shadows": "pandas.core.dtypes.missing"
  },
  "type": "import"
 },
 "pandas.core.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.common.outer": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pandas.core.common.outer.wrapper": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "pandas.core.common.warnings",
    "pandas.core.dtypes.common"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.core.common.sentinel_factory": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "Sentinel"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.sentinel_factory.Sentinel": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.common.split_ranges": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.core.common.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.core.common.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.common.types": {
  "data": {
   "shadows": "pandas.api.types"
  },
  "type": "import"
 },
 "pandas.core.common.union": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.common.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.computation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.core.computation._MIN_NUMEXPR_VERSION",
    "pandas.core.computation._NUMEXPR_INSTALLED",
    "pandas.core.computation.ver",
    "pandas.core.computation.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.core.computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.core.computation._MIN_NUMEXPR_VERSION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pandas.core.computation._NUMEXPR_INSTALLED": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.core.computation.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.computation.align": {
  "data": {},
  "type": "module"
 },
 "pandas.core.computation.align.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.core.computation.align._align": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "list",
    "numpy.result_type",
    "pandas.core.common.flatten",
    "pandas.core.computation.align._align_core",
    "pandas.core.computation.align._zip_axes_from_type",
    "pandas.core.computation.common._result_type_many",
    "pandas.core.generic.NDFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._align_core": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "dict",
    "enumerate",
    "f",
    "functools.partial",
    "hasattr",
    "isinstance",
    "len",
    "max",
    "numpy.log10",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.core.computation.align._filter_special_cases",
    "pandas.core.computation.align._zip_axes_from_type",
    "pandas.core.computation.align.warnings",
    "pandas.errors.PerformanceWarning"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._align_core_single_unary_op": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "functools.partial",
    "hasattr",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "pandas.core.computation.align._zip_axes_from_type",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._any_pandas_objects": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "pandas.core.generic.PandasObject"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._filter_special_cases": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.core.computation.align._filter_special_cases.wrapper": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "len",
    "pandas.core.computation.align._align_core_single_unary_op",
    "pandas.core.computation.align._any_pandas_objects",
    "pandas.core.computation.common._result_type_many"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._reconstruct_object": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "AttributeError",
    "functools.partial",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.ndarray",
    "numpy.result_type",
    "pandas.core.generic.PandasObject",
    "typ"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align._result_type_many": {
  "data": {
   "shadows": "pandas.core.computation.common._result_type_many"
  },
  "type": "import"
 },
 "pandas.core.computation.align._zip_axes_from_type": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.align.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.computation.align.flatten": {
  "data": {
   "shadows": "pandas.core.common.flatten"
  },
  "type": "import"
 },
 "pandas.core.computation.align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.computation.align.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.core.computation.align.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.align.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.computation.align.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.computation.align.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.core.computation.align.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.computation.api": {
  "data": {},
  "type": "module"
 },
 "pandas.core.computation.api.Expr": {
  "data": {
   "shadows": "pandas.core.computation.expr.Expr",
   "symbols_in_volume": [
    "pandas.core.computation.expr.Expr"
   ]
  },
  "type": "import"
 },
 "pandas.core.computation.api.eval": {
  "data": {
   "shadows": "pandas.core.computation.eval.eval"
  },
  "type": "import"
 },
 "pandas.core.computation.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.computation.common": {
  "data": {},
  "type": "module"
 },
 "pandas.core.computation.common.NameResolutionError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.common._ensure_decoded": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "numpy.bytes_",
    "pandas.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.common._result_type_many": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "numpy.result_type",
    "pandas.compat.reduce"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.computation.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.common.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.core.computation.engines": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.computation.engines.NumExprEngine",
    "pandas.core.computation.engines.PythonEngine",
    "pandas.core.computation.ops._mathops",
    "pandas.core.computation.ops._reductions"
   ]
  },
  "type": "module"
 },
 "pandas.core.computation.engines.AbstractEngine": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object",
    "pandas.core.computation.engines.abc"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.engines.AbstractEngine.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine._evaluate": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.core.computation.engines.abc"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine._is_aligned": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine.convert": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine.evaluate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.core.computation.align._align",
    "pandas.core.computation.align._reconstruct_object"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprClobberingError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.engines.NumExprEngine": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.core.computation.engines.AbstractEngine"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.engines.NumExprEngine.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.core.computation.engines.NumExprEngine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprEngine._evaluate": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "numexpr.evaluate",
    "pandas.compat.text_type",
    "pandas.core.computation.engines._check_ne_builtin_clash",
    "pandas.core.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprEngine.convert": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.core.computation.engines.NumExprEngine",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.core.computation.engines.AbstractEngine"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.engines.PythonEngine.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.core.computation.engines.PythonEngine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine._evaluate": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine.evaluate": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pandas.core.computation.engines.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.core.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.core.computation.engines._align": {
  "data": {
   "shadows": "pandas.core.computation.align._align"
  },
  "type": "import"
 },
 "pandas.core.computation.engines._check_ne_builtin_clash": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.compat.map",
    "pandas.core.computation.engines.NumExprClobberingError",
    "pandas.core.computation.engines._ne_builtins",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.engines._engines": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pandas.core.computation.engines._mathops": {
  "data": {
   "shadows": "pandas.core.computation.ops._mathops"
  },
  "type": "import"
 },
 "pandas.core.computation.engines._ne_builtins": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.core.computation.engines._reconstruct_object": {
  "data": {
   "shadows": "pandas.core.computation.align._reconstruct_object"
  },
  "type": "import"
 },
 "pandas.core.computation.engines._reductions": {
  "data": {
   "shadows": "pandas.core.computation.ops._reductions"
  },
  "type": "import"
 },
 "pandas.core.computation.engines.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "pandas.core.computation.engines.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.computation.engines.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.core.computation.engines.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.core.computation.engines.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.core.computation.eval": {
  "data": {},
  "type": "module"
 },
 "pandas.core.computation.eval.Expr": {
  "data": {
   "shadows": "pandas.core.computation.expr.Expr"
  },
  "type": "import"
 },
 "pandas.core.computation.eval._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.core.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.core.computation.eval._check_engine": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "list",
    "pandas.core.computation._NUMEXPR_INSTALLED",
    "pandas.core.computation.engines._engines",
    "pandas.core.computation.engines._engines.keys"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._check_expression": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._check_for_locals": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.core.computation.eval.tokenize",
    "pandas.core.computation.expr.tokenize_string"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._check_parser": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError",
    "pandas.core.computation.expr._parsers",
    "pandas.core.computation.expr._parsers.keys"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._check_resolvers": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._convert_expression": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.core.computation.eval._check_expression",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval._engines": {
  "data": {
   "shadows": "pandas.core.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.core.computation.eval._ensure_scope": {
  "data": {
   "shadows": "pandas.core.computation.scope._ensure_scope"
  },
  "type": "import"
 },
 "pandas.core.computation.eval._parsers": {
  "data": {
   "shadows": "pandas.core.computation.expr._parsers"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.eval": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "eng",
    "isinstance",
    "len",
    "pandas.compat.string_types",
    "pandas.core.computation.engines._engines",
    "pandas.core.computation.eval._check_engine",
    "pandas.core.computation.eval._check_expression",
    "pandas.core.computation.eval._check_for_locals",
    "pandas.core.computation.eval._check_parser",
    "pandas.core.computation.eval._check_resolvers",
    "pandas.core.computation.eval._convert_expression",
    "pandas.core.computation.eval.warnings",
    "pandas.core.computation.expr.Expr",
    "pandas.core.computation.scope._ensure_scope",
    "pandas.util._validators.validate_bool_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.eval.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.tokenize_string": {
  "data": {
   "shadows": "pandas.core.computation.expr.tokenize_string"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.validate_bool_kwarg": {
  "data": {
   "shadows": "pandas.util._validators.validate_bool_kwarg"
  },
  "type": "import"
 },
 "pandas.core.computation.eval.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.computation.expr": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "filter",
    "frozenset",
    "getattr",
    "isinstance",
    "issubclass",
    "list",
    "map",
    "pandas.compat.PY35",
    "pandas.compat.string_types",
    "pandas.core.computation.expr.BaseExprVisitor",
    "pandas.core.computation.expr.PandasExprVisitor",
    "pandas.core.computation.expr.PythonExprVisitor",
    "pandas.core.computation.expr._alias_nodes",
    "pandas.core.computation.expr._all_node_names",
    "pandas.core.computation.expr._all_nodes",
    "pandas.core.computation.expr._arguments_nodes",
    "pandas.core.computation.expr._base_supported_nodes",
    "pandas.core.computation.expr._expr_context_nodes",
    "pandas.core.computation.expr._filter_nodes",
    "pandas.core.computation.expr._hacked_nodes",
    "pandas.core.computation.expr._handler_nodes",
    "pandas.core.computation.expr._is_type",
    "pandas.core.computation.expr._keyword_nodes",
    "pandas.core.computation.expr._mod_nodes",
    "pandas.core.computation.expr._msg",
    "pandas.core.computation.expr._stmt_nodes",
    "pandas.core.computation.expr._unsupported_expr_nodes",
    "pandas.core.computation.expr._unsupported_nodes",
    "pandas.core.computation.expr.ast",
    "pandas.core.computation.ops.BinOp",
    "pandas.core.computation.ops.UnaryOp",
    "pandas.core.computation.ops._mathops",
    "pandas.core.computation.ops._reductions",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.core.computation.expr.BaseExprVisitor": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.zip",
    "pandas.core.computation.expr._op_classes",
    "pandas.core.computation.expr._unsupported_nodes",
    "pandas.core.computation.expr.add_ops",
    "pandas.core.computation.expr.ast",
    "pandas.core.computation.expr.disallow",
    "pandas.core.computation.ops.Constant",
    "pandas.core.computation.ops.Term",
    "pandas.core.computation.ops._arith_ops_syms",
    "pandas.core.computation.ops._bool_ops_syms",
    "pandas.core.computation.ops._cmp_ops_syms",
    "pandas.core.computation.ops._unary_ops_syms"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.expr.BaseExprVisitor.__init__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.core.computation.expr._preparse"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_downcast_constants": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_eval": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_evaluate_binop": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "object",
    "op",
    "pandas.core.computation.ops._cmp_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_transform_eq_ne": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._rewrite_membership_op": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "map",
    "pandas.core.computation.expr._is_list",
    "pandas.core.computation.expr._is_str",
    "pandas.core.computation.ops.is_term",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._try_visit_binop": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.computation.ops.Op",
    "pandas.core.computation.ops.Term"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.translate_In": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.computation.expr.ast",
    "visitor"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Assign": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "pandas.core.computation.expr.ast",
    "pandas.core.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Attribute": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "isinstance",
    "pandas.core.computation.expr.ast"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BinOp": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BoolOp": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "pandas.compat.reduce",
    "visitor"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BoolOp.visitor": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Call_35": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "pandas.core.computation.expr.ast",
    "pandas.core.computation.ops.FuncNode",
    "pandas.core.computation.ops.UndefinedVariableError",
    "res"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Call_legacy": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "pandas.core.computation.expr.ast",
    "pandas.core.computation.ops.FuncNode",
    "pandas.core.computation.ops.UndefinedVariableError",
    "res",
    "res.name",
    "res.value"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Compare": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "len",
    "op",
    "pandas.compat.zip",
    "pandas.core.computation.expr.ast"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Div": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Div"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Expr": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Index": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_List": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Module": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Name": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_NameConstant": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Num": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Slice": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Str": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Subscript": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_UnaryOp": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.BinOp": {
  "data": {
   "shadows": "pandas.core.computation.ops.BinOp"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.Constant": {
  "data": {
   "shadows": "pandas.core.computation.ops.Constant"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.Div": {
  "data": {
   "shadows": "pandas.core.computation.ops.Div"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.Expr": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.expr.Expr.__call__": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "pandas.core.computation.scope.Scope"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__len__": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__unicode__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.assigner": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.names": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.common.flatten",
    "pandas.core.computation.ops.is_term",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.parse": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "pandas.core.computation.expr.FuncNode": {
  "data": {
   "shadows": "pandas.core.computation.ops.FuncNode"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.Op": {
  "data": {
   "shadows": "pandas.core.computation.ops.Op"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.PandasExprVisitor": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.computation.expr.BaseExprVisitor",
    "pandas.core.computation.expr._boolop_nodes",
    "pandas.core.computation.expr._python_not_supported",
    "pandas.core.computation.expr._unsupported_nodes",
    "pandas.core.computation.expr.disallow"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.expr.PandasExprVisitor.__init__": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "functools.partial",
    "pandas.core.computation.expr.PandasExprVisitor",
    "pandas.core.computation.expr._preparse",
    "pandas.core.computation.expr._replace_booleans",
    "pandas.core.computation.expr._replace_locals",
    "pandas.core.reshape.util.compose",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.PythonExprVisitor": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.computation.expr.BaseExprVisitor",
    "pandas.core.computation.expr._python_not_supported",
    "pandas.core.computation.expr._unsupported_nodes",
    "pandas.core.computation.expr.disallow"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.expr.PythonExprVisitor.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.core.computation.expr.PythonExprVisitor",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.Scope": {
  "data": {
   "shadows": "pandas.core.computation.scope.Scope"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.Term": {
  "data": {
   "shadows": "pandas.core.computation.ops.Term"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.UnaryOp": {
  "data": {
   "shadows": "pandas.core.computation.ops.UnaryOp"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.core.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._LOCAL_TAG": {
  "data": {
   "shadows": "pandas.core.computation.ops._LOCAL_TAG"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._alias_nodes": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._all_node_names": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._all_nodes": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._arguments_nodes": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._arith_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._base_supported_nodes": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._bool_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._bool_ops_syms"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._boolop_nodes": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._cmp_op_nodes": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._cmp_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._cmp_ops_syms"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._comprehension_nodes": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._expr_context_nodes": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._expr_nodes": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._filter_nodes": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "frozenset",
    "issubclass",
    "pandas.core.computation.expr._all_nodes"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._hacked_nodes": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._handler_nodes": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._is_list": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._is_str": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._is_type": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._keyword_nodes": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._mathops": {
  "data": {
   "shadows": "pandas.core.computation.ops._mathops"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._mod_nodes": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._msg": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._node_not_implemented": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pandas.core.computation.expr._node_not_implemented.f": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._numexpr_supported_calls": {
  "data": {
   "lineno": 683
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._op_classes": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._op_maker": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pandas.core.computation.expr._op_maker.f": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._operator_nodes": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._parsers": {
  "data": {
   "lineno": 754
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._preparse": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "callable",
    "pandas.compat.lmap",
    "pandas.core.computation.expr._replace_booleans",
    "pandas.core.computation.expr._replace_locals",
    "pandas.core.computation.expr._rewrite_assign",
    "pandas.core.computation.expr.tokenize",
    "pandas.core.computation.expr.tokenize_string",
    "pandas.core.reshape.util.compose"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._python_not_supported": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._reductions": {
  "data": {
   "shadows": "pandas.core.computation.ops._reductions"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._replace_booleans": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.core.computation.expr.tokenize"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._replace_locals": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.core.computation.expr.tokenize",
    "pandas.core.computation.ops._LOCAL_TAG"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr._rewrite_assign": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pandas.core.computation.expr._slice_nodes": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._stmt_nodes": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._unary_op_nodes": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._unary_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._unary_ops_syms"
  },
  "type": "import"
 },
 "pandas.core.computation.expr._unsupported_expr_nodes": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pandas.core.computation.expr._unsupported_nodes": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "pandas.core.computation.expr.add_ops": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "pandas.core.computation.expr.add_ops.f": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "getattr",
    "pandas.compat.iteritems",
    "pandas.core.computation.expr._op_maker",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.compose": {
  "data": {
   "shadows": "pandas.core.reshape.util.compose"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.disallow": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pandas.core.computation.expr.disallow.disallowed": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pandas.core.computation.expr._node_not_implemented",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.is_term": {
  "data": {
   "shadows": "pandas.core.computation.ops.is_term"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "pandas.core.computation.expr.tokenize_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.core.computation.expr.tokenize"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.expr.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.computation.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.core.computation.ops": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "operator.add",
    "operator.and_",
    "operator.div",
    "operator.eq",
    "operator.floordiv",
    "operator.ge",
    "operator.gt",
    "operator.invert",
    "operator.le",
    "operator.lt",
    "operator.mod",
    "operator.mul",
    "operator.ne",
    "operator.neg",
    "operator.or_",
    "operator.pos",
    "operator.pow",
    "operator.sub",
    "operator.truediv",
    "pandas.compat.PY3",
    "pandas.core.computation.ops._arith_ops_dict",
    "pandas.core.computation.ops._arith_ops_funcs",
    "pandas.core.computation.ops._arith_ops_syms",
    "pandas.core.computation.ops._binary_math_ops",
    "pandas.core.computation.ops._binary_ops_dict",
    "pandas.core.computation.ops._bool_ops_dict",
    "pandas.core.computation.ops._bool_ops_funcs",
    "pandas.core.computation.ops._bool_ops_syms",
    "pandas.core.computation.ops._cmp_ops_dict",
    "pandas.core.computation.ops._cmp_ops_funcs",
    "pandas.core.computation.ops._cmp_ops_syms",
    "pandas.core.computation.ops._in",
    "pandas.core.computation.ops._not_in",
    "pandas.core.computation.ops._special_case_arith_ops_funcs",
    "pandas.core.computation.ops._special_case_arith_ops_syms",
    "pandas.core.computation.ops._unary_math_ops",
    "pandas.core.computation.ops._unary_ops_funcs",
    "pandas.core.computation.ops._unary_ops_syms",
    "zip"
   ]
  },
  "type": "module"
 },
 "pandas.core.computation.ops.BinOp": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.BinOp.__call__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "operator.truediv"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "operator",
    "pandas.core.computation.ops.BinOp",
    "pandas.core.computation.ops._binary_ops_dict",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp._disallow_scalar_only_bool_ops": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "issubclass",
    "numpy.bool_",
    "pandas.core.computation.ops._bool_ops_dict",
    "self.lhs.isscalar",
    "self.lhs.return_type",
    "self.op",
    "self.rhs.isscalar",
    "self.rhs.return_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.convert_values": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.Timestamp",
    "pandas.core.computation.common._ensure_decoded",
    "pandas.core.computation.ops.is_term",
    "self.lhs",
    "self.lhs.update",
    "self.rhs",
    "self.rhs.update",
    "stringify"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.convert_values.stringify": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "encoder",
    "functools.partial",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.io.formats.printing.pprint_thing_encoded",
    "self.encoding"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.evaluate": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.eval",
    "self",
    "self.func",
    "self.lhs.evaluate",
    "self.op",
    "self.rhs.evaluate",
    "term_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Constant": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Term"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.Constant.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Constant",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Constant.__unicode__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Constant._resolve_name": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Constant.name": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Div": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.core.computation.ops.BinOp"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.Div.__init__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float32",
    "numpy.float_",
    "pandas.compat.PY3",
    "pandas.core.common.flatten",
    "pandas.core.computation.ops.Div",
    "pandas.core.computation.ops._cast_inplace",
    "pandas.core.computation.ops.isnumeric",
    "self",
    "self.op",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.FuncNode": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.FuncNode.__call__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.core.computation.ops.MathCall",
    "self"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.FuncNode.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy",
    "pandas.core.computation.ops._mathops",
    "self.func",
    "self.name"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.MathCall.__call__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.errstate",
    "operator",
    "self.func.func",
    "self.operands"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pandas.core.computation.ops.MathCall",
    "self",
    "self.func",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall.__unicode__": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "map",
    "pandas.io.formats.printing.pprint_thing",
    "self.op",
    "self.operands",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.Op.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "operator",
    "pandas.core.computation.ops._bool_op_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.__iter__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.__unicode__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.has_invalid_return_type": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "frozenset",
    "numpy.dtype",
    "object",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.is_datetime": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "issubclass",
    "numpy.datetime64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.isscalar": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.operand_types": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.common.flatten",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Op.return_type": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.core.common.flatten",
    "pandas.core.computation.common._result_type_many",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.Term": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.Term.__call__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pandas.compat.text_type",
    "pandas.core.computation.ops._LOCAL_TAG",
    "pandas.core.computation.scope._DEFAULT_GLOBALS"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.computation.ops.Term",
    "super",
    "supr_new"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__unicode__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term._resolve_name": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.evaluate": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.is_datetime": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "issubclass",
    "numpy.datetime64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.isscalar": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_scalar",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.local_name": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.core.computation.ops._LOCAL_TAG",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.name": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.ndim": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.raw": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.update": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.Term.value": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.core.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.UnaryOp.__call__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "self.func",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "operator",
    "pandas.core.computation.ops.UnaryOp",
    "pandas.core.computation.ops._unary_ops_dict",
    "pandas.core.computation.ops._unary_ops_syms",
    "self",
    "self.func",
    "self.operand",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.__unicode__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing",
    "self.op",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.return_type": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "isinstance",
    "numpy.dtype",
    "pandas.core.computation.ops.Op",
    "pandas.core.computation.ops._bool_ops_dict",
    "pandas.core.computation.ops._cmp_ops_dict",
    "property",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.UndefinedVariableError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.ops.UndefinedVariableError.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.core.computation.ops.UndefinedVariableError",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops._DEFAULT_GLOBALS": {
  "data": {
   "shadows": "pandas.core.computation.scope._DEFAULT_GLOBALS"
  },
  "type": "import"
 },
 "pandas.core.computation.ops._LOCAL_TAG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._arith_ops_dict": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._arith_ops_funcs": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._arith_ops_syms": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._binary_math_ops": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._binary_ops_dict": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._bool_op_map": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._bool_ops_dict": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._bool_ops_funcs": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._bool_ops_syms": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._cast_inplace": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops._cmp_ops_dict": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._cmp_ops_funcs": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._cmp_ops_syms": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._ensure_decoded": {
  "data": {
   "shadows": "pandas.core.computation.common._ensure_decoded"
  },
  "type": "import"
 },
 "pandas.core.computation.ops._in": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops._mathops": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._not_in": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops._reductions": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._result_type_many": {
  "data": {
   "shadows": "pandas.core.computation.common._result_type_many"
  },
  "type": "import"
 },
 "pandas.core.computation.ops._special_case_arith_ops_dict": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._special_case_arith_ops_funcs": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._special_case_arith_ops_syms": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._unary_math_ops": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._unary_ops_dict": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._unary_ops_funcs": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "pandas.core.computation.ops._unary_ops_syms": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "pandas.core.computation.ops.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.is_term": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.computation.ops.Term"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.isnumeric": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "issubclass",
    "numpy.dtype",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.pprint_thing_encoded": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing_encoded"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.computation.ops.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.core.computation.scope": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.inf",
    "pandas.core.computation.scope.datetime",
    "pandas.core.computation.scope.pandas",
    "tuple"
   ]
  },
  "type": "module"
 },
 "pandas.core.computation.scope.DeepChainMap": {
  "data": {
   "shadows": "pandas.compat.DeepChainMap"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.Scope": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.core.computation.scope.Scope.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.DeepChainMap",
    "pandas.core.computation.scope.Scope",
    "pandas.core.computation.scope._DEFAULT_GLOBALS",
    "pandas.core.computation.scope.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.__unicode__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "list",
    "pandas.core.computation.scope._get_pretty_string",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope._get_vars": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.computation.scope.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.add_tmp": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.core.computation.scope._raw_hex_id",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.full_scope": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pandas.compat.DeepChainMap",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.has_resolvers": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bool",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.ntemps": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.resolve": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "KeyError",
    "pandas.core.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.swapkey": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.update": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "pandas.core.computation.scope.inspect"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.core.computation.scope._DEFAULT_GLOBALS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.core.computation.scope._ensure_scope": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.core.computation.scope.Scope"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope._get_pretty_string": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.core.computation.scope.pprint"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope._raw_hex_id": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "id",
    "pandas.compat.map",
    "pandas.core.computation.scope._replacer",
    "pandas.core.computation.scope.struct"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope._replacer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "hex",
    "ord"
   ]
  },
  "type": "function"
 },
 "pandas.core.computation.scope.compu": {
  "data": {
   "shadows": "pandas.core.computation"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.core.computation.scope.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.core.computation.ver": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.core.computation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.config_init": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "int",
    "pandas.core.config.config_prefix",
    "pandas.core.config.deprecate_option",
    "pandas.core.config.get_default_val",
    "pandas.core.config.is_bool",
    "pandas.core.config.is_callable",
    "pandas.core.config.is_instance_factory",
    "pandas.core.config.is_int",
    "pandas.core.config.is_one_of_factory",
    "pandas.core.config.is_text",
    "pandas.core.config.register_option",
    "pandas.core.config_init._register_xlsx",
    "pandas.core.config_init.chained_assignment",
    "pandas.core.config_init.colheader_justify_doc",
    "pandas.core.config_init.default",
    "pandas.core.config_init.doc",
    "pandas.core.config_init.float_format_doc",
    "pandas.core.config_init.max_colwidth_doc",
    "pandas.core.config_init.mpl_style_cb",
    "pandas.core.config_init.options",
    "pandas.core.config_init.pc_chop_threshold_doc",
    "pandas.core.config_init.pc_date_dayfirst_doc",
    "pandas.core.config_init.pc_date_yearfirst_doc",
    "pandas.core.config_init.pc_east_asian_width_doc",
    "pandas.core.config_init.pc_encoding_doc",
    "pandas.core.config_init.pc_expand_repr_doc",
    "pandas.core.config_init.pc_height_deprecation_warning",
    "pandas.core.config_init.pc_height_doc",
    "pandas.core.config_init.pc_html_border_doc",
    "pandas.core.config_init.pc_large_repr_doc",
    "pandas.core.config_init.pc_latex_escape",
    "pandas.core.config_init.pc_latex_longtable",
    "pandas.core.config_init.pc_latex_multicolumn",
    "pandas.core.config_init.pc_latex_multirow",
    "pandas.core.config_init.pc_latex_repr_doc",
    "pandas.core.config_init.pc_line_width_deprecation_warning",
    "pandas.core.config_init.pc_line_width_doc",
    "pandas.core.config_init.pc_max_categories_doc",
    "pandas.core.config_init.pc_max_cols_doc",
    "pandas.core.config_init.pc_max_info_cols_doc",
    "pandas.core.config_init.pc_max_info_rows_doc",
    "pandas.core.config_init.pc_max_rows_doc",
    "pandas.core.config_init.pc_max_seq_items",
    "pandas.core.config_init.pc_memory_usage_doc",
    "pandas.core.config_init.pc_mpl_style_doc",
    "pandas.core.config_init.pc_multi_sparse_doc",
    "pandas.core.config_init.pc_nb_repr_h_doc",
    "pandas.core.config_init.pc_pprint_nest_depth",
    "pandas.core.config_init.pc_precision_doc",
    "pandas.core.config_init.pc_show_dimensions_doc",
    "pandas.core.config_init.pc_table_schema_doc",
    "pandas.core.config_init.pc_width_doc",
    "pandas.core.config_init.table_schema_cb",
    "pandas.core.config_init.tc_sim_interactive_doc",
    "pandas.core.config_init.use_bottleneck_cb",
    "pandas.core.config_init.use_bottleneck_doc",
    "pandas.core.config_init.use_inf_as_null_cb",
    "pandas.core.config_init.use_inf_as_null_doc",
    "pandas.core.config_init.use_numexpr_cb",
    "pandas.core.config_init.use_numexpr_doc",
    "pandas.core.config_init.writer_engine_doc",
    "pandas.io.formats.console.detect_console_encoding",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.core.config_init._enable_data_resource_formatter": {
  "data": {
   "shadows": "pandas.io.formats.printing._enable_data_resource_formatter"
  },
  "type": "import"
 },
 "pandas.core.config_init._register_xlsx": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandas.core.config.register_option",
    "pandas.core.config_init.writer_engine_doc",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init._use_inf_as_null": {
  "data": {
   "shadows": "pandas.core.dtypes.missing._use_inf_as_null"
  },
  "type": "import"
 },
 "pandas.core.config_init.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.core.config_init.chained_assignment": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "pandas.core.config_init.colheader_justify_doc": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pandas.core.config_init.default": {
  "data": {
   "lineno": 485
  },
  "type": "constant"
 },
 "pandas.core.config_init.detect_console_encoding": {
  "data": {
   "shadows": "pandas.io.formats.console.detect_console_encoding"
  },
  "type": "import"
 },
 "pandas.core.config_init.doc": {
  "data": {
   "lineno": 490
  },
  "type": "constant"
 },
 "pandas.core.config_init.expressions": {
  "data": {
   "shadows": "pandas.core.computation.expressions"
  },
  "type": "import"
 },
 "pandas.core.config_init.float_format_doc": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pandas.core.config_init.get_default_val": {
  "data": {
   "shadows": "pandas.core.config.get_default_val"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_bool": {
  "data": {
   "shadows": "pandas.core.config.is_bool"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_callable": {
  "data": {
   "shadows": "pandas.core.config.is_callable"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_instance_factory": {
  "data": {
   "shadows": "pandas.core.config.is_instance_factory"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_int": {
  "data": {
   "shadows": "pandas.core.config.is_int"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_one_of_factory": {
  "data": {
   "shadows": "pandas.core.config.is_one_of_factory"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_text": {
  "data": {
   "shadows": "pandas.core.config.is_text"
  },
  "type": "import"
 },
 "pandas.core.config_init.max_colwidth_doc": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pandas.core.config_init.mpl_style_cb": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "dict",
    "matplotlib.pyplot.rcParams",
    "matplotlib.pyplot.rcParams.update",
    "pandas.core.config.get_option",
    "pandas.core.config_init.pc_mpl_style_deprecation_warning",
    "pandas.core.config_init.style_backup",
    "pandas.core.config_init.sys",
    "pandas.core.config_init.warnings",
    "pandas.plotting._style.mpl_stylesheet"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.mpl_stylesheet": {
  "data": {
   "shadows": "pandas.plotting._style.mpl_stylesheet"
  },
  "type": "import"
 },
 "pandas.core.config_init.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.core.config_init.options": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_ambiguous_as_wide_doc": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_chop_threshold_doc": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_colspace_doc": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_date_dayfirst_doc": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_date_yearfirst_doc": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_east_asian_width_doc": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_encoding_doc": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_expand_repr_doc": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_height_deprecation_warning": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_height_doc": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_html_border_doc": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_large_repr_doc": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_escape": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_longtable": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_multicolumn": {
  "data": {
   "lineno": 292
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_multicolumn_format": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_multirow": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_repr_doc": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_line_width_deprecation_warning": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_line_width_doc": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_categories_doc": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_cols_doc": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_info_cols_doc": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_info_rows_doc": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_rows_doc": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_seq_items": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_memory_usage_doc": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_mpl_style_deprecation_warning": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_mpl_style_doc": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_multi_sparse_doc": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_nb_repr_h_doc": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_pprint_nest_depth": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_precision_doc": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_show_dimensions_doc": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_table_schema_doc": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_width_doc": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "pandas.core.config_init.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.core.config_init.style_backup": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "pandas.core.config_init.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.core.config_init.table_schema_cb": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pandas.core.config.get_option",
    "pandas.io.formats.printing._enable_data_resource_formatter"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.tc_sim_interactive_doc": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "pandas.core.config_init.use_bottleneck_cb": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.core.config.get_option",
    "pandas.core.nanops.set_use_bottleneck"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.use_bottleneck_doc": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.core.config_init.use_inf_as_null_cb": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing._use_inf_as_null"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.use_inf_as_null_doc": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "pandas.core.config_init.use_numexpr_cb": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.core.computation.expressions.set_use_numexpr",
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.use_numexpr_doc": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.config_init.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.config_init.writer_engine_doc": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "pandas.core.config_init.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.core.datetools": {
  "data": {
   "symbols_in_volume": [
    "BDay",
    "BMonthBegin",
    "BMonthEnd",
    "BQuarterEnd",
    "BYearEnd",
    "CBMonthBegin",
    "CBMonthEnd",
    "CDay",
    "CustomBusinessDay",
    "DateOffset",
    "FutureWarning",
    "MonthEnd",
    "NotImplementedError",
    "QuarterEnd",
    "Week",
    "YearBegin",
    "YearEnd",
    "pandas.core.datetools.bday",
    "pandas.core.datetools.customBusinessMonthBegin",
    "pandas.core.datetools.customBusinessMonthEnd",
    "pandas.core.datetools.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.core.datetools.bday": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.core.datetools.bmonthBegin": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.core.datetools.bmonthEnd": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.core.datetools.bquarterEnd": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.datetools.businessDay": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.core.datetools.byearEnd": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.core.datetools.cbmonthBegin": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.core.datetools.cbmonthEnd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.core.datetools.cday": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessDay": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessMonthBegin": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessMonthEnd": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.core.datetools.day": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.core.datetools.isBMonthEnd": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.core.datetools.isBusinessDay": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.core.datetools.isMonthEnd": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.core.datetools.monthEnd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.core.datetools.quarterEnd": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisBMonthEnd": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisBQuarterEnd": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisMonthEnd": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisQuarterEnd": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisYearBegin": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisYearEnd": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.core.datetools.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.datetools.week": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.core.datetools.yearBegin": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.core.datetools.yearEnd": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.core.dtypes.api": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.dtypes.api.m",
    "pandas.core.dtypes.api.outer",
    "pandas.core.dtypes.api.sys",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.core.dtypes.api.m": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandas.core.dtypes.api.outer": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.core.dtypes.api.outer.wrapper": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.core.dtypes.api.pandas",
    "pandas.core.dtypes.api.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.api.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.dtypes.api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.core.dtypes.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast": {
  "data": {
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8"
   ]
  },
  "type": "module"
 },
 "pandas.core.dtypes.cast.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast._coerce_scalar_to_timedelta_type": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast._int16_max": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.core.dtypes.cast._int32_max": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.dtypes.cast._int64_max": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.core.dtypes.cast._int8_max": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.core.dtypes.cast.astype_nansafe": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "dtype",
    "dtype.kind",
    "dtype.name",
    "dtype.type",
    "is_datetime64_dtype",
    "is_timedelta64_dtype",
    "isinstance",
    "isnull",
    "issubclass",
    "numpy.dtype",
    "numpy.float64",
    "numpy.floating",
    "numpy.int64",
    "numpy.integer",
    "numpy.isfinite",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.object_",
    "object",
    "pandas._libs.lib.astype_intsafe",
    "pandas._libs.lib.astype_str",
    "pandas._libs.lib.astype_unicode",
    "pandas._libs.tslib.ints_to_pydatetime",
    "pandas._libs.tslib.ints_to_pytimedelta",
    "pandas.compat.PY3",
    "pandas.compat.string_types",
    "pandas.compat.text_type",
    "pandas.core.dtypes.cast.warnings",
    "pandas_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_indexer_dtype": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "_ensure_int16",
    "_ensure_int32",
    "_ensure_int64",
    "_ensure_int8",
    "len",
    "pandas.core.dtypes.cast._int16_max",
    "pandas.core.dtypes.cast._int32_max",
    "pandas.core.dtypes.cast._int8_max"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_to_dtypes": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "AssertionError",
    "conv",
    "dtype",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_to_dtypes.conv": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "bool",
    "dtype",
    "dtype.kind",
    "float",
    "int",
    "is_integer",
    "isnull",
    "numpy.bool_",
    "pandas._libs.lib.Timestamp",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.find_common_type": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "is_bool_dtype",
    "is_complex_dtype",
    "is_datetime64_dtype",
    "is_dtype_equal",
    "is_float_dtype",
    "is_integer_dtype",
    "is_timedelta64_dtype",
    "isinstance",
    "len",
    "numpy.dtype",
    "numpy.find_common_type",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.infer_dtype_from_array": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "is_list_like",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.object_",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.infer_dtype_from_scalar": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "DatetimeTZDtype",
    "PeriodDtype",
    "ValueError",
    "datetime.datetime",
    "datetime.timedelta",
    "is_bool",
    "is_complex",
    "is_float",
    "is_integer",
    "isinstance",
    "numpy.bool_",
    "numpy.complex_",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float64",
    "numpy.floating",
    "numpy.int64",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.object_",
    "numpy.timedelta64",
    "pandas._libs.lib.is_period",
    "pandas._libs.tslib.NaT",
    "pandas._libs.tslib.Timedelta",
    "pandas._libs.tslib.Timestamp",
    "pandas.compat.string_types",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.invalidate_string_dtypes": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.is_nested_object": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "any",
    "is_object_dtype",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.maybe_cast_item": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.bool_",
    "numpy.integer",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_cast_to_datetime": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "TypeError",
    "ValueError",
    "dtype",
    "dtype.kind",
    "dtype.name",
    "dtype.tz",
    "is_datetime64_dtype",
    "is_datetime64tz_dtype",
    "is_dtype_equal",
    "is_object_dtype",
    "is_scalar",
    "is_timedelta64_dtype",
    "isinstance",
    "isnull",
    "issubclass",
    "numpy.array",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.object_",
    "numpy.prod",
    "pandas._libs.tslib.iNaT",
    "pandas._libs.tslib.ints_to_pydatetime",
    "pandas.compat.string_types",
    "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
    "pandas.core.dtypes.cast.warnings",
    "pandas.core.tools.datetimes.to_datetime",
    "pandas.core.tools.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_castable": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "is_datetime64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_objects": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "isnull",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.core.dtypes.cast.maybe_cast_to_datetime",
    "pandas.core.tools.timedeltas.to_timedelta",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_platform": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "numpy.object_",
    "pandas._libs.lib.list_to_object_array",
    "pandas._libs.lib.maybe_convert_objects",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_scalar": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "TypeError",
    "dtype",
    "is_scalar",
    "pandas.core.dtypes.cast.infer_dtype_from_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_string_to_object": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "numpy.array",
    "numpy.ndarray",
    "numpy.string_",
    "numpy.unicode_",
    "object",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_downcast_to_dtype": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_ensure_object",
    "bool",
    "float",
    "int",
    "is_bool_dtype",
    "is_integer_dtype",
    "is_scalar",
    "isinstance",
    "isnull",
    "issubclass",
    "notnull",
    "numpy.allclose",
    "numpy.array",
    "numpy.bool",
    "numpy.dtype",
    "numpy.floating",
    "numpy.integer",
    "numpy.number",
    "numpy.object_",
    "numpy.prod",
    "pandas._libs.lib.infer_dtype",
    "pandas.compat.string_types",
    "pandas.to_datetime",
    "trans"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_downcast_to_dtype.trans": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "_ensure_object",
    "is_list_like",
    "is_object_dtype",
    "isinstance",
    "isnull",
    "len",
    "numpy.array",
    "pandas._libs.lib.infer_datetimelike_array",
    "pandas._libs.lib.infer_dtype",
    "try_datetime",
    "try_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "ValueError",
    "pandas._libs.tslib.array_to_datetime",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_promote": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "is_bool",
    "is_categorical_dtype",
    "is_complex",
    "is_complex_dtype",
    "is_datetime_or_timedelta_dtype",
    "is_datetimetz",
    "is_float",
    "is_float_dtype",
    "is_integer",
    "is_integer_dtype",
    "isinstance",
    "isnull",
    "issubclass",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float64",
    "numpy.floating",
    "numpy.integer",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.object_",
    "numpy.timedelta64",
    "pandas._libs.lib.Timedelta",
    "pandas._libs.lib.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "is_extension_type",
    "numpy.nan",
    "pandas.core.dtypes.cast.maybe_promote"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast_putmask": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "changeit",
    "is_datetimelike",
    "is_integer",
    "is_integer_dtype",
    "is_scalar",
    "isinstance",
    "isnull",
    "numpy.array",
    "numpy.ndarray",
    "numpy.place",
    "pandas.core.dtypes.cast.maybe_promote"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast_putmask.changeit": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.place",
    "pandas.core.dtypes.cast.maybe_upcast"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.soft_convert_objects": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "datetime.timedelta",
    "hasattr",
    "is_object_dtype",
    "isinstance",
    "isnull",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.to_datetime",
    "pandas.to_numeric",
    "pandas.to_timedelta",
    "set",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.cast.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.to_datetime": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.to_datetime"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.to_numeric": {
  "data": {
   "shadows": "pandas.to_numeric"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.to_timedelta": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.dtypes.cast.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat": {
  "data": {},
  "type": "module"
 },
 "pandas.core.dtypes.concat.ABCDatetimeIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCDatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.ABCPeriodIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCPeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.ABCTimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCTimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat._NS_DTYPE": {
  "data": {
   "shadows": "pandas.core.dtypes.common._NS_DTYPE"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat._TD_DTYPE": {
  "data": {
   "shadows": "pandas.core.dtypes.common._TD_DTYPE"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat._concat_categorical": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_concat_asobject",
    "all",
    "len",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.concat.union_categoricals"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_categorical._concat_asobject": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.concat._concat_compat"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_compat": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "any",
    "is_nonempty",
    "len",
    "numpy.concatenate",
    "pandas.core.dtypes.concat._concat_categorical",
    "pandas.core.dtypes.concat._concat_datetime",
    "pandas.core.dtypes.concat._concat_sparse",
    "pandas.core.dtypes.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_compat.is_nonempty": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetime": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "NotImplementedError",
    "any",
    "convert_to_pydatetime",
    "len",
    "numpy.concatenate",
    "numpy.int64",
    "pandas.core.dtypes.common._NS_DTYPE",
    "pandas.core.dtypes.common._TD_DTYPE",
    "pandas.core.dtypes.concat._concat_datetimetz",
    "pandas.core.dtypes.concat.get_dtype_kinds"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetime.convert_to_pydatetime": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "getattr",
    "numpy.atleast_2d",
    "numpy.int64",
    "pandas._libs.tslib.ints_to_pydatetime",
    "pandas._libs.tslib.ints_to_pytimedelta",
    "pandas.core.dtypes.common._NS_DTYPE.kind",
    "pandas.core.dtypes.common._TD_DTYPE"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetimetz": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.concatenate",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_index_asobject": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "isinstance",
    "numpy.concatenate",
    "pandas.Index",
    "pandas.core.dtypes.generic.ABCDatetimeIndex",
    "pandas.core.dtypes.generic.ABCPeriodIndex",
    "pandas.core.dtypes.generic.ABCTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_sparse": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "convert_sparse",
    "len",
    "numpy.concatenate",
    "pandas.core.dtypes.common.is_sparse",
    "pandas.core.dtypes.concat.get_dtype_kinds",
    "pandas.core.sparse.array.SparseArray",
    "pandas.core.sparse.array._make_index",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_sparse.convert_sparse": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "isinstance",
    "numpy.atleast_2d",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._get_frame_result_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "any",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._get_series_result_type": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "pandas.compat.itervalues",
    "pandas.core.dtypes.common.is_sparse",
    "pandas.core.frame.DataFrame",
    "pandas.core.series.Series",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat._make_index": {
  "data": {
   "shadows": "pandas.core.sparse.array._make_index"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.get_dtype_kinds": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.common.is_sparse",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_dtype_equal": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_dtype_equal"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_sparse": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_sparse"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.dtypes.concat.union_categoricals": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_maybe_unwrap",
    "all",
    "len",
    "numpy.concatenate",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.core.algorithms.take_1d",
    "pandas.core.dtypes.common.is_dtype_equal"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.concat.union_categoricals._maybe_unwrap": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.dtypes.CategoricalDtypeType",
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__eq__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__hash__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__new__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "KeyError",
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtypeType": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.offsets.DateOffset"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtypeType",
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "pandas.core.dtypes.dtypes.re",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__eq__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__hash__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__new__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "cls",
    "cls._cache",
    "cls._match.search",
    "hash",
    "isinstance",
    "object.__new__",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__unicode__": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.name": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtypeType": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__bytes__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__eq__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__getstate__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__hash__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__ne__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__repr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__str__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__unicode__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.is_dtype": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "isinstance",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.reset_cache": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "pandas.core.dtypes.dtypes.IntervalDtypeType",
    "pandas.core.dtypes.dtypes.re",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__eq__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__hash__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__new__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "cls",
    "cls._cache",
    "cls._match.search",
    "isinstance",
    "object.__new__",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__unicode__": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.is_dtype": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "cls.construct_from_string",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.name": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtypeType": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.dtypes.ExtensionDtype",
    "pandas.core.dtypes.dtypes.PeriodDtypeType",
    "pandas.core.dtypes.dtypes.re",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__eq__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__hash__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__new__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError",
    "cls",
    "cls._cache",
    "cls._parse_dtype_strict",
    "isinstance",
    "object.__new__",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.tseries.offsets.DateOffset"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__unicode__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls._match.search",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.tseries.offsets.DateOffset"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "cls._parse_dtype_strict",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.name": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtypeType": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.core.dtypes.dtypes.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "pandas.core.dtypes.generic": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.dtypes.generic._ABCGeneric",
    "pandas.core.dtypes.generic.create_pandas_abc_type",
    "tuple"
   ]
  },
  "type": "module"
 },
 "pandas.core.dtypes.generic.ABCCategorical": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCCategoricalIndex": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCDataFrame": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCDatetimeIndex": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCFloat64Index": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCGeneric": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCIndex": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCIndexClass": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCInt64Index": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCIntervalIndex": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCMultiIndex": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCPanel": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCPeriod": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCPeriodIndex": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCRangeIndex": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCSeries": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCSparseArray": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCSparseSeries": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCTimedeltaIndex": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic.ABCUInt64Index": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.core.dtypes.generic._ABCGeneric": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.core.dtypes.generic._ABCGeneric.__instancecheck__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.generic.create_pandas_abc_type": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "meta",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.generic.create_pandas_abc_type._check": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference": {
  "data": {
   "symbols_in_volume": [
    "pandas._libs.lib.is_bool",
    "pandas._libs.lib.is_complex",
    "pandas._libs.lib.is_decimal",
    "pandas._libs.lib.is_float",
    "pandas._libs.lib.is_integer",
    "pandas._libs.lib.is_interval",
    "pandas._libs.lib.isscalar"
   ]
  },
  "type": "module"
 },
 "pandas.core.dtypes.inference.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference._iterable_not_string": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.dtypes.inference.collections"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.is_bool": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_complex": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_decimal": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_dict_like": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_file_like": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_float": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_hashable": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_integer": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_interval": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_iterator": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "hasattr",
    "pandas.compat.PY2"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_list_like": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas.compat.string_and_binary_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_named_tuple": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_nested_list_like": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "all",
    "hasattr",
    "len",
    "pandas.core.dtypes.inference.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_number": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_re": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.inference.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_re_compilable": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.inference.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_scalar": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.core.dtypes.inference.is_sequence": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "iter",
    "len",
    "pandas.compat.string_and_binary_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_string_like": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.inference.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.string_and_binary_types": {
  "data": {
   "shadows": "pandas.compat.string_and_binary_types"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.dtypes.inference.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.dtypes.missing._isnull_new"
   ]
  },
  "type": "module"
 },
 "pandas.core.dtypes.missing.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.NaT": {
  "data": {
   "shadows": "pandas._libs.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing._infer_fill_value": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "_ensure_object",
    "is_datetimelike",
    "is_list_like",
    "is_object_dtype",
    "numpy.array",
    "numpy.nan",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._is_na_compat": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "is_bool_dtype",
    "is_integer_dtype",
    "numpy.nan",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._isnull": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pandas.core.dtypes.missing._isnull_ndarraylike": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "is_categorical_dtype",
    "is_interval_dtype",
    "is_string_dtype",
    "is_string_like_dtype",
    "isinstance",
    "needs_i8_conversion",
    "numpy.empty",
    "numpy.isnan",
    "numpy.zeros",
    "pandas.Categorical",
    "pandas.IntervalIndex",
    "pandas.Series",
    "pandas._libs.lib.isnullobj",
    "pandas._libs.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._isnull_ndarraylike_old": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "is_datetime64_dtype",
    "is_string_dtype",
    "is_string_like_dtype",
    "isinstance",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.zeros",
    "pandas.Series",
    "pandas._libs.lib.isnullobj_old",
    "pandas._libs.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._isnull_new": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "is_scalar",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas._libs.lib.checknull",
    "pandas.core.dtypes.missing._isnull_ndarraylike",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._isnull_old": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "is_scalar",
    "isinstance",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas._libs.lib.checknull_old",
    "pandas.core.dtypes.missing._isnull_ndarraylike_old"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._maybe_fill": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.dtypes.missing._is_na_compat"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing._use_inf_as_null": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "globals",
    "pandas.core.config.get_option",
    "pandas.core.dtypes.missing._isnull_new",
    "pandas.core.dtypes.missing._isnull_old"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.array_equivalent": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AttributeError",
    "_ensure_object",
    "float",
    "is_complex_dtype",
    "is_datetimelike_v_numeric",
    "is_dtype_equal",
    "is_float_dtype",
    "is_string_dtype",
    "isinstance",
    "needs_i8_conversion",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.isnan",
    "pandas._libs.lib.array_equivalent_object",
    "pandas._libs.tslib.NaT",
    "pandas.core.dtypes.missing.isnull",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.is_null_datelike_scalar": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "hasattr",
    "is_integer",
    "is_scalar",
    "pandas._libs.tslib.NaT",
    "pandas._libs.tslib.iNaT",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.isnull": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing._isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.dtypes.missing.na_value_for_dtype": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "is_bool_dtype",
    "is_datetime64_dtype",
    "is_datetime64tz_dtype",
    "is_float_dtype",
    "is_integer_dtype",
    "is_timedelta64_dtype",
    "numpy.nan",
    "pandas._libs.tslib.NaT",
    "pandas_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.notnull": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "is_scalar",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.dtypes.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.index": {
  "data": {},
  "type": "module"
 },
 "pandas.core.index._sparsify": {
  "data": {
   "shadows": "pandas.core.indexes.multi._sparsify"
  },
  "type": "import"
 },
 "pandas.core.indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.core.indexes.accessors": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.indexes.accessors.DatetimeProperties",
    "pandas.core.indexes.accessors.PeriodProperties",
    "pandas.core.indexes.accessors.TimedeltaProperties",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.datetimes.DatetimeIndex._datetimelike_methods",
    "pandas.core.indexes.datetimes.DatetimeIndex._datetimelike_ops",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.period.PeriodIndex._datetimelike_methods",
    "pandas.core.indexes.period.PeriodIndex._datetimelike_ops",
    "pandas.core.indexes.timedeltas.TimedeltaIndex",
    "pandas.core.indexes.timedeltas.TimedeltaIndex._datetimelike_methods",
    "pandas.core.indexes.timedeltas.TimedeltaIndex._datetimelike_ops"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.accessors.CombinedDatetimelikeProperties": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "__doc__",
    "pandas.core.indexes.accessors.DatetimeProperties",
    "pandas.core.indexes.accessors.TimedeltaProperties"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.accessors.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.DatetimeProperties": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.core.indexes.accessors.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.accessors.DatetimeProperties.to_pydatetime": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.IncompatibleFrequency": {
  "data": {
   "shadows": "pandas._libs.period.IncompatibleFrequency"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.PandasDelegate": {
  "data": {
   "shadows": "pandas.core.base.PandasDelegate"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.PeriodIndex": {
  "data": {
   "shadows": "pandas.core.indexes.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.PeriodProperties": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pandas.core.indexes.accessors.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.accessors.Properties": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.core.base.NoNewAttributesMixin",
    "pandas.core.base.PandasDelegate"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.accessors.Properties.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_method": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr",
    "method",
    "pandas.Series",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_property_get": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.core.algorithms.take_1d",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_property_set": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.core.indexes.accessors.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties.components": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties.to_pytimedelta": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_datetime_arraylike": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime_arraylike"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_datetimelike": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.indexes.accessors.maybe_to_datetimelike"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_period_arraylike": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_arraylike"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.maybe_to_datetimelike": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.Series",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_datetime_arraylike",
    "pandas.core.dtypes.common.is_period_arraylike",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.indexes.accessors.DatetimeProperties",
    "pandas.core.indexes.accessors.PeriodProperties",
    "pandas.core.indexes.accessors.TimedeltaProperties",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.timedeltas.TimedeltaIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.accessors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.accessors.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.core.indexes.api": {
  "data": {},
  "type": "module"
 },
 "pandas.core.indexes.api.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.indexes.category.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.Float64Index": {
  "data": {
   "shadows": "pandas.core.indexes.numeric.Float64Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.Int64Index": {
  "data": {
   "shadows": "pandas.core.indexes.numeric.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.IntervalIndex": {
  "data": {
   "shadows": "pandas.core.indexes.interval.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.InvalidIndexError": {
  "data": {
   "shadows": "pandas.core.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.MultiIndex": {
  "data": {
   "shadows": "pandas.core.indexes.multi.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.NaT": {
  "data": {
   "shadows": "pandas._libs.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.NumericIndex": {
  "data": {
   "shadows": "pandas.core.indexes.numeric.NumericIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.PeriodIndex": {
  "data": {
   "shadows": "pandas.core.indexes.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.RangeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.range.RangeIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.UInt64Index": {
  "data": {
   "shadows": "pandas.core.indexes.numeric.UInt64Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.core.indexes.api._all_indexes_same": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pandas.core.indexes.api._ensure_index": {
  "data": {
   "shadows": "pandas.core.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api._get_combined_index": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "pandas.core.indexes.api._get_distinct_indexes",
    "pandas.core.indexes.api._union_indexes",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._get_consensus_names": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "any",
    "len",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._get_distinct_indexes": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict",
    "id",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._get_na_value": {
  "data": {
   "shadows": "pandas.core.indexes.base._get_na_value"
  },
  "type": "import"
 },
 "pandas.core.indexes.api._new_Index": {
  "data": {
   "shadows": "pandas.core.indexes.base._new_Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.api._sanitize_and_check": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.core.common._try_sort",
    "pandas.core.indexes.base.Index",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AssertionError",
    "_unique_indices",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "pandas.core.indexes.api._get_consensus_names",
    "pandas.core.indexes.api._sanitize_and_check",
    "pandas.core.indexes.base.Index",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes._unique_indices": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "conv",
    "pandas._libs.lib.fast_unique_multiple_list",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes._unique_indices.conv": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.api.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.indexes.api.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.indexes.category": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._index_doc_kwargs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.core.indexes.category._index_doc_kwargs"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.category.ABCCategorical": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCCategorical"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.CategoricalIndex": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas._libs.index.Int64Engine",
    "pandas.core.base.PandasDelegate",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.category.CategoricalIndex.__array__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.__contains__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "hash",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.__new__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.generic.ABCCategorical",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_accessors": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.categorical.Categorical",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "_make_compare",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods._make_compare": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods._make_compare._evaluate_compare": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.core.dtypes.generic.ABCCategorical",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._append_same_dtype": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._can_reindex": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._codes_for_groupby": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_arr_indexer": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "pandas.core.common._asarray_tuplesafe",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_index_indexer": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_list_indexer": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "KeyError",
    "numpy.asarray",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_scalar_indexer": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._create_categorical": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.categorical.Categorical",
    "pandas.core.dtypes.generic.ABCCategorical",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._create_from_codes": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.core.categorical.Categorical.from_codes",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._delegate_method": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "method",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._engine": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._format_attrs": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "len",
    "pandas.core.config.get_option",
    "pandas.core.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._formatter_func": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._is_dtype_compat": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._isnan": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._reindex_non_unique": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._reverse_indexer": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._shallow_copy": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._simple_new": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "classmethod",
    "object.__new__",
    "pandas.compat.iteritems",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._to_safe_for_reshape": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.argsort": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.astype": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.IntervalIndex.from_intervals",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.categories": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.codes": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.contains": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "hash",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.delete": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.delete"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.duplicated": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "pandas._libs.hashtable.duplicated_int64",
    "pandas.core.base._shared_docs",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.equals": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "pandas.core.dtypes.missing.array_equivalent",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.fillna": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_indexer": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.core.algorithms.take_1d",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.core.missing.clean_reindex_fill_method",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_indexer_non_unique": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category.CategoricalIndex",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_loc": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_value": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pandas.core.common._values_from_object",
    "pandas.core.indexes.category.CategoricalIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_values": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.inferred_type": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.insert": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "TypeError",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_dtype_equal": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_unique": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.map": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.ordered": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.reindex": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.asarray",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.missing"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.take": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.unique": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "pandas.core.base.IndexOpsMixin.unique",
    "pandas.core.base._shared_docs",
    "pandas.core.indexes.category._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.values": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.where": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.core.categorical.Categorical",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.category.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.category._asarray_tuplesafe": {
  "data": {
   "shadows": "pandas.core.common._asarray_tuplesafe"
  },
  "type": "import"
 },
 "pandas.core.indexes.category._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.core.indexes.category._index_doc_kwargs": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.core.indexes.category._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.category._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.array_equivalent": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.array_equivalent"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.base": {
  "data": {
   "shadows": "pandas.core.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.duplicated_int64": {
  "data": {
   "shadows": "pandas._libs.hashtable.duplicated_int64"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.is_interval_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_interval_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.libindex": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.indexes.category.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.core.indexes.frozen": {
  "data": {},
  "type": "module"
 },
 "pandas.core.indexes.frozen.FrozenList": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "list",
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.frozen.FrozenList.__add__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.core.indexes.frozen.FrozenList",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.core.indexes.frozen.FrozenList",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__getitem__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.frozen.FrozenList",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__getslice__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenList",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__hash__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__mul__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenList",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__radd__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__reduce__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__repr__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__unicode__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList._disabled": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.__new__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.core.indexes.frozen.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.__unicode__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray._disabled": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray._shallow_copy": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.searchsorted": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenNDArray",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.values": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.PandasObject": {
  "data": {
   "shadows": "pandas.core.base.PandasObject"
  },
  "type": "import"
 },
 "pandas.core.indexes.frozen._ensure_frozen": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.core.dtypes.cast.coerce_indexer_dtype",
    "pandas.core.indexes.frozen.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.frozen.coerce_indexer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.coerce_indexer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.frozen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.frozen.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._index_doc_kwargs",
    "pandas.core.indexes.interval.IntervalIndex",
    "pandas.core.indexes.interval._index_doc_kwargs",
    "set"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.interval.ABCPeriodIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCPeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Interval": {
  "data": {
   "shadows": "pandas._libs.interval.Interval"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.IntervalArrayFormatter": {
  "data": {
   "shadows": "pandas.io.formats.format.IntervalArrayFormatter"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.IntervalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.IntervalDtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.IntervalIndex": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_setop",
    "pandas._libs.interval.IntervalMixin",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.interval.IntervalIndex.__array__": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__array_wrap__": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__contains__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "pandas._libs.interval.Interval"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__getitem__": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.interval.Interval",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__len__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__new__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.interval.IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__reduce__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.interval._new_IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._append_same_dtype": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.core.indexes.interval.IntervalIndex",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._array_values": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._as_like_interval_index": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.interval.IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._check_method": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._constructor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._convert_list_indexer": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "KeyError",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._convert_scalar_indexer": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.interval.IntervalIndex",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._engine": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas._libs.interval.IntervalTree",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._find_non_overlapping_monotonic_bounds": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "pandas._libs.interval.IntervalMixin",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_attrs": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "pandas.core.indexes.base.default_pprint",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_data": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "formatter",
    "len",
    "min",
    "pandas.core.config.get_option",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_native_types": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "pandas.io.formats.format.IntervalArrayFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_space": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_with_header": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._get_loc_only_exact_matches": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "pandas._libs.interval.Interval",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._get_reindexer": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._isnan": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing.isnull",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._maybe_cast_indexed": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.ndarray",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.interval.IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._multiindex": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.core.indexes.multi.MultiIndex.from_arrays",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._searchsorted_monotonic": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "isinstance",
    "pandas._libs.interval.IntervalMixin",
    "pandas.core.indexes.interval._get_next_label",
    "pandas.core.indexes.interval._get_prev_label"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._setop": {
  "data": {
   "lineno": 1000
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._setop.func": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._shallow_copy": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.interval.IntervalIndex",
    "pandas.util._decorators.Appender",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._simple_new": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "pandas._libs.interval.IntervalMixin.__new__",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.generic.ABCPeriodIndex",
    "pandas.core.indexes.base._ensure_index",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._validate": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.indexes.interval._VALID_CLOSED"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.argsort": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "numpy.lexsort"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.astype": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "pandas.Categorical",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.closed": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.contains": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.copy": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.delete": {
  "data": {
   "lineno": 846
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.dtype": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string",
    "pandas.util._decorators.cache_readonly",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.equals": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.interval.IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_arrays": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "classmethod",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_breaks": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "classmethod",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_intervals": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "classmethod",
    "numpy.asarray",
    "pandas._libs.interval.intervals_to_interval_bounds"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_tuples": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "classmethod",
    "numpy.nan",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_indexer": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.where",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.interval.IntervalIndex",
    "pandas.core.indexes.interval._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_indexer_non_unique": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.interval.IntervalIndex",
    "pandas.core.indexes.interval._index_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_loc": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "pandas._libs.interval.Interval",
    "pandas.core.indexes.interval._get_interval_closed_bounds",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_value": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "pandas.core.common.is_bool_indexer",
    "pandas.core.dtypes.common.is_list_like",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.hasnans": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.inferred_type": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.insert": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas._libs.interval.Interval"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic_decreasing": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic_increasing": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_non_overlapping_monotonic": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_unique": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.left": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.memory_usage": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.core.indexes.base.Index.memory_usage.__doc__",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.mid": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.indexes.base.Index",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.right": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.take": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.interval._index_doc_kwargs",
    "pandas.util._decorators.Appender",
    "taker",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.to_tuples": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.core.common._asarray_tuplesafe",
    "pandas.core.indexes.base.Index",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.values": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.nan",
    "object",
    "pandas._libs.interval.Interval",
    "pandas.util._decorators.cache_readonly",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.where": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalMixin": {
  "data": {
   "shadows": "pandas._libs.interval.IntervalMixin"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.IntervalTree": {
  "data": {
   "shadows": "pandas._libs.interval.IntervalTree"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.MultiIndex": {
  "data": {
   "shadows": "pandas.core.indexes.multi.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Timedelta": {
  "data": {
   "shadows": "pandas._libs.Timedelta"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.Timestamp": {
  "data": {
   "shadows": "pandas._libs.Timestamp"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval._VALID_CLOSED": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.core.indexes.interval._ensure_index": {
  "data": {
   "shadows": "pandas.core.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval._get_interval_closed_bounds": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.core.indexes.interval._get_next_label",
    "pandas.core.indexes.interval._get_prev_label"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval._get_next_label": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "numpy.infty",
    "numpy.nextafter",
    "numpy.timedelta64",
    "pandas._libs.Timedelta",
    "pandas._libs.Timestamp",
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval._get_prev_label": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "numpy.infty",
    "numpy.nextafter",
    "numpy.timedelta64",
    "pandas._libs.Timedelta",
    "pandas._libs.Timestamp",
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval._index_doc_kwargs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.indexes.interval._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval._new_IntervalIndex": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.default_pprint": {
  "data": {
   "shadows": "pandas.core.indexes.base.default_pprint"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.interval_range": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.indexes.interval.IntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.interval.intervals_to_interval_bounds": {
  "data": {
   "shadows": "pandas._libs.interval.intervals_to_interval_bounds"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_datetime_or_timedelta_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_interval_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_interval_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.interval.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._index_doc_kwargs",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.indexes.multi._index_doc_kwargs"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.multi.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.FrozenList": {
  "data": {
   "shadows": "pandas.core.indexes.frozen.FrozenList"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.FrozenNDArray": {
  "data": {
   "shadows": "pandas.core.indexes.frozen.FrozenNDArray"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.InvalidIndexError": {
  "data": {
   "shadows": "pandas.core.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.MultiIndex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "functools.partial",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base.Index.set_names",
    "pandas.core.indexes.frozen.FrozenList",
    "pandas.util._decorators.deprecate",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.multi.MultiIndex.__array__": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__contains__": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "LookupError",
    "hash",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.multi._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__getitem__": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.nan",
    "pandas.compat.zip",
    "pandas.core.common.is_bool_indexer",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__getslice__": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__len__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__new__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len",
    "object.__new__",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__reduce__": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.core.indexes.base._new_Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__setstate__": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.core.indexes.base.Index",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._assert_take_fillable": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.indexes.frozen.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._bounds": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._constructor": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pandas.core.indexes.multi.MultiIndex",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._convert_can_do_setop": {
  "data": {
   "lineno": 2537,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._convert_listlike_indexer": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.core.indexes.multi.MultiIndex",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._drop_from_level": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "pandas._libs.index",
    "pandas._libs.index.get_indexer",
    "pandas.core.algorithms.isin",
    "pandas.core.common._index_labels_to_array"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._engine": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "len",
    "pandas._libs.index.MultiIndexHashEngine",
    "pandas._libs.index.MultiIndexObjectEngine",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_attrs": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "all",
    "pandas.core.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_data": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_native_types": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "pandas.compat.zip",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_space": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._from_elements": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "pandas.core.indexes.multi.MultiIndex",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_grouper_for_level": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "pandas.core.algorithms.factorize",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels_for_sorting": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "cats",
    "pandas.core.categorical.Categorical.from_codes"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels_for_sorting.cats": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_indexer": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "convert_indexer",
    "isinstance",
    "len",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_indexer.convert_indexer": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.arange",
    "numpy.in1d",
    "numpy.zeros",
    "pandas.Series",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_number": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_values": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pandas.core.algorithms.take_1d"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_levels": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_names": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._has_complex_internals": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_indexing_key": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "KeyError",
    "f",
    "isinstance",
    "len",
    "pandas.compat.zip",
    "pandas.core.util.hashing.hash_tuple",
    "pandas.core.util.hashing.hash_tuples",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_indexing_key.f": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_values": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "pandas.core.util.hashing.hash_tuples",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._have_mixed_levels": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._inferred_type_levels": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_memory_usage_qualified": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "any",
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_memory_usage_qualified.f": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_v1": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_v2": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._nbytes": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "sum",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._partial_tup_index": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "pandas._libs.lib.infer_dtype",
    "pandas.compat.zip",
    "pandas.errors.UnsortedIndexError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._reference_duplicate_name": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_labels": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.compat.zip",
    "pandas.core.indexes.frozen.FrozenList",
    "pandas.core.indexes.frozen._ensure_frozen"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_levels": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "len",
    "list",
    "pandas.compat.zip",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.frozen.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_names": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._shallow_copy": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._shallow_copy_with_infer": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._sort_levels_monotonic": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "len",
    "pandas._libs.lib.get_reverse_indexer",
    "pandas.compat.zip",
    "pandas.core.algorithms.take_1d",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._to_safe_for_reshape": {
  "data": {
   "lineno": 960
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._verify_integrity": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._wrap_joined_index": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.append": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "numpy.concatenate",
    "pandas.compat.range",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.argsort": {
  "data": {
   "lineno": 1468
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.astype": {
  "data": {
   "lineno": 2528,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.copy": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.delete": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": [
    "numpy.delete",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.difference": {
  "data": {
   "lineno": 2499,
   "symbols_in_volume": [
    "len",
    "pandas.core.indexes.multi.MultiIndex",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.drop": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "KeyError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.lrange",
    "pandas.core.common._index_labels_to_array",
    "pandas.core.common.is_bool_indexer",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.warnings",
    "pandas.errors.PerformanceWarning",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.droplevel": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.nan",
    "pandas.core.indexes.multi.MultiIndex",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.dropna": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.any",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.dtype": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.duplicated": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "len",
    "pandas._libs.hashtable.duplicated_int64",
    "pandas.compat.map",
    "pandas.core.base._shared_docs",
    "pandas.core.indexes.multi._index_doc_kwargs",
    "pandas.core.sorting.get_group_index",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.equal_levels": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.equals": {
  "data": {
   "lineno": 2384,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.asarray",
    "pandas.compat.range",
    "pandas.core.algorithms.take_nd",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.missing.array_equivalent",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.fillna": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.format": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "object",
    "pandas.compat.zip",
    "pandas.core.algorithms.take_1d",
    "pandas.core.config.get_option",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.indexes.multi._get_na_rep",
    "pandas.core.indexes.multi._sparsify",
    "pandas.io.formats.format._get_adjustment",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_arrays": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "getattr",
    "len",
    "pandas.compat.range",
    "pandas.core.categorical._factorize_from_iterables",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_product": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.categorical._factorize_from_iterables",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.reshape.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_tuples": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas._libs.lib.to_object_array_tuples",
    "pandas._libs.lib.tuples_to_object_array",
    "pandas.compat.lzip",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_indexer": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.array",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.indexes.multi._index_doc_kwargs",
    "pandas.core.missing.clean_reindex_fill_method",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_indexer_non_unique": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.indexes.multi._index_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_level_values": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "_maybe_to_slice",
    "enumerate",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.compat.map",
    "pandas.core.common._values_from_object",
    "pandas.core.indexes.multi.warnings",
    "pandas.errors.PerformanceWarning",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_str_to_time_stamp": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "isinstance",
    "pandas._libs.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_to_slice": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.ndarray",
    "pandas._libs.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "any",
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.common._values_from_object",
    "pandas.core.indexing.maybe_droplevels",
    "partial_selection",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level.maybe_droplevels": {
  "data": {
   "lineno": 2046,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level.partial_selection": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.core.indexing.maybe_droplevels",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "Int64Index",
    "KeyError",
    "_convert_to_indexer",
    "_update_indexer",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "pandas.core.common.is_bool_indexer",
    "pandas.core.common.is_null_slice",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.errors.UnsortedIndexError",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs._convert_to_indexer": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "Int64Index",
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "numpy.zeros",
    "pandas.core.common.is_bool_indexer",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs._update_indexer": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_slice_bound": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_value": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "KeyError",
    "TypeError",
    "_try_mi",
    "isinstance",
    "numpy.datetime64",
    "pandas._libs.Timestamp",
    "pandas._libs.index.get_value_at",
    "pandas.compat.PY3",
    "pandas.compat.string_types",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_iterator",
    "pandas.core.indexes.base.InvalidIndexError",
    "pandas.core.indexes.multi.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_value._try_mi": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "pandas.core.indexing.maybe_droplevels"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.inferred_type": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.insert": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.insert",
    "pandas.compat.zip",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.core.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.intersection": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "len",
    "pandas.compat.lzip",
    "pandas.core.indexes.multi.MultiIndex",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_all_dates": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_lexsorted": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_lexsorted_for_tuple": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic_decreasing": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic_increasing": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.lexsort",
    "pandas.compat.range",
    "pandas.core.indexes.base.Index",
    "pandas.util._decorators.cache_readonly",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_unique": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.isin": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "len",
    "numpy.bool_",
    "numpy.lib.arraysetops.in1d",
    "numpy.zeros",
    "pandas.core.algorithms.isin",
    "pandas.core.indexes.base.Index.isin.__doc__",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.levshape": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "len",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.lexsort_depth": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "pandas._libs.lib.is_lexsorted",
    "pandas.compat.range",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.memory_usage": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.core.indexes.base.Index.memory_usage.__doc__",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.nbytes": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.nlevels": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.reindex": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "hasattr",
    "isinstance",
    "len",
    "numpy.empty",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._ensure_has_len",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.multi.MultiIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.remove_unused_levels": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.zeros",
    "pandas.compat.zip",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.reorder_levels": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.repeat": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_repeat",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.set_labels": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.set_levels": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.slice_locs": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "pandas.core.indexes.multi.MultiIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.sortlevel": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.sorting.indexer_from_factorized",
    "pandas.core.sorting.lexsort_indexer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.swaplevel": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "list",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.take": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.multi.MultiIndex",
    "pandas.core.indexes.multi._index_doc_kwargs",
    "pandas.util._decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.to_frame": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas._libs.index",
    "pandas.compat.range",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.to_hierarchical": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "numpy.repeat",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.truncate": {
  "data": {
   "lineno": 2354,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.union": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "len",
    "pandas._libs.lib.fast_unique_multiple",
    "pandas.compat.lzip",
    "pandas.core.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.values": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.asarray",
    "pandas._libs.lib.fast_zip",
    "pandas.compat.zip",
    "pandas.core.algorithms.take_1d",
    "pandas.core.indexes.base._get_na_value",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.view": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.where": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.Timestamp": {
  "data": {
   "shadows": "pandas._libs.Timestamp"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.UnsortedIndexError": {
  "data": {
   "shadows": "pandas.errors.UnsortedIndexError"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._ensure_frozen": {
  "data": {
   "shadows": "pandas.core.indexes.frozen._ensure_frozen"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._ensure_index": {
  "data": {
   "shadows": "pandas.core.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._ensure_int64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_int64"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._factorize_from_iterables": {
  "data": {
   "shadows": "pandas.core.categorical._factorize_from_iterables"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._get_adjustment": {
  "data": {
   "shadows": "pandas.io.formats.format._get_adjustment"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._get_na_rep": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "numpy.datetime64.get",
    "numpy.timedelta64.get"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi._get_na_value": {
  "data": {
   "shadows": "pandas.core.indexes.base._get_na_value"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._index_doc_kwargs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.core.indexes.multi._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi._sparsify": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas.compat.lzip",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.multi._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.array_equivalent": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.array_equivalent"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.base": {
  "data": {
   "shadows": "pandas.core.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.cartesian_product": {
  "data": {
   "shadows": "pandas.core.reshape.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.deprecate": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.duplicated_int64": {
  "data": {
   "shadows": "pandas._libs.hashtable.duplicated_int64"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.get_group_index": {
  "data": {
   "shadows": "pandas.core.sorting.get_group_index"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.hash_tuple": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_tuple"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.hash_tuples": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_tuples"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.indexer_from_factorized": {
  "data": {
   "shadows": "pandas.core.sorting.indexer_from_factorized"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_bool_indexer": {
  "data": {
   "shadows": "pandas.core.common.is_bool_indexer"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_iterator": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_iterator"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_null_slice": {
  "data": {
   "shadows": "pandas.core.common.is_null_slice"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.lexsort_indexer": {
  "data": {
   "shadows": "pandas.core.sorting.lexsort_indexer"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.libindex": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.maybe_droplevels": {
  "data": {
   "shadows": "pandas.core.indexing.maybe_droplevels"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.indexes.multi.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.numeric.Float64Index",
    "pandas.core.indexes.numeric.Int64Index",
    "pandas.core.indexes.numeric.UInt64Index",
    "pandas.core.indexes.numeric._num_index_shared_docs"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.numeric.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.Float64Index": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "__doc__",
    "numpy.float64",
    "pandas._libs.algos.arrmap_float64",
    "pandas._libs.index.Float64Engine",
    "pandas._libs.join.inner_join_indexer_float64",
    "pandas._libs.join.left_join_indexer_float64",
    "pandas._libs.join.left_join_indexer_unique_float64",
    "pandas._libs.join.outer_join_indexer_float64",
    "pandas.core.indexes.numeric.NumericIndex",
    "pandas.core.indexes.numeric._float64_descr_args",
    "pandas.core.indexes.numeric._num_index_shared_docs"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.numeric.Float64Index.__contains__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.isnan",
    "pandas.core.indexes.base._try_get_item",
    "pandas.core.indexes.numeric.Float64Index",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._convert_scalar_indexer": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._convert_slice_indexer": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.numeric.Float64Index",
    "pandas.util._decorators.Appender",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._format_native_types": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandas.io.formats.format.FloatArrayFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.astype": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.equals": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.numeric.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.get_loc": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "len",
    "numpy.all",
    "numpy.isnan",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.numeric.Float64Index",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.get_value": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.base.InvalidIndexError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.inferred_type": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.is_unique": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pandas.core.indexes.numeric.Float64Index",
    "pandas.util._decorators.cache_readonly",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.isin": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.algorithms.isin",
    "pandas.core.indexes.base.Index.isin.__doc__",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.FloatArrayFormatter": {
  "data": {
   "shadows": "pandas.io.formats.format.FloatArrayFormatter"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.Int64Index": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "__doc__",
    "numpy.int64",
    "pandas._libs.algos.arrmap_int64",
    "pandas._libs.index.Int64Engine",
    "pandas._libs.join.inner_join_indexer_int64",
    "pandas._libs.join.left_join_indexer_int64",
    "pandas._libs.join.left_join_indexer_unique_int64",
    "pandas._libs.join.outer_join_indexer_int64",
    "pandas.core.indexes.numeric.NumericIndex",
    "pandas.core.indexes.numeric._int64_descr_args",
    "pandas.core.indexes.numeric._num_index_shared_docs"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.numeric.Int64Index._assert_safe_casting": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "issubclass",
    "numpy.array_equal",
    "numpy.signedinteger"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.numeric.Int64Index",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index._wrap_joined_index": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.core.indexes.numeric.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index.asi8": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index.inferred_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.InvalidIndexError": {
  "data": {
   "shadows": "pandas.core.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.NumericIndex": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.core.indexes.base.Index"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.numeric.NumericIndex.__new__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "hasattr",
    "issubclass",
    "numpy.array",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_dtype_equal"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._assert_safe_casting": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._convert_tolerance": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex.is_all_dates": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "__doc__",
    "numpy.uint64",
    "pandas._libs.algos.arrmap_uint64",
    "pandas._libs.index.UInt64Engine",
    "pandas._libs.join.inner_join_indexer_uint64",
    "pandas._libs.join.left_join_indexer_uint64",
    "pandas._libs.join.left_join_indexer_unique_uint64",
    "pandas._libs.join.outer_join_indexer_uint64",
    "pandas.core.indexes.numeric.NumericIndex",
    "pandas.core.indexes.numeric._num_index_shared_docs",
    "pandas.core.indexes.numeric._uint64_descr_args"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.numeric.UInt64Index._assert_safe_casting": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "issubclass",
    "numpy.array_equal",
    "numpy.unsignedinteger"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_arr_indexer": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.uint64",
    "pandas.core.common._asarray_tuplesafe",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_index_indexer": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.uint64",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_scalar_indexer": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.numeric.UInt64Index",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._wrap_joined_index": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.core.indexes.numeric.UInt64Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index.asi8": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index.inferred_type": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.numeric._asarray_tuplesafe": {
  "data": {
   "shadows": "pandas.core.common._asarray_tuplesafe"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric._float64_descr_args": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "pandas.core.indexes.numeric._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric._int64_descr_args": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pandas.core.indexes.numeric._num_index_shared_docs": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.core.indexes.numeric._uint64_descr_args": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.core.indexes.numeric._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.algorithms": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.is_dtype_equal": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_dtype_equal"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.libalgos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.libindex": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.libjoin": {
  "data": {
   "shadows": "pandas._libs.join"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.numeric.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas._libs.period._DIFFERENT_FREQ_INDEX",
    "pandas.core.indexes.base._index_doc_kwargs",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.period._index_doc_kwargs"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.period.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.DatelikeOps": {
  "data": {
   "shadows": "pandas.core.indexes.datetimelike.DatelikeOps"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.DatetimeIndexOpsMixin": {
  "data": {
   "shadows": "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.IncompatibleFrequency": {
  "data": {
   "shadows": "pandas._libs.period.IncompatibleFrequency"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.Index": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.Int64Index": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.Period": {
  "data": {
   "shadows": "pandas._libs.period.Period"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.PeriodIndex": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimelike.DatelikeOps",
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
    "pandas.core.indexes.datetimes.Int64Index",
    "pandas.core.indexes.period._field_accessor",
    "pandas.core.indexes.period._period_index_cmp"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.period.PeriodIndex.__array__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_integer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__array_wrap__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "func.__name__",
    "func.types",
    "isinstance",
    "len",
    "numpy.add",
    "numpy.subtract",
    "numpy.ufunc",
    "pandas._libs.period.Period",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.indexes.datetimes.Index",
    "pandas.core.indexes.period.PeriodIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__contains__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pandas._libs.period.Period",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__new__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ndarray",
    "pandas._libs.lib.infer_dtype",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas._libs.period.Period",
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas._libs.period.extract_freq",
    "pandas._libs.period.extract_ordinals",
    "pandas._libs.period.period_asfreq_arr",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_float",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.datetimes.Int64Index",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.period.dt64arr_to_periodarr",
    "pandas.tseries.frequencies.get_freq_code",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__setstate__": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.ndarray.__setstate__",
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas.core.indexes.period.PeriodIndex",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._add_delta": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._apply_meta": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._assert_can_do_setop": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._box_func": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pandas._libs.period.Period._from_ordinal",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._coerce_scalar_to_index": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pandas.core.indexes.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._convert_tolerance": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._convert_tolerance"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._format_native_types": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "formatter",
    "numpy.array",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._formatter_func": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._from_ordinals": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "numpy.array",
    "object.__new__",
    "pandas._libs.period.Period._maybe_convert_freq"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._generate_range": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "len",
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas.core.common._count_not_none",
    "pandas.core.indexes.period._get_ordinal_range",
    "pandas.core.indexes.period._range_from_fields"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._get_string_slice": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.tseries.frequencies.Resolution.get_freq_group",
    "pandas.tseries.frequencies.get_freq_group",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._get_unique_index": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "pandas.core.indexes.period.PeriodIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._int64index": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.Int64Index",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "datetime.datetime",
    "isinstance",
    "pandas._libs.period.Period",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_float",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.tools.datetimes.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._maybe_convert_timedelta": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "numpy.ndarray",
    "numpy.timedelta64",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas._libs.tslib._delta_to_nanoseconds",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX",
    "pandas.tseries.frequencies.get_base_alias",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.offsets.Tick"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._mpl_repr": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._parsed_string_to_bounds": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "KeyError",
    "pandas._libs.period.Period"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._shallow_copy": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "pandas.core.indexes.period.PeriodIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._shallow_copy_with_infer": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._simple_new": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "cls._from_ordinals",
    "len",
    "numpy.array",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._sub_datelike": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "NotImplemented",
    "len",
    "numpy.empty",
    "numpy.int64",
    "pandas._libs.tslib.NaT",
    "pandas._libs.tslib.iNaT",
    "pandas.core.indexes.timedeltas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._sub_period": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.core.indexes.datetimes.Index",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._to_embed": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._values": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._wrap_union_result": {
  "data": {
   "lineno": 948
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asfreq": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas._libs.period._validate_end_alias",
    "pandas._libs.period.period_asfreq_arr",
    "pandas._libs.tslib.iNaT",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asi8": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asof_locs": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.where",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.astype": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.dtype": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.end_time": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_indexer": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.core.indexes.base._ensure_index",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.datetimes.Index.get_indexer",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX",
    "pandas.core.indexes.period._index_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_loc": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "pandas._libs.period.Period",
    "pandas._libs.tslib.NaT",
    "pandas._libs.tslib.iNaT",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.tools.datetimes.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_value": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "numpy.searchsorted",
    "pandas._libs.period.Period",
    "pandas.core.common._maybe_box",
    "pandas.core.common._values_from_object",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.tseries.frequencies.Resolution.get_freq_group",
    "pandas.tseries.frequencies.get_freq_group",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.inferred_type": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.insert": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.concatenate",
    "pandas._libs.period.Period"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_all_dates": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_full": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_leap_year": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas._libs.tslib._isleapyear_arr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.join": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.Int64Index.join"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.searchsorted": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas._libs.period.Period",
    "pandas.compat.string_types",
    "pandas.core.base._shared_docs",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution",
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.shift": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas._libs.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.start_time": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.to_datetime": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.indexes.period.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.to_timestamp": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas._libs.period._validate_end_alias",
    "pandas._libs.period.periodarr_to_dt64arr",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_to_timestamp_base"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.tz_convert": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.tz_localize": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.values": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandas.core.indexes.period._ensure_index": {
  "data": {
   "shadows": "pandas.core.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._field_accessor": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._field_accessor.f": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas._libs.period.get_period_field_arr",
    "pandas.core.indexes.datetimes.Index",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._get_ordinal_range": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.arange",
    "numpy.int64",
    "pandas._libs.period.Period",
    "pandas._libs.tslib.NaT",
    "pandas.core.common._count_not_none",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._gfc": {
  "data": {
   "shadows": "pandas.tseries.frequencies.get_freq_code"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._index_doc_kwargs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.core.indexes.period._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._make_field_arrays": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.repeat",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._new_PeriodIndex": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pandas.core.indexes.period._period_index_cmp": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pandas.core.indexes.period._period_index_cmp.wrapper": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "func",
    "getattr",
    "isinstance",
    "len",
    "numpy.empty",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas._libs.period.Period",
    "pandas._libs.tslib.NaT",
    "pandas.core.indexes.period._DIFFERENT_FREQ_INDEX",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._quarter_to_myear": {
  "data": {
   "shadows": "pandas._libs.period._quarter_to_myear"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._range_from_fields": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.period._quarter_to_myear",
    "pandas._libs.period.period_ordinal",
    "pandas.compat.zip",
    "pandas.core.indexes.period._make_field_arrays",
    "pandas.tseries.frequencies.FreqGroup.FR_QTR",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period._shared_docs": {
  "data": {
   "shadows": "pandas.core.base._shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.period._validate_end_alias": {
  "data": {
   "shadows": "pandas._libs.period._validate_end_alias"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.dt64arr_to_periodarr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "pandas._libs.period.Period._maybe_convert_freq",
    "pandas._libs.period.dt64arr_to_periodarr",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.get_period_field_arr": {
  "data": {
   "shadows": "pandas._libs.period.get_period_field_arr"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.infer_dtype": {
  "data": {
   "shadows": "pandas._libs.lib.infer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.parse_time_string": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.parse_time_string"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.period": {
  "data": {
   "shadows": "pandas._libs.period"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.period_range": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "pandas.core.indexes.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.pnow": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas._libs.period.Period.now",
    "pandas.core.indexes.period.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.period.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.indexes.period.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.indexes.range": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.indexes.range.RangeIndex"
   ]
  },
  "type": "module"
 },
 "pandas.core.indexes.range.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.Index": {
  "data": {
   "shadows": "pandas.core.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.Int64Index": {
  "data": {
   "shadows": "pandas.core.indexes.numeric.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.RangeIndex": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas._libs.index.Int64Engine",
    "pandas.core.indexes.numeric.Int64Index"
   ]
  },
  "type": "class"
 },
 "pandas.core.indexes.range.RangeIndex.__floordiv__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "len",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__getitem__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "isinstance",
    "len",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.indexes.range.RangeIndex",
    "slice",
    "super",
    "super_getitem"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__len__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__new__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_ensure_int",
    "dict",
    "isinstance",
    "pandas.core.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__new__._ensure_int": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "int",
    "pandas.core.dtypes.common.is_scalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__reduce__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._new_Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "_make_evaluate_binop",
    "classmethod",
    "pandas.compat.PY3",
    "pandas.core.indexes.range.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop._evaluate_numeric_binop": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "numpy.errstate",
    "op",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.range.RangeIndex",
    "reversed",
    "step"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._constructor": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.core.indexes.numeric.Int64Index",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._data": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._extended_gcd": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._format_attrs": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.core.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._format_data": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._get_data_as_items": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._int64index": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.core.indexes.numeric.Int64Index",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._max_fitting_element": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._min_fitting_element": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._shallow_copy": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.range.RangeIndex",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._simple_new": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "object.__new__",
    "pandas.compat.iteritems",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.indexes.base.Index",
    "pandas.core.indexes.range.RangeIndex",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._validate_dtype": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_int64_dtype",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.argsort": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.compat.numpy.function.validate_argsort"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.copy": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.range.RangeIndex",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.dtype": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.int64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.equals": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.core.indexes.range.RangeIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.from_range": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "len",
    "pandas.compat.PY3",
    "pandas.compat.range",
    "pandas.core.indexes.range.RangeIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.has_duplicates": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.intersection": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "max",
    "min",
    "pandas.core.indexes.range.RangeIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_monotonic_decreasing": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_monotonic_increasing": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_unique": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.join": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pandas.core.indexes.base._index_shared_docs",
    "pandas.core.indexes.range.RangeIndex",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.memory_usage": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.nbytes": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "getattr",
    "pandas.util._decorators.cache_readonly",
    "sum",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.size": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.tolist": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.union": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "min",
    "pandas.core.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.indexes.range._index_shared_docs": {
  "data": {
   "shadows": "pandas.core.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.ibase": {
  "data": {
   "shadows": "pandas.core.indexes.base"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.is_int64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_int64_dtype"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.libindex": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.core.indexes.range.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.missing": {
  "data": {
   "symbols_in_volume": [
    "numpy.int64",
    "pandas._libs.algos.backfill_2d_inplace_int64",
    "pandas._libs.algos.backfill_inplace_int64",
    "pandas._libs.algos.pad_2d_inplace_int64",
    "pandas._libs.algos.pad_inplace_int64",
    "pandas.core.missing._interp_wrapper",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.pad_1d"
   ]
  },
  "type": "module"
 },
 "pandas.core.missing.Akima1DInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.Akima1DInterpolator"
  },
  "type": "import"
 },
 "pandas.core.missing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.core.missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.missing._akima_interpolate": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "P",
    "TypeError",
    "scipy.interpolate.Akima1DInterpolator",
    "scipy.interpolate._isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._backfill_1d_datetime": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "pandas.core.missing._backfill_2d_datetime": {
  "data": {
   "lineno": 460
  },
  "type": "constant"
 },
 "pandas.core.missing._ensure_float64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_float64"
  },
  "type": "import"
 },
 "pandas.core.missing._fill_methods": {
  "data": {
   "lineno": 571
  },
  "type": "constant"
 },
 "pandas.core.missing._from_derivatives": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "AttributeError",
    "distutils.version.LooseVersion",
    "m",
    "method",
    "pandas.core.missing.scipy",
    "scipy.interpolate.BPoly.from_derivatives",
    "scipy.interpolate.piecewise_polynomial_interpolate"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interp_limit": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "inner",
    "len",
    "list",
    "numpy.asarray",
    "numpy.where",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interp_limit.inner": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "min",
    "numpy.where",
    "pandas.core.missing._rolling_window",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper.wrapper": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interpolate_scipy_wrapper": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "getattr",
    "method",
    "numpy.asarray",
    "scipy.interpolate.UnivariateSpline",
    "scipy.interpolate.barycentric_interpolate",
    "scipy.interpolate.interp1d",
    "scipy.interpolate.krogh_interpolate",
    "scipy.interpolate.pchip_interpolate",
    "terp"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._pad_1d_datetime": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "pandas.core.missing._pad_2d_datetime": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "pandas.core.missing._rolling_window": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.algos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.core.missing.backfill_1d": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.object_",
    "numpy.uint8",
    "pandas._libs.algos",
    "pandas._libs.algos.backfill_inplace_float64",
    "pandas._libs.algos.backfill_inplace_object",
    "pandas.core.dtypes.common._ensure_float64",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.missing._backfill_1d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.backfill_2d": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.all",
    "numpy.object_",
    "numpy.uint8",
    "pandas._libs.algos",
    "pandas._libs.algos.backfill_2d_inplace_float64",
    "pandas._libs.algos.backfill_2d_inplace_object",
    "pandas.core.dtypes.common._ensure_float64",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.missing._backfill_2d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_fill_method": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_interp_method": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_reindex_fill_method": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "method",
    "pandas.core.missing.clean_fill_method"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.fill_zeros": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.putmask",
    "numpy.sign",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.get_fill_func": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "method",
    "pandas.core.missing._fill_methods",
    "pandas.core.missing.clean_fill_method"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.infer_dtype_from_array": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.infer_dtype_from_array"
  },
  "type": "import"
 },
 "pandas.core.missing.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pandas.core.missing.interpolate_1d": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.int64",
    "numpy.interp",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.compat.range",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.missing._interp_limit",
    "pandas.core.missing._interpolate_scipy_wrapper",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.interpolate_2d": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "AssertionError",
    "method",
    "pandas.core.missing.backfill_2d",
    "pandas.core.missing.clean_fill_method",
    "pandas.core.missing.mask_missing",
    "pandas.core.missing.pad_2d",
    "transf",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.missing.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.missing.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.core.missing.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.missing.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.missing.is_numeric_v_string_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_numeric_v_string_like"
  },
  "type": "import"
 },
 "pandas.core.missing.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.missing.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.missing.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.missing.mask_missing": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "numpy.array",
    "numpy.zeros",
    "object",
    "pandas.core.dtypes.cast.infer_dtype_from_array",
    "pandas.core.dtypes.common.is_numeric_v_string_like",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.core.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.missing.pad_1d": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.object_",
    "numpy.uint8",
    "pandas._libs.algos",
    "pandas._libs.algos.pad_inplace_float64",
    "pandas._libs.algos.pad_inplace_object",
    "pandas.core.dtypes.common._ensure_float64",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.missing._pad_1d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.pad_2d": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.all",
    "numpy.object_",
    "numpy.uint8",
    "pandas._libs.algos",
    "pandas._libs.algos.pad_2d_inplace_float64",
    "pandas._libs.algos.pad_2d_inplace_object",
    "pandas.core.dtypes.common._ensure_float64",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.missing._pad_2d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.missing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.core.missing.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.ops": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.core.ops._arith_method_FRAME",
    "pandas.core.ops._arith_method_PANEL",
    "pandas.core.ops._arith_method_SERIES",
    "pandas.core.ops._bool_method_SERIES",
    "pandas.core.ops._comp_method_FRAME",
    "pandas.core.ops._comp_method_PANEL",
    "pandas.core.ops._comp_method_SERIES",
    "pandas.core.ops._flex_comp_method_FRAME",
    "pandas.core.ops._flex_method_SERIES",
    "pandas.core.ops._op_descriptions",
    "pandas.core.ops._op_names",
    "pandas.core.ops.reverse_op"
   ]
  },
  "type": "module"
 },
 "pandas.core.ops.ABCIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndex"
  },
  "type": "import"
 },
 "pandas.core.ops.ABCPeriodIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCPeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.ops.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.ops.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.ops.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.core.ops._Op": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.core.ops._Op.__init__": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "pandas.core.ops._Op.get_op": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.ops._Op",
    "pandas.core.ops._TimeOp"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas._libs.iNaT",
    "pandas.core.ops._Op"
   ]
  },
  "type": "class"
 },
 "pandas.core.ops._TimeOp.__init__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.ops._TimeOp",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "_offset",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.tools.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime._offset": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.DatetimeIndex",
    "pandas.core.ops.warnings",
    "pandas.errors.PerformanceWarning"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime.f": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.putmask"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_to_array": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._libs.iNaT",
    "pandas._libs.lib.infer_dtype",
    "pandas._libs.tslib.array_to_datetime",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.ops.datetime",
    "pandas.core.tools.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._is_offset": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "pandas.DateOffset",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._validate": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._align_method_FRAME": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "to_series",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._align_method_FRAME.to_series": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._align_method_SERIES": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_doc_FRAME": {
  "data": {
   "lineno": 1076
  },
  "type": "constant"
 },
 "pandas.core.ops._arith_method_FRAME": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "pandas.core.ops._arith_doc_FRAME",
    "pandas.core.ops._flex_doc_FRAME",
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.f": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.ops._align_method_FRAME",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.na_op": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.empty",
    "numpy.errstate",
    "numpy.find_common_type",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.prod",
    "op",
    "pandas.core.computation.expressions.evaluate",
    "pandas.core.dtypes.cast.maybe_upcast_putmask",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.missing.fill_zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL": {
  "data": {
   "lineno": 1320
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.f": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "op",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.na_op": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.empty",
    "numpy.nan",
    "op",
    "pandas.core.computation.expressions.evaluate",
    "pandas.core.dtypes.cast.maybe_upcast_putmask",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.missing.fill_zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pandas.core.ops._construct_result"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.na_op": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.nan",
    "numpy.ndarray",
    "op",
    "pandas.Index",
    "pandas.core.common._values_from_object",
    "pandas.core.computation.expressions.evaluate",
    "pandas.core.dtypes.cast.find_common_type",
    "pandas.core.dtypes.cast.maybe_upcast_putmask",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.missing.fill_zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.safe_na_op": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "na_op",
    "numpy.errstate",
    "op",
    "pandas._libs.algos.arrmap_object",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.wrapper": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "NotImplemented",
    "construct_result",
    "getattr",
    "hasattr",
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.core.common._maybe_match_name",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.ops._Op",
    "pandas.core.ops._align_method_SERIES",
    "safe_na_op",
    "wrap_results"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES": {
  "data": {
   "lineno": 875
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.na_op": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "numpy.ndarray",
    "op",
    "pandas._libs.lib.list_to_object_array",
    "pandas._libs.lib.scalar_binop",
    "pandas._libs.lib.vec_binop",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.isnull",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.wrapper": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "fill_bool",
    "fill_int",
    "filler",
    "isinstance",
    "na_op",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.core.common._maybe_match_name",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.ops._align_method_SERIES"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME": {
  "data": {
   "lineno": 1293
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME.f": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.DataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_OBJECT_ARRAY": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "numpy.object_",
    "op",
    "pandas._libs.lib.list_to_object_array",
    "pandas._libs.lib.scalar_compare",
    "pandas._libs.lib.vec_compare",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.generic.ABCIndex",
    "pandas.core.dtypes.generic.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.f": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.na_op": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.putmask",
    "op",
    "pandas.core.computation.expressions.evaluate",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.na_op": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplemented",
    "TypeError",
    "bool",
    "getattr",
    "len",
    "numpy.errstate",
    "numpy.ones",
    "numpy.zeros",
    "op",
    "pandas._libs.index.convert_scalar",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetimelike_v_numeric",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.ops._comp_method_OBJECT_ARRAY"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.wrapper": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "na_op",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.ndarray",
    "op",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas._libs.lib.item_from_zerodim",
    "pandas.core.common._maybe_match_name",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.generic.ABCPeriodIndex",
    "pandas.core.dtypes.generic.ABCSeries",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._construct_divmod_result": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "constructor",
    "pandas._libs.index"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._construct_result": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "pandas._libs.index"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._create_methods": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "arith_method",
    "bool_method",
    "comp_method",
    "dict",
    "divmod",
    "names",
    "numpy.inf",
    "numpy.nan",
    "op",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._create_methods.names": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pandas.core.ops._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.core.ops._flex_comp_method_FRAME": {
  "data": {
   "lineno": 1249
  },
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.f": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.ops._align_method_FRAME",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.na_op": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.empty",
    "numpy.errstate",
    "numpy.ndarray",
    "numpy.putmask",
    "op",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_doc_FRAME": {
  "data": {
   "lineno": 1101
  },
  "type": "constant"
 },
 "pandas.core.ops._flex_doc_SERIES": {
  "data": {
   "lineno": 1007
  },
  "type": "constant"
 },
 "pandas.core.ops._flex_method_SERIES": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "pandas.core.ops._flex_doc_SERIES",
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_method_SERIES.flex_wrapper": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "op",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.util._decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._maybe_match_name": {
  "data": {
   "shadows": "pandas.core.common._maybe_match_name"
  },
  "type": "import"
 },
 "pandas.core.ops._op_descriptions": {
  "data": {
   "lineno": 941
  },
  "type": "constant"
 },
 "pandas.core.ops._op_names": {
  "data": {
   "lineno": 999
  },
  "type": "constant"
 },
 "pandas.core.ops._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.ops.add_flex_arithmetic_methods": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "dict",
    "pandas.core.ops._create_methods",
    "pandas.core.ops.add_methods"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_methods": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.bind_method",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "_wrap_inplace_method",
    "arith_method",
    "bool_method",
    "comp_method",
    "dict",
    "pandas.compat.PY3",
    "pandas.core.ops._create_methods",
    "pandas.core.ops.add_methods"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method.f": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.bind_method": {
  "data": {
   "shadows": "pandas.compat.bind_method"
  },
  "type": "import"
 },
 "pandas.core.ops.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.ops.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.core.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.core.ops.expressions": {
  "data": {
   "shadows": "pandas.core.computation.expressions"
  },
  "type": "import"
 },
 "pandas.core.ops.find_common_type": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.find_common_type"
  },
  "type": "import"
 },
 "pandas.core.ops.frame_flex_funcs": {
  "data": {
   "lineno": 1312
  },
  "type": "constant"
 },
 "pandas.core.ops.frame_special_funcs": {
  "data": {
   "lineno": 1315
  },
  "type": "constant"
 },
 "pandas.core.ops.iNaT": {
  "data": {
   "shadows": "pandas._libs.iNaT"
  },
  "type": "import"
 },
 "pandas.core.ops.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetimelike_v_numeric": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimelike_v_numeric"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.core.ops.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.ops.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.ops.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.ops.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.ops.libalgos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.core.ops.libindex": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.ops.libts": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.ops.maybe_upcast_putmask": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_upcast_putmask"
  },
  "type": "import"
 },
 "pandas.core.ops.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.ops.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.core.ops.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.ops.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.core.ops.panel_special_funcs": {
  "data": {
   "lineno": 1397
  },
  "type": "constant"
 },
 "pandas.core.ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.ops.reverse_op": {
  "data": {
   "lineno": 1001
  },
  "type": "constant"
 },
 "pandas.core.ops.series_flex_funcs": {
  "data": {
   "lineno": 1068
  },
  "type": "constant"
 },
 "pandas.core.ops.series_special_funcs": {
  "data": {
   "lineno": 1071
  },
  "type": "constant"
 },
 "pandas.core.ops.to_timedelta": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.core.ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panel": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.ops.add_special_arithmetic_methods",
    "pandas.core.ops.panel_special_funcs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs"
   ]
  },
  "type": "module"
 },
 "pandas.core.panel.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.panel.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.core.panel.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.panel.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.core.panel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.panel.LongPanel": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.LongPanel.__init__": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.panel.LongPanel",
    "pandas.core.panel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.panel.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas.core.panel.OrderedDefaultdict": {
  "data": {
   "shadows": "pandas.compat.OrderedDefaultdict"
  },
  "type": "import"
 },
 "pandas.core.panel.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.core.panel.Panel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.core.generic.NDFrame",
    "pandas.util._decorators.deprecate"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.Panel.__getitem__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common._apply_if_callable",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.index.MultiIndex",
    "pandas.core.panel.Panel",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pandas.core.panel.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__setitem__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.compat.map",
    "pandas.core.common._apply_if_callable",
    "pandas.core.dtypes.cast.infer_dtype_from_scalar",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.generic.NDFrame._set_item",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "axis_pretty",
    "pandas.compat.u",
    "pandas.compat.zip",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__.axis_pretty": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.compat.u",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._AXIS_ORDERS",
    "cls.__name__",
    "cls._constructor_sliced.__name__",
    "pandas.core.ops._comp_method_PANEL",
    "pandas.core.ops.add_flex_arithmetic_methods"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "cls._AXIS_ORDERS",
    "cls.__name__",
    "cls._constructor_sliced.__name__",
    "f",
    "f.__name__",
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.f": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.na_op": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "TypeError",
    "op",
    "pandas.core.computation.expressions.evaluate",
    "pandas.core.missing.fill_zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_1d": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.prod",
    "numpy.vstack",
    "numpy.zeros",
    "pandas.compat.range",
    "pandas.core.reshape.util.cartesian_product",
    "pandas.core.series.Series",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_2d": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "func",
    "list",
    "pandas.compat.range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._box_item_values": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "NotImplementedError",
    "func",
    "isinstance",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.frame.DataFrame",
    "pandas.core.panel.Panel",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_const": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "func",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_frame": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "func",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_panel": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "func",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._compare_constructor": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._construct_return_type": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "getattr",
    "isinstance",
    "list",
    "pandas.compat.itervalues",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._constructor": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "enumerate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes_for_slice": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.compat.zip",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axis": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "pandas.core.index.Index",
    "pandas.core.index._ensure_index",
    "pandas.core.index._get_combined_index",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_join_index": {
  "data": {
   "lineno": 1354
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes_index": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._getitem_multilevel": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.range",
    "pandas.core.indexing.maybe_droplevels",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._homogenize_dict": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.compat.zip",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_arrays": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pandas.core.internals.create_block_manager_from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_data": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.compat.zip",
    "pandas.core.dtypes.cast.infer_dtype_from_scalar",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.generic.NDFrame.__init__",
    "pandas.core.internals.BlockManager"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_dict": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.empty",
    "numpy.nan",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.core.common._try_sort",
    "pandas.core.index.Index",
    "pandas.core.index._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_matrix": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "enumerate",
    "pandas.core.common._default_index",
    "pandas.core.index._ensure_index",
    "pandas.core.internals.create_block_manager_from_blocks"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._ixs": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.index.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._needs_reindex_multi": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._prep_ndarray": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "object",
    "pandas.compat.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._reduce": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "numpy.errstate",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._unpickle_panel_compat": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "_unpickle",
    "pandas.core.common._unpickle_array",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._wrap_result": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.align": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.apply": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "AttributeError",
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.apply_along_axis",
    "numpy.errstate",
    "numpy.ufunc",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.as_matrix": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.conform": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.count": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.dropna": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.compat.range",
    "pandas.core.dtypes.missing.notnull",
    "reversed",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.fillna": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.from_dict": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "dict",
    "isinstance",
    "list",
    "pandas.compat.OrderedDefaultdict",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.core.index.Index",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.get_value": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.groupby": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "pandas.compat.numpy.function",
    "pandas.core.groupby.PanelGroupBy"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.head": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.join": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "pandas.core.panel.Panel",
    "pandas.core.reshape.concat.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.major_xs": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.minor_xs": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex_axis": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.rename": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.round": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "TypeError",
    "numpy.apply_along_axis",
    "numpy.round",
    "pandas.compat.numpy.function.validate_round",
    "pandas.core.dtypes.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.set_value": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "list",
    "numpy.array_equal",
    "pandas.core.dtypes.cast.infer_dtype_from_scalar",
    "pandas.core.dtypes.cast.maybe_cast_item"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.shift": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.tail": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_excel": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.excel.ExcelWriter",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "construct_index_parts",
    "construct_multi_parts",
    "isinstance",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_index_parts": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_multi_parts": {
  "data": {
   "lineno": 922
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_sparse": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.transpose": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "pandas.core.dtypes.common.is_string_like",
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.tshift": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.update": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.xs": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "pandas.core.panel.PanelGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.PanelGroupBy"
  },
  "type": "import"
 },
 "pandas.core.panel.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.panel.WidePanel": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "pandas.core.panel.Panel"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.WidePanel.__init__": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.panel.WidePanel",
    "pandas.core.panel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel._default_index": {
  "data": {
   "shadows": "pandas.core.common._default_index"
  },
  "type": "import"
 },
 "pandas.core.panel._ensure_index": {
  "data": {
   "shadows": "pandas.core.index._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.panel._ensure_like_indices": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.tile",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel._get_combined_index": {
  "data": {
   "shadows": "pandas.core.index._get_combined_index"
  },
  "type": "import"
 },
 "pandas.core.panel._op_descriptions": {
  "data": {
   "shadows": "pandas.core.ops._op_descriptions"
  },
  "type": "import"
 },
 "pandas.core.panel._shared_doc_kwargs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.core.panel._shared_docs": {
  "data": {
   "shadows": "pandas.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas.core.panel._try_sort": {
  "data": {
   "shadows": "pandas.core.common._try_sort"
  },
  "type": "import"
 },
 "pandas.core.panel.cartesian_product": {
  "data": {
   "shadows": "pandas.core.reshape.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.core.panel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.panel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.panel.concat": {
  "data": {
   "shadows": "pandas.core.reshape.concat.concat"
  },
  "type": "import"
 },
 "pandas.core.panel.create_block_manager_from_arrays": {
  "data": {
   "shadows": "pandas.core.internals.create_block_manager_from_arrays"
  },
  "type": "import"
 },
 "pandas.core.panel.create_block_manager_from_blocks": {
  "data": {
   "shadows": "pandas.core.internals.create_block_manager_from_blocks"
  },
  "type": "import"
 },
 "pandas.core.panel.deprecate": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate"
  },
  "type": "import"
 },
 "pandas.core.panel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.core.panel.expressions": {
  "data": {
   "shadows": "pandas.core.computation.expressions"
  },
  "type": "import"
 },
 "pandas.core.panel.infer_dtype_from_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.infer_dtype_from_scalar"
  },
  "type": "import"
 },
 "pandas.core.panel.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.panel.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.panel.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.panel.is_string_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_string_like"
  },
  "type": "import"
 },
 "pandas.core.panel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.core.panel.maybe_cast_item": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_cast_item"
  },
  "type": "import"
 },
 "pandas.core.panel.maybe_droplevels": {
  "data": {
   "shadows": "pandas.core.indexing.maybe_droplevels"
  },
  "type": "import"
 },
 "pandas.core.panel.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.panel.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.panel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.panel.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.panel.ops": {
  "data": {
   "shadows": "pandas.core.ops"
  },
  "type": "import"
 },
 "pandas.core.panel.panel_index": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.core.panel._ensure_like_indices"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.panel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.panel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.core.panel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.panel4d": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panel4d.Panel4D",
    "pandas.core.panel4d.panel4d_init",
    "pandas.core.panelnd.create_nd_panel_factory"
   ]
  },
  "type": "module"
 },
 "pandas.core.panel4d.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.core.panel4d.Panel4D": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas.core.panel4d.create_nd_panel_factory": {
  "data": {
   "shadows": "pandas.core.panelnd.create_nd_panel_factory"
  },
  "type": "import"
 },
 "pandas.core.panel4d.panel4d_init": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.panel4d.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel4d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panelnd": {
  "data": {},
  "type": "module"
 },
 "pandas.core.panelnd.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.panelnd.create_nd_panel_factory": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception",
    "aliases",
    "func",
    "getattr",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.panelnd.pandas",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "len",
    "pandas.core.panelnd.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine_with_constructor": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dict",
    "func",
    "getattr",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._get_plane_axes_index": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.func": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.panelnd.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panelnd.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.reshape": {
  "data": {},
  "type": "module"
 },
 "pandas.core.reshape.api": {
  "data": {},
  "type": "module"
 },
 "pandas.core.reshape.api.concat": {
  "data": {
   "shadows": "pandas.core.reshape.concat.concat"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.crosstab": {
  "data": {
   "shadows": "pandas.core.reshape.pivot.crosstab"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.cut": {
  "data": {
   "shadows": "pandas.core.reshape.tile.cut"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.melt": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.melt"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.merge": {
  "data": {
   "shadows": "pandas.core.reshape.merge.merge"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.merge_asof": {
  "data": {
   "shadows": "pandas.core.reshape.merge.merge_asof"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.merge_ordered": {
  "data": {
   "shadows": "pandas.core.reshape.merge.merge_ordered"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.ordered_merge": {
  "data": {
   "shadows": "pandas.core.reshape.merge.ordered_merge"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.pivot_table": {
  "data": {
   "shadows": "pandas.core.reshape.pivot.pivot_table"
  },
  "type": "import"
 },
 "pandas.core.reshape.api.qcut": {
  "data": {
   "shadows": "pandas.core.reshape.tile.qcut"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat": {
  "data": {},
  "type": "module"
 },
 "pandas.core.reshape.concat.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._Concatenator": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.reshape.concat._Concatenator.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.core.generic.NDFrame",
    "set",
    "sorted",
    "sum",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_comb_axis": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "pandas.core.index._get_combined_index",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_concat_axis": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "len",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.common._default_index",
    "pandas.core.index._ensure_index",
    "pandas.core.reshape.concat._concat_indexes",
    "pandas.core.reshape.concat._make_concat_multiindex",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_new_axes": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "pandas.compat.lrange",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_result_dim": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._maybe_check_integrity": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator.get_result": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "cons",
    "cons._from_axes",
    "dict",
    "enumerate",
    "len",
    "pandas.core.common._consensus_name_attr",
    "pandas.core.dtypes.concat._concat_compat",
    "pandas.core.dtypes.concat._get_frame_result_type",
    "pandas.core.dtypes.concat._get_series_result_type",
    "pandas.core.internals.concatenate_block_managers",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._all_indexes_same": {
  "data": {
   "shadows": "pandas.core.index._all_indexes_same"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._concat": {
  "data": {
   "shadows": "pandas.core.dtypes.concat"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._concat_indexes": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pandas.core.reshape.concat._ensure_index": {
  "data": {
   "shadows": "pandas.core.index._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._factorize_from_iterable": {
  "data": {
   "shadows": "pandas.core.categorical._factorize_from_iterable"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._factorize_from_iterables": {
  "data": {
   "shadows": "pandas.core.categorical._factorize_from_iterables"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._get_combined_index": {
  "data": {
   "shadows": "pandas.core.index._get_combined_index"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._get_consensus_names": {
  "data": {
   "shadows": "pandas.core.index._get_consensus_names"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat._make_concat_multiindex": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.repeat",
    "numpy.tile",
    "pandas.MultiIndex",
    "pandas.compat.lzip",
    "pandas.core.categorical._factorize_from_iterable",
    "pandas.core.categorical._factorize_from_iterables",
    "pandas.core.index._all_indexes_same",
    "pandas.core.index._ensure_index",
    "pandas.core.index._get_consensus_names",
    "pandas.core.reshape.concat._concat_indexes",
    "set",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.concat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.core.reshape.concat._Concatenator"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.concat.concatenate_block_managers": {
  "data": {
   "shadows": "pandas.core.internals.concatenate_block_managers"
  },
  "type": "import"
 },
 "pandas.core.reshape.concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame.pivot_table",
    "pandas.core.reshape.pivot.pivot_table"
   ]
  },
  "type": "module"
 },
 "pandas.core.reshape.pivot.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.Grouper": {
  "data": {
   "shadows": "pandas.core.groupby.Grouper"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot._add_margins": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.core.reshape.pivot._compute_grand_margin",
    "pandas.core.reshape.pivot._generate_marginal_results",
    "pandas.core.reshape.pivot._generate_marginal_results_without_values",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._compute_grand_margin": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "aggfunc",
    "dict",
    "getattr",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._convert_by": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.groupby.Grouper"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "TypeError",
    "_all_key",
    "aggfunc",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.reshape.concat.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results._all_key": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results_without_values": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_all_key",
    "aggfunc",
    "len",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results_without_values._all_key": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._get_names": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "AssertionError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot._normalize": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "bool",
    "f",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.reshape.concat.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot.cartesian_product": {
  "data": {
   "shadows": "pandas.core.reshape.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.concat": {
  "data": {
   "shadows": "pandas.core.reshape.concat.concat"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.crosstab": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "aggfunc",
    "len",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.common._maybe_make_list",
    "pandas.core.reshape.pivot._get_names",
    "pandas.core.reshape.pivot._normalize"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.pivot_table": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.range",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.groupby.Grouper",
    "pandas.core.reshape.concat.concat",
    "pandas.core.reshape.pivot._add_margins",
    "pandas.core.reshape.pivot._convert_by",
    "pandas.core.reshape.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.pivot.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.reshape.pivot.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape": {
  "data": {},
  "type": "module"
 },
 "pandas.core.reshape.reshape.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.IntIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._Unstacker": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.reshape.reshape._Unstacker.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.newaxis",
    "pandas.core.categorical.Categorical",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker._make_selectors": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.arange",
    "numpy.prod",
    "numpy.zeros",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.sorting.get_compressed_ids"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker._make_sorted_values_labels": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas._libs.algos.groupsort_indexer",
    "pandas._libs.algos.take_nd",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.sorting.get_compressed_ids"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_columns": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.repeat",
    "numpy.tile",
    "pandas.core.index.MultiIndex",
    "pandas.core.index._get_na_value"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_index": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "len",
    "pandas.core.index.MultiIndex",
    "pandas.core.index._get_na_value"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_values": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bool",
    "f",
    "getattr",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "pandas._libs.reshape",
    "pandas.core.dtypes.cast.maybe_promote",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.needs_i8_conversion"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_result": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len",
    "pandas._libs.algos.take_nd",
    "pandas.compat.range",
    "pandas.core.categorical.Categorical",
    "pandas.core.frame.DataFrame",
    "pandas.core.sorting.compress_group_index"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._algos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._concat": {
  "data": {
   "shadows": "pandas.core.dtypes.concat"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._factorize_from_iterable": {
  "data": {
   "shadows": "pandas.core.categorical._factorize_from_iterable"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._get_dummies_1d": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "enumerate",
    "get_empty_Frame",
    "isinstance",
    "len",
    "numpy.append",
    "numpy.eye",
    "numpy.nan",
    "numpy.ones",
    "numpy.uint8",
    "pandas._libs.sparse.IntIndex",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.core.categorical._factorize_from_iterable",
    "pandas.core.frame.DataFrame",
    "pandas.core.series.Series",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._get_dummies_1d.get_empty_Frame": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.core.frame.DataFrame",
    "pandas.core.series.Series",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._get_na_value": {
  "data": {
   "shadows": "pandas.core.index._get_na_value"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._reshape": {
  "data": {
   "shadows": "pandas._libs.reshape"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._shared_docs": {
  "data": {
   "shadows": "pandas.core.frame._shared_docs"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape._slow_pivot": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "enumerate",
    "pandas.compat.zip",
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._stack_multi_columns": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "_convert_level_number",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.tile",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.core.reshape.reshape.itertools",
    "set",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._stack_multi_columns._convert_level_number": {
  "data": {
   "lineno": 596
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._unstack_frame": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "bool",
    "numpy.empty",
    "pandas.core.frame.DataFrame",
    "pandas.core.internals.BlockManager",
    "pandas.core.internals.make_block",
    "pandas.core.reshape.reshape._Unstacker"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape._unstack_multiple": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.core.series.Series",
    "pandas.core.sorting.compress_group_index",
    "pandas.core.sorting.decons_obs_group_ids",
    "pandas.core.sorting.get_group_index"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.compress_group_index": {
  "data": {
   "shadows": "pandas.core.sorting.compress_group_index"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.concat": {
  "data": {
   "shadows": "pandas.core.reshape.concat.concat"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.decons_obs_group_ids": {
  "data": {
   "shadows": "pandas.core.sorting.decons_obs_group_ids"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.get_compressed_ids": {
  "data": {
   "shadows": "pandas.core.sorting.get_compressed_ids"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.get_dummies": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "check_len",
    "dict",
    "isinstance",
    "itertools.cycle",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.frame.DataFrame",
    "pandas.core.reshape.concat.concat",
    "pandas.core.reshape.reshape._get_dummies_1d",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.get_dummies.check_len": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.get_group_index": {
  "data": {
   "shadows": "pandas.core.sorting.get_group_index"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.lreshape": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.ones",
    "numpy.tile",
    "pandas.compat.iteritems",
    "pandas.compat.zip",
    "pandas.core.dtypes.concat._concat_compat",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.frame.DataFrame",
    "set",
    "set.union"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.make_axis_dummies": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.eye",
    "pandas.core.categorical._factorize_from_iterable",
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.maybe_promote": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_promote"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.melt": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.tile",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame._shared_docs",
    "pandas.core.index.MultiIndex",
    "pandas.util._decorators.Appender",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.pivot": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.pivot_simple": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.core.reshape.reshape.stack": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "factorize",
    "isinstance",
    "list",
    "map",
    "numpy.tile",
    "pandas.compat.zip",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.index.MultiIndex",
    "pandas.core.reshape.reshape._stack_multi_columns",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.stack.factorize": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.core.categorical._factorize_from_iterable"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.stack_multiple": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "int",
    "isinstance",
    "len",
    "pandas.compat.range",
    "pandas.core.reshape.reshape.stack"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.unstack": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.core.reshape.reshape._Unstacker",
    "pandas.core.reshape.reshape._unstack_frame",
    "pandas.core.reshape.reshape._unstack_multiple",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "get_var_names",
    "len",
    "list",
    "map",
    "melt_stub",
    "pandas.compat.zip",
    "pandas.core.dtypes.common.is_list_like",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long.get_var_names": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "pandas.core.reshape.reshape.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long.melt_stub": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "pandas.core.categorical.Categorical",
    "pandas.core.reshape.reshape.melt",
    "pandas.core.reshape.reshape.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.reshape.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.reshape.util": {
  "data": {},
  "type": "module"
 },
 "pandas.core.reshape.util.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.reshape.util._compose2": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.util.cartesian_product": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.cumproduct",
    "numpy.fromiter",
    "numpy.intp",
    "numpy.product",
    "numpy.repeat",
    "numpy.roll",
    "numpy.tile",
    "numpy.zeros_like",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.util.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.reshape.util.compose": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "pandas.compat.reduce",
    "pandas.core.reshape.util._compose2"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.util.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.reshape.util.match": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.reshape.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.reshape.util.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.core.sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.core.sparse.api": {
  "data": {},
  "type": "module"
 },
 "pandas.core.sparse.api.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.core.sparse.api.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.frame.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.core.sparse.api.SparseList": {
  "data": {
   "shadows": "pandas.core.sparse.list.SparseList"
  },
  "type": "import"
 },
 "pandas.core.sparse.api.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.series.SparseSeries"
  },
  "type": "import"
 },
 "pandas.core.sparse.list": {
  "data": {},
  "type": "module"
 },
 "pandas.core.sparse.list.PandasObject": {
  "data": {
   "shadows": "pandas.core.base.PandasObject"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.SparseList": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.sparse.list.SparseList.__getitem__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.core.sparse.list.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__len__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__setitem__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__unicode__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object.__repr__",
    "pandas.io.formats.printing.pprint_thing",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList._consolidate_inplace": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas.core.sparse.array.SparseArray",
    "pandas.core.sparse.list._concat_sparse_indexes"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.append": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.consolidate": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.util._validators.validate_bool_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.copy": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "list",
    "pandas.core.sparse.list.SparseList"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.is_consolidated": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.nchunks": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.to_array": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pandas.core.sparse.list._concat_sparse_indexes": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas._libs.sparse.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.list.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.splib": {
  "data": {
   "shadows": "pandas._libs.sparse"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.validate_bool_kwarg": {
  "data": {
   "shadows": "pandas.util._validators.validate_bool_kwarg"
  },
  "type": "import"
 },
 "pandas.core.sparse.list.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.core.sparse.scipy_sparse.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse._check_is_partition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "set.intersection",
    "set.union"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._coo_to_sparse_series": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.core.series.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._sparse_series_to_coo": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.core.sparse.scipy_sparse._to_ijv"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "get_indexers",
    "pandas.core.sparse.scipy_sparse._check_is_partition",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_get_index_subset_to_coord_dict",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_get_label_to_i_dict",
    "len",
    "list",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.core.series.Series",
    "robust_get_level_values",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict.robust_get_level_values": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_label_to_i_dict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "pandas.compat.OrderedDict",
    "pandas.compat.lmap",
    "pandas.core.index.Index",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.core.sparse.scipy_sparse.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pandas.core.sparse.series": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.ops.add_flex_arithmetic_methods",
    "pandas.core.ops.add_special_arithmetic_methods",
    "pandas.core.ops.series_flex_funcs",
    "pandas.core.ops.series_special_funcs",
    "pandas.core.sparse.series.SparseSeries",
    "pandas.core.sparse.series._arith_method"
   ]
  },
  "type": "module"
 },
 "pandas.core.sparse.series.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.BlockIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.BlockIndex"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.IntIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.InvalidIndexError": {
  "data": {
   "shadows": "pandas.core.index.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.SingleBlockManager": {
  "data": {
   "shadows": "pandas.core.internals.SingleBlockManager"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.SparseSeries": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.core.series.Series"
   ]
  },
  "type": "class"
 },
 "pandas.core.sparse.series.SparseSeries.__array__": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__array_finalize__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__array_wrap__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.errstate",
    "tuple",
    "ufunc"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__getitem__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Ellipsis",
    "Exception",
    "KeyError",
    "TypeError",
    "int",
    "isinstance",
    "numpy.integer",
    "pandas.core.common._values_from_object",
    "pandas.core.index.InvalidIndexError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__getstate__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.ndarray",
    "pandas._libs.sparse.BlockIndex",
    "pandas._libs.sparse.IntIndex",
    "pandas.core.common._default_index",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.generic.NDFrame.__init__",
    "pandas.core.index._ensure_index",
    "pandas.core.internals.SingleBlockManager",
    "pandas.core.series.Series",
    "pandas.core.sparse.array.SparseArray",
    "pandas.core.sparse.array.make_sparse",
    "pandas.core.sparse.series.SparseSeries",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__iter__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__len__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__unicode__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pandas.core.series.Series.__unicode__",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._constructor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.core.sparse.series.SparseSeries",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._constructor_expanddim": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseDataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._get_val_at": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._get_values": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._ixs": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._reduce": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_subtyp": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_values": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.index.convert_scalar",
    "pandas.core.internals.SingleBlockManager",
    "pandas.core.series.Series",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_with_engine": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._unpickle_series_compat": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.ndarray.__setstate__",
    "pandas.core.generic.NDFrame.__init__",
    "pandas.core.internals.SingleBlockManager",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.abs": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.as_sparse_array": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.block": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.combine_first": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.series.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.copy": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.cumsum": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_cumsum"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.density": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.dropna": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.fill_value": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.from_array": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.from_coo": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.sparse.scipy_sparse._coo_to_sparse_series"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get_value": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get_values": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.isnotnull": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.generic._shared_docs",
    "pandas.core.sparse.array.SparseArray",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.isnull": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.generic._shared_docs",
    "pandas.core.sparse.array.SparseArray",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.kind": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.sparse.BlockIndex",
    "pandas._libs.sparse.IntIndex",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.npoints": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.reindex": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.sparse.series.SparseSeries",
    "pandas.core.sparse.series._shared_doc_kwargs",
    "pandas.util._decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.set_value": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.core.internals.SingleBlockManager",
    "pandas.core.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.shape": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.shift": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.generic._shared_docs",
    "pandas.core.sparse.array._make_index",
    "pandas.core.sparse.series._shared_doc_kwargs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sp_index": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sp_values": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sparse_reindex": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas._libs.sparse.SparseIndex",
    "pandas.core.internals.SingleBlockManager"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.take": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_take_with_convert",
    "pandas.core.sparse.array.SparseArray.take"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.to_coo": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "pandas.core.sparse.scipy_sparse._sparse_series_to_coo"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.to_dense": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.series.Series",
    "pandas.core.sparse.series.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.values": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series._arith_method": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.core.sparse.series._arith_method.wrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "numpy.errstate",
    "op",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.frame.DataFrame",
    "pandas.core.series.Series",
    "pandas.core.sparse.series._sparse_series_op",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series._coo_to_sparse_series": {
  "data": {
   "shadows": "pandas.core.sparse.scipy_sparse._coo_to_sparse_series"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._ensure_index": {
  "data": {
   "shadows": "pandas.core.index._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._index": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._make_index": {
  "data": {
   "shadows": "pandas.core.sparse.array._make_index"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._maybe_match_name": {
  "data": {
   "shadows": "pandas.core.common._maybe_match_name"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._shared_doc_kwargs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.core.sparse.series._sparse_array_op": {
  "data": {
   "shadows": "pandas.core.sparse.array._sparse_array_op"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._sparse_series_op": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "op",
    "pandas.core.common._maybe_match_name",
    "pandas.core.sparse.array._sparse_array_op"
   ]
  },
  "type": "function"
 },
 "pandas.core.sparse.series._sparse_series_to_coo": {
  "data": {
   "shadows": "pandas.core.sparse.scipy_sparse._sparse_series_to_coo"
  },
  "type": "import"
 },
 "pandas.core.sparse.series._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.generic": {
  "data": {
   "shadows": "pandas.core.generic"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.make_sparse": {
  "data": {
   "shadows": "pandas.core.sparse.array.make_sparse"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.ops": {
  "data": {
   "shadows": "pandas.core.ops"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.splib": {
  "data": {
   "shadows": "pandas._libs.sparse"
  },
  "type": "import"
 },
 "pandas.core.sparse.series.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.strings": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._cpython_optimized_encoders"
   ]
  },
  "type": "module"
 },
 "pandas.core.strings.ABCIndex": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndex"
  },
  "type": "import"
 },
 "pandas.core.strings.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.strings.AccessorProperty": {
  "data": {
   "shadows": "pandas.core.base.AccessorProperty"
  },
  "type": "import"
 },
 "pandas.core.strings.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.strings.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.strings.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.strings.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.strings.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.core.strings.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.strings.StringAccessorMixin": {
  "data": {
   "lineno": 1893,
   "symbols_in_volume": [
    "object",
    "pandas.core.base.AccessorProperty",
    "pandas.core.strings.StringMethods",
    "str"
   ]
  },
  "type": "class"
 },
 "pandas.core.strings.StringAccessorMixin._dir_additions": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringAccessorMixin._dir_deletions": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringAccessorMixin._make_str_accessor": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.index.Index",
    "pandas.core.strings.StringMethods"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "pandas.compat.u_safe",
    "pandas.core.base.NoNewAttributesMixin",
    "pandas.core.strings._noarg_wrapper",
    "pandas.core.strings._pat_wrapper",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_count",
    "pandas.core.strings.str_endswith",
    "pandas.core.strings.str_findall",
    "pandas.core.strings.str_startswith"
   ]
  },
  "type": "class"
 },
 "pandas.core.strings.StringMethods.__getitem__": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__init__": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__iter__": {
  "data": {
   "lineno": 1390
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "cons",
    "cons_row",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "pandas.core.algorithms.take_1d",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result.cons_row": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.cat": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_cat"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.center": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.contains": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.strings.copy",
    "pandas.core.strings.str_contains"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.decode": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_decode"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.encode": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_encode"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extract": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_extract"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extractall": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_extractall"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.find": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_find",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_get"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get_dummies": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_get_dummies",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.index": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_index",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.join": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_join"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.ljust": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.lstrip": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.match": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.strings.copy",
    "pandas.core.strings.str_match"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.normalize": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "f",
    "pandas.compat.u_safe",
    "pandas.core.strings._na_map",
    "pandas.core.strings.unicodedata"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.pad": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_pad"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.partition": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "pandas.core.strings._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.repeat": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_repeat"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.replace": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_replace"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rfind": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_find",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rindex": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_index",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rjust": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rpartition": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "pandas.core.strings._shared_docs",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rsplit": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_rsplit"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rstrip": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice_replace": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_slice_replace"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.split": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_split"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.strip": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.translate": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_translate"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.wrap": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_wrap"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.zfill": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "pandas.core.strings.str_pad"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._cpython_optimized_decoders": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.core.strings._cpython_optimized_encoders": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.core.strings._get_array_list": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "object",
    "pandas.core.common._values_from_object",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._get_single_group_name": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "IndexError",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun.f": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._length_check": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._map": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "all",
    "f",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.putmask",
    "numpy.uint8",
    "object",
    "pandas._libs.lib.map_infer",
    "pandas._libs.lib.map_infer_mask",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.compat.PY2",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._map.g": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._na_map": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.core.strings._map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "ValueError",
    "f.__name__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper.wrapper": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "f.__doc__",
    "f.__name__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper1": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper2": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper3": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._shared_docs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.core.strings._str_extract_frame": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "groups_or_na",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.strings._groups_or_na_fun",
    "pandas.core.strings.re",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._str_extract_noexpand": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "groups_or_na",
    "isinstance",
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.zip",
    "pandas.core.strings._get_single_group_name",
    "pandas.core.strings._groups_or_na_fun",
    "pandas.core.strings.re",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.strings.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.core.strings.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.strings.copy": {
  "data": {
   "lineno": 1354
  },
  "type": "function"
 },
 "pandas.core.strings.copy.do_copy": {
  "data": {
   "lineno": 1357
  },
  "type": "function"
 },
 "pandas.core.strings.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.core.strings.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.strings.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.is_re": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_re"
  },
  "type": "import"
 },
 "pandas.core.strings.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.strings.is_string_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_string_like"
  },
  "type": "import"
 },
 "pandas.core.strings.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.core.strings.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.strings.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.core.strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.core.strings.str_cat": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.logical_or.reduce",
    "numpy.nan",
    "numpy.putmask",
    "numpy.where",
    "object",
    "pandas.compat.zip",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.core.strings._get_array_list",
    "pandas.core.strings._length_check"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_contains": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_count": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "f",
    "int",
    "len",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_decode": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "decoder",
    "f",
    "pandas.core.strings._cpython_optimized_decoders",
    "pandas.core.strings._na_map",
    "pandas.core.strings.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_encode": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "encoder",
    "f",
    "pandas.core.strings._cpython_optimized_encoders",
    "pandas.core.strings._na_map",
    "pandas.core.strings.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_endswith": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_extract": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "bool",
    "isinstance",
    "pandas.core.strings._str_extract_frame",
    "pandas.core.strings._str_extract_noexpand",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_extractall": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "numpy.NaN",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.dtypes.generic.ABCIndex",
    "pandas.core.strings.re",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_find": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "getattr",
    "int",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_findall": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_get": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_get_dummies": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.int64",
    "pandas._libs.lib.map_infer",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_index": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "getattr",
    "int",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_join": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_match": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_pad": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "isinstance",
    "len",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_repeat": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.asarray",
    "object",
    "pandas._libs.lib.vec_binop",
    "pandas.core.common._values_from_object",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_repeat.rep": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.binary_type.__mul__",
    "pandas.compat.text_type.__mul__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_replace": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "f",
    "len",
    "pandas.core.dtypes.common.is_re",
    "pandas.core.dtypes.common.is_string_like",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_rsplit": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace.f": {
  "data": {
   "lineno": 1110
  },
  "type": "function"
 },
 "pandas.core.strings.str_split": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "f",
    "len",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_startswith": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_strip": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_translate": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.compat.PY3",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_wrap": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "pandas.core.strings._na_map",
    "pandas.core.strings.textwrap"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.core.strings.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pandas.core.strings.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "pandas.core.strings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.strings.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.tools": {
  "data": {},
  "type": "module"
 },
 "pandas.core.tools.numeric": {
  "data": {},
  "type": "module"
 },
 "pandas.core.tools.numeric.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndexClass"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.is_datetime_or_timedelta_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.is_decimal": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_decimal"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.is_number": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_number"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.is_numeric_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_numeric_dtype"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.maybe_downcast_to_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_downcast_to_dtype"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.tools.numeric.to_numeric": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "float",
    "getattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int64",
    "numpy.min",
    "numpy.typecodes",
    "pandas.Index",
    "pandas.Series",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
    "pandas.core.dtypes.common.is_decimal",
    "pandas.core.dtypes.common.is_number",
    "pandas.core.dtypes.common.is_numeric_dtype",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.tools.timedeltas": {
  "data": {},
  "type": "module"
 },
 "pandas.core.tools.timedeltas.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndexClass"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "pandas.NaT",
    "pandas._libs.tslib.Timedelta",
    "pandas._libs.tslib.convert_to_timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.core.tools.timedeltas._convert_listlike": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas._libs.tslib.array_to_timedelta64",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.tools.timedeltas._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas._unit_map": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pandas.core.tools.timedeltas._validate_timedelta_unit": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.tools.timedeltas._unit_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.tools.timedeltas.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.tools.timedeltas.to_timedelta": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr",
    "isinstance",
    "pandas.Series",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.core.tools.timedeltas._convert_listlike",
    "pandas.core.tools.timedeltas._validate_timedelta_unit"
   ]
  },
  "type": "function"
 },
 "pandas.core.tools.timedeltas.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.core.util": {
  "data": {},
  "type": "module"
 },
 "pandas.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.errors": {
  "data": {},
  "type": "module"
 },
 "pandas.errors.DtypeWarning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.errors.EmptyDataError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.errors.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas._libs.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "pandas.errors.ParserError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.errors.ParserWarning": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.errors.PerformanceWarning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.errors.UnsortedIndexError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "class"
 },
 "pandas.errors.UnsupportedFunctionCall": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.formats": {
  "data": {},
  "type": "module"
 },
 "pandas.formats.style": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.formats.style.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.formats.style.Styler": {
  "data": {
   "shadows": "pandas.io.formats.style.Styler"
  },
  "type": "import"
 },
 "pandas.formats.style.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.hard_dependencies": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.io": {
  "data": {},
  "type": "module"
 },
 "pandas.io.api": {
  "data": {},
  "type": "module"
 },
 "pandas.io.api.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.io.api.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.io.api.HDFStore": {
  "data": {
   "shadows": "pandas.io.pytables.HDFStore"
  },
  "type": "import"
 },
 "pandas.io.api.Term": {
  "data": {
   "shadows": "pandas.io.pytables.Term",
   "symbols_in_volume": [
    "pandas.io.pytables.Term"
   ]
  },
  "type": "import"
 },
 "pandas.io.api.get_store": {
  "data": {
   "shadows": "pandas.io.pytables.get_store"
  },
  "type": "import"
 },
 "pandas.io.api.read_clipboard": {
  "data": {
   "shadows": "pandas.io.clipboards.read_clipboard"
  },
  "type": "import"
 },
 "pandas.io.api.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.api.read_excel": {
  "data": {
   "shadows": "pandas.io.excel.read_excel"
  },
  "type": "import"
 },
 "pandas.io.api.read_feather": {
  "data": {
   "shadows": "pandas.io.feather_format.read_feather"
  },
  "type": "import"
 },
 "pandas.io.api.read_fwf": {
  "data": {
   "shadows": "pandas.io.parsers.read_fwf"
  },
  "type": "import"
 },
 "pandas.io.api.read_gbq": {
  "data": {
   "shadows": "pandas.io.gbq.read_gbq"
  },
  "type": "import"
 },
 "pandas.io.api.read_hdf": {
  "data": {
   "shadows": "pandas.io.pytables.read_hdf"
  },
  "type": "import"
 },
 "pandas.io.api.read_html": {
  "data": {
   "shadows": "pandas.io.html.read_html"
  },
  "type": "import"
 },
 "pandas.io.api.read_json": {
  "data": {
   "shadows": "pandas.io.json.read_json"
  },
  "type": "import"
 },
 "pandas.io.api.read_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.read_msgpack"
  },
  "type": "import"
 },
 "pandas.io.api.read_pickle": {
  "data": {
   "shadows": "pandas.io.pickle.read_pickle"
  },
  "type": "import"
 },
 "pandas.io.api.read_sas": {
  "data": {
   "shadows": "pandas.io.sas.read_sas"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql": {
  "data": {
   "shadows": "pandas.io.sql.read_sql"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql_query": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_query"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql_table": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_table"
  },
  "type": "import"
 },
 "pandas.io.api.read_stata": {
  "data": {
   "shadows": "pandas.io.stata.read_stata"
  },
  "type": "import"
 },
 "pandas.io.api.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.api.to_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.to_msgpack"
  },
  "type": "import"
 },
 "pandas.io.api.to_pickle": {
  "data": {
   "shadows": "pandas.io.pickle.to_pickle"
  },
  "type": "import"
 },
 "pandas.io.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.clipboard": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.clipboard.determine_clipboard",
    "pandas.io.clipboard.os",
    "pandas.io.clipboard.platform"
   ]
  },
  "type": "module"
 },
 "pandas.io.clipboard.CHECK_CMD": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.io.clipboard.HAS_DISPLAY": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.io.clipboard.PyQt4": {
  "data": {
   "shadows": "PyQt4"
  },
  "type": "import"
 },
 "pandas.io.clipboard.__all__": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "pandas.io.clipboard.__version__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.clipboard._executable_exists": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.io.clipboard.CHECK_CMD",
    "pandas.io.clipboard.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboard_get": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pandas.io.clipboard.clipboard_set": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "pandas.io.clipboard.clipboards": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.PY2",
    "pandas.io.clipboard.clipboards.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "pandas.io.clipboard.clipboards.EXCEPT_MSG": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pandas.io.clipboard.clipboards.PY2": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.io.clipboard.clipboards.QApplication": {
  "data": {
   "shadows": "PyQt4.QtGui.QApplication"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboards.gtk": {
  "data": {
   "shadows": "gtk"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard.copy_gtk": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.gtk"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard.paste_gtk": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.gtk"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard.copy_klipper": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard.paste_klipper": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len",
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ClipboardUnavailable"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object",
    "pandas.io.clipboard.clipboards.PY2"
   ]
  },
  "type": "class"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__bool__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "PyperclipException",
    "pandas.io.clipboard.clipboards.EXCEPT_MSG"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__nonzero__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard.copy_osx": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard.paste_osx": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "PyQt4.QtGui.QApplication",
    "PyQt4.QtGui.QApplication.instance"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard.copy_qt": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard.paste_qt": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard.copy_xclip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard.paste_xclip": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard.copy_xsel": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard.paste_xsel": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboards.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboards.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboards.text_type": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.io.clipboard.determine_clipboard": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ImportError",
    "init_gtk_clipboard",
    "init_klipper_clipboard",
    "init_no_clipboard",
    "init_osx_clipboard",
    "init_qt_clipboard",
    "init_windows_clipboard",
    "init_xclip_clipboard",
    "init_xsel_clipboard",
    "pandas.io.clipboard.HAS_DISPLAY",
    "pandas.io.clipboard._executable_exists",
    "pandas.io.clipboard.os",
    "pandas.io.clipboard.platform"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.exceptions": {
  "data": {},
  "type": "module"
 },
 "pandas.io.clipboard.exceptions.PyperclipException": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pandas.io.clipboard.exceptions.PyperclipWindowsException": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.io.clipboard.exceptions.PyperclipException"
   ]
  },
  "type": "class"
 },
 "pandas.io.clipboard.exceptions.PyperclipWindowsException.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.io.clipboard.exceptions.PyperclipWindowsException",
    "pandas.io.clipboard.exceptions.ctypes",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.exceptions.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pandas.io.clipboard.gtk": {
  "data": {
   "shadows": "gtk"
  },
  "type": "import"
 },
 "pandas.io.clipboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.clipboard.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.clipboard.set_clipboard": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "init_gtk_clipboard",
    "init_klipper_clipboard",
    "init_no_clipboard",
    "init_osx_clipboard",
    "init_qt_clipboard",
    "init_windows_clipboard",
    "init_xclip_clipboard",
    "init_xsel_clipboard"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows": {
  "data": {},
  "type": "module"
 },
 "pandas.io.clipboard.windows.BOOL": {
  "data": {
   "shadows": "ctypes.wintypes.BOOL"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.CheckedCall": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.clipboard.windows.CheckedCall.__call__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "PyperclipWindowsException",
    "ctypes.get_errno"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.CheckedCall.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.io.clipboard.windows.CheckedCall",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.CheckedCall.__setattr__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.DWORD": {
  "data": {
   "shadows": "ctypes.wintypes.DWORD"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.HANDLE": {
  "data": {
   "shadows": "ctypes.wintypes.HANDLE"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.HGLOBAL": {
  "data": {
   "shadows": "ctypes.wintypes.HGLOBAL"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.HINSTANCE": {
  "data": {
   "shadows": "ctypes.wintypes.HINSTANCE"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.HMENU": {
  "data": {
   "shadows": "ctypes.wintypes.HMENU"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.HWND": {
  "data": {
   "shadows": "ctypes.wintypes.HWND"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.INT": {
  "data": {
   "shadows": "ctypes.wintypes.INT"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.LPCSTR": {
  "data": {
   "shadows": "ctypes.wintypes.LPCSTR"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.LPVOID": {
  "data": {
   "shadows": "ctypes.wintypes.LPVOID"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.UINT": {
  "data": {
   "shadows": "ctypes.wintypes.UINT"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.c_size_t": {
  "data": {
   "shadows": "ctypes.c_size_t"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.c_wchar": {
  "data": {
   "shadows": "ctypes.c_wchar"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.c_wchar_p": {
  "data": {
   "shadows": "ctypes.c_wchar_p"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.get_errno": {
  "data": {
   "shadows": "ctypes.get_errno"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ctypes.c_size_t",
    "ctypes.wintypes.BOOL",
    "ctypes.wintypes.DWORD",
    "ctypes.wintypes.HANDLE",
    "ctypes.wintypes.HGLOBAL",
    "ctypes.wintypes.HINSTANCE",
    "ctypes.wintypes.HMENU",
    "ctypes.wintypes.HWND",
    "ctypes.wintypes.INT",
    "ctypes.wintypes.LPCSTR",
    "ctypes.wintypes.LPVOID",
    "ctypes.wintypes.UINT",
    "pandas.io.clipboard.windows.CheckedCall",
    "pandas.io.clipboard.windows.ctypes"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.clipboard": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "OpenClipboard",
    "PyperclipWindowsException",
    "pandas.io.clipboard.windows.contextlib",
    "pandas.io.clipboard.windows.time",
    "safeCloseClipboard"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.copy_windows": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "clipboard",
    "ctypes.c_wchar",
    "ctypes.c_wchar_p",
    "ctypes.sizeof",
    "len",
    "pandas.io.clipboard.windows.ctypes",
    "safeEmptyClipboard",
    "safeGlobalAlloc",
    "safeGlobalLock",
    "safeGlobalUnlock",
    "safeSetClipboardData",
    "window"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.paste_windows": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "clipboard",
    "ctypes.c_wchar_p",
    "safeGetClipboardData"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.window": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.io.clipboard.windows.contextlib",
    "safeCreateWindowExA",
    "safeDestroyWindow"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.windows.sizeof": {
  "data": {
   "shadows": "ctypes.sizeof"
  },
  "type": "import"
 },
 "pandas.io.clipboard.windows.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pandas.io.clipboards": {
  "data": {},
  "type": "module"
 },
 "pandas.io.clipboards.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.clipboards.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.io.clipboards.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.clipboards.clipboard_get": {
  "data": {
   "shadows": "pandas.io.clipboard.clipboard_get"
  },
  "type": "import"
 },
 "pandas.io.clipboards.clipboard_set": {
  "data": {
   "shadows": "pandas.io.clipboard.clipboard_set"
  },
  "type": "import"
 },
 "pandas.io.clipboards.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.clipboards.get_option": {
  "data": {
   "shadows": "pandas.get_option"
  },
  "type": "import"
 },
 "pandas.io.clipboards.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.io.clipboards.read_clipboard": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.bytes_to_str",
    "pandas.get_option",
    "pandas.io.clipboard.clipboard_get",
    "pandas.io.parsers.read_table",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboards.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.clipboards.to_clipboard": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.compat.StringIO",
    "pandas.io.clipboard.clipboard_set",
    "pandas.option_context",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.errors.ParserError",
    "pandas.io.common.BaseIterator",
    "pandas.io.common.MMapWrapper",
    "pandas.io.common._VALID_URLS",
    "s3fs.S3File",
    "set",
    "urllib.request.urlopen",
    "urlparse.uses_netloc",
    "urlparse.uses_params",
    "urlparse.uses_relative"
   ]
  },
  "type": "module"
 },
 "pandas.io.common.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.common.BaseIterator": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.BaseIterator.__iter__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.io.common.BaseIterator.__next__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.common.CParserError": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.common.DtypeWarning": {
  "data": {
   "shadows": "pandas.errors.DtypeWarning"
  },
  "type": "import"
 },
 "pandas.io.common.EmptyDataError": {
  "data": {
   "shadows": "pandas.errors.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.common.HTTPException": {
  "data": {
   "shadows": "httplib.HTTPException"
  },
  "type": "import"
 },
 "pandas.io.common.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.io.common.MMapWrapper": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.MMapWrapper.__getattr__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__init__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pandas.io.common.mmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__iter__": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__next__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.compat.PY3",
    "pandas.compat.bytes_to_str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.io.common.ParserWarning": {
  "data": {
   "shadows": "pandas.errors.ParserWarning"
  },
  "type": "import"
 },
 "pandas.io.common.S3File": {
  "data": {
   "shadows": "s3fs.S3File"
  },
  "type": "import"
 },
 "pandas.io.common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.common.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.io.common.URLError": {
  "data": {
   "shadows": "urllib2.URLError"
  },
  "type": "import"
 },
 "pandas.io.common.UTF8Recoder": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.UTF8Recoder.__init__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "pandas.io.common.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.next": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.read": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.readline": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeReader": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.UnicodeReader.__init__": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pandas.io.common.UTF8Recoder",
    "pandas.io.common.csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeReader.__next__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "next",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter": {
  "data": {
   "lineno": 501
  },
  "type": "class"
 },
 "pandas.io.common.UnicodeWriter.__init__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.common.codecs",
    "pandas.io.common.csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "_check_as_is",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow._check_as_is": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.common.is_number",
    "pandas.io.common.csv",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "_check_as_is",
    "enumerate",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows._check_as_is": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.common.is_number",
    "pandas.io.common.csv",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._NA_VALUES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.common._PATHLIB_INSTALLED": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.io.common._PY_PATH_INSTALLED": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.io.common._VALID_URLS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.io.common._compression_to_extension": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "pandas.io.common._expand_user": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.common.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._get_handle": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "hasattr",
    "io.TextIOWrapper",
    "isinstance",
    "len",
    "list",
    "open",
    "pandas.compat.PY2",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.import_lzma",
    "pandas.compat.string_types",
    "pandas.io.common.MMapWrapper",
    "pandas.io.common._stringify_path",
    "pandas.io.common.bz2",
    "pandas.io.common.gzip",
    "pandas.io.common.need_text_wrapping",
    "pandas.io.common.zipfile"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._infer_compression": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.common._compression_to_extension",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._is_s3_url": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._is_url": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.io.common._VALID_URLS",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._stringify_path": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.text_type",
    "pandas.io.common._PATHLIB_INSTALLED",
    "pandas.io.common._PY_PATH_INSTALLED",
    "pandas.io.common.pathlib",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._urlopen": {
  "data": {
   "shadows": "urllib2.urlopen"
  },
  "type": "import"
 },
 "pandas.io.common._validate_header_arg": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.io.common.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pandas.io.common.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.io.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.common.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.io.common.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.io.common.file_path_to_url": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "urllib.pathname2url",
    "urlparse.urljoin"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.get_filepath_or_buffer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.compat.BytesIO",
    "pandas.compat.binary_type",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_file_like",
    "pandas.io.common._expand_user",
    "pandas.io.common._is_s3_url",
    "pandas.io.common._is_url",
    "pandas.io.common._stringify_path",
    "pandas.io.common.mmap",
    "pandas.io.s3.get_filepath_or_buffer",
    "str",
    "type",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.io.common.is_file_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_file_like"
  },
  "type": "import"
 },
 "pandas.io.common.is_number": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_number"
  },
  "type": "import"
 },
 "pandas.io.common.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "pandas.io.common.need_text_wrapping": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.common.parse_url": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "pandas.io.common.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pandas.io.common.pathname2url": {
  "data": {
   "shadows": "urllib.pathname2url"
  },
  "type": "import"
 },
 "pandas.io.common.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.common.s3": {
  "data": {
   "shadows": "pandas.io.s3"
  },
  "type": "import"
 },
 "pandas.io.common.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.common.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.io.common.urlencode": {
  "data": {
   "shadows": "urllib.urlencode"
  },
  "type": "import"
 },
 "pandas.io.common.urljoin": {
  "data": {
   "shadows": "urlparse.urljoin"
  },
  "type": "import"
 },
 "pandas.io.common.urlopen": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "contextlib.closing",
    "contextlib.contextmanager",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.uses_netloc": {
  "data": {
   "shadows": "urlparse.uses_netloc"
  },
  "type": "import"
 },
 "pandas.io.common.uses_params": {
  "data": {
   "shadows": "urlparse.uses_params"
  },
  "type": "import"
 },
 "pandas.io.common.uses_relative": {
  "data": {
   "shadows": "urlparse.uses_relative"
  },
  "type": "import"
 },
 "pandas.io.common.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.io.common.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.io.data": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.io.excel": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.common._NA_VALUES",
    "pandas.io.excel._Openpyxl1Writer",
    "pandas.io.excel._Openpyxl20Writer",
    "pandas.io.excel._Openpyxl22Writer",
    "pandas.io.excel._OpenpyxlWriter",
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel._XlwtWriter",
    "pandas.io.excel.register_writer",
    "sorted",
    "textwrap.fill"
   ]
  },
  "type": "module"
 },
 "pandas.io.excel.Alignment": {
  "data": {
   "shadows": "openpyxl.styles.Alignment"
  },
  "type": "import"
 },
 "pandas.io.excel.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.excel.Border": {
  "data": {
   "shadows": "openpyxl.styles.Border"
  },
  "type": "import"
 },
 "pandas.io.excel.Color": {
  "data": {
   "shadows": "openpyxl.styles.Color"
  },
  "type": "import"
 },
 "pandas.io.excel.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.excel.EmptyDataError": {
  "data": {
   "shadows": "pandas.errors.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.excel.ExcelFile": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel.ExcelFile.__enter__": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__exit__": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "pandas.compat.map",
    "pandas.compat.string_types",
    "pandas.io.common._is_url",
    "pandas.io.common._urlopen",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.xlrd",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "_parse_cell",
    "distutils.version.LooseVersion",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "pandas.compat.OrderedDict",
    "pandas.compat.OrderedDict.fromkeys",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.frame.DataFrame",
    "pandas.errors.EmptyDataError",
    "pandas.io.common._validate_header_arg",
    "pandas.io.excel._fill_mi_header",
    "pandas.io.excel._pop_header_name",
    "pandas.io.excel._trim_excel_header",
    "pandas.io.excel.xlrd",
    "pandas.io.parsers.TextParser",
    "print",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel._parse_cell": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "OverflowError",
    "bool",
    "datetime.MINYEAR",
    "datetime.datetime",
    "datetime.time",
    "int",
    "numpy.nan",
    "xlrd.XL_CELL_BOOLEAN",
    "xlrd.XL_CELL_DATE",
    "xlrd.XL_CELL_ERROR",
    "xlrd.XL_CELL_NUMBER",
    "xlrd.xldate.XLDateTooLarge",
    "xlrd.xldate.xldate_as_datetime",
    "xlrd.xldate.xldate_as_tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "_range2cols",
    "int",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "_excel2num",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols._excel2num": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ord",
    "pandas.compat.reduce"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.close": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.parse": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.sheet_names": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "object",
    "pandas.compat.add_metaclass",
    "pandas.io.excel.abc"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel.ExcelWriter.__enter__": {
  "data": {
   "lineno": 782
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__exit__": {
  "data": {
   "lineno": 785
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__init__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__new__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "issubclass",
    "object.__new__",
    "pandas.compat.string_types",
    "pandas.core.config.get_option",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.get_writer",
    "pandas.io.excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter._get_sheet_name": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.check_extension": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "classmethod",
    "pandas.compat.u",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.close": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.engine": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.save": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.supported_extensions": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.write_cells": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.Font": {
  "data": {
   "shadows": "openpyxl.styles.Font"
  },
  "type": "import"
 },
 "pandas.io.excel.GradientFill": {
  "data": {
   "shadows": "openpyxl.styles.GradientFill"
  },
  "type": "import"
 },
 "pandas.io.excel.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.excel.MINYEAR": {
  "data": {
   "shadows": "datetime.MINYEAR"
  },
  "type": "import"
 },
 "pandas.io.excel.NumberFormat": {
  "data": {
   "shadows": "openpyxl.styles.NumberFormat"
  },
  "type": "import"
 },
 "pandas.io.excel.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.io.excel.PatternFill": {
  "data": {
   "shadows": "openpyxl.styles.PatternFill"
  },
  "type": "import"
 },
 "pandas.io.excel.Period": {
  "data": {
   "shadows": "pandas.core.indexes.period.Period"
  },
  "type": "import"
 },
 "pandas.io.excel.Protection": {
  "data": {
   "shadows": "openpyxl.styles.Protection"
  },
  "type": "import"
 },
 "pandas.io.excel.Side": {
  "data": {
   "shadows": "openpyxl.styles.Side"
  },
  "type": "import"
 },
 "pandas.io.excel.Style": {
  "data": {
   "shadows": "openpyxl.style.Style"
  },
  "type": "import"
 },
 "pandas.io.excel.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.io.excel.Workbook": {
  "data": {
   "shadows": "openpyxl.workbook.Workbook"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_BOOLEAN": {
  "data": {
   "shadows": "xlrd.XL_CELL_BOOLEAN"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_DATE": {
  "data": {
   "shadows": "xlrd.XL_CELL_DATE"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_ERROR": {
  "data": {
   "shadows": "xlrd.XL_CELL_ERROR"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_NUMBER": {
  "data": {
   "shadows": "xlrd.XL_CELL_NUMBER"
  },
  "type": "import"
 },
 "pandas.io.excel._NA_VALUES": {
  "data": {
   "shadows": "pandas.io.common._NA_VALUES"
  },
  "type": "import"
 },
 "pandas.io.excel._Openpyxl1Writer": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl1Writer.__init__": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "openpyxl.workbook.Workbook",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel._Openpyxl1Writer",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer._convert_to_style": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.style.Style"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.save": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.write_cells": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "openpyxl.cell.get_column_letter",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.io.excel._conv_value"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl1Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_alignment": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Alignment"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_border": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Border"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_color": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "openpyxl.styles.Color",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_fill": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "openpyxl.styles.GradientFill",
    "openpyxl.styles.PatternFill"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_font": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Font"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_number_format": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.NumberFormat"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_protection": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Protection"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_side": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "openpyxl.styles.Side",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_stop": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "classmethod",
    "pandas.compat.map"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "_conv_to_x",
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer.write_cells": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "openpyxl.cell.get_column_letter",
    "pandas.compat.range",
    "pandas.io.excel._conv_value"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl22Writer": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl20Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl22Writer.write_cells": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.excel._conv_value",
    "pandas.io.excel._validate_freeze_panes",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._OpenpyxlWriter": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl1Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter.__init__": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel.xlsxwriter",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter._convert_to_style": {
  "data": {
   "lineno": 1602
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.save": {
  "data": {
   "lineno": 1549
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.write_cells": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "pandas._libs.json.dumps",
    "pandas.io.excel._conv_value",
    "pandas.io.excel._validate_freeze_panes"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlwtWriter.__init__": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "pandas.io.excel._XlwtWriter",
    "pandas.io.excel.xlwt",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._convert_to_style": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.excel.xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._style_to_xlwt": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.save": {
  "data": {
   "lineno": 1419
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.write_cells": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "pandas._libs.json.dumps",
    "pandas.io.excel._conv_value",
    "pandas.io.excel._validate_freeze_panes"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.io.excel._conv_value": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "pandas.core.dtypes.common.is_bool",
    "pandas.core.dtypes.common.is_float",
    "pandas.core.dtypes.common.is_integer",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.indexes.period.Period",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._fill_mi_header": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._is_url": {
  "data": {
   "shadows": "pandas.io.common._is_url"
  },
  "type": "import"
 },
 "pandas.io.excel._pop_header_name": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "max",
    "none_fill",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._read_excel_doc": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.io.excel._trim_excel_header": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._urlopen": {
  "data": {
   "shadows": "pandas.io.common._urlopen"
  },
  "type": "import"
 },
 "pandas.io.excel._validate_freeze_panes": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._validate_header_arg": {
  "data": {
   "shadows": "pandas.io.common._validate_header_arg"
  },
  "type": "import"
 },
 "pandas.io.excel._writer_extensions": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.io.excel._writers": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.io.excel.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "pandas.io.excel.add_metaclass": {
  "data": {
   "shadows": "pandas.compat.add_metaclass"
  },
  "type": "import"
 },
 "pandas.io.excel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.excel.config": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.io.excel.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.excel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.excel.fill": {
  "data": {
   "shadows": "textwrap.fill"
  },
  "type": "import"
 },
 "pandas.io.excel.get_column_letter": {
  "data": {
   "shadows": "openpyxl.cell.get_column_letter"
  },
  "type": "import"
 },
 "pandas.io.excel.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.excel.get_writer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "ValueError",
    "distutils.version.LooseVersion",
    "pandas.io.excel._writers",
    "pandas.io.excel.openpyxl"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.is_bool": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool"
  },
  "type": "import"
 },
 "pandas.io.excel.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.io.excel.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.io.excel.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.io.excel.json": {
  "data": {
   "shadows": "pandas._libs.json"
  },
  "type": "import"
 },
 "pandas.io.excel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.excel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.io.excel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.excel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.io.excel.openpyxl_compat": {
  "data": {
   "shadows": "pandas.compat.openpyxl_compat"
  },
  "type": "import"
 },
 "pandas.io.excel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.excel.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.excel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.excel.read_excel": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "isinstance",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel._read_excel_doc",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.io.excel.register_writer": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.callable",
    "pandas.core.config.register_option",
    "pandas.io.excel._writer_extensions",
    "pandas.io.excel._writers",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.excel.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.io.excel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.excel.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandas.io.excel.xldate": {
  "data": {
   "shadows": "xlrd.xldate"
  },
  "type": "import"
 },
 "pandas.io.excel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.io.excel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.io.excel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.io.excel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.feather_format": {
  "data": {},
  "type": "module"
 },
 "pandas.io.feather_format.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.feather_format.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.io.feather_format.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.feather_format.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.io.feather_format._try_import": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.io.feather_format.feather"
   ]
  },
  "type": "function"
 },
 "pandas.io.feather_format.feather": {
  "data": {
   "shadows": "feather"
  },
  "type": "import"
 },
 "pandas.io.feather_format.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.feather_format.read_feather": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.io.feather_format._try_import",
    "pandas.io.feather_format.feather"
   ]
  },
  "type": "function"
 },
 "pandas.io.feather_format.to_feather": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Int64Index",
    "pandas.RangeIndex.from_range",
    "pandas.compat.range",
    "pandas.io.feather_format._try_import",
    "pandas.io.feather_format.feather",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats": {
  "data": {},
  "type": "module"
 },
 "pandas.io.formats.common": {
  "data": {},
  "type": "module"
 },
 "pandas.io.formats.common.get_level_lengths": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.console": {
  "data": {},
  "type": "module"
 },
 "pandas.io.formats.console._initial_defencoding": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.io.formats.console.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.formats.console.detect_console_encoding": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "pandas.io.formats.console._initial_defencoding",
    "pandas.io.formats.console.locale",
    "pandas.io.formats.console.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.console.get_console_size": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.core.common.in_interactive_session",
    "pandas.core.common.in_ipython_frontend",
    "pandas.core.config.get_default_val",
    "pandas.get_option",
    "pandas.io.formats.terminal.get_terminal_size"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.console.get_default_val": {
  "data": {
   "shadows": "pandas.core.config.get_default_val"
  },
  "type": "import"
 },
 "pandas.io.formats.console.get_option": {
  "data": {
   "shadows": "pandas.get_option"
  },
  "type": "import"
 },
 "pandas.io.formats.console.get_terminal_size": {
  "data": {
   "shadows": "pandas.io.formats.terminal.get_terminal_size"
  },
  "type": "import"
 },
 "pandas.io.formats.console.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pandas.io.formats.console.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.formats.css": {
  "data": {},
  "type": "module"
 },
 "pandas.io.formats.css.CSSResolver": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_side_expander",
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.css.CSSResolver.__call__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "float",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver._side_expander": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "expand"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver._side_expander.expand": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.io.formats.css.CSSWarning",
    "pandas.io.formats.css.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.atomize": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "AttributeError",
    "expand",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.parse": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSWarning",
    "pandas.io.formats.css.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.size_to_pt": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "_error",
    "float",
    "int",
    "pandas.io.formats.css.re",
    "round"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.size_to_pt._error": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSWarning",
    "pandas.io.formats.css.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.css.CSSWarning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.css.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.formats.css.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.formats.excel": {
  "data": {},
  "type": "module"
 },
 "pandas.io.formats.excel.CSSResolver": {
  "data": {
   "shadows": "pandas.io.formats.css.CSSResolver"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.CSSToExcelConverter": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object",
    "pandas.io.formats.css.CSSResolver"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.__call__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter._border_style": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_alignment": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_border": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_fill": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_font": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bool",
    "float",
    "pandas.io.formats.excel.re"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_xlstyle": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "remove_none"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_xlstyle.remove_none": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "remove_none"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.color_to_excel": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.io.formats.css.CSSWarning",
    "pandas.io.formats.excel.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.CSSWarning": {
  "data": {
   "shadows": "pandas.io.formats.css.CSSWarning"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.ExcelCell": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.excel.ExcelCell.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.excel.ExcelFormatter.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "hasattr",
    "pandas.io.formats.excel.CSSToExcelConverter"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_body": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "map",
    "pandas.MultiIndex",
    "pandas.compat.reduce",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.io.formats.excel.header_style",
    "pandas.io.formats.excel.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header_mi": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.io.formats.common.get_level_lengths",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.io.formats.excel.header_style",
    "pandas.io.formats.printing.pprint_thing",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header_regular": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.io.formats.excel.header_style",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_hierarchical_rows": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.io.formats.common.get_level_lengths",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.io.formats.excel.header_style",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_regular_rows": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.io.formats.excel.header_style",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_value": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "float",
    "pandas._libs.lib.checknull",
    "pandas._libs.lib.isneginf_scalar",
    "pandas._libs.lib.isposinf_scalar",
    "pandas.core.dtypes.common.is_float"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._generate_body": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas.io.formats.excel.ExcelCell",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter.get_formatted_cells": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pandas.io.formats.excel.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter.write": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.get_level_lengths": {
  "data": {
   "shadows": "pandas.io.formats.common.get_level_lengths"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.header_style": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.formats.excel.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.formats.excel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.formats.style": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.formats.style.msg"
   ]
  },
  "type": "module"
 },
 "pandas.io.formats.style.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.formats.style.ChoiceLoader": {
  "data": {
   "shadows": "jinja2.ChoiceLoader"
  },
  "type": "import"
 },
 "pandas.io.formats.style.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "pandas.io.formats.style.ExcelFormatter": {
  "data": {
   "shadows": "pandas.io.formats.excel.ExcelFormatter"
  },
  "type": "import"
 },
 "pandas.io.formats.style.FileSystemLoader": {
  "data": {
   "shadows": "jinja2.FileSystemLoader"
  },
  "type": "import"
 },
 "pandas.io.formats.style.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "pandas.io.formats.style.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "pandas.io.formats.style.Styler": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "jinja2.Environment",
    "jinja2.PackageLoader",
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.style.Styler.__copy__": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__deepcopy__": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.defaultdict",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__init__.default_display_func": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_float"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._apply": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "func",
    "isinstance",
    "pandas.DataFrame",
    "pandas.core.indexing._non_reducing_slice",
    "pandas.io.formats.style.msg",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._applymap": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "pandas.IndexSlice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._background_gradient": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "matplotlib.colors",
    "matplotlib.colors.Normalize",
    "matplotlib.colors.rgb2hex",
    "matplotlib.pyplot",
    "matplotlib.pyplot.cm.get_cmap",
    "norm",
    "pandas.io.formats.style.Styler",
    "pandas.io.formats.style._mpl",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_center_mid": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_center_zero": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "abs",
    "max",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_left": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._compute": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._copy": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler",
    "pandas.io.formats.style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_extrema": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_handler": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_null": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pandas.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._repr_html_": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._translate": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "all",
    "dict",
    "enumerate",
    "format_attr",
    "formatter",
    "len",
    "list",
    "pandas.compat.range",
    "pandas.io.formats.style._get_level_lengths",
    "pandas.io.formats.style._is_visible",
    "str",
    "uuid.uuid1",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._translate.format_attr": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler._update_ctx": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.apply": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.applymap": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.background_gradient": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.bar": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.api.types.is_list_like",
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice",
    "pandas.io.formats.style.msg"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.clear": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.export": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.format": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "formatter",
    "formatter.items",
    "isinstance",
    "itertools.product",
    "len",
    "pandas.compat.range",
    "pandas.core.indexing._non_reducing_slice",
    "pandas.io.formats.style._maybe_wrap_formatter"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.from_custom_template": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "classmethod",
    "jinja2.ChoiceLoader",
    "jinja2.FileSystemLoader"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.from_custom_template.MyStyler": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "jinja2.Environment"
   ]
  },
  "type": "class"
 },
 "pandas.io.formats.style.Styler.highlight_max": {
  "data": {
   "lineno": 1046
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.highlight_min": {
  "data": {
   "lineno": 1068
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.highlight_null": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.render": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_caption": {
  "data": {
   "lineno": 720
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_precision": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_properties": {
  "data": {
   "lineno": 844
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_table_attributes": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_table_styles": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_uuid": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.to_excel": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict",
    "pandas.core.generic._shared_docs",
    "pandas.io.formats.excel.ExcelFormatter",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style.Styler.use": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "pandas.io.formats.style._get_level_lengths": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "enumerate",
    "pandas.core.common.sentinel_factory",
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style._is_visible": {
  "data": {
   "lineno": 1145
  },
  "type": "function"
 },
 "pandas.io.formats.style._maybe_numeric_slice": {
  "data": {
   "shadows": "pandas.core.indexing._maybe_numeric_slice"
  },
  "type": "import"
 },
 "pandas.io.formats.style._maybe_wrap_formatter": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "formatter",
    "formatter.format",
    "pandas.core.dtypes.common.is_string_like",
    "pandas.io.formats.style.msg"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style._mpl": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "contextlib.contextmanager",
    "matplotlib.colors",
    "matplotlib.pyplot",
    "pandas.io.formats.style.has_mpl",
    "pandas.io.formats.style.no_mpl_message"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.style._non_reducing_slice": {
  "data": {
   "shadows": "pandas.core.indexing._non_reducing_slice"
  },
  "type": "import"
 },
 "pandas.io.formats.style._shared_docs": {
  "data": {
   "shadows": "pandas.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas.io.formats.style.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandas.io.formats.style.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.formats.style.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.io.formats.style.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.io.formats.style.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.io.formats.style.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.io.formats.style.has_mpl": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.io.formats.style.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.io.formats.style.is_list_like": {
  "data": {
   "shadows": "pandas.api.types.is_list_like"
  },
  "type": "import"
 },
 "pandas.io.formats.style.is_string_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_string_like"
  },
  "type": "import"
 },
 "pandas.io.formats.style.msg": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.formats.style.no_mpl_message": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.io.formats.style.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.formats.style.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.io.formats.style.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.formats.style.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.io.formats.style.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.io.formats.style.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.formats.style.uuid1": {
  "data": {
   "shadows": "uuid.uuid1"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.formats.terminal.get_terminal_size",
    "print"
   ]
  },
  "type": "module"
 },
 "pandas.io.formats.terminal.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.formats.terminal._get_terminal_size_linux": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "ioctl_GWINSZ",
    "os.environ",
    "pandas.io.formats.terminal.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_linux.ioctl_GWINSZ": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.io.formats.terminal.fcntl",
    "pandas.io.formats.terminal.struct",
    "pandas.io.formats.terminal.termios"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_tput": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int",
    "pandas.io.formats.terminal.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_windows": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ctypes.create_string_buffer",
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
    "ctypes.windll.kernel32.GetStdHandle",
    "pandas.io.formats.terminal.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.terminal.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.env": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.get_terminal_size": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.io.formats.terminal._get_terminal_size_linux",
    "pandas.io.formats.terminal._get_terminal_size_tput",
    "pandas.io.formats.terminal._get_terminal_size_windows",
    "pandas.io.formats.terminal.platform",
    "pandas.io.formats.terminal.shutil",
    "pandas.io.formats.terminal.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.formats.terminal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.termios": {
  "data": {
   "shadows": "termios"
  },
  "type": "import"
 },
 "pandas.io.formats.terminal.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "pandas.io.gbq": {
  "data": {},
  "type": "module"
 },
 "pandas.io.gbq._try_import": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.gbq.pandas_gbq"
   ]
  },
  "type": "function"
 },
 "pandas.io.gbq.pandas_gbq": {
  "data": {
   "shadows": "pandas_gbq"
  },
  "type": "import"
 },
 "pandas.io.gbq.read_gbq": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.io.gbq._try_import",
    "pandas.io.gbq.pandas_gbq"
   ]
  },
  "type": "function"
 },
 "pandas.io.gbq.to_gbq": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.io.gbq._try_import",
    "pandas.io.gbq.pandas_gbq"
   ]
  },
  "type": "function"
 },
 "pandas.io.html": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.binary_type",
    "pandas.compat.string_types",
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
    "pandas.io.html._LxmlFrameParser",
    "pandas.io.html.re"
   ]
  },
  "type": "module"
 },
 "pandas.io.html.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "pandas.io.html.EmptyDataError": {
  "data": {
   "shadows": "pandas.errors.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.html.HTMLParser": {
  "data": {
   "shadows": "lxml.html.HTMLParser"
  },
  "type": "import"
 },
 "pandas.io.html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.html.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.html.SoupStrainer": {
  "data": {
   "shadows": "bs4.SoupStrainer"
  },
  "type": "import"
 },
 "pandas.io.html.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.io.html.XMLSyntaxError": {
  "data": {
   "shadows": "lxml.etree.XMLSyntaxError"
  },
  "type": "import"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandas.io.html._HtmlFrameParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser.__init__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "bs4.SoupStrainer",
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._build_doc": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "bs4.BeautifulSoup"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tables": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tbody": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_td": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tfoot": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_th": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_thead": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tr": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._setup_build_doc": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.html._read"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._text_getter": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "pandas.io.html._HAS_BS4": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.html._HAS_HTML5LIB": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.io.html._HAS_LXML": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.html._HtmlFrameParser": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._HtmlFrameParser.__init__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_doc": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_table": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_data": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tbody": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tfoot": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_thead": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "any",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tables": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tbody": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_td": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tfoot": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_thead": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tr": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._text_getter": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser.parse_tables": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pandas.io.html._IMPORTS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.html._LxmlFrameParser": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pandas.io.html._HtmlFrameParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._LxmlFrameParser.__init__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "pandas.io.html._LxmlFrameParser",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._build_doc": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "UnicodeDecodeError",
    "ValueError",
    "hasattr",
    "lxml.etree.XMLSyntaxError",
    "lxml.html.HTMLParser",
    "lxml.html.fromstring",
    "lxml.html.parse",
    "pandas.io.common._is_url",
    "pandas.io.common.parse_url",
    "pandas.io.html._valid_schemes"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_tfoot": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_thead": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "any",
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tables": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.u",
    "pandas.io.html._build_xpath_expr",
    "pandas.io.html._re_namespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tbody": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_td": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tfoot": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_thead": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tr": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._text_getter": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "pandas.io.html._RE_WHITESPACE": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandas.io.html._build_xpath_expr": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._data_to_frame": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "len",
    "pandas.compat.lrange",
    "pandas.io.html._expand_elements",
    "pandas.io.html._get_skiprows",
    "pandas.io.parsers.TextParser"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._expand_elements": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._get_skiprows": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.compat.lrange",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.io.html.numbers",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._importers": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.html._HAS_BS4",
    "pandas.io.html._HAS_HTML5LIB",
    "pandas.io.html._HAS_LXML",
    "pandas.io.html._IMPORTS"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._is_url": {
  "data": {
   "shadows": "pandas.io.common._is_url"
  },
  "type": "import"
 },
 "pandas.io.html._parse": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.raise_with_traceback",
    "pandas.errors.EmptyDataError",
    "pandas.io.html._data_to_frame",
    "pandas.io.html._parser_dispatch",
    "pandas.io.html._validate_flavor",
    "pandas.io.html.re",
    "parser"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._parser_dispatch": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "distutils.version.LooseVersion",
    "list",
    "pandas.io.html._HAS_BS4",
    "pandas.io.html._HAS_HTML5LIB",
    "pandas.io.html._HAS_LXML",
    "pandas.io.html._valid_parsers",
    "pandas.io.html.bs4"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._print_as_set": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._re_namespace": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "pandas.io.html._read": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.io.common._is_url",
    "pandas.io.common.urlopen",
    "pandas.io.html.char_types",
    "pandas.io.html.os",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._remove_whitespace": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.io.html._RE_WHITESPACE"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._valid_parsers": {
  "data": {
   "lineno": 646
  },
  "type": "constant"
 },
 "pandas.io.html._valid_schemes": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "pandas.io.html._validate_flavor": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.html._print_as_set",
    "pandas.io.html._valid_parsers",
    "pandas.io.html.collections",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._validate_header_arg": {
  "data": {
   "shadows": "pandas.io.common._validate_header_arg"
  },
  "type": "import"
 },
 "pandas.io.html.binary_type": {
  "data": {
   "shadows": "pandas.compat.binary_type"
  },
  "type": "import"
 },
 "pandas.io.html.bs4": {
  "data": {
   "shadows": "bs4"
  },
  "type": "import"
 },
 "pandas.io.html.char_types": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandas.io.html.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.io.html.fromstring": {
  "data": {
   "shadows": "lxml.html.fromstring"
  },
  "type": "import"
 },
 "pandas.io.html.html5lib": {
  "data": {
   "shadows": "html5lib"
  },
  "type": "import"
 },
 "pandas.io.html.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.io.html.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.io.html.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.html.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.html.lxml": {
  "data": {
   "shadows": "lxml"
  },
  "type": "import"
 },
 "pandas.io.html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.html.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pandas.io.html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.html.parse": {
  "data": {
   "shadows": "lxml.html.parse"
  },
  "type": "import"
 },
 "pandas.io.html.parse_url": {
  "data": {
   "shadows": "pandas.io.common.parse_url"
  },
  "type": "import"
 },
 "pandas.io.html.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.html.raise_with_traceback": {
  "data": {
   "shadows": "pandas.compat.raise_with_traceback"
  },
  "type": "import"
 },
 "pandas.io.html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.html.read_html": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.io.common._validate_header_arg",
    "pandas.io.html._importers",
    "pandas.io.html._parse",
    "pandas.io.html.numbers"
   ]
  },
  "type": "function"
 },
 "pandas.io.html.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.html.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.html.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.io.json": {
  "data": {},
  "type": "module"
 },
 "pandas.io.json.json": {
  "data": {
   "symbols_in_volume": [
    "pandas._libs.json.dumps",
    "pandas._libs.json.loads"
   ]
  },
  "type": "module"
 },
 "pandas.io.json.json.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.json.json.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.json.json.FrameParser": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "pandas.io.json.json.Parser"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.FrameParser._parse_no_numpy": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas._libs.json",
    "pandas.compat.iteritems",
    "pandas.io.json.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._parse_numpy": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas._libs.json",
    "pandas.compat.iteritems",
    "pandas.io.json.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._process_converter": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "f",
    "filt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_dates": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "is_ok",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_dates.is_ok": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_types": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "pandas.io.json.json.FrameWriter": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.io.json.json.Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.FrameWriter._format_axes": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.JSONTableWriter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.io.json.json.FrameWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.JSONTableWriter.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "build_table_schema",
    "isinstance",
    "len",
    "pandas.MultiIndex",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.io.json.json.JSONTableWriter",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.JSONTableWriter.write": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas.io.json.json.JSONTableWriter",
    "pandas.io.json.json.dumps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.json.json.Parser": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "object",
    "pandas.compat.long"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.Parser.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "numpy",
    "pandas._libs.json"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser._convert_axes": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_data": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_dates": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_to_date": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "len",
    "numpy.number",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_types": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser.check_keys_split": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.u",
    "pandas.io.formats.printing.pprint_thing",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Parser.parse": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.json.json.SeriesParser": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "pandas.io.json.json.Parser"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.SeriesParser._parse_no_numpy": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas._libs.json",
    "pandas.compat.iteritems",
    "pandas.io.json.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.SeriesParser._parse_numpy": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas._libs.json",
    "pandas.compat.iteritems",
    "pandas.io.json.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.SeriesParser._try_convert_types": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pandas.io.json.json.SeriesWriter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.io.json.json.Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.SeriesWriter._format_axes": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.json.json.TABLE_SCHEMA_VERSION": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.json.json.Writer": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.json.Writer.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas.io.json.json.Writer._format_axes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.Writer.write": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.io.json.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json._get_handle": {
  "data": {
   "shadows": "pandas.io.common._get_handle"
  },
  "type": "import"
 },
 "pandas.io.json.json.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.json.json.dumps": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.io.json.json.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.json.json.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.io.json.json.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.json.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.json.json.json": {
  "data": {
   "shadows": "pandas._libs.json"
  },
  "type": "import"
 },
 "pandas.io.json.json.loads": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.json.json.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.io.json.json.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.json.json.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.json.json.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.json.json.read_json": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "numpy",
    "pandas._libs.json",
    "pandas._libs.json.strip",
    "pandas.compat.StringIO",
    "pandas.compat.string_types",
    "pandas.io.common._get_handle",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.json.json.FrameParser",
    "pandas.io.json.json.SeriesParser",
    "pandas.io.json.json.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.json.json.to_json": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_convert_to_line_delimits",
    "isinstance",
    "open",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.string_types",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.json.normalize": {
  "data": {},
  "type": "module"
 },
 "pandas.io.json.normalize.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.json.normalize._convert_to_line_delimits": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas._libs.lib.convert_json_to_lines"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.normalize.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.json.normalize.convert_json_to_lines": {
  "data": {
   "shadows": "pandas._libs.lib.convert_json_to_lines"
  },
  "type": "import"
 },
 "pandas.io.json.normalize.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.io.json.normalize.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.io.json.normalize.json_normalize": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "_recursive_extract",
    "any",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.itervalues",
    "pandas.compat.string_types",
    "pandas.io.json.normalize.nested_to_record",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.normalize.json_normalize._pull_field": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.normalize.json_normalize._recursive_extract": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "KeyError",
    "_pull_field",
    "_recursive_extract",
    "len",
    "numpy.nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.normalize.nested_to_record": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.json.normalize.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.normalize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema": {
  "data": {},
  "type": "module"
 },
 "pandas.io.json.table_schema.as_json_table_type": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_numeric_dtype",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.common.is_string_dtype",
    "pandas.core.dtypes.common.is_timedelta64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.table_schema.build_table_schema": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.io.json.table_schema.make_field",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.table_schema.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_numeric_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_numeric_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_string_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_string_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.io.json.table_schema.make_field": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.table_schema.set_default_names": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "all",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.io.msgpack": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.msgpack._unpacker.unpack",
    "pandas.io.msgpack._unpacker.unpackb",
    "pandas.io.msgpack.pack",
    "pandas.io.msgpack.packb"
   ]
  },
  "type": "module"
 },
 "pandas.io.msgpack.ExtType": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.ExtType.__new__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "int",
    "isinstance",
    "pandas.io.msgpack.ExtType",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.msgpack.Packer": {
  "data": {
   "shadows": "pandas.io.msgpack._packer.Packer"
  },
  "type": "import"
 },
 "pandas.io.msgpack.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack._unpacker.Unpacker"
  },
  "type": "import"
 },
 "pandas.io.msgpack._version": {
  "data": {},
  "type": "module"
 },
 "pandas.io.msgpack._version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas.io.msgpack.dump": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.io.msgpack.dumps": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.io.msgpack.exceptions": {
  "data": {},
  "type": "module"
 },
 "pandas.io.msgpack.exceptions.BufferFull": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pandas.io.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.ExtraData": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.ExtraData.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pandas.io.msgpack.exceptions.ExtraData.__str__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pandas.io.msgpack.exceptions.OutOfData": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.io.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.PackException": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.PackValueError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.exceptions.PackException"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.UnpackException": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.UnpackValueError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.io.msgpack.load": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.io.msgpack.loads": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.io.msgpack.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.io.msgpack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.msgpack.pack": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.io.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.io.msgpack.packb": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.io.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.io.msgpack.unpack": {
  "data": {
   "shadows": "pandas.io.msgpack._unpacker.unpack"
  },
  "type": "import"
 },
 "pandas.io.msgpack.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack._unpacker.unpackb"
  },
  "type": "import"
 },
 "pandas.io.msgpack.version": {
  "data": {
   "shadows": "pandas.io.msgpack._version.version"
  },
  "type": "import"
 },
 "pandas.io.packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "numpy",
    "numpy.dtype",
    "numpy.float128",
    "numpy.float32",
    "numpy.float64",
    "pandas.compat.u",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.c2f_dict",
    "textwrap.dedent"
   ]
  },
  "type": "module"
 },
 "pandas.io.packers.BlockIndex": {
  "data": {
   "shadows": "pandas.core.sparse.array.BlockIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.io.packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.io.packers.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.ExtType": {
  "data": {
   "shadows": "pandas.io.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.io.packers.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.io.packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.packers.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.io.packers.IntIndex": {
  "data": {
   "shadows": "pandas.core.sparse.array.IntIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.Iterator": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Iterator.__init__": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "pandas.io.packers.Iterator.__iter__": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas.io.packers.os",
    "pandas.io.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.io.packers.NaTType": {
  "data": {
   "shadows": "pandas._libs.tslib.NaTType"
  },
  "type": "import"
 },
 "pandas.io.packers.Packer": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "pandas.io.msgpack.Packer"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Packer.__init__": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "pandas.io.msgpack.Packer",
    "pandas.io.packers.encode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.io.packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.io.packers.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.io.packers.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.packers.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.io.packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.packers.Unpacker": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Unpacker.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "pandas.io.msgpack.ExtType",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.packers.decode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._BadMove": {
  "data": {
   "shadows": "pandas.util._move.BadMove"
  },
  "type": "import"
 },
 "pandas.io.packers._Packer": {
  "data": {
   "shadows": "pandas.io.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.io.packers._Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.io.packers._check_blosc": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._check_zlib": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._move_into_mutable_buffer": {
  "data": {
   "shadows": "pandas.util._move.move_into_mutable_buffer"
  },
  "type": "import"
 },
 "pandas.io.packers._safe_reshape": {
  "data": {
   "shadows": "pandas.core.internals._safe_reshape"
  },
  "type": "import"
 },
 "pandas.io.packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas.io.packers.c2f": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ftype",
    "numpy.typeDict",
    "pandas.io.packers.c2f_dict"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.c2f_dict": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "pandas.io.packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.packers.compressor": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pandas.io.packers.convert": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.io.msgpack.ExtType",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.blosc",
    "pandas.io.packers.compressor",
    "pandas.io.packers.zlib"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.packers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.packers.decode": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "complex",
    "create_block",
    "datetime.timedelta",
    "dateutil.parser.parse",
    "dict",
    "dtype",
    "dtype.type",
    "from_codes",
    "globals",
    "int",
    "isinstance",
    "list",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.timedelta64",
    "numpy.typeDict",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.internals.BlockManager",
    "pandas.io.packers.c2f",
    "pandas.io.packers.dtype_for",
    "pandas.io.packers.unconvert",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.decode.create_block": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.internals",
    "pandas.core.internals._safe_reshape",
    "pandas.core.internals.make_block",
    "pandas.io.packers.dtype_for",
    "pandas.io.packers.unconvert"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.io.packers.dtype_dict": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "pandas.io.packers.dtype_for": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.typeDict.get",
    "pandas.io.packers.dtype_dict"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.encode": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "complex",
    "datetime.date",
    "datetime.datetime",
    "datetime.timedelta",
    "getattr",
    "isinstance",
    "issubclass",
    "numpy.datetime64",
    "numpy.iscomplexobj",
    "numpy.ndarray",
    "numpy.number",
    "numpy.timedelta64",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.NaTType",
    "pandas.compat.u",
    "pandas.compat.u_safe",
    "pandas.core.generic.NDFrame",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.core.sparse.array.IntIndex",
    "pandas.io.packers.compressor",
    "pandas.io.packers.convert",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.packers.internals": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pandas.io.packers.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas.io.packers.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.io.packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.packers.pack": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pandas.io.msgpack.Packer",
    "pandas.io.packers.encode"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.io.packers.read_msgpack": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.binary_type",
    "pandas.compat.callable",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.packers.Iterator",
    "pandas.io.packers.os",
    "read"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.read_msgpack.read": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.io.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.io.packers.to_msgpack": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas.compat.u",
    "pandas.io.packers.compressor",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.to_msgpack.writer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.io.packers.pack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.packers.u_safe": {
  "data": {
   "shadows": "pandas.compat.u_safe"
  },
  "type": "import"
 },
 "pandas.io.packers.unconvert": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "decompress",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.frombuffer",
    "numpy.fromstring",
    "object",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.errors.PerformanceWarning",
    "pandas.io.msgpack.ExtType",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.blosc",
    "pandas.io.packers.warnings",
    "pandas.io.packers.zlib",
    "pandas.util._move.BadMove",
    "pandas.util._move.move_into_mutable_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.unpack": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pandas.io.msgpack.ExtType",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.packers.decode"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas.io.pickle": {
  "data": {},
  "type": "module"
 },
 "pandas.io.pickle.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.pickle.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.io.pickle._NS_DTYPE": {
  "data": {
   "shadows": "pandas.core.dtypes.common._NS_DTYPE"
  },
  "type": "import"
 },
 "pandas.io.pickle._get_handle": {
  "data": {
   "shadows": "pandas.io.common._get_handle"
  },
  "type": "import"
 },
 "pandas.io.pickle._infer_compression": {
  "data": {
   "shadows": "pandas.io.common._infer_compression"
  },
  "type": "import"
 },
 "pandas.io.pickle._pickle_array": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.lib.format.write_array",
    "numpy.ndarray",
    "pandas.compat.BytesIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle._unpickle_array": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bytes",
    "numpy.lib.format.read_array",
    "pandas.compat.BytesIO",
    "pandas.core.dtypes.common._NS_DTYPE",
    "pandas.core.dtypes.common.is_datetime64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.io.pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.pickle.pc": {
  "data": {
   "shadows": "pandas.compat.pickle_compat"
  },
  "type": "import"
 },
 "pandas.io.pickle.pkl": {
  "data": {
   "shadows": "pandas.compat.cPickle"
  },
  "type": "import"
 },
 "pandas.io.pickle.read_array": {
  "data": {
   "shadows": "numpy.lib.format.read_array"
  },
  "type": "import"
 },
 "pandas.io.pickle.read_pickle": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.io.common._infer_compression",
    "try_read"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.read_pickle.read_wrapper": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "func",
    "pandas.io.common._get_handle"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.read_pickle.try_read": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.cPickle.load",
    "pandas.compat.pickle_compat.load",
    "read_wrapper"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.to_pickle": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.compat.cPickle.HIGHEST_PROTOCOL",
    "pandas.compat.cPickle.dump",
    "pandas.io.common._get_handle",
    "pandas.io.common._infer_compression"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.write_array": {
  "data": {
   "shadows": "numpy.lib.format.write_array"
  },
  "type": "import"
 },
 "pandas.io.s3": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.PY3"
   ]
  },
  "type": "module"
 },
 "pandas.io.s3.NoCredentialsError": {
  "data": {
   "shadows": "botocore.exceptions.NoCredentialsError"
  },
  "type": "import"
 },
 "pandas.io.s3._strip_schema": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.s3.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.s3.get_filepath_or_buffer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "OSError",
    "botocore.exceptions.NoCredentialsError",
    "pandas.io.s3._strip_schema",
    "pandas.io.s3.s3fs"
   ]
  },
  "type": "function"
 },
 "pandas.io.s3.parse_url": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "pandas.io.s3.s3fs": {
  "data": {
   "shadows": "s3fs"
  },
  "type": "import"
 },
 "pandas.io.sas": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sas7bdat": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sas7bdat.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.Parser": {
  "data": {
   "shadows": "pandas.io.sas._sas.Parser"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.__next__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._chunk_to_dataframe": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.datetime",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_properties": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.datetime",
    "pandas.io.sas.sas_constants.align_1_checker_value",
    "pandas.io.sas.sas_constants.align_1_length",
    "pandas.io.sas.sas_constants.align_1_offset",
    "pandas.io.sas.sas_constants.align_2_length",
    "pandas.io.sas.sas_constants.align_2_offset",
    "pandas.io.sas.sas_constants.align_2_value",
    "pandas.io.sas.sas_constants.dataset_length",
    "pandas.io.sas.sas_constants.dataset_offset",
    "pandas.io.sas.sas_constants.date_created_length",
    "pandas.io.sas.sas_constants.date_created_offset",
    "pandas.io.sas.sas_constants.date_modified_length",
    "pandas.io.sas.sas_constants.date_modified_offset",
    "pandas.io.sas.sas_constants.encoding_length",
    "pandas.io.sas.sas_constants.encoding_names",
    "pandas.io.sas.sas_constants.encoding_offset",
    "pandas.io.sas.sas_constants.endianness_length",
    "pandas.io.sas.sas_constants.endianness_offset",
    "pandas.io.sas.sas_constants.file_type_length",
    "pandas.io.sas.sas_constants.file_type_offset",
    "pandas.io.sas.sas_constants.header_size_length",
    "pandas.io.sas.sas_constants.header_size_offset",
    "pandas.io.sas.sas_constants.magic",
    "pandas.io.sas.sas_constants.os_maker_length",
    "pandas.io.sas.sas_constants.os_maker_offset",
    "pandas.io.sas.sas_constants.os_name_length",
    "pandas.io.sas.sas_constants.os_name_offset",
    "pandas.io.sas.sas_constants.os_version_number_length",
    "pandas.io.sas.sas_constants.os_version_number_offset",
    "pandas.io.sas.sas_constants.page_bit_offset_x64",
    "pandas.io.sas.sas_constants.page_bit_offset_x86",
    "pandas.io.sas.sas_constants.page_count_length",
    "pandas.io.sas.sas_constants.page_count_offset",
    "pandas.io.sas.sas_constants.page_size_length",
    "pandas.io.sas.sas_constants.page_size_offset",
    "pandas.io.sas.sas_constants.platform_length",
    "pandas.io.sas.sas_constants.platform_offset",
    "pandas.io.sas.sas_constants.sas_release_length",
    "pandas.io.sas.sas_constants.sas_release_offset",
    "pandas.io.sas.sas_constants.sas_server_type_length",
    "pandas.io.sas.sas_constants.sas_server_type_offset",
    "pandas.io.sas.sas_constants.subheader_pointer_length_x64",
    "pandas.io.sas.sas_constants.subheader_pointer_length_x86",
    "pandas.io.sas.sas_constants.u64_byte_checker_value",
    "pandas.to_timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_subheader_index": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas_constants.compressed_subheader_id",
    "pandas.io.sas.sas_constants.compressed_subheader_type",
    "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
    "pandas.io.sas.sas_constants.subheader_signature_to_index.get"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._parse_metadata": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnattributes_subheader": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.empty",
    "numpy.int64",
    "pandas.io.sas.sas_constants.column_data_length_length",
    "pandas.io.sas.sas_constants.column_data_length_offset",
    "pandas.io.sas.sas_constants.column_data_offset_offset",
    "pandas.io.sas.sas_constants.column_type_length",
    "pandas.io.sas.sas_constants.column_type_offset",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnlist_subheader": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnname_subheader": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.column_name_length_length",
    "pandas.io.sas.sas_constants.column_name_length_offset",
    "pandas.io.sas.sas_constants.column_name_offset_length",
    "pandas.io.sas.sas_constants.column_name_offset_offset",
    "pandas.io.sas.sas_constants.column_name_pointer_length",
    "pandas.io.sas.sas_constants.column_name_text_subheader_length",
    "pandas.io.sas.sas_constants.column_name_text_subheader_offset",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnsize_subheader": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columntext_subheader": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "pandas.io.sas.sas_constants.compression_literals",
    "pandas.io.sas.sas_constants.rle_compression",
    "pandas.io.sas.sas_constants.text_block_size_length"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_format_subheader": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "len",
    "min",
    "pandas.io.sas.sas7bdat._column",
    "pandas.io.sas.sas_constants.column_format_length_length",
    "pandas.io.sas.sas_constants.column_format_length_offset",
    "pandas.io.sas.sas_constants.column_format_offset_length",
    "pandas.io.sas.sas_constants.column_format_offset_offset",
    "pandas.io.sas.sas_constants.column_format_text_subheader_index_length",
    "pandas.io.sas.sas_constants.column_format_text_subheader_index_offset",
    "pandas.io.sas.sas_constants.column_label_length_length",
    "pandas.io.sas.sas_constants.column_label_length_offset",
    "pandas.io.sas.sas_constants.column_label_offset_length",
    "pandas.io.sas.sas_constants.column_label_offset_offset",
    "pandas.io.sas.sas_constants.column_label_text_subheader_index_length",
    "pandas.io.sas.sas_constants.column_label_text_subheader_index_offset"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_meta": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.page_amd_type",
    "pandas.io.sas.sas_constants.page_meta_type",
    "pandas.io.sas.sas_constants.page_mix_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_metadata": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.subheader_pointers_offset",
    "pandas.io.sas.sas_constants.truncated_subheader_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_rowsize_subheader": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.col_count_p1_multiplier",
    "pandas.io.sas.sas_constants.col_count_p2_multiplier",
    "pandas.io.sas.sas_constants.row_count_offset_multiplier",
    "pandas.io.sas.sas_constants.row_count_on_mix_page_offset_multiplier",
    "pandas.io.sas.sas_constants.row_length_offset_multiplier"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas_constants.index.columnAttributesIndex",
    "pandas.io.sas.sas_constants.index.columnListIndex",
    "pandas.io.sas.sas_constants.index.columnNameIndex",
    "pandas.io.sas.sas_constants.index.columnSizeIndex",
    "pandas.io.sas.sas_constants.index.columnTextIndex",
    "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
    "pandas.io.sas.sas_constants.index.formatAndLabelIndex",
    "pandas.io.sas.sas_constants.index.rowSizeIndex",
    "pandas.io.sas.sas_constants.index.subheaderCountsIndex",
    "processor"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_counts": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_pointers": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pandas.io.sas.sas7bdat._subheader_pointer"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_bytes": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_float": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas7bdat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_int": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas7bdat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_next_page": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.sas.sas_constants.page_data_type",
    "pandas.io.sas.sas_constants.page_meta_type",
    "pandas.io.sas.sas_constants.page_mix_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_page_header": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.block_count_length",
    "pandas.io.sas.sas_constants.block_count_offset",
    "pandas.io.sas.sas_constants.page_type_length",
    "pandas.io.sas.sas_constants.page_type_offset",
    "pandas.io.sas.sas_constants.subheader_count_length",
    "pandas.io.sas.sas_constants.subheader_count_offset"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_subheader_signature": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.close": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.read": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "numpy.uint8",
    "pandas.io.sas._sas.Parser"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat._column": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat._subheader_pointer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.const": {
  "data": {
   "shadows": "pandas.io.sas.sas_constants"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_constants": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.index",
    "pandas.io.sas.sas_constants.rdc_compression",
    "pandas.io.sas.sas_constants.rle_compression"
   ]
  },
  "type": "module"
 },
 "pandas.io.sas.sas_constants.align_1_checker_value": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_length": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_offset": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_value": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_length": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_offset": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_value": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.block_count_length": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.block_count_offset": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.col_count_p1_multiplier": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.col_count_p2_multiplier": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_length_length": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_length_offset": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_offset_offset": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_length_length": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_length_offset": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_offset_length": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_offset_offset": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_text_subheader_index_length": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_text_subheader_index_offset": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_length_length": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_length_offset": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_offset_length": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_offset_offset": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_text_subheader_index_length": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_text_subheader_index_offset": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_length_length": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_length_offset": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_offset_length": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_offset_offset": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_pointer_length": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_text_subheader_length": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_text_subheader_offset": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_type_length": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_type_offset": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compressed_subheader_id": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compressed_subheader_type": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compression_literals": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.dataset_length": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.dataset_offset": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_created_length": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_created_offset": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_modified_length": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_modified_offset": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_length": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_names": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_offset": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.endianness_length": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.endianness_offset": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.file_type_length": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.file_type_offset": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.header_size_length": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.header_size_offset": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.index": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "pandas.io.sas.sas_constants.magic": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_maker_length": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_maker_offset": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_name_length": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_name_offset": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_version_number_length": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_version_number_offset": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_amd_type": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_bit_offset_x64": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_bit_offset_x86": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_comp_type": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_count_length": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_count_offset": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_data_type": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_meta_type": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_metc_type": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_mix_types": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_size_length": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_size_offset": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_type_length": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_type_offset": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.platform_length": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.platform_offset": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.rdc_compression": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.rle_compression": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_count_offset_multiplier": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_count_on_mix_page_offset_multiplier": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_length_offset_multiplier": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_release_length": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_release_offset": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_server_type_length": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_server_type_offset": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_count_length": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_count_offset": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointer_length_x64": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointer_length_x86": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointers_offset": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_signature_to_index": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.text_block_size_length": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.truncated_subheader_id": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.u64_byte_checker_value": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.sas.sas_xport._base_params_doc",
    "pandas.io.sas.sas_xport._format_params_doc",
    "pandas.io.sas.sas_xport._iterator_doc",
    "pandas.io.sas.sas_xport._params2_doc"
   ]
  },
  "type": "module"
 },
 "pandas.io.sas.sas_xport.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.XportReader": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "__doc__",
    "pandas.io.common.BaseIterator",
    "pandas.io.sas.sas_xport._xport_reader_doc"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas_xport.XportReader.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.io.common.get_filepath_or_buffer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.__next__": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._get_row": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._missing_double": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._read_header": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "int",
    "len",
    "numpy.dtype",
    "pandas.io.sas.sas_xport._correct_header1",
    "pandas.io.sas.sas_xport._correct_header2",
    "pandas.io.sas.sas_xport._correct_line1",
    "pandas.io.sas.sas_xport._correct_obs_header",
    "pandas.io.sas.sas_xport._fieldkeys",
    "pandas.io.sas.sas_xport._parse_date",
    "pandas.io.sas.sas_xport._split_line",
    "pandas.io.sas.sas_xport.struct",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._record_count": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.frombuffer",
    "numpy.uint64",
    "pandas.io.sas.sas_xport.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.close": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.get_chunk": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.read": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "min",
    "numpy.frombuffer",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.io.sas.sas_xport._handle_truncated_float_vec",
    "pandas.io.sas.sas_xport._parse_float_vec",
    "pandas.io.sas.sas_xport._read_method_doc",
    "pandas.util._decorators.Appender",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._base_params_doc": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_header1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_header2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_line1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_obs_header": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._fieldkeys": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._format_params_doc": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._handle_truncated_float_vec": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._iterator_doc": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._params2_doc": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._parse_date": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._parse_float_vec": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._read_method_doc": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._read_sas_doc": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._split_line": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._xport_reader_doc": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sasreader.SAS7BDATReader": {
  "data": {
   "shadows": "pandas.io.sas.sas7bdat.SAS7BDATReader"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader.XportReader": {
  "data": {
   "shadows": "pandas.io.sas.sas_xport.XportReader"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader.read_sas": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "format.lower",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.sas.sas7bdat.SAS7BDATReader",
    "pandas.io.sas.sas_xport.XportReader"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.stata._chunksize_params",
    "pandas.io.stata._encoding_params",
    "pandas.io.stata._iterator_params",
    "pandas.io.stata._statafile_processing_params1",
    "pandas.io.stata._statafile_processing_params2",
    "pandas.io.stata.datetime"
   ]
  },
  "type": "module"
 },
 "pandas.io.stata.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.stata.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.stata.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.stata.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.io.stata.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.stata.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.stata.InvalidColumnName": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.NaT": {
  "data": {
   "shadows": "pandas._libs.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.io.stata.PossiblePrecisionLoss": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.io.stata.StataMissingValue": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "chr",
    "pandas.compat.long",
    "pandas.compat.range",
    "pandas.core.base.StringMixin",
    "pandas.io.stata.struct",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataMissingValue.__eq__": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__init__": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "float",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__repr__": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__unicode__": {
  "data": {
   "lineno": 794
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.get_base_missing_value": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataParser": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataParser.__init__": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "list",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint8",
    "pandas.compat.lrange",
    "pandas.compat.lzip",
    "pandas.compat.range",
    "pandas.io.stata.VALID_ENCODINGS",
    "pandas.io.stata.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "__doc__",
    "pandas.io.common.BaseIterator",
    "pandas.io.stata.StataParser",
    "pandas.io.stata._stata_reader_doc"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataReader.__enter__": {
  "data": {
   "lineno": 997
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__exit__": {
  "data": {
   "lineno": 1001
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__init__": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.stata.StataReader",
    "pandas.io.stata.VALID_ENCODINGS",
    "pandas.io.stata._set_endianness",
    "pandas.io.stata.sys",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__next__": {
  "data": {
   "lineno": 1420
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._calcsize": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "int",
    "pandas.io.stata.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._decode": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_categoricals": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.compat.iterkeys",
    "pandas.compat.zip",
    "pandas.core.categorical.Categorical",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_missing": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.float32",
    "numpy.float64",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.object",
    "numpy.unique",
    "pandas.core.series.Series",
    "pandas.io.stata.StataMissingValue"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_select_columns": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_data_label": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "f",
    "pandas.compat.range",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes.f": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_fmtlist": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_lbllist": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_nobs": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_seek_variable_labels": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_time_stamp": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_variable_labels": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_varlist": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._insert_strls": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._null_terminate": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_header": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.compat.lmap",
    "pandas.io.stata.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_new_header": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pandas.io.stata._version_error",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_old_header": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.uint8",
    "ord",
    "pandas.compat.range",
    "pandas.io.stata._version_error",
    "pandas.io.stata.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_strls": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "pandas.io.stata.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_value_labels": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "dict",
    "numpy.argsort",
    "numpy.frombuffer",
    "pandas.compat.range",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.close": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.data": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.stata._data_method_doc",
    "pandas.io.stata.warnings",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.data_label": {
  "data": {
   "lineno": 1710
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.get_chunk": {
  "data": {
   "lineno": 1423
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.read": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "min",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.where",
    "object",
    "pandas.compat.lmap",
    "pandas.compat.zip",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.core.series.Series",
    "pandas.io.stata._date_formats",
    "pandas.io.stata._read_method_doc",
    "pandas.io.stata._stata_elapsed_date_to_datetime_vec",
    "pandas.util._decorators.Appender",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.value_labels": {
  "data": {
   "lineno": 1720
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.variable_labels": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataValueLabel.__init__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.io.stata.ValueLabelTypeMismatch",
    "pandas.io.stata.value_label_mismatch_doc",
    "pandas.io.stata.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel._encode": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel.generate_value_label": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "pandas.io.stata.StataParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataWriter.__init__": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.StataWriter",
    "pandas.io.stata._set_endianness",
    "pandas.io.stata.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._check_column_names": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "min",
    "pandas.compat.string_types",
    "pandas.compat.text_type",
    "pandas.compat.zip",
    "pandas.io.stata.InvalidColumnName",
    "pandas.io.stata.invalid_name_doc",
    "pandas.io.stata.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._null_terminate": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_categoricals": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "get_base_missing_value",
    "numpy.array",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.compat.zip",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.StataValueLabel"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_data": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dtype",
    "numpy.fromiter",
    "ord",
    "pandas.compat.zip",
    "pandas.io.stata._datetime_to_stata_elapsed_vec",
    "pandas.io.stata._pad_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_pandas": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.io.stata._cast_to_stata_types",
    "pandas.io.stata._convert_datetime_to_stata_type",
    "pandas.io.stata._dtype_to_default_stata_fmt",
    "pandas.io.stata._dtype_to_stata_type",
    "pandas.io.stata._maybe_convert_to_int_keys"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._replace_nans": {
  "data": {
   "lineno": 1986,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_data": {
  "data": {
   "lineno": 2278
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_descriptors": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_header": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "pandas.io.stata._pad_bytes",
    "pandas.io.stata.datetime",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_value_labels": {
  "data": {
   "lineno": 2145
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_variable_labels": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "ord",
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter.write_file": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "pandas.io.stata._open_file_binary_write",
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.io.stata.Timestamp": {
  "data": {
   "shadows": "pandas._libs.tslib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.stata.VALID_ENCODINGS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.io.stata.ValueLabelTypeMismatch": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata._cast_to_stata_types": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.isinf",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "pandas.io.stata.PossiblePrecisionLoss",
    "pandas.io.stata.precision_loss_doc",
    "pandas.io.stata.struct",
    "pandas.io.stata.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._chunksize_params": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandas.io.stata._convert_datetime_to_stata_type": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._data_method_doc": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "pandas.io.stata._date_formats": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.int",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.series.Series",
    "pandas.io.stata.stata_epoch",
    "pandas.io.stata.struct",
    "pandas.isnull",
    "pandas.to_datetime",
    "parse_dates_safe",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec.parse_dates_safe": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "numpy.vectorize",
    "pandas.DatetimeIndex",
    "pandas._libs.lib.infer_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.datetime",
    "pandas.io.stata.stata_epoch",
    "pandas.to_datetime",
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._dtype_to_default_stata_fmt": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "max",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_",
    "pandas._libs.lib.infer_dtype",
    "pandas._libs.lib.max_len_string_array",
    "pandas.core.dtypes.common._ensure_object",
    "pandas.io.stata.excessive_string_length_error",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._dtype_to_stata_type": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": [
    "NotImplementedError",
    "chr",
    "max",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_",
    "numpy.string_",
    "pandas._libs.lib.max_len_string_array",
    "pandas.core.dtypes.common._ensure_object"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._encoding_params": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.io.stata._ensure_object": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.io.stata._iterator_params": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandas.io.stata._maybe_convert_to_int_keys": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._open_file_binary_write": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._pad_bytes": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._read_method_doc": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "pandas.io.stata._read_stata_doc": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandas.io.stata._set_endianness": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "convert_delta_safe",
    "convert_year_days_safe",
    "convert_year_month_safe",
    "numpy.int64",
    "numpy.isnan",
    "numpy.object",
    "numpy.ones_like",
    "pandas.NaT",
    "pandas._libs.tslib.NaT",
    "pandas._libs.tslib.Timestamp.max.days",
    "pandas._libs.tslib.Timestamp.max.year",
    "pandas._libs.tslib.Timestamp.min.days",
    "pandas._libs.tslib.Timestamp.min.year",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.io.stata.stata_epoch",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_delta_safe": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "dateutil.relativedelta.relativedelta",
    "getattr",
    "int",
    "pandas.core.series.Series",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_days_safe": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dateutil.relativedelta.relativedelta",
    "getattr",
    "int",
    "pandas.compat.zip",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_month_safe": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "getattr",
    "pandas.compat.zip",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_reader_doc": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pandas.io.stata._statafile_processing_params1": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.io.stata._statafile_processing_params2": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.io.stata._version_error": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.io.stata.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.stata.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.io.stata.excessive_string_length_error": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "pandas.io.stata.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.stata.infer_dtype": {
  "data": {
   "shadows": "pandas._libs.lib.infer_dtype"
  },
  "type": "import"
 },
 "pandas.io.stata.invalid_name_doc": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "pandas.io.stata.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.io.stata.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.io.stata.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.stata.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.stata.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.stata.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.io.stata.max_len_string_array": {
  "data": {
   "shadows": "pandas._libs.lib.max_len_string_array"
  },
  "type": "import"
 },
 "pandas.io.stata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.stata.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.stata.precision_loss_doc": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "pandas.io.stata.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.stata.read_stata": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.io.stata.StataReader",
    "pandas.io.stata._read_stata_doc",
    "pandas.util._decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.relativedelta": {
  "data": {
   "shadows": "dateutil.relativedelta.relativedelta"
  },
  "type": "import"
 },
 "pandas.io.stata.stata_epoch": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "pandas.io.stata.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.stata.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.stata.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.stata.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.io.stata.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.stata.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.io.stata.value_label_mismatch_doc": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "pandas.io.stata.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandas.io.stata.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.stata.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.wb": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.json": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandas.json.dumps": {
  "data": {
   "shadows": "pandas._libs.json.dumps"
  },
  "type": "import"
 },
 "pandas.json.loads": {
  "data": {
   "shadows": "pandas._libs.json.loads"
  },
  "type": "import"
 },
 "pandas.json.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.lib": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandas.lib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.missing_dependencies": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.module": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.pandas.core.config_init": {
  "data": {
   "shadows": "pandas.core.config_init"
  },
  "type": "import"
 },
 "pandas.pandas.testing": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pandas.pandas.tools.plotting": {
  "data": {
   "shadows": "pandas.tools.plotting"
  },
  "type": "import"
 },
 "pandas.parser": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandas.parser.CParserError": {
  "data": {
   "shadows": "pandas.io.common.CParserError"
  },
  "type": "import"
 },
 "pandas.parser.na_values": {
  "data": {
   "shadows": "pandas._libs.parsers.na_values"
  },
  "type": "import"
 },
 "pandas.parser.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.plot_params": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.plotting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.plotting._converter.register"
   ]
  },
  "type": "module"
 },
 "pandas.plotting._compat": {
  "data": {},
  "type": "module"
 },
 "pandas.plotting._compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.plotting._compat._mpl_ge_1_3_1": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_1_4_0": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_1_5_0": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_2_0_0": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_2_0_1": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_le_1_2_1": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "matplotlib.__version__",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat._mpl_le_2_0_0": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "pandas.plotting._compat.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.plotting._compat.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.plotting._compat.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.plotting._converter": {
  "data": {
   "shadows": "pandas.plotting._converter"
  },
  "type": "import"
 },
 "pandas.plotting._misc": {
  "data": {},
  "type": "module"
 },
 "pandas.plotting._misc._get_marker_compat": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "matplotlib.__version__",
    "matplotlib.lines.lineMarkers"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc._get_standard_colors": {
  "data": {
   "shadows": "pandas.plotting._style._get_standard_colors"
  },
  "type": "import"
 },
 "pandas.plotting._misc._set_ticks_props": {
  "data": {
   "shadows": "pandas.plotting._tools._set_ticks_props"
  },
  "type": "import"
 },
 "pandas.plotting._misc._subplots": {
  "data": {
   "shadows": "pandas.plotting._tools._subplots"
  },
  "type": "import"
 },
 "pandas.plotting._misc.andrews_curves": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dict",
    "f",
    "function",
    "len",
    "math.pi",
    "matplotlib.pyplot.gca",
    "numpy.linspace",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.plotting._style._get_standard_colors",
    "pandas.util._decorators.deprecate_kwarg",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.andrews_curves.function": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "pandas.plotting._misc.andrews_curves.function.f": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int",
    "math.sqrt",
    "numpy.arange",
    "numpy.copy",
    "numpy.cos",
    "numpy.delete",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.autocorrelation_plot": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "float",
    "len",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "numpy.asarray",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.autocorrelation_plot.r": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.bootstrap_plot": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "list",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.setp",
    "max",
    "min",
    "numpy.array",
    "numpy.mean",
    "numpy.median",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.plotting._misc.random"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.plotting._misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.plotting._misc.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "pandas.plotting._misc.lag_plot": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.rcParams"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.plotting._misc.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.plotting._misc.mlines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "pandas.plotting._misc.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.plotting._misc.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.plotting._misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.plotting._misc.parallel_coordinates": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "list",
    "matplotlib.pyplot.gca",
    "numpy.all",
    "numpy.isreal",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.plotting._style._get_standard_colors",
    "pandas.util._decorators.deprecate_kwarg",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "pandas.plotting._misc.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pandas.plotting._misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.plotting._misc.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.plotting._misc.radviz": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "matplotlib.patches.Circle",
    "matplotlib.pyplot.gca",
    "numpy.array",
    "numpy.cos",
    "numpy.expand_dims",
    "numpy.pi",
    "numpy.repeat",
    "numpy.sin",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.plotting._style._get_standard_colors"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.radviz.normalize": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.plotting._misc.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.plotting._misc.scatter_matrix": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.all",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "pandas.compat.lrange",
    "pandas.compat.zip",
    "pandas.core.dtypes.missing.notnull",
    "pandas.plotting._misc._get_marker_compat",
    "pandas.plotting._tools._set_ticks_props",
    "pandas.plotting._tools._subplots",
    "scipy.stats.gaussian_kde"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._misc.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pandas.plotting._misc.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.plotting._style": {
  "data": {
   "symbols_in_volume": [
    "pandas.plotting._style._Options"
   ]
  },
  "type": "module"
 },
 "pandas.plotting._style._Options": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.plotting._style._Options.__contains__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pandas.plotting._style._Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.__delitem__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "pandas.plotting._style._Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.__getitem__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "pandas.plotting._style._Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandas.plotting._style._Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.__setitem__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.plotting._style._Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options._get_canonical_key": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pandas.plotting._style._Options._warn_if_deprecated": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.plotting._style.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.reset": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pandas.plotting._style._Options.use": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "ZeroDivisionError",
    "_maybe_valid_colors",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.cm.get_cmap",
    "matplotlib.pyplot.rcParams",
    "matplotlib.pyplot.rcParams.get",
    "numpy.linspace",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.plotting._compat._mpl_ge_2_0_0",
    "pandas.plotting._style.re",
    "pandas.plotting._style.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors._maybe_valid_colors": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors.random_color": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.plotting._style.random"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._style._mpl_ge_2_0_0": {
  "data": {
   "shadows": "pandas.plotting._compat._mpl_ge_2_0_0"
  },
  "type": "import"
 },
 "pandas.plotting._style.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "pandas.plotting._style.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.plotting._style.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.plotting._style.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.plotting._style.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.plotting._style.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.plotting._style.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.plotting._style.matplotlib.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandas.plotting._style.mpl_stylesheet": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.plotting._style.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.plotting._style.plot_params": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "pandas.plotting._style.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.plotting._style.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.plotting._style.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.plotting._style.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.plotting._style.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.plotting._tools": {
  "data": {},
  "type": "module"
 },
 "pandas.plotting._tools.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.plotting._tools.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.plotting._tools.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.plotting._tools._flatten": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._get_all_lines": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._get_layout": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "ceil_",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "math.ceil",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._get_xlim": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._handle_shared_axes": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.bool",
    "numpy.zeros",
    "pandas.plotting._tools._remove_labels_from_axis"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._remove_labels_from_axis": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "matplotlib.ticker.AutoLocator",
    "matplotlib.ticker.FormatStrFormatter",
    "matplotlib.ticker.NullFormatter",
    "matplotlib.ticker.NullLocator"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._set_ticks_props": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "matplotlib.pyplot.setp",
    "pandas.plotting._tools._flatten"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools._subplots": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "len",
    "matplotlib.pyplot.figure",
    "numpy.empty",
    "object",
    "pandas.compat.range",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.plotting._tools._flatten",
    "pandas.plotting._tools._get_layout",
    "pandas.plotting._tools._handle_shared_axes",
    "pandas.plotting._tools.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pandas.plotting._tools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.plotting._tools.format_date_labels": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.plotting._tools.matplotlib.table": {
  "data": {
   "shadows": "matplotlib.table"
  },
  "type": "import"
 },
 "pandas.plotting._tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.plotting._tools.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.plotting._tools.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.plotting._tools.table": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.plotting._tools.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "pandas.plotting._tools.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.plotting.andrews_curves": {
  "data": {
   "shadows": "pandas.plotting._misc.andrews_curves"
  },
  "type": "import"
 },
 "pandas.plotting.autocorrelation_plot": {
  "data": {
   "shadows": "pandas.plotting._misc.autocorrelation_plot"
  },
  "type": "import"
 },
 "pandas.plotting.bootstrap_plot": {
  "data": {
   "shadows": "pandas.plotting._misc.bootstrap_plot"
  },
  "type": "import"
 },
 "pandas.plotting.boxplot": {
  "data": {
   "shadows": "pandas.plotting._core.boxplot"
  },
  "type": "import"
 },
 "pandas.plotting.lag_plot": {
  "data": {
   "shadows": "pandas.plotting._misc.lag_plot"
  },
  "type": "import"
 },
 "pandas.plotting.parallel_coordinates": {
  "data": {
   "shadows": "pandas.plotting._misc.parallel_coordinates"
  },
  "type": "import"
 },
 "pandas.plotting.plot_params": {
  "data": {
   "shadows": "pandas.plotting._style.plot_params"
  },
  "type": "import"
 },
 "pandas.plotting.radviz": {
  "data": {
   "shadows": "pandas.plotting._misc.radviz"
  },
  "type": "import"
 },
 "pandas.plotting.scatter_matrix": {
  "data": {
   "shadows": "pandas.plotting._misc.scatter_matrix"
  },
  "type": "import"
 },
 "pandas.plotting.table": {
  "data": {
   "shadows": "pandas.plotting._tools.table"
  },
  "type": "import"
 },
 "pandas.scatter_matrix": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.show_versions": {
  "data": {
   "shadows": "pandas.util._print_versions.show_versions"
  },
  "type": "import"
 },
 "pandas.stats": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.api": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.moments": {
  "data": {
   "symbols_in_volume": [
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._expanding_func",
    "pandas.stats.moments._rolling_func",
    "pandas.stats.moments.ewmstd"
   ]
  },
  "type": "module"
 },
 "pandas.stats.moments.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.stats.moments.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.moments.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.stats.moments.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.stats.moments.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.stats.moments._bias_kw": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pandas.stats.moments._binary_arg": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pandas.stats.moments._binary_arg_flex": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pandas.stats.moments._ddof_kw": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "pandas.stats.moments._doc_template": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.stats.moments._ewm_kw": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandas.stats.moments._ewm_notes": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "pandas.stats.moments._expanding_func": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._expanding_func.f": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._expanding_kw": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "pandas.stats.moments._flex_retval": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_arg": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_kw": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_retval": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandas.stats.moments._roll_kw": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.stats.moments._roll_notes": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.stats.moments._rolling_func": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._rolling_func.f": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._type_of_input_retval": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pandas.stats.moments._unary_arg": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "pandas.stats.moments.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.stats.moments.ensure_compat": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "AssertionError",
    "FutureWarning",
    "f",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Series",
    "pandas.stats.moments.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ensure_compat.f": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_scalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewma": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmcorr": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmcov": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmstd": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.stats.moments._bias_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmvar": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pandas.stats.moments._bias_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmvol": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_apply": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_corr": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_count": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_cov": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_kurt": {
  "data": {
   "lineno": 702
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_max": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_mean": {
  "data": {
   "lineno": 692
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_median": {
  "data": {
   "lineno": 693
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_min": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_quantile": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_skew": {
  "data": {
   "lineno": 701
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_std": {
  "data": {
   "lineno": 695
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_sum": {
  "data": {
   "lineno": 691
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_var": {
  "data": {
   "lineno": 698
  },
  "type": "constant"
 },
 "pandas.stats.moments.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.stats.moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.moments.rolling_apply": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_corr": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_count": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_cov": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments.ensure_compat",
    "pandas.util._decorators.Appender",
    "pandas.util._decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_kurt": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_max": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_mean": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_median": {
  "data": {
   "lineno": 485
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_min": {
  "data": {
   "lineno": 482
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_quantile": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_skew": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_std": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_sum": {
  "data": {
   "lineno": 483
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_var": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_window": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.test": {
  "data": {
   "shadows": "pandas.util._tester.test"
  },
  "type": "import"
 },
 "pandas.testing": {
  "data": {},
  "type": "module"
 },
 "pandas.testing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.testing.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.testing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.api": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.api.test_api": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.api.test_api.Base": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.Base.check": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dir",
    "list",
    "pandas.util.testing.assert_almost_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestApi": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.tests.api.test_api.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestApi.test_api": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.api"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation.test_deprecation_access_func": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.datetools.to_datetime",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation.test_deprecation_access_obj": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.datetools.monthEnd",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestJson": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestJson.test_deprecation_access_func": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "pandas.json.dumps",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestLib": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestLib.test_deprecation_access_func": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.lib.infer_dtype",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestPDApi": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.tests.api.test_api.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestPDApi.test_api": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestParser": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestParser.test_deprecation_access_func": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pandas.parser.na_values",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTSLib": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTSLib.test_deprecation_access_func": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.tslib.Timestamp",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTesting": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.tests.api.test_api.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTesting.test_testing": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.testing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_expr": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Expr",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_get_store": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.get_store",
    "pandas.tests.api.test_api.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_groupby": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Series",
    "pandas.groupby",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_match": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.match",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_pnow": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.pnow",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_term": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Term",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTypes": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTypes.test_deprecation_access_func": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "pandas.Categorical",
    "pandas.types.concat.union_categoricals",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_api.api": {
  "data": {
   "shadows": "pandas.api"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.testing": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.api.test_api.union_categoricals": {
  "data": {
   "shadows": "pandas.types.concat.union_categoricals"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.api.test_types.TestTypes": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "pandas.tests.api.test_types.TestTypes.check_deprecation": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "TypeError",
    "fnew",
    "fold",
    "pandas.tests.api.test_types.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecated_from_api_types": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.api.types",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr",
    "pandas.api.types",
    "pandas.core.common"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common_array_equivalent": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.array",
    "pandas.core.common.array_equivalent",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common_moved": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.common",
    "pandas.core.dtypes.common"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_removed_from_core_common": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.core.common",
    "pandas.tests.api.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_types": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.api.types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.c": {
  "data": {
   "shadows": "pandas.core.dtypes.common"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.test_moved_infer_dtype": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.tests.api.test_types.pandas",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.api.test_types.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.api.test_types.types": {
  "data": {
   "shadows": "pandas.api.types"
  },
  "type": "import"
 },
 "pandas.tests.computation": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.computation.test_compat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.computation.test_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat._MIN_NUMEXPR_VERSION": {
  "data": {
   "shadows": "pandas.core.computation._MIN_NUMEXPR_VERSION"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.core.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat._engines": {
  "data": {
   "shadows": "pandas.core.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat.expr": {
  "data": {
   "shadows": "pandas.core.computation.expr"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_compat.test_compat": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.core.computation._MIN_NUMEXPR_VERSION",
    "pandas.core.computation._NUMEXPR_INSTALLED",
    "pandas.tests.computation.test_compat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_compat.test_invalid_numexpr_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.core.computation._MIN_NUMEXPR_VERSION",
    "pandas.core.computation.engines._engines",
    "pandas.core.computation.expr._parsers",
    "pandas.tests.computation.test_compat.pytest",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_compat.test_invalid_numexpr_version.testit": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.common.difference",
    "pandas.core.computation.expr.PandasExprVisitor",
    "pandas.core.computation.expr.PythonExprVisitor",
    "pandas.core.computation.ops._arith_ops_syms",
    "pandas.core.computation.ops._bool_ops_syms",
    "pandas.core.computation.ops._special_case_arith_ops_syms",
    "pandas.core.computation.pytables.ExprVisitor"
   ]
  },
  "type": "module"
 },
 "pandas.tests.computation.test_eval.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.NumExprClobberingError": {
  "data": {
   "shadows": "pandas.core.computation.engines.NumExprClobberingError"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.PandasExprVisitor": {
  "data": {
   "shadows": "pandas.core.computation.expr.PandasExprVisitor"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.PythonExprVisitor": {
  "data": {
   "shadows": "pandas.core.computation.expr.PythonExprVisitor"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.TestAlignment": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_align_nested_unary_op": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_alignment": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.tests.computation.test_eval.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_series_alignment": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.tests.computation.test_eval.warnings",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_series_alignment.testit": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_series_frame_alignment": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.computation.test_eval.warnings",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_series_frame_alignment.testit": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_complex_series_frame_alignment": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "itertools.product",
    "locals",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.random",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.tests.computation.test_eval.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_frame_comparison": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_medium_complex_frame_alignment": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.tests.computation.test_eval.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_performance_warning_for_poor_alignment": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "len",
    "numpy.log10",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.errors.PerformanceWarning",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_produces_warning",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_series_frame_commutativity": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "itertools.product",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.should_warn",
    "pandas.tests.computation.test_eval.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_alignment": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_binary_arith_op": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_chained_cmp_op": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "check_operands",
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_chained_cmp_op.check_operands": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval._eval_single_bin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_complex_cmp_op": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.tests.computation.test_eval._scalar_skip",
    "pandas.tests.computation.test_eval._series_frame_incompatible",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_compound_invert_op": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "map",
    "numpy.array",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_equal": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_floor_division": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_modulus": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.eval",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_pow": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.eval",
    "pandas.tests.computation.test_eval._is_py3_complex_incompat",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_simple_cmp_op": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_single_invert_op": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "numpy.array",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.ex": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.get_expected_pow_result": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.tests.computation.test_eval.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_class": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classmethod",
    "numexpr",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_data": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_method": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "filter",
    "pandas.core.computation.engines._engines"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_ops": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pandas.core.computation.expr._bool_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.core.computation.ops._special_case_arith_ops_syms",
    "pandas.tests.computation.test_eval._good_arith_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.teardown_class": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.teardown_method": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_binary_arith_ops": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_chained_cmp_op": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_complex_cmp_ops": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_compound_invert_op": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_disallow_scalar_bool_ops": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_float_truncation": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_floor_division": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_invert": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_negate": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_pos": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_identical": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.dtypes.common.is_bool",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_line_continuation": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_modulus": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_pow": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing._skip_if_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_scalar_unary": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_invert": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_negate": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_pos": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.computation.expr",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_simple_cmp_ops": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.randbool"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_single_invert_op": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_unary_in_array": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestEvalNumexprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.check_chained_cmp_op": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.setup_class": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "classmethod",
    "numexpr",
    "pandas.tests.computation.test_eval.TestEvalNumexprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.setup_ops": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "filter",
    "list",
    "pandas.core.computation.expr._bool_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.core.computation.ops._special_case_arith_ops_syms",
    "pandas.tests.computation.test_eval._good_arith_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestEvalPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas.check_chained_cmp_op": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestEvalNumexprPandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas.setup_class": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.computation.test_eval.TestEvalPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestEvalNumexprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.check_alignment": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "eval",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.check_modulus": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.setup_class": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.computation.test_eval.TestEvalPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPandas": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPandas.setup_class": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.computation.test_eval.TestMathNumExprPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPython": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPython.setup_class": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.computation.test_eval.TestMathNumExprPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPandas": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPandas.setup_class": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.computation.test_eval.TestMathPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.check_result_type": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.eval": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.setup_class": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.computation.ops._binary_math_ops",
    "pandas.core.computation.ops._unary_math_ops",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.teardown_class": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_binary_functions": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "numpy.errstate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.expr",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_df_arithmetic_subexpression": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_df_use_case": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_keyword_arg": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_result_types": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_result_types2": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "numpy.complex128",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_unary_functions": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "numpy.errstate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.expr",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_undefined_func": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.assignment_not_inplace": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.eval": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.query_inplace": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.setup_class": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.computation.expr._arith_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.teardown_class": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_4d_ndarray_fails": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_column": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "SyntaxError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_column.f": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_fails": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_in_query": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_attr_expression": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_basic_period_index_boolean_expression": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_basic_period_index_subscript_expression": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_bool_ops_with_constants": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "eval",
    "itertools.product",
    "pandas.core.computation.expr._bool_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_column_in": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_constant": {
  "data": {
   "lineno": 1144
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_date_boolean": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_failing_subscript_with_name_error": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "NameError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_lhs_expression_subscript": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression_local_variable": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression_not_inplace": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_nested_period_index_subscript_expression": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_panel_fails": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.Series",
    "pandas.tests.computation.test_eval.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_arith_ops": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "TypeError",
    "filter",
    "pandas.eval",
    "pandas.tests.computation.test_eval._eval_single_bin",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_bool_ops": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "eval",
    "itertools.product",
    "pandas.core.computation.expr._bool_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_in_ops": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_single_variable": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_truediv": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestOperationsNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.setup_class": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "pandas.core.computation.expr._arith_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.tests.computation.test_eval.TestOperationsNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_bool_ops_with_constants": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "NotImplementedError",
    "eval",
    "itertools.product",
    "pandas.core.computation.expr._bool_ops_syms",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_check_many_exprs": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "pandas.core.computation.expr",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_ampersand": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_and": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_not": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_or": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_pipe": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_simple_bool_ops": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "NotImplementedError",
    "eval",
    "itertools.product",
    "pandas.core.computation.expr._bool_ops_syms",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPandas": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestOperationsNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPandas.setup_class": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.computation.expr._arith_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.tests.computation.test_eval.TestOperationsPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPython": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "pandas.tests.computation.test_eval.TestOperationsNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPython.setup_class": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "pandas.core.computation.expr._arith_ops_syms",
    "pandas.core.computation.expr._cmp_ops_syms",
    "pandas.tests.computation.test_eval.TestOperationsPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestScope.test_global_scope": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "pandas.eval",
    "pandas.tests.computation.test_eval._var_s",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope.test_no_new_globals": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "globals",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope.test_no_new_locals": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "locals",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestTypeCasting": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestTypeCasting.test_binop_typecasting": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "eval",
    "numpy.float32",
    "numpy.float64",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.f",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestValidate": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestValidate.test_validate_bool_args": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "ValueError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.core.computation.expressions._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._USE_NUMEXPR": {
  "data": {
   "shadows": "pandas.core.computation.expressions._USE_NUMEXPR"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._arith_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._binary_math_ops": {
  "data": {
   "shadows": "pandas.core.computation.ops._binary_math_ops"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._binary_ops_dict": {
  "data": {
   "shadows": "pandas.core.computation.ops._binary_ops_dict"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._bool_and_frame": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.core.generic.NDFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._bool_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._bool_ops_syms"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._engines": {
  "data": {
   "shadows": "pandas.core.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._eval_single_bin": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.nan",
    "pandas.core.computation.ops._binary_ops_dict",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.engine_has_neg_frac",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._good_arith_ops": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval._is_datetime": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._is_py3_complex_incompat": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "complex",
    "isinstance",
    "numpy.complexfloating",
    "numpy.isnan",
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._parsers": {
  "data": {
   "lineno": 1756
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval._scalar_skip": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval._series_and_2d_ndarray": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._series_and_frame": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval._series_frame_incompatible": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval._special_case_arith_ops_syms": {
  "data": {
   "shadows": "pandas.core.computation.ops._special_case_arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._unary_math_ops": {
  "data": {
   "shadows": "pandas.core.computation.ops._unary_math_ops"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval._var_s": {
  "data": {
   "lineno": 1716
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.engine": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.core.computation.engines._engines",
    "pandas.core.computation.expressions._NUMEXPR_INSTALLED",
    "pandas.core.computation.expressions._USE_NUMEXPR",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.engine_has_neg_frac": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.core.computation.engines._engines.has_neg_frac",
    "pandas.tests.computation.test_eval.engine"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.expr": {
  "data": {
   "shadows": "pandas.core.computation.expr"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.f": {
  "data": {
   "lineno": 791
  },
  "type": "constant"
 },
 "pandas.tests.computation.test_eval.is_bool": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.parser": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.core.computation.expr._parsers",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.pytables": {
  "data": {
   "shadows": "pandas.core.computation.pytables"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.randbool": {
  "data": {
   "shadows": "pandas.util.testing.randbool"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.should_warn": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "any",
    "map",
    "pandas.compat.reduce",
    "pandas.tests.computation.test_eval._is_datetime",
    "pandas.tests.computation.test_eval.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.test_bad_resolver_raises": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_bool_ops_fails_on_scalars": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "int",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_disallowed_nodes": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "NotImplementedError",
    "VisitorClass",
    "getattr",
    "pandas.tests.computation.test_eval._parsers",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_empty_string_raises": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "ValueError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_inf": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "numpy.inf",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_engine": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "KeyError",
    "pandas.eval",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_local_variable_reference": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_parser": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "KeyError",
    "pandas.eval",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_more_than_one_expression_raises": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_name_error_exprs": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": [
    "NameError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_negate_lt_eq_le": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_numexpr_builtin_raises": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "pandas.core.computation.engines.NumExprClobberingError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_syntax_error_exprs": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.eval",
    "pandas.tests.computation.test_eval.engine",
    "pandas.tests.computation.test_eval.parser",
    "pandas.tests.computation.test_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.computation.test_eval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.computation.test_eval.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_cast": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_cast.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_categorical_dtype": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.object",
    "pandas.core.dtypes.cast.find_common_type",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_datetimetz_dtype": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.int64",
    "numpy.object",
    "pandas.core.dtypes.cast.find_common_type",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_numpy_dtypes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "numpy.complex128",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.core.dtypes.cast.find_common_type",
    "pandas.tests.dtypes.test_cast.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_period_dtype": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.int64",
    "numpy.object",
    "pandas.core.dtypes.cast.find_common_type",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestConvert": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestConvert.test_maybe_convert_objects_copy": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.dtypes.cast.maybe_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.test_infer_dtype_from_array": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.nan",
    "numpy.object_",
    "pandas.Timestamp",
    "pandas.core.dtypes.cast.infer_dtype_from_array",
    "pandas.tests.dtypes.test_cast.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.test_infer_dtype_from_scalar": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "datetime.timedelta",
    "dtypec",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.complex_",
    "numpy.datetime64",
    "numpy.float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.timedelta64",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.cast.infer_dtype_from_scalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_convert_scalar": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.cast.maybe_convert_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_convert_string_to_array": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.core.dtypes.cast.maybe_convert_string_to_object",
    "pandas.util.testing.assert_numpy_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_infer_to_datetimelike": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_datetime_with_timezone": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_datetimelikes_nan": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_downcast_conv": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.find_common_type": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.find_common_type"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.infer_dtype_from_array": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.infer_dtype_from_array"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.infer_dtype_from_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.infer_dtype_from_scalar"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.maybe_convert_objects": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_convert_objects"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.maybe_convert_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_convert_scalar"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.maybe_convert_string_to_object": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_convert_string_to_object"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.maybe_downcast_to_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.cast.maybe_downcast_to_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_cast.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int64",
    "numpy.object",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "module"
 },
 "pandas.tests.dtypes.test_common.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.IntervalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.IntervalDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_categorical_dtype": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_datetimetz_dtype": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_invalid_dtype_error": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "list",
    "numpy.dtype",
    "numpy.float64",
    "numpy.object_",
    "object",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_numpy_dtype": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.common.pandas_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_numpy_string_dtype": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.common.pandas_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_period_dtype": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.bsr_matrix": {
  "data": {
   "shadows": "scipy.sparse.bsr_matrix"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.com": {
  "data": {
   "shadows": "pandas.core.dtypes.common"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.dtypes": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.tests.dtypes.test_common.get_is_dtype_funcs": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "pandas.core.dtypes.common"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_common.test_dtype_equal": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.tests.dtypes.test_common.dtypes",
    "pandas.tests.dtypes.test_common.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_dtype_equal_strict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.common.pandas_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_get_dtype_error_catch": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "func",
    "pandas.tests.dtypes.test_common.get_is_dtype_funcs",
    "pandas.tests.dtypes.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_bool_dtype": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.array",
    "numpy.bool",
    "pandas.Series",
    "pandas.core.dtypes.common.is_bool_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_categorical": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.core.dtypes.common.is_categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_categorical_dtype": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "object",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_complex_dtype": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.complex",
    "pandas.Series",
    "pandas.core.dtypes.common.is_complex_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_any_dtype": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.datetime64",
    "pandas.DatetimeIndex",
    "pandas.core.dtypes.common.is_datetime64_any_dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_dtype": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.datetime64",
    "object",
    "pandas.core.dtypes.common.is_datetime64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_ns_dtype": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.datetime64",
    "pandas.DatetimeIndex",
    "pandas.core.dtypes.common.is_datetime64_ns_dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64tz_dtype": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.core.dtypes.common.is_datetime64tz_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime_arraylike": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.core.dtypes.common.is_datetime_arraylike"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime_or_timedelta_dtype": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.dtypes.common.is_datetimelike",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike_v_numeric": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "pandas.core.dtypes.common.is_datetimelike_v_numeric",
    "pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike_v_object": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "object",
    "pandas.core.dtypes.common.is_datetimelike_v_object",
    "pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimetz": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_extension_type": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.SparseArray",
    "pandas.SparseSeries",
    "pandas.core.dtypes.common.is_extension_type",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.tests.dtypes.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_float_dtype": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_float_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_int64_dtype": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint32",
    "numpy.uint64",
    "pandas.Index",
    "pandas.core.dtypes.common.is_int64_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_int_or_datetime_dtype": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "numpy.uint64",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_int_or_datetime_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_integer_dtype": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "numpy.uint64",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_integer_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_interval_dtype": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "object",
    "pandas.Interval",
    "pandas.IntervalIndex",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_numeric_dtype": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "numpy.uint64",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_numeric_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_numeric_v_string_like": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.dtypes.common.is_numeric_v_string_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_object": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "object",
    "pandas.core.dtypes.common.is_object_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.core.dtypes.common.is_period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period_arraylike": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.core.dtypes.common.is_period_arraylike"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period_dtype": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_scipy_sparse": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.SparseArray",
    "pandas.SparseSeries",
    "pandas.core.dtypes.common.is_scipy_sparse",
    "pandas.util.testing._skip_if_no_scipy",
    "scipy.sparse.bsr_matrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_signed_integer_dtype": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "numpy.uint32",
    "numpy.uint64",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_signed_integer_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_sparse": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.SparseArray",
    "pandas.SparseSeries",
    "pandas.core.dtypes.common.is_sparse",
    "pandas.tests.dtypes.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_string_dtype": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.core.dtypes.common.is_string_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_string_like_dtype": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.core.dtypes.common.is_string_like_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_timedelta64_dtype": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "object",
    "pandas.Series",
    "pandas.core.dtypes.common.is_timedelta64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_timedelta64_ns_dtype": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.core.dtypes.common.is_timedelta64_ns_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_unsigned_integer_dtype": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.uint32",
    "numpy.uint64",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_unsigned_integer_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_needs_i8_conversion": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.check_concat": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "klass",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_datetimelike": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_datetimelike_object": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_period": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.dtypes.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat._concat": {
  "data": {
   "shadows": "pandas.core.dtypes.concat"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_convert": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_dtypes.Base": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.Base.setup_method": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_equality_invalid": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.core.dtypes.common.is_dtype_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_hash": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_numpy_informed": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "numpy.str_",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_pickle": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.round_trip_pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.IntervalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.IntervalDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.tests.dtypes.test_dtypes.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.create": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_basic": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.core.dtypes.common.is_categorical",
    "pandas.core.dtypes.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_construction_from_string": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_equality": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_hash_vs_equality": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hash",
    "pandas.core.dtypes.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_is_dtype": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.core.dtypes.dtypes.CategoricalDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_pickle": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.round_trip_pickle",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.tests.dtypes.test_dtypes.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.create": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_basic": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_coerce_to_dtype": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.core.dtypes.common._coerce_to_dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_compat": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_datetime64_any_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64_ns_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_construction": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_construction_from_string": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_dst": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_empty": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.tests.dtypes.test_dtypes.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_equality": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_hash_vs_equality": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "hash",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_is_dtype": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_parser": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_subclass": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "issubclass",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "pandas.tests.dtypes.test_dtypes.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.create": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_basic": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_breaks",
    "pandas.Series",
    "pandas.core.dtypes.common.is_interval_dtype",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_basic_dtype": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.IntervalIndex.from_breaks",
    "pandas.IntervalIndex.from_tuples",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_caching": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "len",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "pandas.core.dtypes.dtypes.IntervalDtype._cache",
    "pandas.core.dtypes.dtypes.IntervalDtype.reset_cache",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_coerce_to_dtype": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "pandas.core.dtypes.common._coerce_to_dtype",
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction_from_string": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction_generic": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_equality": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_hash_vs_equality": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "hash",
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_identity": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.IntervalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_is_dtype": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "pandas.core.dtypes.dtypes.IntervalDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_subclass": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "issubclass",
    "pandas.core.dtypes.dtypes.IntervalDtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.tests.dtypes.test_dtypes.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.create": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_basic": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.core.dtypes.common.is_period",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_coerce_to_dtype": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.core.dtypes.common._coerce_to_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_compat": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64_ns_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_construction": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.dtypes.common.is_period_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.tests.dtypes.test_dtypes.pytest",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_construction_from_string": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string",
    "pandas.tests.dtypes.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_empty": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.tests.dtypes.test_dtypes.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_equality": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_dtype_equal",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_hash_vs_equality": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "hash",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_identity": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_is_dtype": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_not_string": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_string_dtype",
    "pandas.core.dtypes.dtypes.PeriodDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_subclass": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "issubclass",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes._coerce_to_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common._coerce_to_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_categorical": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_datetime64_any_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_datetime64_ns_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_ns_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_dtype_equal": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_dtype_equal"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_interval_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_interval_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_period": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_period_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_period_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.is_string_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_string_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_generic": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_generic.TestABCClasses": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "object",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.SparseArray",
    "pandas.period_range",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_generic.TestABCClasses.test_abc_types": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.Period",
    "pandas.Series",
    "pandas.UInt64Index",
    "pandas.core.dtypes.generic.ABCCategorical",
    "pandas.core.dtypes.generic.ABCCategoricalIndex",
    "pandas.core.dtypes.generic.ABCDataFrame",
    "pandas.core.dtypes.generic.ABCDatetimeIndex",
    "pandas.core.dtypes.generic.ABCFloat64Index",
    "pandas.core.dtypes.generic.ABCIndex",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCInt64Index",
    "pandas.core.dtypes.generic.ABCMultiIndex",
    "pandas.core.dtypes.generic.ABCPanel",
    "pandas.core.dtypes.generic.ABCPeriod",
    "pandas.core.dtypes.generic.ABCPeriodIndex",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.dtypes.generic.ABCSparseArray",
    "pandas.core.dtypes.generic.ABCSparseSeries",
    "pandas.core.dtypes.generic.ABCTimedeltaIndex",
    "pandas.core.dtypes.generic.ABCUInt64Index",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_generic.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_generic.gt": {
  "data": {
   "shadows": "pandas.core.dtypes.generic"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_generic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_generic.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_inference.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.TestInference": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_infs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "pandas._libs.lib.maybe_convert_numeric",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_non_hashable": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_int64_uint64": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "object",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_uint64": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64",
    "object",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_uint64_nan": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_infer_dtype_bytes": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "object",
    "pandas._libs.lib.infer_dtype",
    "pandas.compat.PY2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_isinf_scalar": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "pandas._libs.lib.isneginf_scalar",
    "pandas._libs.lib.isposinf_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_numeric_infinities": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "object",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.compat.u",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_numeric_post_floatify_nan": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "object",
    "pandas._libs.lib.maybe_convert_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_objects_uint64": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.uint64",
    "object",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_mixed_dtypes_remain_object_array": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "object",
    "pandas._libs.lib.maybe_convert_objects",
    "pandas.tests.dtypes.test_inference.pytz",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_scientific_no_exponent": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "pandas._libs.lib.maybe_convert_numeric",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_bool": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_bool"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_datetime_dtypes": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_datetime64_any_dtype",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64_ns_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_float": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_float"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_integer": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_number": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_number"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_timedelta": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.core.dtypes.common.is_timedelta64_ns_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_bools": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.bool_",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_categorical": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_date": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_datetime": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_floats": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_all_nan_nat_like": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_datetime": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_period": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "object",
    "pandas.NaT",
    "pandas.Period",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_timedelta": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_integers": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_is_datetimelike_array_all_nan_nat_like": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas._libs.lib.is_datetime64_array",
    "pandas._libs.lib.is_datetime_array",
    "pandas._libs.lib.is_timedelta64_array",
    "pandas._libs.lib.is_timedelta_array",
    "pandas._libs.lib.is_timedelta_or_timedelta64_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_is_period": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Timestamp",
    "pandas._libs.lib.is_period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_length_zero": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.array",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_object": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "numpy.array",
    "pandas._libs.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_string": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_to_object_array_tuples": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ImportError",
    "collections.namedtuple",
    "pandas._libs.lib.to_object_array_tuples",
    "record"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_to_object_array_width": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas._libs.lib.to_object_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_unicode": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_builtin_nonscalars": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "Ellipsis",
    "pandas.core.dtypes.common.is_scalar",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_builtin_scalars": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.compat.u",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_array_scalars": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "numpy.bytes_",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "numpy.str_",
    "numpy.timedelta64",
    "numpy.unicode_",
    "pandas.compat.u",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_arrays": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_zerodim_arrays": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas._libs.lib.item_from_zerodim",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_pandas_scalars": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_lisscalar_pandas_containers": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "pandas.core.dtypes.common.is_scalar",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference._ensure_categorical": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_categorical"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference._ensure_int32": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_int32"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.inference": {
  "data": {
   "shadows": "pandas.core.dtypes.inference"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_bool": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_datetime64_any_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_any_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_datetime64_ns_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_ns_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_number": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_number"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_scipy_sparse": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scipy_sparse"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.is_timedelta64_ns_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_ns_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.test_datetimeindex_from_empty_datetime64_array": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_ensure_categorical": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "pandas.Categorical",
    "pandas.core.dtypes.common._ensure_categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_ensure_int32": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "pandas.core.dtypes.common._ensure_int32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_dict_like": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.inference.is_dict_like",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_file_like": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "MockFile",
    "MockFile.__iter__",
    "MockFile.read",
    "MockFile.write",
    "is_file",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.core.dtypes.inference.is_file_like",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_file_like.MockFile": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "HashableClass",
    "OldStyleClass",
    "UnhashableClass1",
    "UnhashableClass2",
    "hash",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "pandas.compat.PY2",
    "pandas.core.dtypes.inference.is_hashable",
    "pandas.tests.dtypes.test_inference.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.HashableClass": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.OldStyleClass": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass1": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass2": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass2.__hash__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_list_like": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.core.dtypes.inference.is_list_like",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_named_tuple": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.core.dtypes.inference.is_named_tuple",
    "pandas.tests.dtypes.test_inference.collections"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_nested_list_like_fails": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.dtypes.inference.is_nested_list_like",
    "pandas.tests.dtypes.test_inference.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_nested_list_like_passes": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "outer",
    "pandas.Series",
    "pandas.core.dtypes.inference.is_list_like",
    "pandas.tests.dtypes.test_inference.pytest",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_re": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object",
    "pandas.core.dtypes.inference.is_re",
    "pandas.tests.dtypes.test_inference.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_recompilable": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "object",
    "pandas.compat.u",
    "pandas.core.dtypes.inference.is_re_compilable",
    "pandas.tests.dtypes.test_inference.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_scipy_sparse": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.dtypes.common.is_scipy_sparse",
    "pandas.util.testing._skip_if_no_scipy",
    "spmatrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "A",
    "is_seq",
    "numpy.int64",
    "pandas.compat.u",
    "pandas.core.dtypes.inference.is_sequence"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence.A": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence.A.__getitem__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_nan_to_nat_conversions": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.lrange",
    "pandas.core.dtypes.missing.isnull",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_inference.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_io.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_downcast_int64": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint8",
    "pandas._libs.lib.downcast_int64",
    "pandas._libs.parsers.na_values",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_bools": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.convert_sql_column",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_decimals": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.nan",
    "pandas._libs.lib.convert_sql_column",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_floats": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.convert_sql_column",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_ints": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas._libs.lib.convert_sql_column",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_longs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas._libs.lib.convert_sql_column",
    "pandas.compat.long",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_strings": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.convert_sql_column",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_unicode": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.convert_sql_column",
    "pandas.compat.u",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.na_values": {
  "data": {
   "shadows": "pandas._libs.parsers.na_values"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_io.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.dtypes.test_missing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_0d_array": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.core.dtypes.missing.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_datetime_other_units": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_empty_object": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "numpy.empty",
    "numpy.ones",
    "object",
    "pandas.core.dtypes.missing.isnull",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_isnull": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.NaN",
    "numpy.inf",
    "pandas.Series",
    "pandas.core.dtypes.missing.isnull",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.add_nans_panel4d",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeMixedDataFrame",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makePeriodFrame",
    "pandas.util.testing.makePeriodPanel",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_isnull_datetime": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.now",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DatetimeIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_isnull_lists": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.u",
    "pandas.core.dtypes.missing.isnull",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_isnull_nat": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.NaT",
    "pandas.core.dtypes.missing.isnull",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_isnull_numpy_nat": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.core.dtypes.missing.isnull",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_period": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNull.test_timedelta_other_units": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.array_equivalent": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.array_equivalent"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.isnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.isnull"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.na_value_for_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.na_value_for_dtype"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.notnull": {
  "data": {
   "shadows": "pandas.core.dtypes.missing.notnull"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Float64Index",
    "pandas.TimedeltaIndex",
    "pandas.core.dtypes.missing.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent_compat": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pandas.core.dtypes.missing.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent_str": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.dtypes.missing.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_na_value_for_dtype": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.isnan",
    "pandas.NaT",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.dtypes.missing.na_value_for_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_notnull": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "numpy.NaN",
    "numpy.array",
    "numpy.inf",
    "pandas.Series",
    "pandas.core.config.option_context",
    "pandas.core.dtypes.missing.isnull",
    "pandas.core.dtypes.missing.notnull",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.dtypes.test_missing.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "int",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._frame",
    "pandas.tests.frame.common._mixed_frame",
    "pandas.tests.frame.common._seriesd",
    "pandas.tests.frame.common._tsd",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.common.TestData": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.common.TestData.all_mixed": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.empty": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.frame.common._frame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame2": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.frame.common._frame2",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.intframe": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._intframe",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common._frame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float2": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common._frame2",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_frame": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.tests.frame.common._mixed_frame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_int": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.tests.frame.common._intframe",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.simple": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts1": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts2": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tsframe": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.tests.frame.common._tsframe",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tzframe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_float": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_int": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._frame": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._frame2": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._intframe": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._mixed_frame": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._seriesd": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._tsd": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._tsframe": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.frame.common.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_alter_axes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_assign_columns": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_construction_with_categorical_index": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeCategoricalIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_dti_set_index_reindex": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.tests.frame.test_alter_axes.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "str.lower",
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_bug": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_inplace": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_multiindex": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_nocopy": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_objects": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reorder_levels": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_level": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_multiindex_col": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_multiindex_nan": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_range": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_right_dtype": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_with_datetimeindex_cols": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_with_intervals": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.IntervalIndex.from_breaks",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_columns": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_bug": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast_datetimeindex": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_alter_axes.pytz",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_dst": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_empty_column": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_multiindexcolumns": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_names": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_nonuniq": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_pass_arrays": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_preserve_categorical_dtype": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_timezone": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_set_reset_index": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.cut",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_setitem": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "c",
    "isinstance",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.IntervalIndex",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.dtypes.common.is_interval_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.cut",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.is_interval_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_interval_dtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_analytics.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "NonzeroFail",
    "ValueError",
    "alternative",
    "f",
    "getattr",
    "len",
    "numpy.NaN",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail": {
  "data": {
   "lineno": 1115
  },
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail.__nonzero__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.skipna_wrapper": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.wrapper": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_method": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "ValueError",
    "_f",
    "alternative",
    "f",
    "getattr",
    "isinstance",
    "len",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.wrapper": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_any_all": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_bool_describe_in_mixed_frame": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_built_in_round": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_frame_equal",
    "round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip": {
  "data": {
   "lineno": 1808
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_frame": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_series": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_mixed_numeric": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_constant": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_cov_independent_index_column": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "getattr",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int_and_boolean": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_kendall": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_non_numeric": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_nooverlap": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_pearson": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_spearman": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_matches_corrcoef": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.corrcoef",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_series": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_with_objects": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.notnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count_objects": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cov": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.cov",
    "numpy.linspace",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummax": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cummax",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummin": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cummin",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumprod": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "numpy.nan",
    "numpy.shape",
    "pandas.Series.cumprod",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cumsum",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum_corner": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dataframe_clip": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_bool_frame": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_categorical_columns": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_datetime_columns": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_timedelta_values": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dot": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA_for_take_all": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_for_take_all": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_inplace": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_tuple": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmax": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series.idxmax",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmin": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series.idxmin",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_against_series": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df_dupe_values": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dict": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dupe_self": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_empty": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_empty_datetimelike": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_multiIndex": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_tuples": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_with_string_scalar": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt.alt": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mad": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_max": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean_corner": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median.wrapper": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner": {
  "data": {
   "lineno": 975
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner.wrapper": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_min": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mixed_ops": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.DataFrame",
    "pandas.core.nanops._USE_BOTTLENECK"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mode": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.util.testing.assert_frame_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numeric_only_flag": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numpy_round": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "ValueError",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nunique": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.algorithms.unique1d",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_operators_timedelta64": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "abs",
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_product": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_reduce_mixed_frame": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "distutils.version.LooseVersion",
    "numpy.nan",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.tests.frame.test_analytics.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_issue": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_mixed_type": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sem": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.std",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.core.nanops.nansem",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew.alt": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stat_operators_attempt_obj_array": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "numpy.object_",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stats_mixed_type": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bool": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bools": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_corner": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_object": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "datetime.timedelta",
    "int",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_var_std": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.repeat",
    "numpy.std",
    "numpy.var",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest": {
  "data": {
   "lineno": 1975,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "pandas.compat.product",
    "pandas.tests.frame.test_analytics.df_strings",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_all_dtypes": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "list",
    "pandas.tests.frame.test_analytics.df_main_dtypes",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_duplicate_index": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tests.frame.test_analytics.df_duplicates",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_error": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "pandas.compat.product",
    "pandas.tests.frame.test_analytics.df_main_dtypes",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_identical_values": {
  "data": {
   "lineno": 2033,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_series_broadcasting": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics._coerce": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.algorithms": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.df_duplicates": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.df_main_dtypes": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.frame.test_analytics.pytest",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.df_strings": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "list",
    "numpy.random.permutation",
    "pandas.DataFrame",
    "pandas.tests.frame.test_analytics.pytest",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_api.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.SharedWithSparse": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_add_prefix_suffix": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_copy_index_name_checking": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_get_value": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_getitem_pop_assign_name": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_api.SharedWithSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_array_interface": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "numpy.errstate",
    "numpy.sqrt",
    "pandas.util.testing.assert_frame_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_as_matrix": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "enumerate",
    "numpy.isnan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_axis_aliases": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_column_contains_typeerror": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_deepcopy": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_empty_nonzero": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_get_agg_axis": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_api.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_get_axis": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_inplace_return_self": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "_check_f",
    "f",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_inplace_return_self._check_f": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_iter": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_iteritems": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_iteritems_names": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_iterrows": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_itertuples": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "enumerate",
    "hasattr",
    "isinstance",
    "list",
    "next",
    "numpy.integer",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.tests.frame.test_api.sys",
    "pandas.util.testing.assert_series_equal",
    "repr",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_keys": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "getkeys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_len": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_more_asMatrix": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_new_empty_index": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_nonzero": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_not_hashable": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.DataFrame",
    "pandas.tests.frame.test_api.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_repr_with_mi_nat": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_series_put_names": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_swapaxes": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_api.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_transpose": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_transpose_get_view": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_values": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_with_datetimelikes": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_api.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_api.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_apply.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_dict_nested_renaming_depr": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_reduce": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_apply.zip_frames",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_transform": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.errstate",
    "numpy.sqrt",
    "pandas.MultiIndex.from_product",
    "pandas.tests.frame.test_apply.zip_frames",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_demo": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_non_callable_aggregates": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_nuiscance_columns": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_transform_and_agg_err": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.DataFrame",
    "pandas.tests.frame.test_apply.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_transform_and_agg_err.f": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.errstate",
    "numpy.mean",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.tests.frame.test_apply.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_attach_name": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_axis1": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_broadcast": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "datetime.datetime",
    "f",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug.f": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_convert_objects": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_dict": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_differently_indexed": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series.describe",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "numpy.sqrt",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_check",
    "isinstance",
    "numpy.errstate",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_checkit",
    "f",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.tests.frame.test_apply.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check._checkit": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_ignore_failures": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_datetimelike": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_dtype_corner": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform2": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_multi_index": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_non_numpy_dtype": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_raw": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_reduce_Series": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_standard_nonunique": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.add_some": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.agg_and_add": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.subtract_and_divide": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_yield_list": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "list",
    "numpy.random.random",
    "object",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "round",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap_box": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_frame_apply_dont_convert_datetime64": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_with_string_args": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "getattr",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.zip_frames": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "f",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_asof.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.setup_method": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_all_nans": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_basic": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_missing": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_subset": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_asof.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_asof.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_axis_select_reindex.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align_fill": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_inner": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_left": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_outer": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_right": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_int_fill_bug": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_multiindex": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_series_combinations": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lzip",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_col_still_multiindex": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_multiindex_not_lexsorted": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.errors.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_names": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_corner": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_regex_search": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_merge_join_different_levels": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.merge",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.isnan",
    "pandas.Index",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axes": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axis": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_boolean": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.object_",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_columns": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_columns_method": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_corner": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_dups": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_fill_value": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_int": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_like": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_multi": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_name_remains": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_nan": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_objects": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_with_nans": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_select": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_take": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "IndexError",
    "pandas.tests.frame.test_axis_select_reindex.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_block_internals.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_consolidate": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_lcd": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_numeric_cols": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_boolean_set_uncons": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_cast_internals": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_datetime64": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_deprecation": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_inplace": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "chr",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_conversions": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_mixed": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "pandas.compat.is_platform_windows",
    "pandas.tests.frame.test_block_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes.f": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.DataFrame",
    "pandas.tests.frame.test_block_internals.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_with_convert": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.asarray",
    "numpy.complex_",
    "numpy.float_",
    "numpy.int64",
    "numpy.nan",
    "numpy.object_",
    "numpy.uint64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects_no_conversion": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy_blocks": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_equals_different_blocks": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_X_columns": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_numeric_data": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.e",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "numpy.pi",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_is_mixed_type": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_modify_values": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_no_copy_blocks": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_pickle": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_stale_cached_series_bug_473": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_strange_column_corruption_issue": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_combine_concat.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_align_nan": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_int": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_mixed": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_mixed_bug": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_period": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_timedelta": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_timezone": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_concat_datetime_datetime64_frame": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.lrange",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_dtypes": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_empty_dataframe": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_list_of_series_dicts": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_series_dict": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_axis_parameter": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_multiple_frames_dtypes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_multiple_tzs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict",
    "object",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_named_keys": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_numerical_names": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_tuple_keys": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "list",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_join_multiindex_leftright": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_join_str_datetime": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_dtypes": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_filtered": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_from_non_df": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_nooverwrite": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_raise": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameUpdate": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameUpdate.test_update_nan": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_constructors.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_constructors.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_datetime64_mixed_index_ctor_1681": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_dict_constructor_datetime64_1680": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_timeseries_to_records": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_from_dict": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_from_index": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors._check_basic_constructor": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "empty",
    "float",
    "len",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_DataFrame": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_copy_bug": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_differently_indexed": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_named": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_arrays_and_scalars": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_bool": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bool",
    "numpy.bool_",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_cast_failure": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.ones",
    "object",
    "pandas.DataFrame",
    "pandas.tests.frame.test_constructors.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_column_duplicates": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_complex_dtypes": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_corner": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.object_",
    "object",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_datetimes_with_nulls": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.concatenate",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.isnull",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_block": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_cast": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "numpy.float64",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.makeStringIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "create_data",
    "datetime.datetime.strptime",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index.create_data": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_dont_upcast": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_multiindex": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "check",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_of_tuples": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "create_data",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index.create_data": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_copy": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_list_data": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_nocast_view": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "empty_gen",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list.empty_gen": {
  "data": {
   "lineno": 808
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_with_string_dtype": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "numpy.str_",
    "numpy.unicode_",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_error_msgs": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.empty",
    "numpy.random.rand",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_for_list_with_dtypes": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_frame_copy": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_from_items": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas._libs.lib.list_to_object_array",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_generator": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator_failure": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_frames": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "CustomDict",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts.CustomDict": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_dicts": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_lists": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_series": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_lists_to_object_dtype": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_manager_resize": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "float",
    "numpy.all",
    "numpy.asarray",
    "numpy.ma.masked_all",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray_nonfloat": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int64",
    "numpy.ma.copy",
    "numpy.ma.masked_all",
    "object",
    "pandas.DataFrame",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_miscast_na_int_dtype": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mix_series_nonseries": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dict_and_Series": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "_check_mixed_dtypes",
    "_make_mixed_dtypes_df",
    "dict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._check_mixed_dtypes": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES",
    "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._make_mixed_dtypes_df": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.lzip",
    "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES",
    "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_more": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mrecarray": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "assert_fr_equal",
    "dict",
    "hasattr",
    "numpy.array",
    "numpy.ma.masked_all",
    "numpy.ma.masked_array",
    "numpy.ma.mrecords.fromarrays",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tests.frame.test_constructors.functools",
    "pandas.tests.frame.test_constructors.itertools",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_multi_index": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_namedtuples": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "collections.namedtuple",
    "list",
    "named_tuple",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray_copy": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordered_dict_conflicting_orders": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordered_dict_preserve_order": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordereddict": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.compat.lrange",
    "pandas.compat.zip",
    "pandas.tests.frame.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_orient": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_dict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_overflow_int64": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.uint64",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.compat.long",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_period": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ragged": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_rec": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar_inference": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "DummyContainer",
    "list",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.compat.range",
    "pandas.tests.frame.test_constructors.array",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "pandas.tests.frame.test_constructors.collections"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__getitem__": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__init__": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__len__": {
  "data": {
   "lineno": 842
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_series_copy": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_single_value": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "numpy.array",
    "numpy.zeros",
    "object",
    "pandas.DataFrame",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_subclass_dict": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.TestSubDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_tuples": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_datetimes": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_constructors.pytz",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_embedded_frames": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "check",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check.f": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_bad_index_column": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_columns_not_modified": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_decimal": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.float64",
    "numpy.isnan",
    "object",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_dictlike": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "bool",
    "dict",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_duplicates": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty_with_nonempty_fields_gh3682": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_iterator": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "iter",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_len0_with_columns": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "len",
    "list_generator",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator.list_generator": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_misc_brokenness": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "Record",
    "pandas.DataFrame.from_records",
    "pandas.compat.lmap",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__getitem__": {
  "data": {
   "lineno": 1874
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__init__": {
  "data": {
   "lineno": 1871
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__iter__": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_nones": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_sequencelike": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "bool",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.recarray",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.compat.iteritems",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "create_dict",
    "pandas.DataFrame.from_records",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name.create_dict": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_to_records": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "tuple_generator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator.tuple_generator": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_datetimes": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "numpy.array",
    "numpy.core.records.fromarrays",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.is_platform_little_endian",
    "pandas.tests.frame.test_constructors.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_index_data": {
  "data": {
   "lineno": 1847,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_nested_dict_frame_constructor": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_to_frame_with_falsey_names": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.is_platform_little_endian": {
  "data": {
   "shadows": "pandas.compat.is_platform_little_endian"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.mrecords": {
  "data": {
   "shadows": "numpy.ma.mrecords"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_convert_to.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.Parser": {
  "data": {
   "shadows": "email.parser.Parser"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_dict_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_invalid_orient": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.frame.test_convert_to.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_timestamp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_dt64": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_floats": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_index_name": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_Mapping_type": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "all",
    "email.parser.Parser",
    "pandas.DataFrame.from_records",
    "pandas.tests.frame.test_convert_to.collections",
    "pandas.tests.frame.test_convert_to.email"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_multindex": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_unicode_column_names": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.rec.array",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_unicode_index": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.rec.array",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.email": {
  "data": {
   "shadows": "email"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.test_to_records_datetimeindex_with_tz": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_convert_to.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_dtypes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_arg_for_errors_in_astype": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.float64",
    "numpy.int8",
    "pandas.DataFrame",
    "pandas.tests.frame.test_dtypes.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_check_cast",
    "int",
    "numpy.array",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype._check_cast": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "list",
    "pandas.compat.iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_cast_nan_inf_int": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.int32",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_dict_like": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "dtype_class",
    "numpy.float32",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.frame.test_dtypes.pytest",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_duplicate_col": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_str": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.compat.text_type",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_exclude_string": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_view": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_concat_empty_dataframe_dtypes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "numpy.bool_",
    "numpy.float64",
    "numpy.int32",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_datetime_with_tz_dtypes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_are_correct_after_column_slice": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list",
    "numpy.float_",
    "odict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_gh8722": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dict",
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.option_context",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_empty_frame_dtypes_ftypes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object",
    "odict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_ftypes": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_arg_raises": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_datetime64": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_datetime_with_tz": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_empty": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.number",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude_include": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.bool_",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.arange",
    "numpy.number",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tests.frame.test_dtypes.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_not_an_attr_but_still_valid_dtype": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "numpy",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_raises_on_string": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_str_raises": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "NameError",
    "TypeError",
    "list",
    "numpy.arange",
    "numpy.string_",
    "numpy.unicode_",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_typecodes": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "list",
    "numpy.random.random",
    "numpy.typecodes",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_timedeltas": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_astype": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_astype_str": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_interleave": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_indexing.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.IndexingError": {
  "data": {
   "shadows": "pandas.core.indexing.IndexingError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_at_time_between_time_datetimeindex": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_index_empty_corner": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.array",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing_mixed": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.long",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_delitem_corner": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_int_labels": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.common.SettingWithCopyError",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed.f": {
  "data": {
   "lineno": 939
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_index_int_labels_exceptions": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_indexing.pytest",
    "slice",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_setitem_int_labels": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_set_value_no_partial_indexing": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_value": {
  "data": {
   "lineno": 1629
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getattr": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.random.randn",
    "pandas.compat.iteritems",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dict",
    "numpy.nan",
    "numpy.where",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_casting": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "float",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_iadd": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "_checkit",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list._checkit": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_callable": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_dupe_cols": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_empty_frame_with_boolean": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_1d": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_2d": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_boolean": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_scalar": {
  "data": {
   "lineno": 1277
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_slice_integers_step": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_iterator": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_boolean_duplicates_multiple": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_float_duplicates": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_mixed_integer": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list_duplicates": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_misaligned": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_multi": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_fancy_exceptions": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "pandas.core.indexing.IndexingError",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels.f": {
  "data": {
   "lineno": 1436
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_integer_slice_keyerrors": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_bool_keyerror": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_duplicates": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_negative_integers": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "chr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_non_ix_labels": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_head_tail": {
  "data": {
   "lineno": 2862,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iat": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_col": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.common.SettingWithCopyError",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_col.f": {
  "data": {
   "lineno": 1811
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_duplicates": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_row": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.common.SettingWithCopyError",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_row.f": {
  "data": {
   "lineno": 1780
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_sparse_propegate_fill_value": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "len",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_index_namedtuple": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "IndexType",
    "collections.namedtuple",
    "pandas.DataFrame",
    "pandas.Index",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_align": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_dup": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_frame_align": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_multiindex": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_nonint_index": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "alt",
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.alt": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.testit": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "alt",
    "len",
    "list",
    "numpy.object_",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_callable": {
  "data": {
   "lineno": 2841,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_edge_case_1xN_frame": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_inplace": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_nested_exception": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "Exception",
    "UnboundLocalError",
    "list",
    "pandas.DataFrame",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_non_monotonic_reindex_methods": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_frame_add_nat": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.issubdtype",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.common.isnull",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "itertools.permutations",
    "list",
    "numpy.concatenate",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "verify",
    "verify_first_level"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify_first_level": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.nonzero",
    "pandas.compat.map",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_methods": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_dataframe_column_ns_dtype": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.dtype",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value": {
  "data": {
   "lineno": 1671
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_resize": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "ValueError",
    "numpy.object_",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.isnull",
    "pandas.tests.frame.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_with_index_dtype_change": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setattr_column": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.array",
    "numpy.column_stack",
    "numpy.nan",
    "numpy.object_",
    "numpy.random.randn",
    "numpy.ravel",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.common.SettingWithCopyError",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem.f": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_None": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_always_copy": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_ambig": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "decimal.Decimal",
    "len",
    "numpy.object_",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "TypeError",
    "numpy.abs",
    "numpy.nan",
    "numpy.putmask",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean_column": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_callable": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_cast": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int64",
    "numpy.int8",
    "numpy.integer",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_clear_caches": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "len",
    "numpy.arange",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner2": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetime_coercion": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetimelike_with_inference": {
  "data": {
   "lineno": 2106,
   "symbols_in_volume": [
    "datetime.timedelta",
    "list",
    "numpy.array",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty_frame_with_boolean": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_1d": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_2d": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_boolean": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_mixed_2d": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_scalar": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame_align": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.int_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_not_dataframe": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_of_tuples": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_mulit_index": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_other_callable": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed_datetime": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_tuple": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_sparse_value": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_sparse_value": {
  "data": {
   "lineno": 2075,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_tz_aware_datetime_column": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_single_element_ix_dont_upcast": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "dict",
    "int",
    "issubclass",
    "numpy.integer",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.dtypes.common.is_integer",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_slice_floats": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_type_error_multiindex": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "ValueError",
    "_check_align",
    "_check_get",
    "_check_set",
    "_safe_add",
    "all",
    "dict",
    "issubclass",
    "numpy.integer",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_align": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "numpy.where",
    "pandas.Series",
    "pandas.core.dtypes.common.is_scalar",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_get": {
  "data": {
   "lineno": 2340,
   "symbols_in_volume": [
    "_safe_add",
    "numpy.where",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_set": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "issubclass",
    "numpy.dtype",
    "numpy.integer",
    "numpy.nan",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "dict",
    "is_ok",
    "pandas.DataFrame",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add.is_ok": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align": {
  "data": {
   "lineno": 2640,
   "symbols_in_volume": [
    "create",
    "pandas.DataFrame",
    "pandas.notnull",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align.create": {
  "data": {
   "lineno": 2642,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_array_like": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_axis": {
  "data": {
   "lineno": 2680,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_bug": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_callable": {
  "data": {
   "lineno": 2784,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_complex": {
  "data": {
   "lineno": 2672,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_dataframe_col_match": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_datetime": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_invalid_input": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_ndframe_align": {
  "data": {
   "lineno": 2534,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_none": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "KeyError",
    "numpy.isnan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.frame.test_indexing.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_corner": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_duplicates": {
  "data": {
   "lineno": 2228,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_keep_level": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_view": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ": {
  "data": {
   "lineno": 2915,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.setup_method": {
  "data": {
   "lineno": 2917,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_set_reset": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_setitem": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "id",
    "pandas.NaT",
    "pandas.Series",
    "pandas.notnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_transpose": {
  "data": {
   "lineno": 2965,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64": {
  "data": {
   "lineno": 2973,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.setup_method": {
  "data": {
   "lineno": 2975,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.uint64",
    "pandas.DataFrame",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_set_reset": {
  "data": {
   "lineno": 3007,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_setitem": {
  "data": {
   "lineno": 2981,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.NaT",
    "pandas.Series",
    "pandas.notnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_transpose": {
  "data": {
   "lineno": 3019,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_join.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.frame": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_join.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.frame_with_period_index": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.PeriodIndex",
    "pandas.tests.frame.test_join.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.left": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_join.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_join.right": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_join.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_join.left",
    "pandas.tests.frame.test_join.pytest",
    "pandas.tests.frame.test_join.right",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Index",
    "pandas.tests.frame.test_join.frame",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index_more": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.tests.frame.test_join.frame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index_series": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_join.frame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_overlap": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pandas.tests.frame.test_join.frame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_period_index": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas.DataFrame",
    "pandas.tests.frame.test_join.frame_with_period_index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_join.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.frame.test_missing.scipy"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_missing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_alt_scipy": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing._skip_if_no_pchip",
    "pandas.tests.frame.test_missing.scipy",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_bad_method": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_basic": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_combo": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_ignore_all_good": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace_row": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_leading_nans": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_nan_idx": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_raise_on_only_mixed": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_rowwise": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_various": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing._is_scipy_ge_0190",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_rowwise_alt": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_bfill": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropEmptyRows": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropIncompleteRows": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_drop_and_dropna_caching": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_missing.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_corner": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_multiple_axes": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_ffill": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_corner": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.tests.frame.test_missing.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_col_reordering": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_columns": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dataframe": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_datetime_columns": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dict_series": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_downcast": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dtype_conversion": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_inplace": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_method": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_value": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_skip_certain_blocks": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_frame_fillna_limit": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_frame_pad_backfill_limit": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing._check_mixed_float": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_float"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing._is_scipy_ge_0190": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_missing._skip_if_no_pchip": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.frame.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.pchip_interpolate": {
  "data": {
   "shadows": "scipy.interpolate.pchip_interpolate"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_mutate_columns.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_alphabetical": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_bad": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "pandas.DataFrame",
    "pandas.tests.frame.test_mutate_columns.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_multiple": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_delitem": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_delitem_multiindex": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.tests.frame.test_mutate_columns.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.frame.test_mutate_columns.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_benchmark": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_column_bug_4032": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_error_msmgs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop_non_unique_cols": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_nonunique_indexes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_as_matrix_duplicates": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups2": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "check",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.frame.test_nonunique_indexes.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing.check": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing2": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "check",
    "dict",
    "getattr",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.u",
    "pandas.concat",
    "pandas.date_range",
    "pandas.merge",
    "pandas.tests.frame.test_nonunique_indexes.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations.check": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_columns_with_dups": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.tests.frame.test_nonunique_indexes.pytest",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_insert_with_columns_dups": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_set_value_by_index": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_operators.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators._test_op": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "op",
    "pandas.util.testing.assert_series_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_alignment_non_pandas": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "ValueError",
    "align",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.ops._align_method_FRAME",
    "pandas.tests.frame.test_operators.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_frame": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "aliases",
    "aliases.get",
    "dict",
    "f",
    "getattr",
    "numpy.nan",
    "numpy.ones",
    "op",
    "pandas.compat.PY3",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.tests.frame.common._check_mixed_int",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "r_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_series": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy.arange",
    "numpy.inf",
    "numpy.nan",
    "op",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_getitem_commute": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_mixed": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_non_pandas_object": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_binary_ops_align": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "getattr",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "op",
    "opa",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ValueError",
    "_check_unaligned_frame",
    "_test_seq",
    "datetime.datetime.now",
    "f",
    "getattr",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.randn",
    "o",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._check_unaligned_frame": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "meth",
    "op",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._test_seq": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_boolean_comparison": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.atleast_2d",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFrame": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dict",
    "numpy.isnan",
    "numpy.nan",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFunc": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineSeries": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combine_generic": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "numpy.add",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "check",
    "len",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid.check": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.frame.test_operators.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_protected_from_errstate": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nan",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.makeTimeDataFrame",
    "test_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons.test_comp": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_div": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.errstate",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_dti_tz_convert_to_utc": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_float_none_comparison": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_operators.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_alignment": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_identity": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_invert": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_check_bin_op",
    "_check_unary_op",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_bin_op": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.bool_",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_unary_op": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.bool_",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_typeerror": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.PY3",
    "pandas.tests.frame.test_operators.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_with_nas": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_modulo": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.errstate",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_neg": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean.f": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_none_as_na": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "op",
    "pandas.DataFrame",
    "pandas.core.common.isnull",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_ops_np_scalar": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "f",
    "list",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_return_dtypes_bool_op_costant": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_string_comparison": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_timestamp_compare": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "getattr",
    "left_f",
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.rands",
    "right_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators._check_mixed_float": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_float"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators._check_mixed_int": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_int"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_period.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_align_frame": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.tests.frame.test_period._permute",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_as_frame_columns": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_index_to_string": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_setitem": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_to_time_stamp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "_get_with_delta",
    "datetime.timedelta",
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_to_time_stamp._get_with_delta": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period._permute": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_period.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_period.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_quantile.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_mixed": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.frame.test_quantile.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_mixed.f": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_parameter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_quantile.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_box": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_datetime": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_empty": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_interpolation": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas._np_version_under1p11",
    "pandas._np_version_under1p9",
    "pandas.tests.frame.test_quantile.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_interpolation_np_lt_1p9": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas._np_version_under1p9",
    "pandas.tests.frame.test_quantile.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_invalid": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_multi": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_nan": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_nat": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile._np_version_under1p11": {
  "data": {
   "shadows": "pandas._np_version_under1p11"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.percentile": {
  "data": {
   "shadows": "numpy.percentile"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_query_eval.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.ENGINES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_query_eval.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.NumExprClobberingError": {
  "data": {
   "shadows": "pandas.core.computation.engines.NumExprClobberingError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.PARSERS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_query_eval.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.TestCompat": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.setup_method": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_None": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_default": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_numexpr": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ImportError",
    "pandas.core.computation._NUMEXPR_INSTALLED",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_python": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_eval_resolvers_as_list": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_ops": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "eval",
    "getattr",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_query_empty_string": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_query_non_str": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setup_class": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setup_method": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.teardown_method": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_bool_arith_expr": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_invalid_type_for_operator_raises": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_simple_expr": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython.setup_class": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas.setup_class": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython.setup_class": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.setup_class": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.teardown_class": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_at_inside_string": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_chained_cmp_and_in": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT_duplicates": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_no_attribute_access": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_NaT": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_attribute_access": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_non_date": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_index_resolvers_come_after_columns_with_the_same_name": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.r_",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_inf": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "dict",
    "f",
    "numpy.inf",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tests.frame.test_query_eval.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_syntax": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_variable_with_in": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_raises_on_local_self_reference": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_scope": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_builtin": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.core.computation.engines.NumExprClobberingError",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_doesnt_pickup_local": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.core.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_with_name": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_without_name": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_scope": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_syntax_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_undefined_local": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.core.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.setup_class": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT_duplicates": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_no_attribute_access": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_with_NaT": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_nested_scope": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "SyntaxError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.computation.ops.UndefinedVariableError",
    "pandas.eval",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.setup_class": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.test_query_builtin": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.setup_class": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.test_query_builtin": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_object_array_eq_ne": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_lex_compare_strings": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "func",
    "list",
    "numpy.arange",
    "numpy.random.choice",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.operator",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_single_element_booleans": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_string_scalar_variable": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_special_character": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_strings": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_string_columns": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_list_query_method": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_query_method": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_multiindex_get_index_resolvers": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeCustomDataframe",
    "to_series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_multiindex_get_index_resolvers.to_series": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_named_multiindex": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_partially_named_multiindex": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_unnamed_multiindex": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel4d_with_multiindex": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pandas.eval",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel_with_multiindex": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pandas.eval",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.core.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.core.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.engine": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.opr": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.parser": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.PARSERS",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_ne": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.core.computation._NUMEXPR_INSTALLED",
    "pandas.tests.frame.test_query_eval.engine",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.parser",
    "pandas.tests.frame.test_query_eval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_rank.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.TestRank": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "numpy.apply_along_axis",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank2": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_2d_tie_methods": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "_check2d",
    "object",
    "pandas.compat.product",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_2d_tie_methods._check2d": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_axis": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_descending": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_methods_frame": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "chr",
    "distutils.version.LooseVersion",
    "numpy.apply_along_axis",
    "numpy.float64",
    "numpy.random.randint",
    "ord",
    "pandas.DataFrame",
    "pandas.tests.frame.test_rank.scipy",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_package",
    "range",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_na_option": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.inf",
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_rank.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_rank.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_replace.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_mixed": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested_gh4115": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed_inplace": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj_inplace": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_to_scalar": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_numeric_to_object_conversion": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_regex_list_to_numeric": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_replace.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar_inplace": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_replace.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_series_of_regexes": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_str_to_numeric": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_bool": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_string": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_convert": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetime": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetimetz": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_no_regex": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_tuple_list_ordering_remains_the_same": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_doesnt_replace_without_regex": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dtypes": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.int16",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_for_new_dtypes": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_inplace": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.tests.frame.test_replace.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_input_formats_listlike": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.tests.frame.test_replace.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_input_formats_scalar": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.tests.frame.test_replace.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_int_to_int_chain": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_limit": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_list": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_mixed": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_period": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_pure_bool_with_string_no_op": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_regex_metachar": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_dict": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_no_regex": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict_with_nonexistent_value": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_str_to_str_chain": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.util.testing.assert_raises_regex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_swapping_bug": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_truthy": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_value_is_none": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.tests.frame.test_replace.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_with_dict_with_bool_keys": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_with_empty_dictlike": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_repr_info.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_bytestring_with_unicode": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bytes",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_categorical": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns_shows_correct_dtypes": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_max_cols": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.random.randint",
    "numpy.size",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_repr_info.re",
    "pandas.tests.frame.test_repr_info.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_bug_on_multiindex": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "len",
    "list",
    "memory_usage",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "string.ascii_uppercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_bug_on_multiindex.memory_usage": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_qualified": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.StringIO",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_shows_column_dtypes": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_wide": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.reset_option",
    "pandas.set_option"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_latex_repr": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_big": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_column_name_unicode_truncation_bug": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_dimensions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_empty": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed_big": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.slow",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unicode": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unsortable": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime.today",
    "datetime.timedelta",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.io.formats.format.set_option",
    "pandas.tests.frame.test_repr_info.warnings",
    "pandas.util.testing.reset_display_options",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_very_wide_info_repr": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.rands_array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.fmt": {
  "data": {
   "shadows": "pandas.io.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.reset_option": {
  "data": {
   "shadows": "pandas.reset_option"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.set_option": {
  "data": {
   "shadows": "pandas.set_option"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.uppercase": {
  "data": {
   "shadows": "string.ascii_uppercase"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_reshape.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_duplicates": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_empty": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_index_none": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_integer_bug": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_datetime_column_multiIndex": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_int_level_names": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_ints": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.frame.test_reshape.itertools",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_mixed_levels": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.frame.test_reshape.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "_test_stack_with_multiindex",
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex._test_stack_with_multiindex": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_preserve_categorical_dtype": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_unstack": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.prod",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_bool": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_dtypes": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.int16",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "list",
    "numpy.float",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_categorical": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_datetime": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_period": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_timedelta": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_level_binding": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.NaN",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_reshape.itertools",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "verify",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index.verify": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "mk_list",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_non_unique_index_names": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.frame.test_reshape.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_preserve_dtypes": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dict",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "unstack_and_compare"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_preserve_dtypes.unstack_and_compare": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_to_series": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "isinstance",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_sorting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_categorical_index": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_different_sortorder": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.lexsort",
    "numpy.random.permutation",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_duplicates": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_inplace": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "id",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_intervalindex": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sign",
    "pandas.IntervalIndex.from_tuples",
    "pandas.Series",
    "pandas.concat",
    "pandas.cut",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_level": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_multicolumn": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.lexsort",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.tests.frame.test_sorting.random",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_multiindex": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_frame_column_inplace_sort_exception": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_datetimes": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nan": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nat_values_in_int_column": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "dict",
    "int",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_values": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.tests.frame.test_sorting.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_values_inplace": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_categorial": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.repeat",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_multicolumn_sort": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_sort": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_subclass.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_dataframe_metadata": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "CustomDataFrame",
    "isinstance",
    "pandas.MultiIndex.from_tuples",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame._constructor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.custom_frame_function": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries._constructor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries.custom_series_function": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_indexing_sliced": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.nan",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align_combinations": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "A",
    "AttributeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A.bar": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_iterrows": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "isinstance",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_sparse_slice": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.util.testing.SubclassedSparseDataFrame",
    "pandas.util.testing.SubclassedSparseSeries",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_sparse_transpose": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.util.testing.SubclassedSparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "SubclassedFrame",
    "SubclassedPanel",
    "isinstance",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame._constructor_expanddim": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedPanel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.Panel"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_timeseries.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pandas.tseries.offsets.BMonthEnd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq_datetimeindex": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq_fillvalue": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_at_time_frame": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_between_time_frame": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_datetime_assignment_with_NaT_and_diff_time_units": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_axis": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_float_n": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_mixed_dtype": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_neg_n": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_timedelta": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_first_last_valid": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_add_datetime64_col_other_units": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_add_datetime64_column": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.dtype",
    "numpy.issubdtype",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_ctor_datetime64_column": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.issubdtype",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_datetime64_pre1900_repr": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_to_period": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.indexes.period.period_range",
    "pandas.date_range",
    "pandas.tests.frame.test_timeseries.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_operation_on_NaT": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change_shift_over_nas": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_bool": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_categorical": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_empty": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_timeseries.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate_copy": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_tshift": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.tests.frame.test_timeseries.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makePeriodFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.period_range": {
  "data": {
   "shadows": "pandas.core.indexes.period.period_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_to_csv.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.MIXED_FLOAT_DTYPES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_to_csv.MIXED_INT_DTYPES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_to_csv.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_period_index_date_overflow": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_bug": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_chunking": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_cols_reordering": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_bz2": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.bz2",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_gzip": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.gzip",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_value_error": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_to_csv.pytest",
    "pandas.tests.frame.test_to_csv.zipfile",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_xz": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.import_lzma",
    "pandas.read_csv",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_date_format": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "int",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "dict",
    "make_dtnat_arr",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat.make_dtnat_arr": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "numpy.random.randint",
    "pandas.NaT",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dups_cols": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float32_nanrep": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float_format": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv2": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.frame.test_to_csv.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv3": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv4": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.compat.range",
    "pandas.read_csv",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv5": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "converter",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_categorical": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_all_infs": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_some_infs": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_headers": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_index_no_leading_comma": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_line_terminators": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "create_cols",
    "dict",
    "numpy.bool",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.object",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed.create_cols": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "_do_test",
    "int",
    "list",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dict",
    "list",
    "map",
    "numpy.array",
    "pandas.DataFrame.from_csv",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test._to_uni": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "TypeError",
    "_make_frame",
    "all",
    "len",
    "numpy.arange",
    "pandas.DataFrame.from_csv",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.lrange",
    "pandas.errors.ParserError",
    "pandas.read_csv",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex._make_frame": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_check_df",
    "int",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols._check_df": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_no_index": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_path_is_none": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quote_none": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_to_csv.csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quoting": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.csv",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_stringio": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode_index_col": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicodewriter_quoting": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_to_csv.csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_wide_frame_formatting": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_dst_transitions": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.read_csv",
    "pandas.read_pickle",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_mix_columns": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_withcommas": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_validate": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_validate.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_validate.TestDataFrameValidate": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object",
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_validate.TestDataFrameValidate.test_validate_bool_args": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.frame.test_validate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_validate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.common.MixIn": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.common.MixIn.setup_method": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.groupby.common.df",
    "pandas.tests.groupby.common.mframe",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.common.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.common.assert_fp_equal": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.common.df": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.groupby.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.common.mframe": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.tests.groupby.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_aggregate.DataError": {
  "data": {
   "shadows": "pandas.core.groupby.DataError"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.Grouping": {
  "data": {
   "shadows": "pandas.core.groupby.Grouping"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.SpecificationError": {
  "data": {
   "shadows": "pandas.core.groupby.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.setup_method": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test__cython_agg_general": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "BaseException",
    "float",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.var",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_api": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_api.peak_to_peak": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_apply_corner": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float",
    "numpy.float64",
    "numpy.nan",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "fn_class",
    "functools.partial",
    "numpy.int64",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables.fn_class": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables.fn_class.__call__": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_cast_results_dtypes": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_compat": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_consistency": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_consistency.P1": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_datetimes_mixed": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "len",
    "numpy.sum",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_dict_parameter_cast_result_dtypes": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_dict_renaming_deprecation": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_grouping_is_list_tuple": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "pandas.core.groupby.Grouping",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_item_by_item_raise_typeerror": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_aggregate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_item_by_item_raise_typeerror.raiseException": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_multiple_functions_maintain_order": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_multiple_functions_too_many_lambdas": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "pandas.core.groupby.SpecificationError",
    "pandas.tests.groupby.test_aggregate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_must_agg": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.groupby.test_aggregate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_nested_dicts": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.core.groupby.SpecificationError",
    "pandas.tests.groupby.test_aggregate.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_over_numpy_arrays": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_period_index": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_python_multiindex": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_regression1": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_ser_multi_key": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_timezone_round_trip": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.min",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_api_consistency": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_item_by_item": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_item_by_item.aggfun": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_str_func": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "_check_results"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_str_func._check_results": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_boolean": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_empty_buckets": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "BaseException",
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.nan",
    "numpy.prod",
    "numpy.sum",
    "numpy.var",
    "op",
    "pandas.DataFrame",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "targop"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_frame_columns": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_nothing_to_agg": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.core.groupby.DataError",
    "pandas.tests.groupby.test_aggregate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_nothing_to_agg_with_dates": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.core.groupby.DataError",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_fail_agg": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cythonized_aggers": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "_testit",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cythonized_aggers._testit": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.mean",
    "numpy.std",
    "pandas.compat.OrderedDict",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function.bar": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function.foo": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_multi_function_flexible_mix": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_multiple_functions_tuples_and_non_tuples": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multi_pure_python": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multi_pure_python.bad": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multikey": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_wrap_agg_out": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_wrap_agg_out.func": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "TypeError",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_aggregate.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_bin_groupby.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers.setup_method": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers.test_generate_bins": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.generate_bins_dt64",
    "pandas.core.groupby.generate_bins_generic",
    "pandas.tests.groupby.test_bin_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.TestMoments": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestReducer": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestReducer.test_int_index": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.Index",
    "pandas._libs.lib.reduce",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby._ensure_int64": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_int64"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.generate_bins_generic": {
  "data": {
   "shadows": "pandas.core.groupby.generate_bins_generic"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.groupby": {
  "data": {
   "shadows": "pandas._libs.groupby"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc._check": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "_ohlc",
    "func",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.diff",
    "numpy.int64",
    "numpy.nan",
    "numpy.r_",
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.zeros",
    "pandas._libs.groupby",
    "pandas.core.dtypes.common._ensure_int64",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc._check._ohlc": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_series_bin_grouper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.Series",
    "pandas._libs.lib.SeriesBinGrouper",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_series_grouper": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.Series",
    "pandas._libs.lib.SeriesGrouper",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_categorical.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.Interval": {
  "data": {
   "shadows": "pandas.Interval"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_categorical_data": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.mean",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_use_categorical_name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_use_categorical_name.get_stats": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_bins_unequal_len": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.cut",
    "pandas.tests.groupby.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_bins_unequal_len.f": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_index": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.repeat",
    "pandas.Categorical.from_codes",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_no_compress": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_two_columns": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Interval",
    "pandas.MultiIndex.from_product",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_datetime_categorical": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Categorical.from_codes",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_describe_categorical_columns": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_multi_categorical_as_index": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_preserve_categorical_dtype": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_preserve_categories": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_sort_categorical": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_sort_categorical_datetimelike": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_unstack_categorical": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_level_groupby_get_group": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.qcut": {
  "data": {
   "shadows": "pandas.qcut"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_categorical.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_counting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.TestCounting": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_dupe_index": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_empty": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_groupby_not_col": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_mi": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_cumcount_pair": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_descending": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_distinct": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_dupe_index": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_empty": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_groupby_not_col": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_matches_cumcount": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_mi": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_one_group": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_respects_groupby_order": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.random.choice",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_series_matches_frame": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.cart_product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_counting.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_filters.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.setup_method": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_against_workaround": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.round",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_multiple_non_unique_int_index": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_float_index": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_int_index": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_string_index": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_timestamp_index": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_bad_shapes": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.arange",
    "numpy.outer",
    "pandas.core.api.DataFrame",
    "pandas.tests.groupby.test_filters.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_condition_raises": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.tests.groupby.test_filters.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_condition_raises.raise_if_sum_is_zero": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_dropna_with_empty_groups": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.repeat",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_enforces_scalarness": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_has_access_to_grouped_cols": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_maintains_ordering": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_mixed_df": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_multi_column_df": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_multiple_timestamp": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_nan_is_false": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_non_bool_raises": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_all_groups": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_all_groups_in_df": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_no_groups": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_series": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_single_column_df": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_using_len": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_with_axis_in_groupby": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters._check_groupby": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "f",
    "pandas.compat.iteritems",
    "pandas.compat.lmap",
    "pandas.core.common._asarray_tuplesafe",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.assert_fp_equal": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_filters.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_groupby.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.Grouping": {
  "data": {
   "shadows": "pandas.core.groupby.Grouping"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_chunk_view": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names": {
  "data": {
   "lineno": 1568
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc": {
  "data": {
   "lineno": 1571
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc2": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc3": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner_cases": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "f",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner_cases.f": {
  "data": {
   "lineno": 2457
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_describe_bug": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans": {
  "data": {
   "lineno": 1988
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans2": {
  "data": {
   "lineno": 1991
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_to_series": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_yield_constant": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_issues": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multiindex_fail": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "f",
    "index",
    "numpy.arange",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multiindex_fail.f": {
  "data": {
   "lineno": 2405
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multikey_corner": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multikey_corner.f": {
  "data": {
   "lineno": 2013
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_no_name_column_conflict": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime": {
  "data": {
   "lineno": 3846,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime.get_B": {
  "data": {
   "lineno": 3866
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime.predictions": {
  "data": {
   "lineno": 3874,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_to_frame": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_to_frame.f": {
  "data": {
   "lineno": 1950,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.log",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_yield_constant": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_transform": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_typecast_fail": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_typecast_fail.f": {
  "data": {
   "lineno": 2386
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_with_mixed_dtype": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy.filt1": {
  "data": {
   "lineno": 2430
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy.filt2": {
  "data": {
   "lineno": 2436
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_arg_passthru": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "f",
    "getattr",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_as_index_series_return_frame": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_attr_wrapper": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.std",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "checkit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic.checkit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "len",
    "numpy.arange",
    "numpy.mean",
    "numpy.random.shuffle",
    "numpy.std",
    "numpy.sum",
    "pandas.Series",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic_regression": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_builtins_apply": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "getattr",
    "len",
    "max",
    "min",
    "numpy",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_column_select_via_attr": {
  "data": {
   "lineno": 2880,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_consistency_name": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "decimal.Decimal",
    "isinstance",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_fast": {
  "data": {
   "lineno": 2587,
   "symbols_in_volume": [
    "decimal.Decimal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_force_pure": {
  "data": {
   "lineno": 2590,
   "symbols_in_volume": [
    "decimal.Decimal",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.count",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_cross_type": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_object": {
  "data": {
   "lineno": 2233,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception": {
  "data": {
   "lineno": 3463,
   "symbols_in_volume": [
    "RaisingObject",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject": {
  "data": {
   "lineno": 3467,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__eq__": {
  "data": {
   "lineno": 3473,
   "symbols_in_volume": [
    "RaisingObjectException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__init__": {
  "data": {
   "lineno": 3469,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObjectException": {
  "data": {
   "lineno": 3464,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cummin_cummax": {
  "data": {
   "lineno": 3749,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_api2": {
  "data": {
   "lineno": 2347,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_grouper_series_bug_noncontig": {
  "data": {
   "lineno": 2558,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.nan",
    "numpy.tile",
    "pandas.Series",
    "pandas.Series.median",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_median": {
  "data": {
   "lineno": 3140,
   "symbols_in_volume": [
    "float",
    "numpy.median",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.nanops.nanmedian",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_dictify": {
  "data": {
   "lineno": 2766,
   "symbols_in_volume": [
    "dict",
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_dont_clobber_name_column": {
  "data": {
   "lineno": 2918,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_empty_groups": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_empty_groups_corner": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fast_apply": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "f",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fast_apply.f": {
  "data": {
   "lineno": 2618
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fill_constistency": {
  "data": {
   "lineno": 3402,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_multikey": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_tupleindex": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_unstacked_format": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_groupby": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_groupby_columns": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_multi_key_function_list": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "isinstance",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.std",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_set_name_single": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.mean",
    "numpy.std",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays": {
  "data": {
   "lineno": 3310,
   "symbols_in_volume": [
    "noddy",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays.noddy": {
  "data": {
   "lineno": 3322,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "str",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group_empty_bins": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.Interval",
    "pandas.cut",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group_grouped_by_tuple": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_getitem_list_of_columns": {
  "data": {
   "lineno": 2981,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_getitem_numeric_column_names": {
  "data": {
   "lineno": 2999,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_name_available_in_inference_pass": {
  "data": {
   "lineno": 3042,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_name_available_in_inference_pass.f": {
  "data": {
   "lineno": 3048
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_selection_cache": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_shift_with_null_key": {
  "data": {
   "lineno": 3714,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_2d_malformed": {
  "data": {
   "lineno": 2817,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_aggregation_mixed_dtype": {
  "data": {
   "lineno": 2645,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_all_none": {
  "data": {
   "lineno": 3593,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_all_none.test_func": {
  "data": {
   "lineno": 3599
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_none_first": {
  "data": {
   "lineno": 3606,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_none_first.test_func": {
  "data": {
   "lineno": 3611
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args.j": {
  "data": {
   "lineno": 1874
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args.k": {
  "data": {
   "lineno": 1880
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_agg": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "numpy.mean",
    "numpy.random.randint",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_apply": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_corner": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_cython": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_series_scalar": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_complex": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_cumprod": {
  "data": {
   "lineno": 3484,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_dict_mapping": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_dtype_inference_empty": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_duplicated_column_errormsg": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_grouper": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_grouper_f_sanity_checked": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_head_tail": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_keys_same_size_as_index": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "index",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_apply": {
  "data": {
   "lineno": 1859
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_index_names": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_mapper": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_nonmulti": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_with_nas": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "index",
    "numpy.arange",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_levels_and_columns": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_list_infer_array_like": {
  "data": {
   "lineno": 2681,
   "symbols_in_volume": [
    "Exception",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_mixed_type_columns": {
  "data": {
   "lineno": 2546,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multi_corner": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiindex_missing_pair": {
  "data": {
   "lineno": 3234,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiindex_not_lexsorted": {
  "data": {
   "lineno": 3249,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.drop_duplicates",
    "pandas.MultiIndex.from_tuples",
    "pandas.errors.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_columns": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "_check_op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_columns._check_op": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "op",
    "pandas.DataFrame",
    "pandas.Panel.fromDict",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_key": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation": {
  "data": {
   "lineno": 2517
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize_random_name": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nat_exclude": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.compat.zip",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_intlike_precision": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_types": {
  "data": {
   "lineno": 3166,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonobject_dtype": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonobject_dtype.max_value": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonstring_columns": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_one_row": {
  "data": {
   "lineno": 2709,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_preserves_sort": {
  "data": {
   "lineno": 3629,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_preserves_sort.test_sort": {
  "data": {
   "lineno": 3650,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function": {
  "data": {
   "lineno": 3084,
   "symbols_in_volume": [
    "agg_before",
    "datetime.datetime",
    "numpy.arange",
    "numpy.max",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.afunc": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before": {
  "data": {
   "lineno": 3091
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before._func": {
  "data": {
   "lineno": 3096,
   "symbols_in_volume": [
    "func",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type.f": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type.func": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_series_indexed_differently": {
  "data": {
   "lineno": 2077,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_series_with_name": {
  "data": {
   "lineno": 2481
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_sort_multi": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.core.common._asarray_tuplesafe",
    "pandas.tests.groupby.test_groupby._check_groupby",
    "pandas.util.testing.assert_numpy_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_sort_multiindex_series": {
  "data": {
   "lineno": 3067,
   "symbols_in_volume": [
    "index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_timedelta_cython_count": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_empty": {
  "data": {
   "lineno": 3334,
   "symbols_in_volume": [
    "index",
    "iter",
    "next",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.resample.TimeGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_hier_columns": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "index",
    "list",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.zip",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_single_column": {
  "data": {
   "lineno": 3342,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_small_elem": {
  "data": {
   "lineno": 3351,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.TimeGrouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_wrong_multi_labels": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_column_and_index": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_column_index_level_precedence": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_creation_bug": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_getting_correct_binner": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_index_level_as_string": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_index_types": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_iter": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_multilevel_freq": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "datetime.date.today",
    "datetime.timedelta",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_error_on_multidim_input": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.groupby.Grouping",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_is_iterable": {
  "data": {
   "lineno": 1000
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_labels": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_ndarray": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_string_repr": {
  "data": {
   "lineno": 3704,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groups": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value": {
  "data": {
   "lineno": 2968,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value.f": {
  "data": {
   "lineno": 2969
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value.g": {
  "data": {
   "lineno": 2972,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_index_label_overlaps_location": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f1": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f2": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f3": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_int32_overflow": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_intercept_builtin_sum": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.builtins.sum",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_len": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.makeTimeDataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_level_preserve_order": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_lower_int_prec_count": {
  "data": {
   "lineno": 3448,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.int16",
    "numpy.int8",
    "numpy.uint32",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_max_min_non_numeric": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_max_nan_bug": {
  "data": {
   "lineno": 3532,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_median_empty_bins": {
  "data": {
   "lineno": 3156,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_func": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter_frame": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter_panel": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_key_multiple_functions": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multifunc_select_col_integer_cols": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multifunc_sum_bug": {
  "data": {
   "lineno": 2958,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_columns_empty_level": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.long",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_negative_level": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_passthru": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups.f_copy": {
  "data": {
   "lineno": 2032
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups.f_no_copy": {
  "data": {
   "lineno": 2037
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nlargest": {
  "data": {
   "lineno": 3545,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_dummy_key_names": {
  "data": {
   "lineno": 3058
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_mutate_but_looks_like": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_nonsense_name": {
  "data": {
   "lineno": 2950,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_non_cython_api": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nonsense_func": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "Exception",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nsmallest": {
  "data": {
   "lineno": 3562,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_numpy_compat": {
  "data": {
   "lineno": 3691,
   "symbols_in_volume": [
    "func",
    "getattr",
    "pandas.DataFrame",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_empty_series": {
  "data": {
   "lineno": 3671,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_object": {
  "data": {
   "lineno": 3655,
   "symbols_in_volume": [
    "index",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_timegrouper": {
  "data": {
   "lineno": 3678,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series.nunique",
    "pandas.TimeGrouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_omit_nuisance": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "numpy.mean",
    "numpy.sum",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_omit_nuisance_python_multiple": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_ops_general": {
  "data": {
   "lineno": 3502,
   "symbols_in_volume": [
    "BaseException",
    "ImportError",
    "float",
    "getattr",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.size",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "scipy.stats.sem"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_panel_groupby": {
  "data": {
   "lineno": 2793,
   "symbols_in_volume": [
    "list",
    "pandas.Index",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "set",
    "sorted",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pass_args_kwargs": {
  "data": {
   "lineno": 2119,
   "symbols_in_volume": [
    "f",
    "numpy.percentile",
    "pandas.DataFrame.quantile",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pass_args_kwargs.f": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pivot_table_values_key_error": {
  "data": {
   "lineno": 3735,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.datetime.today",
    "pandas.tests.groupby.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_rank_apply": {
  "data": {
   "lineno": 2890,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_select_bad_cols": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_groupby.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_describe_multikey": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_describe_single": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_groupby_nunique": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "check_nunique",
    "list",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.product",
    "pandas.date_range",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_groupby_nunique.check_nunique": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "pandas.Series.nunique",
    "pandas.compat.product",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_grouper_noncontig_index": {
  "data": {
   "lineno": 2567,
   "symbols_in_volume": [
    "f",
    "id",
    "index",
    "len",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.map",
    "pandas.util.testing.rands_array",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_index_name": {
  "data": {
   "lineno": 900
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_seriesgroupby_name_attr": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name": {
  "data": {
   "lineno": 3015,
   "symbols_in_volume": [
    "_check_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name._check_all": {
  "data": {
   "lineno": 3027,
   "symbols_in_volume": [
    "f",
    "freduce"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.f": {
  "data": {
   "lineno": 3016
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.foo": {
  "data": {
   "lineno": 3024,
   "symbols_in_volume": [
    "freduce"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.freduce": {
  "data": {
   "lineno": 3020
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_size": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.choice",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_skip_group_keys": {
  "data": {
   "lineno": 2925,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_sparse_friendly": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "_check_work",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_sparse_friendly._check_work": {
  "data": {
   "lineno": 2780,
   "symbols_in_volume": [
    "dict",
    "iter",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug.func_with_date": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug.func_with_no_date": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_transform_doesnt_clobber_ints": {
  "data": {
   "lineno": 3579,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_with_na": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "index",
    "issubclass",
    "len",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nan",
    "numpy.ones",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_with_na.f": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.mean",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex.aggfun": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.UnsupportedFunctionCall": {
  "data": {
   "shadows": "pandas.errors.UnsupportedFunctionCall"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby._check_groupby": {
  "data": {
   "lineno": 3895,
   "symbols_in_volume": [
    "f",
    "pandas.compat.iteritems",
    "pandas.compat.lmap",
    "pandas.core.common._asarray_tuplesafe",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.cart_product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.percentile": {
  "data": {
   "shadows": "numpy.percentile"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.sem": {
  "data": {
   "shadows": "scipy.stats.sem"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_groupby.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_nth.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.TestNth": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_first_last_nth": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_first_last_nth_dtypes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth_multi_index": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth_multi_index_as_expected": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_nth.test_nth_empty": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_timegrouper.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_datetime_count": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_first_last_max_min_on_time_data": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_frame_datetime64_handling_groupby": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_datetime64_32_bit": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "min",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_first_datetime64": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_datetimeindex": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_datetimeindex_tz": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_periods": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_max_datetime64": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_multi_timezone": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timegrouper": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.TimeGrouper",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timegrouper_methods": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.TimeGrouper",
    "pandas.core.groupby.BinGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timezone_selection": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_series": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_series.sumfunc_series": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_value": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_value.sumfunc_value": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_get_group": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_with_reg_groups": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.offsets.MonthEnd",
    "pandas.tests.groupby.test_timegrouper.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timezone_info": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_timegrouper.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.td": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_timegrouper.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_transform.DataError": {
  "data": {
   "shadows": "pandas.core.groupby.DataError"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_cython_group_transform_algos": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "np_op",
    "numpy.array",
    "numpy.cumproduct",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.nan",
    "numpy.timedelta64",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros_like",
    "pandas._libs.groupby.group_cumprod_float64",
    "pandas._libs.groupby.group_cumsum",
    "pandas.util.testing.assert_numpy_array_equal",
    "pd_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_cython_transform": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "dict",
    "f",
    "float",
    "getattr",
    "list",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.concat",
    "pandas.core.groupby.DataError",
    "pandas.date_range",
    "pandas.tests.groupby.test_transform.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_dispatch_transform": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_groupby_transform_with_int": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "dict",
    "numpy.errstate",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_groupby_transform_with_nan_group": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "max",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_series_fast_transform_date": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "max",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.random.shuffle",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.TimeGrouper",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform.demean": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_axis": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_broadcast": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "assert_fp_equal",
    "numpy.mean",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_bug": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_casting": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.core.dtypes.common.is_timedelta64_dtype",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_coercion": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dict",
    "numpy.mean",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_datetime_to_numeric": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_datetime_to_timedelta": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_dtype": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_exclude_nuisance": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_fast": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_function_aliases": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_length": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_length.nsum": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_mixed_type": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.float64",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.core.config.option_context",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_mixed_type.f": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_multiple": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_select_columns": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_with_non_scalar_group": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.groupby": {
  "data": {
   "shadows": "pandas._libs.groupby"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_transform.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.groupby.test_value_counts.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "loop",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.groupby.test_value_counts.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.check_value_counts": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "map",
    "pandas.Series.value_counts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.loop": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "check_value_counts",
    "itertools.product",
    "max",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.rebuild_index": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "list",
    "map",
    "pandas.MultiIndex.from_arrays",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "pandas.tests.groupby.test_whitelist.AGG_FUNCTIONS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.groupby.test_whitelist.AGG_FUNCTIONS_WITH_SKIPNA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.tests.groupby.test_whitelist.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.df": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.groupby.test_whitelist.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.df_letters": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.groupby.test_whitelist.df",
    "pandas.tests.groupby.test_whitelist.pytest",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.df_whitelist": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.tests.groupby.test_whitelist.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.mframe": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.tests.groupby.test_whitelist.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.groupby.test_whitelist.raw_frame": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.tests.groupby.test_whitelist.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.s_whitelist": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_blacklist": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "AttributeError",
    "dir",
    "getattr",
    "pandas.tests.groupby.test_whitelist.df",
    "pandas.tests.groupby.test_whitelist.df_letters",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_function_rename": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "getattr",
    "pandas.tests.groupby.test_whitelist.mframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_selection_with_methods": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.date_range",
    "pandas.tests.groupby.test_whitelist.df",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_whitelist": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.compat.PY3",
    "pandas.tests.groupby.test_whitelist.df",
    "pandas.tests.groupby.test_whitelist.df_letters",
    "pandas.tests.groupby.test_whitelist.df_whitelist",
    "pandas.tests.groupby.test_whitelist.pytest",
    "pandas.tests.groupby.test_whitelist.s_whitelist",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_regression_whitelist_methods": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "getattr",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.tests.groupby.test_whitelist.AGG_FUNCTIONS",
    "pandas.tests.groupby.test_whitelist.AGG_FUNCTIONS_WITH_SKIPNA",
    "pandas.tests.groupby.test_whitelist.pytest",
    "pandas.tests.groupby.test_whitelist.raw_frame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_tab_completion": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dir",
    "pandas.tests.groupby.test_whitelist.mframe",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.common.Base": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.common.Base.setup_indices": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_argsort": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat.f": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_compat": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_copy_and_deepcopy": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "copy.copy",
    "copy.deepcopy",
    "func",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_copy_name": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "isinstance",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_create_index_existing_name": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_delete_base": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "isinstance",
    "len",
    "pandas.RangeIndex",
    "pandas.compat.iteritems",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_difference_base": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_dtype_str": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_duplicates": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_empty": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_ensure_copied_data": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "index_type",
    "isinstance",
    "pandas.CategoricalIndex",
    "pandas.IntervalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.RangeIndex",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_equals": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_equals_op": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.array",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_fillna": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "bool",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Int64Index",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.UInt64Index",
    "pandas._libs.tslib.iNaT",
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_get_unique_index": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.MultiIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hash_error": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hasnans_isnans": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Int64Index",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.UInt64Index",
    "pandas._libs.tslib.iNaT",
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_insert_base": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_intersection_base": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_join_self_unique": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_logical_compat": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_memory_usage": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.IntervalIndex",
    "pandas.RangeIndex",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_mutability": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_ndarray_compat_properties": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_nulls": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "pandas.MultiIndex",
    "pandas.isnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numeric_compat": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_argsort": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.argsort",
    "pandas.CategoricalIndex",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_repeat": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_ufuncs": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "Exception",
    "func",
    "isinstance",
    "len",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.cos",
    "numpy.cosh",
    "numpy.deg2rad",
    "numpy.errstate",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.ndarray",
    "numpy.rad2deg",
    "numpy.signbit",
    "numpy.sin",
    "numpy.sinh",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.tanh",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.UInt64Index",
    "pandas.compat.iteritems",
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
    "pandas.tests.indexes.common.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle_compat_construction": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_reindex_base": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.intp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repeat": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_max_seq_item_setting": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.option_context",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_roundtrip": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_set_name_methods": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_setops_errorcases": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_shift": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_sort": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_str": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_symmetric_difference": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take_invalid_kwargs": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_to_series": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_union_base": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_view": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_where": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_where_array_like": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "klass",
    "len",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names.testit": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.verify_pickle": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.DatetimeIndexOpsMixin": {
  "data": {
   "shadows": "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.UInt64Index": {
  "data": {
   "shadows": "pandas.UInt64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimelike": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_shift_identity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_str": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_view": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.tests.indexes.datetimelike.DatetimeLike",
    "pandas.util.testing.assert_index_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_astype": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_astype.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "numpy.NaN",
    "numpy.int64",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_datetime64": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_raises": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.NaN",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.tests.indexes.datetimes.test_astype.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_str": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_str_compat": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.NaN",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_with_tz": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_check_rng",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array._check_rng": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.ndarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_dateutil": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "_check_rng",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_astype.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_dateutil._check_rng": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.ndarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_explicit_pytz": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_check_rng",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_astype.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_explicit_pytz._check_rng": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.ndarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.setup_method": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_astype_object": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "list",
    "numpy.object_",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_microsecond": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_millisecond": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_dateutil": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_astype.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_explicit_pytz": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_astype.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_pytz": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal",
    "pytz.utc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.UTC": {
  "data": {
   "shadows": "pytz.utc"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_astype.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_construction.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas._libs.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_000constructor_resolution": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_base_constructor": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_caching": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_dti_with_mixed_timezones": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_index_with_mixed_timezones": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_index_with_mixed_timezones_with_NaT": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_outofbounds": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas._libs.tslib.OutOfBoundsDatetime",
    "pandas.datetime",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_with_alt": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_with_ndarray": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.datetime",
    "pandas.tseries.frequencies.BDay",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_coverage": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.datetime",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_datetime64_tzformat": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_construction.pytz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_dtype": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_name": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_constructor_int64_nocopy": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_ctor_str_intraday": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_datetimeindex_constructor_misc": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas._libs.lib.Timestamp",
    "pandas.datetime",
    "pandas.offsets.BDay",
    "pandas.offsets.BQuarterEnd",
    "pandas.offsets.QuarterBegin",
    "pandas.offsets.Week",
    "pandas.tests.indexes.datetimes.test_construction.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_preserve_dti_freq": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_small_int": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_years_only": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_from_freq_recreate_from_data": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_index_cast_datetime64_other_units": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.tslib.cast_to_nanoseconds"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_is_": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.datetime": {
  "data": {
   "shadows": "pandas.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_construction.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_date_range.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.CDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.CDay"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.offsets.DateOffset"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.setup_method": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_cached_range": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DatetimeIndex._cached_range",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_cached_range_bug": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.date_range",
    "pandas.tseries.offsets.DateOffset"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_constructor": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_date_parse_failure": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_daterange_bug_456": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_error_with_zero_monthends": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest",
    "pandas.tseries.offsets.MonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_freq_divides_end_in_nanos": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_misc": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_naive_aware_conflicts": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_bug": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tseries.offsets.DateOffset",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed_boundary": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed_with_tz_aware_start_end": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_dateutil": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_dateutil",
    "tz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_dst_straddle_pytz": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.all",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_pytz": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_timezone_comparaison_assert": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_timezone_comparaison_bug": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_years_only": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.setup_method": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cached_range": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Exception",
    "pandas.DatetimeIndex._cached_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest",
    "pandas.tseries.offsets.CDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_holidays": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_weekmask": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_weekmask_and_holidays": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_constructor": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest",
    "pandas.tseries.offsets.CDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_date_parse_failure": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_daterange_bug_456": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.tseries.offsets.CDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_misc": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.tseries.offsets.CDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestData": {
  "data": {
   "shadows": "pandas.tests.series.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.tests.series.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_catch_infinite_loop": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.date_range",
    "pandas.offsets.DateOffset",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_compat_replace": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "f",
    "int",
    "len",
    "pandas.Timestamp",
    "pandas.compat.long",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_ambiguous_arguments": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_bms_bug": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_businesshour": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_fy5252": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.offsets.FY5253"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_gen_error": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_negative_freq": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_normalize": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "datetime.time",
    "datetime.timedelta",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_range_misspecified": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_date_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_1": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tests.indexes.datetimes.test_date_range.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_2": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tests.indexes.datetimes.test_date_range.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_3": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tests.indexes.datetimes.test_date_range.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_generate": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_generate_cday": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.offsets.CDay",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_precision_finer_than_offset": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.bdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.cdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.cdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.eq_gen_range": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "numpy.array_equal",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.generate_range": {
  "data": {
   "shadows": "pandas.tseries.offsets.generate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.maybe_get_tz": {
  "data": {
   "shadows": "pandas._libs.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.timezone": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_date_range.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_datetime.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.assert_index_parameters": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_append_join_nondatetimeindex": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_append_numpy_bug_1681": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_argmin_argmax": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_comparisons_coverage": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_comparisons_nat": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas._np_version_under1p8",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.datetime",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_date": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_does_not_convert_mixed_integer": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.indexes.datetimes.test_datetime.randn",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize_dst": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.intp",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize_tz": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.intp",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_duplicates": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_indexer": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.intp",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_loc": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "datetime.time",
    "datetime.timedelta",
    "numpy.array",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_groupby_function_tuple_1677": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.date_range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_hash_error": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_isin": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_iteration_preserves_tz": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_datetime.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_join_self": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_join_with_period_index": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randint",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_map": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "f",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_map_bug_1677": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "f",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_misc_coverage": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_nat": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_ns_index": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.offsets.Nano"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_overflow_offset": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "OverflowError",
    "f",
    "pandas.Timestamp",
    "pandas.offsets.Day",
    "pandas.tests.indexes.datetimes.test_datetime.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_overflow_offset.f": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_reasonable_keyerror": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DatetimeIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_reindex_preserves_tz_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.date_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_roundtrip_pickle_with_tz": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_bounds_empty": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_duplicate_monotonic": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_keeps_name": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_negative_step": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "assert_slices_equivalent",
    "numpy.arange",
    "pandas.IndexSlice",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_negative_step.assert_slices_equivalent": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_zero_step_raises": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_sort_values": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_string_index_series_name_converted": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_stringified_slice_with_tz": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.compat.lrange",
    "pandas.datetime.datetime.now"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take_fill_value": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take_fill_value_with_timezone": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time_loc": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datetime.time",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.Series",
    "pandas._libs.index._SIZE_CUTOFF",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time_overflow_for_32bit_machines": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "len",
    "numpy.int_",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_to_period_nofreq": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.datetimes.test_datetime.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_ufunc_coercions": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "numpy.add",
    "numpy.array",
    "numpy.subtract",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_week_of_month_frequency": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime._SIZE_CUTOFF": {
  "data": {
   "shadows": "pandas._libs.index._SIZE_CUTOFF"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.randn": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.tests.indexes.datetimes.test_datetime.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetime.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.create_index": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.setup_method": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_intersection": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_shift": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_union": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_formats": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_formats.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_formats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_formats.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_formats.test_to_native_types": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_formats.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_indexing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_delete": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.compat.iteritems",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_indexing.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_delete_slice": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_insert": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.datetime",
    "pandas.tests.indexes.datetimes.test_indexing.pytest",
    "pandas.tests.indexes.datetimes.test_indexing.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_where_other": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_where_tz": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.datetime": {
  "data": {
   "shadows": "pandas.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_misc.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_1700": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_2000": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_hour": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_minute": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_second": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64.test_datetimeindex_accessors": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._bool_ops",
    "pandas.DatetimeIndex._field_ops",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.datetime",
    "pandas.offsets.CustomBusinessDay",
    "pandas.tests.indexes.datetimes.test_misc.pytest",
    "pandas.util.testing.assert_index_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64.test_nanosecond_field": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_datetimeindex_integers_shift": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_datetimeindex_repr_short": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_normalize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_pass_datetimeindex_to_index": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_range_edges": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.datetime": {
  "data": {
   "shadows": "pandas.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_misc.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_missing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_missing.TestDatetimeIndex": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_missing.TestDatetimeIndex.test_fillna_datetime64": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops": {
  "data": {
   "symbols_in_volume": [
    "pandas.datetime"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_ops.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.BMonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.BMonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.CDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.CDay"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.Ops": {
  "data": {
   "shadows": "pandas.tests.test_base.Ops"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.setup_method": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_comparison": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_copy": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_equals": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_getitem": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.int_",
    "numpy.ndarray",
    "pandas.DatetimeIndex",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_getitem_matplotlib_hackaround": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_identical": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_pickle_unpickle": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_repr": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_shift": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.offsets.BMonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary_dateutil": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.tests.indexes.datetimes.test_ops.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary_pytz": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.tests.indexes.datetimes.test_ops.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.setup_method": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_comparison": {
  "data": {
   "lineno": 1215
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_copy": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_equals": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_getitem": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.int_",
    "numpy.ndarray",
    "pandas.DatetimeIndex",
    "pandas.tseries.offsets.CDay",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_getitem_matplotlib_hackaround": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_pickle_unpickle": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_repr": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_shift": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_ops.warnings",
    "pandas.tseries.offsets.BMonthEnd",
    "pandas.tseries.offsets.CDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary": {
  "data": {
   "lineno": 1277
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary_dateutil": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.tests.indexes.datetimes.test_ops.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary_pytz": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.tests.indexes.datetimes.test_ops.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_1700": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_2000": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_hour": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_minute": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_second": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.setup_method": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_add_dti_dti": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "TypeError",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_add_iadd": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.offsets",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_comp_nat": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_difference": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_drop_duplicates": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_equals": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._simple_new",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_getitem": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_infer_freq": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_minmax": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "getattr",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nat": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._na_value",
    "pandas.NaT",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nat_new": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas._libs.tslib.iNaT",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nonunique_contains": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "map",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.max",
    "numpy.min",
    "pandas.Timestamp",
    "pandas._np_version_under1p10",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_ops_properties": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._bool_ops",
    "pandas.DatetimeIndex._field_ops",
    "pandas.DatetimeIndex._object_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_ops_properties_basic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "dict",
    "getattr",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_order": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_repeat": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_repeat_range": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_representation": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "getattr",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.option_context",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.option_context",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_resolution": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pandas.date_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_round": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_shift": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_dti_dti": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_isub": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.offsets",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_period": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DatetimeIndex",
    "pandas.Period",
    "pandas.tests.indexes.datetimes.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_summary": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_take": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_take_invalid_kwargs": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_union": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.cdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.cdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.datetime": {
  "data": {
   "shadows": "pandas.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.test_datetime64_with_DateOffset": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "assert_func",
    "dict",
    "enumerate",
    "getattr",
    "isinstance",
    "klass",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.errors.PerformanceWarning",
    "pandas.offsets",
    "pandas.offsets.DateOffset",
    "pandas.offsets.Day",
    "pandas.offsets.MonthEnd",
    "pandas.tests.indexes.datetimes.test_ops.pytest",
    "pandas.tests.indexes.datetimes.test_ops.warnings",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.test_shift_months": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas._libs.tslib.shift_months",
    "pandas.offsets.DateOffset",
    "pandas.tests.indexes.datetimes.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_loc_datetime_length_one": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_daily": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_doesnt_require_monotonicity": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_hourly": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_minutely": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_second_precision": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "KeyError",
    "datetime.datetime",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_dataframe": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyError",
    "datetime.datetime",
    "enumerate",
    "isinstance",
    "list",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_with_multiindex": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_partial_slicing.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_with_multiindex.f": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_month": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_quarter": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_year": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_setops.BMonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.BMonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.DateOffset": {
  "data": {
   "shadows": "pandas.DateOffset"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.Minute": {
  "data": {
   "shadows": "pandas.tseries.offsets.Minute"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.setup_method": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_intersection": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_intersection_bug": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_month_range_union_tz_dateutil": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas._libs.tslib._dateutil_gettz",
    "pandas.date_range",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_windows_python_3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_month_range_union_tz_pytz": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.date_range",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_outer_join": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tseries.offsets.BMonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_union": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.date_range",
    "pandas.tseries.offsets.BMonthEnd",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_union_not_cacheable": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.setup_method": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_intersection_bug": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.cdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_outer_join": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tseries.offsets.BMonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_union": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.date_range",
    "pandas.tseries.offsets.BMonthEnd",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_datetimeindex_diff": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_datetimeindex_union_join_empty": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_difference_freq": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_attr_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_intersection": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_intersection_bug_1708": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "pandas.DateOffset",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_join_nonunique": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_1730": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_1745": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_4564": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_coverage": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_dataframe_index": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_freq_both_none": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_with_DatetimeIndex": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.cdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.cdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.timezone": {
  "data": {
   "shadows": "pandas._libs.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_setops.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_tools.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_coerce_of_invalid_datetimes": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas._libs.tslib.array_to_datetime",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_coercing_dates_outside_of_datetime64_ns_bounds": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "ValueError",
    "datetime.date",
    "datetime.datetime",
    "numpy.array",
    "numpy.datetime64",
    "object",
    "pandas._libs.tslib.array_to_datetime",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_number_looking_strings_not_into_datetime": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas._libs.tslib.array_to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_parsing_timezone_offsets": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas._libs.tslib.array_to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_parsing_valid_dates": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas._libs.tslib.array_to_datetime",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_try_parse_dates": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "numpy.array",
    "numpy.array_equal",
    "object",
    "pandas._libs.lib.try_parse_dates"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_does_not_convert_mixed_integer": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pandas._libs.tslib._does_string_look_like_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.NaT",
    "pandas.compat.iteritems",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_tools.dateutil",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_dayfirst_yearfirst": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.parser.parse",
    "distutils.version.LooseVersion",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.compat.iteritems",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.tests.indexes.datetimes.test_tools.dateutil",
    "pandas.to_datetime",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_iso8601": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datetime.datetime",
    "pandas._libs.tslib._test_parse_iso8601",
    "pandas.compat.iteritems",
    "pandas.tests.indexes.datetimes.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_monthfreq": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.iteritems",
    "pandas.core.tools.datetimes.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_quarter_invalid": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.tests.indexes.datetimes.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_quarterly_with_freq": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas._libs.tslib.DateParseError",
    "pandas.compat.iteritems",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_time": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "ValueError",
    "datetime.time",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.core.tools.datetimes.to_time",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.util.testing._skip_if_has_locale",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_timestring": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.parser.parse",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.compat.iteritems",
    "pandas.core.tools.datetimes.parse_time_string",
    "pandas.to_datetime",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_timezone_minute_offsets_roundtrip": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "pandas.to_datetime",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_coerce": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "pandas.isnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_ignore": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_raise": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_for_array": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.nan",
    "pandas.core.tools.datetimes._guess_datetime_format_for_array",
    "pandas.util.testing._skip_if_not_us_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_invalid_inputs": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.tools.datetimes._guess_datetime_format"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_nopadding": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "pandas.core.tools.datetimes._guess_datetime_format"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_dayfirst": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "pandas.core.tools.datetimes._guess_datetime_format"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_locale_specific_formats": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "pandas.core.tools.datetimes._guess_datetime_format",
    "pandas.util.testing._skip_if_has_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_parseable_formats": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "pandas.core.tools.datetimes._guess_datetime_format",
    "pandas.util.testing._skip_if_not_us_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_epoch": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.tests.indexes.datetimes.test_tools.epoch_1960",
    "pandas.tests.indexes.datetimes.test_tools.epochs",
    "pandas.tests.indexes.datetimes.test_tools.units",
    "pandas.tests.indexes.datetimes.test_tools.units_from_epochs",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_origin": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_origins": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas._libs.tslib.OutOfBoundsDatetime",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.tests.indexes.datetimes.test_tools.units",
    "pandas.tests.indexes.datetimes.test_tools.units_from_epochs",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_unit": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.indexes.datetimes.test_tools.julian_dates",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.tests.indexes.datetimes.test_tools.units",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_julian_round_trip": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_processing_order": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_to_basic": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.julian_dates",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_datetime_bool": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.today",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_datetime_invalid_datatype": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_array_of_dt64s": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.datetime64",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_dt64s": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "numpy.datetime64",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz_psycopg2": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ImportError",
    "datetime.datetime",
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.core.dtypes.common.is_datetime64_ns_dtype",
    "pandas.tests.indexes.datetimes.test_tools.psycopg2",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz_pytz": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.datetimes.test_tools.pytz",
    "pandas.to_datetime",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_utc_is_true": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.bdate_range",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_consistent_format": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_inconsistent_format": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_series_starting_with_nans": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_series_with_nans": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_iso8601_noleading_0s": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_parse_nanoseconds_with_formula": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format_YYYYMMDD": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format_integer": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format_microsecond": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "format",
    "pandas.tests.indexes.datetimes.test_tools.calendar",
    "pandas.tests.indexes.datetimes.test_tools.locale",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format_time": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "format",
    "pandas.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_format_weeks": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "format",
    "pandas.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TimeConversionFormats.test_to_datetime_with_non_exact": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.tests.indexes.datetimes.test_tools.sys",
    "pandas.to_datetime",
    "pandas.util.testing._skip_if_has_locale",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_dayfirst": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_dti_constructor_numpy_timeunits": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_index_to_datetime": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime.today",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_string_na_nat_conversion": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "numpy.array",
    "numpy.empty",
    "numpy.nan",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas._libs.tslib.array_to_datetime",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.parse_date",
    "pandas.isnull",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_default": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_freq": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_iso8601": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_list_of_integers": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_on_datetime64_series": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_other_datetime64_units": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_types": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "list",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.compat.lmap",
    "pandas.isnull",
    "pandas.to_datetime",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_unprocessable_input": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_with_apply": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing._skip_if_has_locale",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeMisc.test_to_datetime_with_space_in_series": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_dataframe": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_dataframe_dtypes": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_unit": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.nan",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas._libs.tslib.OutOfBoundsDatetime",
    "pandas._libs.tslib.iNaT",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_unit_consistency": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_unit_mixed": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.ToDatetimeUnit.test_unit_with_numeric": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools._skip_if_has_locale": {
  "data": {
   "shadows": "pandas.util.testing._skip_if_has_locale"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.epoch_1960": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tests.indexes.datetimes.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.epochs": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "pandas.tests.indexes.datetimes.test_tools.epoch_1960",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.is_datetime64_ns_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_ns_dtype"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.julian_dates": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tests.indexes.datetimes.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.normalize_date": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.normalize_date"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.parse_date": {
  "data": {
   "shadows": "pandas.compat.parse_date"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.psycopg2": {
  "data": {
   "shadows": "psycopg2"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.test_normalize_date": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.core.tools.datetimes.normalize_date"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.tools": {
  "data": {
   "shadows": "pandas.core.tools.datetimes"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.datetimes.test_tools.units": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "pandas.tests.indexes.datetimes.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.units_from_epochs": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "list",
    "pandas.tests.indexes.datetimes.test_tools.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_asfreq": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_asfreq.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_asfreq.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_combined_pi": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_mult_pi": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_nat": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_ts": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_astype_asfreq": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_asfreq.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_construction.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_construction_base_constructor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_U": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_arrays_negative_year": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.tile",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_corner": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_datetime64arr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.dtype",
    "numpy.int64",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_dtype": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_empty": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_error": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_field_arrays": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.tile",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_floats": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.PeriodIndex",
    "pandas.PeriodIndex._simple_new",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_combined": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "func",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_mult": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_mult_dti_compat": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.date_range",
    "pandas.tests.indexes.period.test_construction.itertools",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_fromarraylike": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "iter",
    "list",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.offsets.MonthEnd",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_incompat_freq": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_invalid_quarters": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "pandas.PeriodIndex",
    "pandas.compat.lrange",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_mixed": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_nano": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_nat": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_pi_nat": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_simple_new": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_simple_new_empty": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_use_start_freq": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_year_and_quarter": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "list",
    "map",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_map_with_string_constructor": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.compat.PY3",
    "pandas.compat.lmap",
    "pandas.compat.text_type",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_recreate_from_data": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.setup_method": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.test_constructor_cant_cast_period": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "pandas.Series",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_construction.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.test_constructor_cast_object": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_construction.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_formats": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_formats.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_formats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_formats.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_formats.test_to_native_types": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_formats.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_indexing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.setup_method": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_datetime": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_day": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.tests.indexes.period.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_index": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_list_periods": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "pandas.Period",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_nat": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._libs.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_partial": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_indexing.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_seconds": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.tests.indexes.period.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_get_loc_msg": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Period",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_get_loc_nat": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take_fill_value": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_indexing.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take_misc": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_indexing.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_ops.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.Ops": {
  "data": {
   "shadows": "pandas.tests.test_base.Ops"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.TestFramePeriod": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestFramePeriod.test_ops_frame_period": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons.test_pi_nat_comp": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons.test_pi_pi_comp": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.setup_method": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_add_iadd": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.offsets",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_ops.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_comp_nat": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_drop_duplicates": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_equals": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "list",
    "pandas.PeriodIndex",
    "pandas.PeriodIndex._simple_new",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_minmax": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "getattr",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas._libs.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_nat": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.PeriodIndex._na_value",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_nat_new": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.max",
    "numpy.min",
    "pandas.Period",
    "pandas._np_version_under1p10",
    "pandas.period_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_ops_properties": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.PeriodIndex._bool_ops",
    "pandas.PeriodIndex._field_ops",
    "pandas.PeriodIndex._object_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order_compat": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "_check_freq",
    "numpy.array",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order_compat._check_freq": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_repeat": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "numpy.repeat",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_representation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "getattr",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.period_range",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_resolution": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_shift": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "TypeError",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_sub": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_sub_isub": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.offsets",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_ops.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_summary": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods._check": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_comp_period": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "pandas.Period",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_comp_period_nat": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas._libs.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_offset_errors": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_array_int": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.array",
    "numpy.subtract",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_errors": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "numpy.add",
    "numpy.subtract",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._np_version_under1p10",
    "pandas.tests.indexes.period.test_ops.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_nat": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.subtract",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_offset": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.offsets.Day"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_pdnat": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_period": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "NotImplemented",
    "numpy.nan",
    "numpy.subtract",
    "pandas.Index",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas._np_version_under1p10",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_period_nat": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.setup_method": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.test_ops_series_period": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "object",
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.test_ops_series_timedelta": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "object",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.tseries.offsets.Day",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_ops.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_partial_slicing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_pindex_slice_index": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_day": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._np_version_under1p12",
    "pandas.tests.indexes.period.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_outofbounds": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_seconds": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._np_version_under1p12",
    "pandas.tests.indexes.period.test_partial_slicing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_keep_name": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_negative_step": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "assert_slices_equivalent",
    "numpy.arange",
    "pandas.IndexSlice",
    "pandas.Period",
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_negative_step.assert_slices_equivalent": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_zero_step_raises": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing._np_version_under1p12": {
  "data": {
   "shadows": "pandas._np_version_under1p12"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_partial_slicing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_period.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.PeriodIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex._check_all_fields": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "getattr",
    "len",
    "list",
    "pandas.Series",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.create_index": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_append_concat": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_asobject_like": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_astype": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.NaN",
    "numpy.int64",
    "object",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_astype_raises": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.NaN",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_period.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_comp_period": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "pandas.period_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_contains": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_contains_nat": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_convert_array_of_periods": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_difference_freq": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_attr_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_dtype_str": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_end_time": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_factorize": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_fields": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_fillna_period": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_get_indexer": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.intp",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_get_loc": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_period.pytest",
    "pandas.util.testing.assert_raises_regex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_hash_error": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.period_range",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_index_duplicate_periods": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_index_unique": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_indexing": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_is_": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "create_index",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_is_full": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_iteration": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.Period",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_join_self": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "pandas.period_range",
    "pandas.tests.indexes.period.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_make_time_series": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_map": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_ndarray_compat_properties": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pandas.compat.is_platform_32bit",
    "pandas.tests.indexes.period.test_period.TestPeriodIndex",
    "pandas.tests.indexes.period.test_period.pytest",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_negative_ordinals": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_no_millisecond_field": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex.millisecond",
    "pandas.tests.indexes.period.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_numpy_repeat": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_index_indexer": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.np.random.randn",
    "pandas.period_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_index_length": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len",
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.tests.indexes.period.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_set_index_reindex": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_periods_number_check": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_freq": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "pandas.offsets.MonthEnd",
    "pandas.period_range",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_round_trip": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_fieldaccessor_nat": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_multiples": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.offsets.MonthEnd",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_qaccess": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pandas.PeriodIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_repeat": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shallow_copy_empty": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "len",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_gh8083": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_nat": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_ndarray": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_start_time": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_values": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.object",
    "object",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_view_asi8": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where_array_like": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "klass",
    "len",
    "list",
    "numpy.array",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where_other": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_with_multi_index": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_period.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_setops.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_difference": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_intersection": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_setops._permute",
    "pandas.tests.indexes.period.test_setops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_intersection_cases": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "pandas.PeriodIndex",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_join_does_not_recur": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.random.randint",
    "object",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_join_self": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_joins": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union_dataframe_index": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union_misc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.period_range",
    "pandas.tests.indexes.period.test_setops._permute",
    "pandas.tests.indexes.period.test_setops.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops._permute": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_setops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.period.test_tools.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.MONTHS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.MONTHS"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.setup_method": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_combine_first": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_dti_to_period": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Period",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_period_astype_to_timestamp": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_period_dt64_round_trip": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_searchsorted": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_datetime_depr": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Timestamp",
    "pandas.period_range",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_annualish": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_monthish": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_quarterly": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pandas.period_range",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_quarterlyish": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_get_with_delta",
    "datetime.timedelta",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp._get_with_delta": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_1703": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_combined": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_mult": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_nat": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_preserve_name": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_quarterly_bug": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_repr_is_code": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "eval",
    "pandas.Timestamp",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_to_period_astype": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_tolist": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation._check_freq": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_annual": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_business_daily": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_daily": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_hourly": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_microsecondly": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_millisecondly": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_minutely": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_monthly": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_nanosecondly": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_negone_ordinals": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.core.indexes.period",
    "pandas.core.indexes.period.asfreq",
    "pandas.core.indexes.period.year",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_secondly": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_weekly": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_intraday_conversion_factors": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas._libs.period.period_asfreq",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_business_day": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas._libs.period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_start_values": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas._libs.period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_week": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas._libs.period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.get_freq": {
  "data": {
   "shadows": "pandas.tseries.frequencies.get_freq"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.period_asfreq": {
  "data": {
   "shadows": "pandas._libs.period.period_asfreq"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.period_ordinal": {
  "data": {
   "shadows": "pandas._libs.period.period_ordinal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.period.test_tools.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_base.Base": {
  "data": {
   "shadows": "pandas.tests.indexes.common.Base"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Index": {
  "data": {
   "shadows": "pandas.core.indexes.api.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.MultiIndex": {
  "data": {
   "shadows": "pandas.core.indexes.api.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.PY36": {
  "data": {
   "shadows": "pandas.compat.PY36"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.TestIndex": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.common.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex._check_method_works": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.create_index": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.setup_method": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.lzip",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUIntIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "list",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add_string": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_empty_preserve_name": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_multiple": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas._libs.lib.Timestamp",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof_datetime_partial": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.lib.Timestamp",
    "pandas.core.indexes.api.Index",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_astype": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_boolean_cmp": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_booleanindex": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "list",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "_check",
    "len",
    "numpy.array",
    "pandas.core.indexes.datetimes._to_m8",
    "pandas.tests.indexes.test_base.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators._check": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "op",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_construction_list_mixed_tuples": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_corner": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "datetime.timedelta",
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.timedelta64",
    "object",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.Float64Index",
    "pandas.Int64Index",
    "pandas.TimedeltaIndex",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes_datetime": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes_timedelta": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "list",
    "pandas.Index",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_datetimetz": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_period": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_timedelta": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.random.rand",
    "object",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas._libs.lib.Timestamp",
    "pandas.core.indexes.api.Index",
    "pandas.infer_freq",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_datetimetz": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_period": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_timedelta": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_int_dtype_nan": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ArrayLike",
    "numpy.arange",
    "numpy.array",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__array__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__init__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_simple_new": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_conversion_preserves_name": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_copy_and_deepcopy": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "pandas.tests.indexes.test_base.TestIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_delete": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_difference": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_drop": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.lrange",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_empty_fancy": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.bool_",
    "numpy.float_",
    "numpy.int_",
    "pandas.tests.indexes.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals_object": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals_op_multiindex": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_fancy": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.nan",
    "pandas.compat.u",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.Index.format",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_datetime_with_time": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_none": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_with_name_time_info": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_invalid": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "ValueError",
    "method",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.compat.zip",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest_decreasing": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "method",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.compat.zip",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_strings": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_level_values": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_loc": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "method",
    "pandas.Index",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_set_value": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_getitem": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.indexes.datetimes._to_m8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_groupby": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.range",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_iadd_string": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_identical": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_index_ctor_infer_nan_nat": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.nan",
    "numpy.timedelta64",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_index_ctor_infer_periodindex": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.core.indexes.api.Index",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_indexing_doesnt_change_class": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_insert": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_intersection": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "pandas.compat.range",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_all_dates": {
  "data": {
   "lineno": 952
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_monotonic_incomparable": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_numeric": {
  "data": {
   "lineno": 937
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_object": {
  "data": {
   "lineno": 944
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.bool_",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "check_idx",
    "pandas.Float64Index",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg.check_idx": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.array",
    "numpy.nan",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_nan": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_join_self": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_logical_compat": {
  "data": {
   "lineno": 1017
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_identity_mapping": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_tseries_indices_return_index": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_with_tuples": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "pandas.compat.lzip",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeIntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nan_first_take_datetime": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "pandas._libs.lib.Timestamp",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nanosecond_index_access": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_new_axis": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_outer_join_sort": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.random.permutation",
    "object",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "get_reindex_type",
    "list",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index.get_reindex_type": {
  "data": {
   "lineno": 1586
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_name_if_target_is_list_or_ndarray": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "get_reindex_type",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array.get_reindex_type": {
  "data": {
   "lineno": 1575
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reshape_raise": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_keep_name": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "len",
    "numpy.array",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_dup": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_na": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "KeyError",
    "numpy.nan",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "check_slice",
    "list",
    "pandas.IndexSlice",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step.check_slice": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "list",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_str_attribute": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "method",
    "numpy.array",
    "numpy.nan",
    "numpy.ndarray",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.Index.str",
    "pandas.core.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_string_index_repr": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "coerce",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "pandas.tests.indexes.test_base.pandas",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_sub": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_summary": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.Index.summary"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_symmetric_difference": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.core.indexes.api.Index",
    "pandas.core.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tab_completion": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "dir",
    "list",
    "pandas.compat.range",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_take_fill_value": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.tests.indexes.test_base.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tuple_union_bug": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_union": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "RuntimeWarning",
    "klass",
    "list",
    "numpy.append",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_view_with_args": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.tests.indexes.test_base.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.common.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.create_index": {
  "data": {
   "lineno": 1815
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.setup_method": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "dict",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_argsort": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.compat.PY3",
    "pandas.compat.PY36",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_bytestring_with_unicode": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "bytes",
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "pandas.core.indexes.api.Index",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_copy_name": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "RuntimeWarning",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_copy_name2": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_difference_base": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_dropna": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "object",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_get_combined_index": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "pandas.core.index._get_combined_index",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_int_name_format": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.indexes.api.Index",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_intersect_str_dates": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "object",
    "pandas.core.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_intersection_base": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_is_monotonic_na": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_logical_compat": {
  "data": {
   "lineno": 1959
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_numpy_argsort": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "TypeError",
    "numpy.argsort",
    "pandas.compat.PY3",
    "pandas.compat.PY36",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_print_unicode_columns": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.tests.indexes.test_base.pandas",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_repeat": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_repr_summary": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.core.config.option_context",
    "pandas.tests.indexes.test_base.pandas",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_symmetric_difference": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "pandas.compat.text_type",
    "pandas.core.indexes.api.Index",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_union_base": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "RuntimeWarning",
    "klass",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base._get_combined_index": {
  "data": {
   "shadows": "pandas.core.index._get_combined_index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base._to_m8": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes._to_m8"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.test_category.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.indexes.api.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.Index": {
  "data": {
   "shadows": "pandas.core.indexes.api.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.core.indexes.api.CategoricalIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.create_index": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "list",
    "pandas.core.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.setup_method": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeCategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_append": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_astype": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "object",
    "pandas.Categorical.from_codes",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_intervals",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction_with_dtype": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.compat.range",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_contains": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.core.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_delete": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_disallow_set_ops": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.tests.indexes.test_category.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_duplicates": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_ensure_copied_data": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "_base",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_equals_categorical": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "numpy.nan",
    "object",
    "pandas.Categorical",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_fillna_categorical": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_indexer": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.array",
    "numpy.intp",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_loc": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "numpy.array",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_identical": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pandas.core.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_insert": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_isin": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.int64",
    "pandas.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map.f": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_method_delegation": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_min_max": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_category.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_base": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.intp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_dtype": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Categorical",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindexing": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.randint",
    "pandas.core.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "eval",
    "numpy.random.randint",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.core.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_string_categorical_index_repr": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "pandas.tests.indexes.test_category.unicode",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value_datetime": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.test_category.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_invalid_kwargs": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_where": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_where_array_like": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "klass",
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.unicode": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.tests.indexes.test_frozen": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_frozen.CheckImmutable": {
  "data": {
   "shadows": "pandas.tests.test_base.CheckImmutable"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.CheckStringMixin": {
  "data": {
   "shadows": "pandas.tests.test_base.CheckStringMixin"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.FrozenList": {
  "data": {
   "shadows": "pandas.core.indexes.frozen.FrozenList"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.FrozenNDArray": {
  "data": {
   "shadows": "pandas.core.indexes.frozen.FrozenNDArray"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.core.indexes.frozen.FrozenList",
    "pandas.tests.test_base.CheckImmutable",
    "pandas.tests.test_base.CheckStringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.setup_method": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.test_add": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.test_inplace": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.core.indexes.frozen.FrozenNDArray",
    "pandas.tests.test_base.CheckImmutable",
    "pandas.tests.test_base.CheckStringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.setup_method": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.core.indexes.frozen.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_shallow_copying": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.core.indexes.frozen.FrozenNDArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_shallow_copying.testit": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_values": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.core.indexes.frozen.FrozenNDArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_frozen.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_interval.Base": {
  "data": {
   "shadows": "pandas.tests.indexes.common.Base"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.Interval": {
  "data": {
   "shadows": "pandas.Interval"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.IntervalTree": {
  "data": {
   "shadows": "pandas._libs.interval.IntervalTree"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.IntervalIndex",
    "pandas.tests.indexes.common.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.create_index": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.IntervalIndex.from_breaks"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.setup_method": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_tuples",
    "pandas.util.testing.makeIntervalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.slice_locs_cases": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_breaks"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.slice_locs_decreasing_cases": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_append": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "ValueError",
    "pandas.IntervalIndex.from_arrays",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_append.f": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_astype": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.int64",
    "object",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.IntervalIndex.from_intervals",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_comparison": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "pandas.Interval",
    "pandas.IntervalIndex.from_breaks",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "pandas.Index",
    "pandas.Interval",
    "pandas.IntervalIndex",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_breaks",
    "pandas.IntervalIndex.from_intervals"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_datetimelike": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "pandas.IntervalIndex.from_breaks",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_error": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_error.f": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_intervals"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_errors": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Index",
    "pandas.Interval",
    "pandas.IntervalIndex",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_breaks",
    "pandas.IntervalIndex.from_intervals",
    "pandas.period_range",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_other": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.IntervalIndex.from_intervals",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_contains": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "pandas.Interval",
    "pandas.IntervalIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_copy": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_datetime": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.IntervalIndex.from_breaks",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_delete": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_breaks"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_difference": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_dropna": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_ensure_copied_data": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.IntervalIndex",
    "pandas.IntervalIndex.from_intervals",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_equals": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "object",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_indexer": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.IntervalIndex.from_breaks",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_indexer_subintervals": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "pandas.IntervalIndex.from_breaks",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_item": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Interval",
    "pandas.IntervalIndex.from_arrays",
    "pandas.isnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_loc_interval": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Interval",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_loc_value": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "numpy.sort",
    "pandas.IntervalIndex.from_arrays",
    "pandas.IntervalIndex.from_tuples",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_insert": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Interval",
    "pandas.IntervalIndex.from_breaks",
    "pandas.tests.indexes.test_interval.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_intersection": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_breaks",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_isin": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_missing_values": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Index",
    "pandas.Interval",
    "pandas.IntervalIndex.from_arrays",
    "pandas.isnull",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_monotonic_and_unique": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_non_contiguous": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.IntervalIndex.from_tuples",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_properties": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.Interval",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_tuples",
    "pandas.Timestamp",
    "pandas.tests.indexes.test_interval.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr_max_seq_item_setting": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_interval.TestIntervalIndex",
    "pandas.tests.indexes.test_interval.pytest",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_interval.TestIntervalIndex",
    "pandas.tests.indexes.test_interval.pytest",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_set_operation_errors": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "pandas.IntervalIndex.from_breaks",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_decreasing_float64": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_decreasing_int64": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_fails": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "KeyError",
    "pandas.IntervalIndex.from_tuples",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_float64": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_int64": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_sort_values": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.IntervalIndex.from_breaks",
    "pandas.IntervalIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_symmetric_difference": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_take": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_union": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_where": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Interval",
    "pandas.IntervalIndex.from_breaks",
    "pandas.IntervalIndex.from_intervals",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_where_array_like": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_with_nans": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.testcontains": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "pandas.Interval",
    "pandas.IntervalIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_construction": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.IntervalIndex.from_breaks",
    "pandas.interval_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_errors": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.indexes.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_errors.f": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.interval_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.setup_method": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "gentree",
    "numpy.arange",
    "pandas._libs.interval.IntervalTree"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_duplicates": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "numpy.sort",
    "pandas._libs.interval.IntervalTree",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer_closed": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "pandas._libs.interval.IntervalTree",
    "pandas.compat.is_platform_32bit",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer_non_unique": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sort",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_loc": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "numpy.sort",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_loc_closed": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas._libs.interval.IntervalTree",
    "pandas.tests.indexes.test_interval.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.interval_range": {
  "data": {
   "shadows": "pandas.interval_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_interval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_multi.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.InvalidIndexError": {
  "data": {
   "shadows": "pandas.core.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.assert_multiindex_copied": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.check_level_names": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.create_index": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.setup_method": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.take_invalid_kwargs": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test__is_strictly_monotonic_decreasing": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_append": {
  "data": {
   "lineno": 895
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_append_mixed_dtypes": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_argsort": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_astype": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype",
    "pandas.util.testing.assert_copy",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2.f": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bounds": {
  "data": {
   "lineno": 1487
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bytestring_with_unicode": {
  "data": {
   "lineno": 2355,
   "symbols_in_volume": [
    "bytes",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_changing_names": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_consistency": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_mismatched_label_levels": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.re",
    "pandas.tests.indexes.test_multi.warnings",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_no_levels": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.re",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_single_level": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains": {
  "data": {
   "lineno": 1063
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains_top_level": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains_with_nat": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy_in_constructor": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy_names": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_difference": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_raises_regex",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_dims": {
  "data": {
   "lineno": 1784
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "KeyError",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop_not_lexsorted": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.errors.PerformanceWarning",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_multiple": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_with_names": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_dropna": {
  "data": {
   "lineno": 2807,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_meta_data": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_names": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "check",
    "itertools.product",
    "len",
    "list",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.zeros",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas._libs.hashtable.duplicated_object",
    "pandas.compat.range",
    "pandas.compat.u",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.makeStringIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates.check": {
  "data": {
   "lineno": 2167,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.arange",
    "numpy.array",
    "numpy.insert",
    "numpy.tile",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_missing_values": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_multi": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_operator": {
  "data": {
   "lineno": 2672
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format": {
  "data": {
   "lineno": 1387
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_integer_names": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_config": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.set_option",
    "pandas.tests.indexes.test_multi.warnings",
    "pandas.util.testing.reset_display_options"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_display": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.NaT",
    "pandas._libs.lib.Timestamp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_different_lengths": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_empty": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_datetimelike_mixed": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_categorical": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_datetimetz": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_period": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_timedelta": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_invalid_input": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "TypeError",
    "pandas.MultiIndex.from_arrays",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_datetimeindex": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas._libs.lib.list_to_object_array",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_empty": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.Float64Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_index_series_categorical": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_invalid_input": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "TypeError",
    "pandas.MultiIndex.from_product",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples_empty": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples_index_values": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.core.indexes.base.InvalidIndexError",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer_nearest": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_number_integer": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values_na": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.NaT",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.tests.indexes.test_multi.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_duplicates": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "pandas.Index",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_level": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.tests.indexes.test_multi.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_missing_nan": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "numpy.nan",
    "pandas.MultiIndex.from_arrays",
    "pandas.tests.indexes.test_multi.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_unique_index": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_value_duplicates": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem_group_select": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_groupby": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_hash_collisions": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_identical": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_index_name_retained": {
  "data": {
   "lineno": 2659,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_inplace_mutation_resets_values": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.empty",
    "object",
    "pandas.MultiIndex",
    "pandas.compat.long",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_insert": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.linspace",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_intersection": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.compat.lzip",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_all_dates": {
  "data": {
   "lineno": 1083
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_monotonic": {
  "data": {
   "lineno": 2387,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_numeric": {
  "data": {
   "lineno": 1086
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_strictly_monotonic": {
  "data": {
   "lineno": 2448,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.bool_",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_level_kwarg": {
  "data": {
   "lineno": 2584,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.arange",
    "numpy.array",
    "pandas.MultiIndex.from_arrays",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_nan": {
  "data": {
   "lineno": 2577,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isnull_behavior": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.isnull",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_iter": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "TypeError",
    "_check_all",
    "isinstance",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_all": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "_check_how"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_how": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_multi": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_self": {
  "data": {
   "lineno": 2059
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_labels_dtypes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_large_multiindex_error": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_pickle": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.intp",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.PY3",
    "pandas.read_pickle",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_v2_unpickle": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.intp",
    "pandas.MultiIndex.from_tuples",
    "pandas.read_pickle",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_level_setting_resets_attributes": {
  "data": {
   "lineno": 2376,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_metadata_immutable": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_multi.re",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_names": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_raises_regex",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_nlevels": {
  "data": {
   "lineno": 999
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_numpy_repeat": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.repeat",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_partial_string_timestamp_multiindex": {
  "data": {
   "lineno": 2693,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_rangeindex_fallback_coercion_bug": {
  "data": {
   "lineno": 2784,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Int64Index",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reconstruct_remove_unused": {
  "data": {
   "lineno": 2506,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reconstruct_sort": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reference_duplicate_name": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_level": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Index",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_names_when_target_is_list_or_array": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_type_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 2642,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.object_",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_preserves_names_when_target_is_list_or_ndarray": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_remove_unused_levels_large": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reorder_levels": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repeat": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "eval",
    "list",
    "pandas.MultiIndex.from_product",
    "pandas.compat.PY3",
    "pandas.compat.range",
    "pandas.compat.text_type",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_with_unicode_data": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_roundtrip_pickle_with_tz": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "assert_matching"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels.assert_matching": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.int8",
    "pandas.util.testing.assert_numpy_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_matching",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels.assert_matching": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "pandas.util.testing.assert_numpy_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels_categorical": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels_labels_names_bad_input": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_name_methods": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_value_keeps_names": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_shallow_copy": {
  "data": {
   "lineno": 615
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_keep_name": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_contained": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "len",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_sorted": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_partial": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_with_type_mismatch": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_multi.random",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_deterministic": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_not_sort_remaining": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_str": {
  "data": {
   "lineno": 2342
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sub": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_fill_value": {
  "data": {
   "lineno": 1957,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_preserve_name": {
  "data": {
   "lineno": 1953
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_to_frame": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_to_hierarchical": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_tolist": {
  "data": {
   "lineno": 2289,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_truncate": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_tuples_with_name_string": {
  "data": {
   "lineno": 2868,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Index",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_union": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unique": {
  "data": {
   "lineno": 2257,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unique_datetimelike": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unsortedindex": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.errors.UnsortedIndexError",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unsortedindex_doc_examples": {
  "data": {
   "lineno": 2844,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.errors.PerformanceWarning",
    "pandas.errors.UnsortedIndexError",
    "pandas.tests.indexes.test_multi.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_values_boxed": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas._libs.lib.list_to_object_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_view": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_multi.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where.f": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where_array_like": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "klass",
    "list",
    "numpy.array",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.tests.indexes.test_multi.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.UnsortedIndexError": {
  "data": {
   "shadows": "pandas.errors.UnsortedIndexError"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assert_copy": {
  "data": {
   "shadows": "pandas.util.testing.assert_copy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_numeric.Base": {
  "data": {
   "shadows": "pandas.tests.indexes.common.Base"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Numeric": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.tests.indexes.common.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_explicit_conversions": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_index_groupby": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_modulo": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_numeric_compat": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "divmod",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.errstate",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.UInt64Index",
    "pandas.compat.PY3",
    "pandas.date_range",
    "pandas.tests.indexes.test_numeric.full_like",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_ufunc_compat": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sin",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_numeric.Numeric"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_cant_or_shouldnt_cast": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_numeric.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_identical": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_is_monotonic": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_is_strictly_monotonic": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_join_non_unique": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_join_self": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_logical_compat": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_prevent_casting": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_slice_keep_name": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_take_fill_value": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_take_preserve_name": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_ufunc_coercions": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.divide",
    "numpy.sqrt",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_union_noncomparable": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.concatenate",
    "object",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_view": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_numeric.NumericInt",
    "pandas.util.testing.assert_index_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_view_index": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.Numeric"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_coerce": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_is_index": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Float64Index",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.create_index": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.setup_method": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.NAN",
    "object",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype_from_object": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.isnull",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_coerce": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_explicit": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.arange",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_invalid": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Float64Index",
    "pandas._libs.lib.Timestamp",
    "pandas.tests.indexes.test_numeric.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_nans": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_not_nans": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_doesnt_contain_all_the_things": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_equals_numeric": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_fillna_float64": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_indexer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Float64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc_missing_nan": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "KeyError",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc_na": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_nan_multiple_containment": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.pi",
    "pandas.Float64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_repr_roundtrip": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_take_fill_value": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pandas.Int64Index",
    "pandas.tests.indexes.test_numeric.NumericInt"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.create_index": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.setup_method": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_coerce_list": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "iter",
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.Series",
    "pandas.tests.indexes.test_numeric.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor_corner": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_get_indexer": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_intersection": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.sort",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_inner": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_left": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_non_int_index": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_outer": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_right": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_where": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_where_array_like": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "klass",
    "len",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "pandas.UInt64Index",
    "pandas.tests.indexes.test_numeric.NumericInt"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.create_index": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.UInt64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.setup_method": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "dict",
    "pandas.UInt64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_constructor": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64",
    "object",
    "pandas.Index",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_get_indexer": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_intersection": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.sort",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_inner": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_left": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_non_int_index": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_outer": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_right": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.UInt64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.UInt64Index": {
  "data": {
   "shadows": "pandas.UInt64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.full_like": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_range.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.check_binop": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "itertools.combinations",
    "op",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.create_index": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.setup_method": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_binops": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_binops_pow": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_cant_or_shouldnt_cast": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "TypeError",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.int64",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_corner": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_name": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_range": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.RangeIndex.from_range",
    "pandas.compat.range",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_same": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_copy": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_delete": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "int",
    "len",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_dtype": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_duplicates": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_equals_range": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_explicit_conversions": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "pandas.Float64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_extended_gcd": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_backfill": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_pad": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_identical": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_insert": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_intersect_str_dates": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_intersection": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.sort",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_is_monotonic": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_inner": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_left": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_int_index": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_unique": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_outer": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_right": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_self": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_len_specialised": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_logical_compat": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_max_fitting_element": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_min_fitting_element": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_nbytes": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "int",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_numeric_compat2": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_prevent_casting": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_print_unicode_columns": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "eval",
    "pandas.RangeIndex",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_keep_name": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_specialised": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_fill_value": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_preserve_name": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names.testit": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_ufunc_compat": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sin",
    "pandas.Float64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "I64",
    "RI",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union_noncomparable": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.concatenate",
    "object",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.TestRangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view_Index": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_where": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.notnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_where_array_like": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "klass",
    "len",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_astype": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_astype.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.create_index": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.offsets.Hour",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.setup_method": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "numpy.NaN",
    "numpy.int64",
    "object",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype_raises": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.NaN",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_astype.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype_timedelta64": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Float64Index",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_numeric_compat": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.tests.indexes.timedeltas.test_astype.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_shift": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_astype.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_construction_base_constructor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.TimedeltaIndex",
    "pandas.offsets.Second",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor_coverage": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_construction.pytest",
    "pandas.timedelta_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor_name": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_construction.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_delete": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.tests.indexes.timedeltas.test_indexing.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_delete_slice": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_insert": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_ops.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Ops": {
  "data": {
   "shadows": "pandas.tests.test_base.Ops"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing.test_add_overflow": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "OverflowError",
    "int",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing.test_tdi_ops_attributes": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "abs",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.setup_method": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_add_iadd": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_addition_ops": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_comp_nat": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_drop_duplicates": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_dti_tdi_numeric_ops": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_equals": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_getitem": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_infer_freq": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_minmax": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nat": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.TimedeltaIndex._na_value",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nat_new": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nonunique_contains": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "map",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas._np_version_under1p10",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_ops_compat": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.arange",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Float64Index",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.offsets.Hour",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_ops_properties": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "pandas.TimedeltaIndex",
    "pandas.TimedeltaIndex._field_ops",
    "pandas.TimedeltaIndex._object_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_order": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_repeat": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.repeat",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_representation": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr",
    "pandas.TimedeltaIndex",
    "pandas.option_context",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.option_context",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_round": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_shift": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_sub_isub": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_sub_period": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Period",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops_with_tz": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "TypeError",
    "_check",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops_with_tz._check": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_summary": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_take": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_take_invalid_kwargs": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_unknown_attribute": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.random.normal",
    "pandas.Series",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_compare_timedelta_ndarray": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_compare_timedelta_series": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.tests.indexes.timedeltas.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_error_str": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "TypeError",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_ops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_ndarray": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.array",
    "numpy.float64",
    "pandas.Timedelta",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_notimplemented": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "NotImplemented",
    "Other",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_notimplemented.Other": {
  "data": {
   "lineno": 992
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_offsets": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_series": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_series_object": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "getattr",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.indexes.timedeltas.test_ops.pytest",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops_scalar": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.offsets.Day",
    "pandas.offsets.Second",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops_with_missing_values": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_ops.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_partial_slice": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.tests.indexes.timedeltas.test_partial_slicing.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_partial_slice_high_reso": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_negative_step": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "assert_slices_equivalent",
    "numpy.arange",
    "pandas.IndexSlice",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_negative_step.assert_slices_equivalent": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_zero_step_raises": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_setops.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_intersection_bug_1708": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Int64Index",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_1730": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_1745": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_4564": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "pandas.offsets.Minute",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_coverage": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_setops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestSlicing": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestSlicing.test_timedelta": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimeSeries": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimeSeries.test_series_box_timedelta": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.create_index": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.offsets.Hour",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.setup_method": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_append_join_nondatetimeindex": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_append_numpy_bug_1681": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.timedelta_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_argmin_argmax": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_comparisons_coverage": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "pandas.tests.indexes.timedeltas.test_timedelta.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_comparisons_nat": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas._np_version_under1p8",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_difference_freq": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_attr_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_does_not_convert_mixed_integer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.indexes.timedeltas.test_timedelta.randn",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeCustomDataframe",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_factorize": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_fields": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.indexes.timedeltas.test_timedelta.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_fillna_timedelta": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_freq_conversion": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_duplicates": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_indexer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_loc": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_raises_regex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_loc_nat": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.NaT",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_hash_error": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_isin": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_join_self": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_map": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "f",
    "pandas.Int64Index",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_misc_coverage": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_numeric_compat": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.tests.indexes.timedeltas.test_timedelta.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pass_TimedeltaIndex_to_index": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pickle": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_shift": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_slice_keeps_name": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_sort_values": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_take": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "isinstance",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_take_fill_value": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_timedelta.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_total_seconds": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_ufunc_coercions": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "numpy.absolute",
    "numpy.divide",
    "numpy.multiply",
    "numpy.negative",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.randn": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.Second": {
  "data": {
   "shadows": "pandas.tseries.offsets.Second"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.TestTimedeltas": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.TestTimedeltas.test_timedelta_range": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.timedelta_range",
    "pandas.to_timedelta",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Second",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_tools.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "conv",
    "datetime.timedelta",
    "numpy.arange",
    "numpy.array",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta.conv": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_invalid": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "datetime.time",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.timedeltas.test_tools.pytest",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_on_missing_values": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_on_nanoseconds": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timedelta",
    "pandas.tests.indexes.timedeltas.test_tools.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_via_apply": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.timedeltas.test_tools.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.io": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_css": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_css.CSSResolver": {
  "data": {
   "shadows": "pandas.io.formats.css.CSSResolver"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_css.CSSWarning": {
  "data": {
   "shadows": "pandas.io.formats.css.CSSWarning"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_css.assert_resolves": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSResolver",
    "resolve"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.assert_same_resolution": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSResolver",
    "resolve"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_css.test_css_absolute_font_size": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_css.assert_resolves",
    "pandas.tests.io.formats.test_css.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_none_absent": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_css.assert_same_resolution",
    "pandas.tests.io.formats.test_css.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_parse_invalid": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSWarning",
    "pandas.tests.io.formats.test_css.assert_same_resolution",
    "pandas.tests.io.formats.test_css.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_parse_normalisation": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_css.assert_same_resolution",
    "pandas.tests.io.formats.test_css.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_precedence": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSResolver",
    "pandas.tests.io.formats.test_css.pytest",
    "resolve"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_relative_font_size": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_css.assert_resolves",
    "pandas.tests.io.formats.test_css.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_side_shorthands": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.io.formats.css.CSSWarning",
    "pandas.tests.io.formats.test_css.assert_resolves",
    "pandas.tests.io.formats.test_css.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_eng_formatting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.compare": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "formatter",
    "input"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.compare_all": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "formatter",
    "input"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_eng_float_formatter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.formats.format.set_eng_float_format",
    "pandas.util.testing.reset_display_options"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_exponents_with_eng_prefix": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "formatter",
    "numpy.sqrt",
    "pandas.io.formats.format.EngFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_exponents_without_eng_prefix": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "formatter",
    "numpy.pi",
    "pandas.io.formats.format.EngFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_inf": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "formatter",
    "numpy.inf",
    "pandas.compat.u",
    "pandas.io.formats.format.EngFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_nan": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "formatter",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.io.formats.format.EngFormatter",
    "pandas.io.formats.format.set_eng_float_format",
    "pandas.util.testing.reset_display_options"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_rounding": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "formatter",
    "pandas.compat.u",
    "pandas.io.formats.format.EngFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.fmt": {
  "data": {
   "shadows": "pandas.io.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_eng_formatting.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_printing.InteractiveShell": {
  "data": {
   "shadows": "IPython.core.interactiveshell.InteractiveShell"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_adjoin": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.io.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_adjoin_unicode": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.io.formats.format.EastAsianTextAdjustment",
    "pandas.io.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_ambiguous_width": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas.core.config.option_context",
    "pandas.io.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_east_asian_len": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.io.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_justify": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "just",
    "pandas.io.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_justify.just": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.setup_class": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "IPython.core.interactiveshell.InteractiveShell.instance",
    "ImportError",
    "classmethod",
    "pandas.tests.io.formats.test_printing.pytest",
    "unittest.mock"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_config_default_off": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_config_on": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_enable_data_resource_formatter": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pandas.core.config",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_publishes": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_publishes_not_implemented": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.option_context",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.fmt": {
  "data": {
   "shadows": "pandas.io.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_printing.test_adjoin": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.io.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.test_repr_binary_type": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "btype",
    "pandas.compat.binary_type",
    "pandas.compat.bytes_to_str",
    "pandas.compat.text_type",
    "pandas.core.config.get_option",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.tests.io.formats.test_printing.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.formats.test_style.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.Styler": {
  "data": {
   "shadows": "pandas.io.formats.style.Styler"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.TestStyler": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_style.TestStyler.setup_method": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.io.formats.style.Styler",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.setup_method.h": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_axis": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_labels": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_labels.f": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_return": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_return.f": {
  "data": {
   "lineno": 697
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_none": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_none.f": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_subset": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_applymap_subset": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_applymap_subset.f": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bad_apply_shape": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_left": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_left_0points": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_all_neg": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_all_pos": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_pos_and_neg": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_zero_pos_and_neg": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_bad_align_raises": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_caption": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "all",
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_clear": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_copy": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_deepcopy": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.tests.io.formats.test_style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_dict": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_format": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.random.random",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_format_raises": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_subset": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_empty": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_empty_index_name_doesnt_display": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_export": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_get_level_lengths": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.io.formats.style._get_level_lengths",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_get_level_lengths_un_sorted": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.io.formats.style._get_level_lengths",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_highlight_max": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_highlight_null": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_index_name": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_init_non_pandas": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.formats.style.Styler",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_init_series": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_column_names": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_disabled": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_index_names": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_multiindex_name": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_nonunique_raises": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.io.formats.style.Styler",
    "pandas.tests.io.formats.test_style.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_numeric_columns": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_precision": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render_double": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render_empty_dfs": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_repr_html_ok": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_set_properties": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_set_properties_subset": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_table_attributes": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_table_styles": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_trim": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_unique_id": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_style.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx_flatten_multi": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx_flatten_multi_traliing_semi": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_uuid": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStylerMatplotlibDep": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_style.TestStylerMatplotlibDep.test_background_gradient": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "all",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.util.testing._skip_if_no_mpl"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style._get_level_lengths": {
  "data": {
   "shadows": "pandas.io.formats.style._get_level_lengths"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style._styler": {
  "data": {
   "shadows": "pandas.formats.style.Styler"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.jinja2": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.tests.io.formats.test_style.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.test_block_names": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "pandas.io.formats.style.Styler.template.blocks",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.test_from_custom_template": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "issubclass",
    "pandas.DataFrame",
    "pandas.io.formats.style.Styler",
    "pandas.io.formats.style.Styler.env",
    "pandas.io.formats.style.Styler.from_custom_template",
    "pandas.io.formats.style.Styler.template",
    "pandas.tests.io.formats.test_style.textwrap",
    "result",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.test_shim": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_style.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_csv": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_csv.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_csv.Error": {
  "data": {
   "shadows": "_csv.Error"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_csv_to_string": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_date_format": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_decimal": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_doublequote": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_csv.Error",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_escapechar": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_float_format": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_multi_index": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_na_rep": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_quotechar": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_csv.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_csv.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_excel": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_excel.CSSToExcelConverter": {
  "data": {
   "shadows": "pandas.io.formats.excel.CSSToExcelConverter"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_excel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "convert",
    "pandas.io.formats.excel.CSSToExcelConverter",
    "pandas.tests.io.formats.test_to_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel_inherited": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "convert",
    "pandas.io.formats.excel.CSSToExcelConverter",
    "pandas.tests.io.formats.test_to_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel_multiple": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "convert",
    "pandas.io.formats.excel.CSSToExcelConverter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.tests.io.formats.test_to_html.IPython"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_html.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.compat.string_types",
    "pandas.util.testing.makeStringIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border_option": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border_zero": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_columns_arg": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.getSeriesData"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_hourformatter": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_hourformatter.format_func": {
  "data": {
   "lineno": 1034
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_monthformatter": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_monthformatter.format_func": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_decimal": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_escape_disabled": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_escaped": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_filename": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeStringIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_index": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_index_formatter": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_justify": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.mod",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_index_false": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_odd_even_truncate": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_sparsify": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_sparsify_false_multi_sparse": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_no_index_max_rows": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_notebook_has_no_style": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_notebook_has_style": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_regression_GH6098": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.compat.PY2",
    "pandas.io.formats.format.set_option",
    "pandas.tests.io.formats.test_to_html.div_style",
    "pandas.tests.io.formats.test_to_html.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate_multi_index": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.io.formats.format.set_option",
    "pandas.tests.io.formats.test_to_html.div_style",
    "pandas.tests.io.formats.test_to_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate_multi_index_sparse_off": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.io.formats.format.set_option",
    "pandas.tests.io.formats.test_to_html.div_style",
    "pandas.tests.io.formats.test_to_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_unicode": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_classes": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_col_space": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "check_with_width",
    "numpy.random.random",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_col_space.check_with_width": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "pandas.tests.io.formats.test_to_html.re",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_empty_string_label": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_index_names_false": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_no_bold": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.div_style": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.io.formats.test_to_html.fmt": {
  "data": {
   "shadows": "pandas.io.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_html.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_latex.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.frame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_bold_rows": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_decimal": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.frame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_escape": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_escape_special_chars": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_filename": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "open",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.tests.io.formats.test_to_latex.codecs",
    "pandas.tests.io.formats.test_to_latex.frame",
    "pandas.tests.io.formats.test_to_latex.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_format": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.frame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_longtable": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.frame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_multicolumnrow": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_multiindex": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_no_bold_rows": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_no_header": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_series": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_specified_header": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_with_formatters": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.frame": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.formats.test_to_latex.pytest",
    "pandas.util.testing.getSeriesData"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.formats.test_to_latex.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.json": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.json.test_json_table_schema": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.json.test_json_table_schema.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.PeriodDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.PeriodDtype"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.setup_method": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.date_range",
    "pandas.timedelta_range",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_build_table_schema": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.io.json.table_schema.build_table_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_multiindex": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.io.json.table_schema.build_table_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_series": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.json.table_schema.build_table_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.tets_series_unnamed": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.json.table_schema.build_table_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.setup_method": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_build_series": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.Series",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_categorical": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_date_format_raises": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.json.test_json_table_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_categorical": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.io.json.table_schema.make_field"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_datetime": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.json.table_schema.make_field",
    "pandas.period_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_float": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.io.json.table_schema.make_field"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_int": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.io.json.table_schema.make_field"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_mi_falsey_name": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.io.json.table_schema.build_table_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_overlapping_names": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.tests.io.json.test_json_table_schema.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_partion": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_set": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_unset": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_set": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_unset": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.io.json.table_schema.set_default_names"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_timestamp_in_columns": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_categorical_index": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_float_index": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.Series",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_period_index": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.Series",
    "pandas.period_range",
    "pandas.tests.io.json.test_json_table_schema.json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_bool_data": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.bool",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_bool_dtypes": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bool",
    "numpy.bool",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_categorical_data": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_categorical_dtypes": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_date_data": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.json.table_schema.as_json_table_type",
    "pandas.period_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_date_dtypes": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.dtypes.dtypes.PeriodDtype",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_float_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_float_dtypes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_int_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_int_dtypes": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_string_data": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_string_dtypes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_timedelta_dtypes": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.io.json.table_schema.as_json_table_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.as_json_table_type": {
  "data": {
   "shadows": "pandas.io.json.table_schema.as_json_table_type"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.build_table_schema": {
  "data": {
   "shadows": "pandas.io.json.table_schema.build_table_schema"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.make_field": {
  "data": {
   "shadows": "pandas.io.json.table_schema.make_field"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_json_table_schema.set_default_names": {
  "data": {
   "shadows": "pandas.io.json.table_schema.set_default_names"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.json.test_normalize.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_empty_array": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_meta_name_conflict": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_more_deeply_nested": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.deep_nested",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_non_ascii_key": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_record_prefix": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.state_data",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_shallow_nested": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_normalize": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.state_data",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_normalize_with_separator": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.deep_nested",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_records": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_flat_stays_flat": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.normalize.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_json_normalize_errors": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "KeyError",
    "pandas.io.json.json_normalize",
    "pandas.tests.io.json.test_normalize.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_nested_flattens": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.normalize.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_one_level_deep_flattens": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.normalize.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.deep_nested": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.tests.io.json.test_normalize.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.json_normalize": {
  "data": {
   "shadows": "pandas.io.json.json_normalize"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.nested_to_record": {
  "data": {
   "shadows": "pandas.io.json.normalize.nested_to_record"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_normalize.state_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.tests.io.json.test_normalize.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "numpy.arange",
    "numpy.int64",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.io.json.test_pandas._cat_frame",
    "pandas.tests.io.json.test_pandas._frame",
    "pandas.tests.io.json.test_pandas._seriesd",
    "pandas.tests.io.json.test_pandas._tsd",
    "pandas.tests.io.json.test_pandas.cat",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "reversed"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.json.test_pandas.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.setup_method": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.json.test_pandas._cat_frame",
    "pandas.tests.io.json.test_pandas._frame",
    "pandas.tests.io.json.test_pandas._frame2",
    "pandas.tests.io.json.test_pandas._intframe",
    "pandas.tests.io.json.test_pandas._mixed_frame",
    "pandas.tests.io.json.test_pandas._tsframe",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.teardown_method": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_axis_dates": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_blocks_compat_GH9037": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_categorical": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_convert_dates": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_convert_dates_infer": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.io.json.dumps",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_data_frame_size_after_to_json": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_frame": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.json.test_pandas.pytest",
    "test_w_date"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_frame.test_w_date": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_series": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.io.json.test_pandas.pytest",
    "test_w_date"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_series.test_w_date": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_unit": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_datetime_tz": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_indirect": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "complex",
    "float",
    "pandas.DataFrame",
    "pandas.io.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_indirect.default": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "complex",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_numpy_unsupported_dtype": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "complex",
    "float",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_raises": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "object",
    "pandas.DataFrame",
    "pandas.tests.io.json.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_raises.my_handler_raises": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_doc_example": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "list",
    "numpy.bool_",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_double_encoded_labels": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_empty": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_empty_mixedtype": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_bad_data": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_nones": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.NINF",
    "numpy.inf",
    "numpy.isnan",
    "pandas.DataFrame",
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_precise_float": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "_check_all_orients",
    "_check_orient",
    "numpy.float64",
    "numpy.int",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_all_orients": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "_check_orient"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_orient": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "isinstance",
    "numpy",
    "numpy.datetime64",
    "pandas.DatetimeIndex",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_mixedtype_orient": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "_check",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns._check": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_index": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_to_json_except": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.json.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_to_json_float_precision": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.is_platform_32bit",
    "pandas.tests.io.json.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "TypeError",
    "_try_decode",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.compat.PY2",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_raises_regex",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding._try_decode": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding.roundtrip": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_misc_example": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_mixed_timedelta_datetime": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "datetime.timedelta",
    "object",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_path": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_jsonl": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_jsonl_unicode_chars": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_reconstruction_index": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_round_trip_exception_": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_precise_float": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "_check_all_orients",
    "numpy.float64",
    "numpy.int",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.lrange",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_all_orients": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "_check_orient"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_orient": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy",
    "pandas.read_json",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_non_unique_index": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_to_json_except": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.io.json.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_sparse": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_timedelta": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_to_jsonl": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_typ": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_tz_is_utc": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.io.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_tz_range_is_utc": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.io.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_url": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_v12_compat": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.tests.io.json.test_pandas.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_weird_nested_json": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas._cat_frame": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._frame": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._frame2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._intframe": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._mixed_frame": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._seriesd": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._tsd": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas._tsframe": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.cat": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.tests.io.json.test_pandas.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.dumps": {
  "data": {
   "shadows": "pandas.io.json.dumps"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.is_platform_32bit": {
  "data": {
   "shadows": "pandas.compat.is_platform_32bit"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.read_json": {
  "data": {
   "shadows": "pandas.read_json"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.io.json.test_pandas.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.common": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.msgpack.common.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.common.frombytes": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.tests.io.msgpack.common.tobytes": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.tests.io.msgpack.test_buffer": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_buffer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_buffer.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_buffer.test_unpack_buffer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "array.array",
    "frombytes",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_buffer.test_unpack_bytearray": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "all",
    "bytearray",
    "bytes",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_buffer.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_case": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_case.check": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.check_array": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.check_raw": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.match": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_case.test_1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_2": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_3": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_5": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_9": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_array16": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_array32": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_fixarray": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_fixraw": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_match": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "pandas.tests.io.msgpack.test_case.match",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_raw16": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_raw32": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_unicode": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_except": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_except.DummyException": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_invalidvalue": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_except.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_from_object_hook": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_except.DummyException",
    "pandas.tests.io.msgpack.test_except.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_from_object_hook.hook": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_except.DummyException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_on_find_unsupported_value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_except.datetime",
    "pandas.tests.io.msgpack.test_except.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_except.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_except.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_except.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_extension": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_extension.ExtType": {
  "data": {
   "shadows": "pandas.io.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_extension.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_extension.msgpack": {
  "data": {
   "shadows": "pandas.io.msgpack"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_extension.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_extension.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type.default": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.io.msgpack.ExtType",
    "pandas.tests.io.msgpack.test_extension.array",
    "print",
    "tobytes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type.ext_hook": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "frombytes",
    "pandas.tests.io.msgpack.test_extension.array",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_pack_ext_type": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "p"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_pack_ext_type.p": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.io.msgpack.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_unpack_ext_type": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "check",
    "pandas.io.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_unpack_ext_type.check": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_format.check": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testArray": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixArray": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixMap": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixRaw": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixnum": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testMap": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testRaw": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testSignedInt": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testSimpleValue": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testUnsignedInt": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_limits.ExtType": {
  "data": {
   "shadows": "pandas.io.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.Packer": {
  "data": {
   "shadows": "pandas.io.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_array_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.io.msgpack.Packer",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_integer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_map_header": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.io.msgpack.Packer",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_array_len": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_bin_len": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_ext_len": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.ExtType",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_map_len": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_str_len": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_limits.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_limits.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_newspec": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_newspec.ExtType": {
  "data": {
   "shadows": "pandas.io.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_newspec.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin16": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin32": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin8": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_ext": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "check",
    "pandas.io.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_ext.check": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_str8": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_obj": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_obj.DecodeError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._arr_to_str": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._decode_complex": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._encode_complex": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "complex",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.bad_complex_decoder": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_obj.DecodeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook1": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_obj.DecodeError",
    "pandas.tests.io.msgpack.test_obj.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook1.f": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_obj.DecodeError",
    "pandas.tests.io.msgpack.test_obj.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook2.f": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_array_hook": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_bad_hook": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.io.msgpack.test_obj.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_bad_hook.f": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_decode_hook": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_decode_pairs_hook": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_encode_hook": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_only_one_obj_hook": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_obj.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_obj.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_obj.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_pack.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.Packer": {
  "data": {
   "shadows": "pandas.io.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.check": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testArraySize": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "list",
    "pandas.compat.BytesIO",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testDecodeBinary": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testIgnoreErrorsPack": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testIgnoreUnicodeErrors": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testMapSize": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.BytesIO",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testNoEncoding": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.u",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_pack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPack": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackBytes": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackFloat": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_pack.struct"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackUTF32": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackUnicode": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.u",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testStrictUnicodePack": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "pandas.compat.u",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_pack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testStrictUnicodeUnpack": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb",
    "pandas.tests.io.msgpack.test_pack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_manualreset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "pandas.compat.BytesIO",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_odict": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.OrderedDict",
    "pandas.io.msgpack.packb",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_odict.pair_hook": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_pairlist": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "list",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_pack.unpackb": {
  "data": {
   "shadows": "pandas.io.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_read_size": {
  "data": {
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_read_size.OutOfData": {
  "data": {
   "shadows": "pandas.io.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_read_size.UnexpectedTypeException": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pandas.tests.io.msgpack.test_read_size.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_read_size.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_read_size.test_correct_type_nested_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_map": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_nested_map": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_read_array_header": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas.io.msgpack.OutOfData",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_read_map_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.io.msgpack.OutOfData",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_seq": {
  "data": {
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "range"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_seq.binarydata": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pandas.tests.io.msgpack.test_seq.gen_binary_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.tests.io.msgpack.test_seq.binarydata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_seq.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_seq.msgpack": {
  "data": {
   "shadows": "pandas.io.msgpack"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_seq.test_exceeding_unpacker_read_size": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bytes",
    "enumerate",
    "pandas.io.msgpack.Packer",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_seq.gen_binary_data",
    "pandas.tests.io.msgpack.test_seq.io",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_sequnpack.BufferFull": {
  "data": {
   "shadows": "pandas.io.msgpack.BufferFull"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_sequnpack.OutOfData": {
  "data": {
   "shadows": "pandas.io.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_foobar": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "ord",
    "pandas.io.msgpack.OutOfData",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_sequnpack.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_foobar_skip": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ord",
    "pandas.io.msgpack.OutOfData",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_sequnpack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_issue124": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_maxbuffersize": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "ord",
    "pandas.io.msgpack.BufferFull",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_sequnpack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_partialdata": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "next",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_sequnpack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_readbytes": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ord",
    "pandas.compat.BytesIO",
    "pandas.io.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_sequnpack.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_sequnpack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_subtype": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_subtype.MyDict": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.MyList": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.MyNamedTuple": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.tests.io.msgpack.test_subtype.MyTuple": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_subtype.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_subtype.test_types": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_subtype.MyDict",
    "pandas.tests.io.msgpack.test_subtype.MyList",
    "pandas.tests.io.msgpack.test_subtype.MyNamedTuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_unpack.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.ExtType": {
  "data": {
   "shadows": "pandas.io.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.OutOfData": {
  "data": {
   "shadows": "pandas.io.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpack_array_header_from_file": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "io.BytesIO",
    "pandas.io.msgpack.OutOfData",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_unpack.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "MyUnpacker",
    "pandas.io.msgpack.ExtType",
    "pandas.io.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker._hook": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "pandas.io.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_unpack.pytest",
    "pandas.tests.io.msgpack.test_unpack.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt.hook": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack_raw": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.Unpacker": {
  "data": {
   "shadows": "pandas.io.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.packb": {
  "data": {
   "shadows": "pandas.io.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.test_write_bytes": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ord",
    "pandas.io.msgpack.Unpacker",
    "pandas.tests.io.msgpack.test_unpack_raw.io"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.test_write_bytes_multi_buffer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.io.msgpack.Unpacker",
    "pandas.io.msgpack.packb",
    "pandas.tests.io.msgpack.test_unpack_raw.io"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.c_parser_only": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_buffer_overflow": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_buffer_rd_bytes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_comment_whitespace_delimited": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "error",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.c_parser_only.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.capture_stderr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_custom_lineterminator": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_data_after_quote": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_delim_whitespace_custom_terminator": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_disable_bool_parsing": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "object",
    "object.all",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_dtype_and_names_error": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "NoNextBuffer",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next.NoNextBuffer": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "next",
    "pandas.compat.StringIO"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next.NoNextBuffer.__next__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_float_precision_round_trip_with_text": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.compat.range",
    "test_empty_header_read"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap.test_empty_header_read": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_internal_null_byte": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_large_difference_in_columns": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_parse_ragged_csv": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_parse_trim_buffers": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "float",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_pass_dtype_as_recarray": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.compat.StringIO",
    "pandas.compat.is_platform_windows",
    "pandas.tests.io.parser.c_parser_only.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_precise_conversion": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "decimal.Decimal",
    "error",
    "float",
    "max",
    "numpy.linspace",
    "pandas.compat.StringIO",
    "pandas.util.testing._skip_if_32bit",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_precise_conversion.error": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "abs",
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_read_nrows_large": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_read_tarfile": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.parser.c_parser_only.os",
    "pandas.tests.io.parser.c_parser_only.pytest",
    "pandas.tests.io.parser.c_parser_only.tarfile",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_tokenize_CR_with_quoting": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_unsupported_dtype": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.tests.io.parser.c_parser_only.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_usecols_dtypes": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float.all",
    "numpy.int.all",
    "object.all",
    "pandas.compat.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.c_parser_only.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.comment": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.comment.CommentTests": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_header": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_skiprows": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_skiprows_header": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_commment_first_line": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_custom_comment_char": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_line_comment": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.comment.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.comment.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.comment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.comment.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.common.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.DtypeWarning": {
  "data": {
   "shadows": "pandas.errors.DtypeWarning"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.EmptyDataError": {
  "data": {
   "shadows": "pandas.errors.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.ParserTests": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_1000_sep": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_1000_sep_with_decimal": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_as_recarray": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_bad_stream_exception": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "open",
    "pandas.compat.PY3",
    "pandas.tests.io.parser.common.codecs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_catch_too_many_names": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_chunk_begins_with_newline_whitespace": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_chunks_have_consistent_numerical_type": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.float64",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_compact_ints_as_recarray": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.dtype",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_compact_ints_use_unsigned": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.int16",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_csv_mixed_type": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_duplicate_columns": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "getattr",
    "list",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_decimal_marker": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_lines": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_index": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_multiindex": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_nrows_chunksize": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "FutureWarning",
    "iter",
    "next",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_reversed_multiindex": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_eof_states": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "Exception",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_escapechar": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_euro_decimal_format": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_file": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "pandas.io.common.URLError",
    "pandas.tests.io.parser.common.os",
    "pandas.tests.io.parser.common.platform",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_file_handles": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "open",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.mmap"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_float_parser": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_get_chunk_passed_chunksize": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "len",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_ignore_leading_whitespace": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_inf_parsing": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int64_min_issues": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int64_overflow": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.uint64",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int_conversion": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_integer_overflow_bug": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_internal_eof_byte": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_internal_eof_byte_to_file": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "InvalidBuffer",
    "NoSeekTellBuffer",
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.InvalidBuffer": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer.seek": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer.tell": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_iteration_open_handle": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "Exception",
    "open",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.io.parser.common.pytest",
    "pandas.tests.io.parser.common.sys",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_iterator": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.io.parsers.TextFileReader",
    "pandas.io.parsers.TextParser",
    "pandas.tests.io.parser.common.csv",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_malformed": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_memory_map": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.parser.common.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_missing_trailing_delimiters": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_multi_index_blank_df": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_multi_index_no_level_names": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_no_unnamed_index": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_nonexistent_path": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pandas.compat.FileNotFoundError",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_null_byte_char": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.ParserError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_parse_bools": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_parse_integers_above_fp_precision": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_pass_names_with_index": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_path_localpath": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_path_pathlib": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_quoting": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "len",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_raise_on_no_columns": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.errors.EmptyDataError",
    "pandas.tests.io.parser.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_raise_on_sep_with_delim_whitespace": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_and_nrows": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.tests.io.parser.common.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_generated_index": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_named": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.is_platform_windows",
    "pandas.compat.text_type",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_dataframe": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.datetime64",
    "numpy.float64",
    "pandas.Index",
    "pandas._libs.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_no_index_name": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.datetime64",
    "numpy.float64",
    "pandas.Index",
    "pandas._libs.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_parse_simple_list": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_utf_aliases": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_duplicate_index_explicit": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_duplicate_index_implicit": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_duplicate_names": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_empty_with_usecols": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.EmptyDataError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_nrows": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_table_unicode": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_table_wrong_num_columns": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_text_list": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.TextParser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_regex_separator": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_scientific_no_exponent": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "pandas.DataFrame.from_items",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_single_char_leading_whitespace": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_skip_bad_lines": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.ParserError",
    "pandas.tests.io.parser.common.pytest",
    "pandas.tests.io.parser.common.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.capture_stderr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_skipinitialspace": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_squeeze": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_squeeze_no_view": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_temporary_file": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_trailing_delimiters": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_trailing_spaces": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_uneven_lines_with_usecols": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_unicode_encoding": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_unnamed_columns": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_url": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pandas.tests.io.parser.common.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf16_bom_skiprows": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "bytes",
    "io.TextIOWrapper",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf16_example": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "len",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf8_bom": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "_encode_data_with_bom",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf8_bom._encode_data_with_bom": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "pandas.compat.BytesIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_verbose_import": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.common.sys",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_warn_if_chunks_have_mismatched_type": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.object",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.errors.DtypeWarning",
    "pandas.util.testing.assert_produces_warning",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_whitespace_lines": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.TextFileReader": {
  "data": {
   "shadows": "pandas.io.parsers.TextFileReader"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.common.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.compression": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.compression.CompressionTests": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_bz2": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.tests.io.parser.compression.bz2",
    "pandas.tests.io.parser.compression.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_gzip": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ImportError",
    "open",
    "pandas.tests.io.parser.compression.gzip",
    "pandas.tests.io.parser.compression.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_invalid_compression": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_read_csv_infer_compression": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "open",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_xz": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "open",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_zip": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.tests.io.parser.compression.pytest",
    "pandas.tests.io.parser.compression.zipfile",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.compression.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.compression.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.compression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.compression.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.compression.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.converters.ConverterTests": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converter_index_col_bug": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converter_return_string_bug": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "isinstance",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO",
    "pandas.compat.parse_date",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hash",
    "numpy.int64",
    "pandas.compat.StringIO",
    "pandas.isnull",
    "pandas.tests.io.parser.converters.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days_sentinel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "int",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_score": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nan",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_euro_decimal_format": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_no_implicit_conv": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_type_must_be_dict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.converters.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.parse_date": {
  "data": {
   "shadows": "pandas.compat.parse_date"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.converters.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dialect": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.dialect.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dialect.DialectTests": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.errors.ParserWarning",
    "pandas.tests.io.parser.dialect.csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect_conflict": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.ParserWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect_str": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.ParserWarning",
    "pandas.tests.io.parser.dialect.csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_invalid_dialect": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_invalid_dialect.InvalidDialect": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.dialect.ParserWarning": {
  "data": {
   "shadows": "pandas.errors.ParserWarning"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dialect.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dialect.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dialect.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.dtypes.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype_chunksize": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype_encoding": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_dtype_with_converter": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.ParserWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_dtype": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int32",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_pass_dtype": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_dup_column_pass_dtype_by_indexes": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_index_pass_dtype": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_mangled_column_pass_dtype_by_indexes": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_mangled_column_pass_dtype_by_names": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_multiindex_pass_dtype": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_numeric_dtype": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.typecodes",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_pass_dtype": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_passing_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "list",
    "numpy.random.rand",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.dtypes.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_raise_on_passed_int_dtype_with_nas": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.ParserWarning": {
  "data": {
   "shadows": "pandas.errors.ParserWarning"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.header.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.HeaderTests": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_bool_header_arg": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.header.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_multi_index": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.header.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_multiindex_common_format": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_names_backward_compat": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_not_first_line": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_with_index_col": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_no_header": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_no_header_prefix": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_read_only_header_no_rows": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_read_with_bad_header": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.header.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.header.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.index_col.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col.IndexColTests": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_empty_index_col_scenarios": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_empty_with_index_col_false": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_index_col_is_true": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.index_col.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_index_col_named": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.index_col.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_infer_index_col": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.index_col.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.multithread.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests._generate_multithread_dataframe": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "multiprocessing.pool.ThreadPool",
    "pandas.compat.range",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests._generate_multithread_dataframe.reader": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests.test_multithread_path_multipart_read_csv": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.tests.io.parser.multithread._construct_dataframe",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests.test_multithread_stringio_read_csv": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "multiprocessing.pool.ThreadPool",
    "pandas.compat.BytesIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread._construct_dataframe": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.multithread.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.na_values.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_bool_na_values": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_custom_na_values": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_default_na_values": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.io.parsers._NA_VALUES",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_default_na_values.f": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_detect_string_na": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_empty_na_values_no_default_with_index": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_trailing_columns": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_value_dict": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_dict_aliasing": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_dict_col_index": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_keep_default": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_na_filter_override": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_scalar": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_uint64": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_non_string_na_values": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_string_nas": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.na_values.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.parse_dates.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_csv_custom_parser": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug.f": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datetime.datetime.utcfromtimestamp",
    "int"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_dateparser_resolution_if_not_ns": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_dateparser_resolution_if_not_ns.date_parser": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.compat.numpy.np_array_datetime64_compat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_datetime_fractional_seconds": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_all_fields"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_datetime_six_col": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_all_fields"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_generic": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "datetime.date",
    "int",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multi_index_parse_dates": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.datetime64",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col.func": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas._libs.lib.try_parse_dates",
    "pandas.io.parsers._concat_date_cols"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_multiple_index": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_name_collision": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.parse_dates.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_named_components": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_timestamp_parse": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_chunked": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_index": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_int_cast": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_time"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_with_header": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.StringIO",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_nat_parse": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dict",
    "numpy.asarray",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_column_with_empty_string": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_fields": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_fields"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_time": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "object",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_time"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_time_multi_level_column_name": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_time",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_column_list": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_custom_euroformat": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.compat.parse_date",
    "pandas.tests.io.parser.parse_dates.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_empty_string": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_implicit_first_col": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "numpy.datetime64",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_noconvert_thousands": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_string": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_tz_aware": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.compat.StringIO",
    "pandas.core.tools.datetimes.to_datetime",
    "pandas.tests.io.parser.parse_dates.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_invalid_type": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_scalar_non_bool": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_separator_date_conflict": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_yy_format_with_yearfirst": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "object",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.parse_dates.dateutil",
    "pandas.tests.io.parser.parse_dates.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.conv": {
  "data": {
   "shadows": "pandas.io.date_converters"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.date_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.date_range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.parse_date": {
  "data": {
   "shadows": "pandas.compat.parse_date"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.parse_dates.tools": {
  "data": {
   "shadows": "pandas.core.tools.datetimes"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.python_parser_only.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_BytesIO_input": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.tests.io.parser.python_parser_only.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_decompression_regex_sep": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.tests.io.parser.python_parser_only.bz2",
    "pandas.tests.io.parser.python_parser_only.gzip",
    "pandas.tests.io.parser.python_parser_only.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_encoding_non_utf8_multichar_sep": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_invalid_skipfooter": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_multi_char_sep_quotes": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.compat.StringIO",
    "pandas.errors.ParserError",
    "pandas.tests.io.parser.python_parser_only.csv",
    "pandas.tests.io.parser.python_parser_only.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_read_table_buglet_4x_multiindex": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_records",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_single_line": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter_bad_row": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.compat.StringIO",
    "pandas.errors.ParserError",
    "pandas.tests.io.parser.python_parser_only.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter_with_decimal": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_sniff_delimiter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "pandas.Index",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.python_parser_only.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.quoting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting.QuotingTests": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_bad_quote_char": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.quoting.csv",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_bad_quoting": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_double_quote": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_null_quote_char": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.quoting.csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quote_char_basic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quote_char_various": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quotechar_unicode": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quoting_various": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.quoting.csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.quoting.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.skiprows.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.EmptyDataError": {
  "data": {
   "shadows": "pandas.errors.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_deep_skiprows": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_newline": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_newline_and_quote": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_quote": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_blank": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_bug": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_callable": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.errors.EmptyDataError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_infield_quote": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_lineterminator": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.skiprows.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.test_network.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.TestS3": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_network.TestS3.boto3_client_s3": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.tests.io.parser.test_network.boto3",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.setup_method": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.parser.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_infer_s3_compression": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked_python": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows_python": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_python": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3a_bucket": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3n_bucket": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_s3_fails": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "IOError",
    "pandas.io.parsers.read_csv",
    "pandas.tests.io.parser.test_network.pytest",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.check_compressed_urls": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.io.parsers.read_table",
    "pandas.tests.io.parser.test_network.salaries_table",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.s3fs": {
  "data": {
   "shadows": "s3fs"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_network.salaries_table": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.io.parsers.read_table",
    "pandas.tests.io.parser.test_network.os",
    "pandas.tests.io.parser.test_network.pytest",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.test_compressed_urls": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_network.check_compressed_urls",
    "pandas.tests.io.parser.test_network.pytest",
    "pandas.tests.io.parser.test_network.salaries_table",
    "pandas.util.testing._check_if_lzma"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_parsers": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.test_parsers.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.float_precision_choices": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.read_csv": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.read_table": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.setup_method": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_parsers.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_parsers.BaseParser"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory.read_csv": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory.read_table": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_parsers.BaseParser"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory.read_csv": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory.read_table": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_parsers.BaseParser"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser.read_csv": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser.read_table": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_parsers.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_parsers.read_table": {
  "data": {
   "shadows": "pandas.read_table"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_parsers.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.test_read_fwf.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.EmptyDataError": {
  "data": {
   "shadows": "pandas.io.parsers.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_1000_fwf": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_BytesIO_input": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.io.parsers.read_fwf",
    "pandas.tests.io.parser.test_read_fwf.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_bool_header_arg": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.tests.io.parser.test_read_fwf.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_comment_fwf": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_dtype": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.read_fwf",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_missing": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces_and_missing": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_None": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.FixedWidthReader",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple_of_two_element_tuples": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_compression": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "compresser",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.tests.io.parser.test_read_fwf.bz2",
    "pandas.tests.io.parser.test_read_fwf.gzip",
    "pandas.tests.io.parser.test_read_fwf.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_for_uint8": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "int",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_regression": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "len",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_messed_up_data": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_multiple_delimiters": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_by_index_inference": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_inference": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_inference_empty": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.EmptyDataError",
    "pandas.io.parsers.read_fwf",
    "pandas.tests.io.parser.test_read_fwf.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_variable_width_unicode": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.io.parsers.read_fwf",
    "pandas.tests.io.parser.test_read_fwf.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.read_fwf": {
  "data": {
   "shadows": "pandas.io.parsers.read_fwf"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_read_fwf.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.test_unsupported.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.TestDeprecatedFeatures": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestDeprecatedFeatures.test_deprecated_args": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_c_engine": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "chr",
    "pandas.compat.StringIO",
    "pandas.errors.ParserError",
    "pandas.io.parsers.ParserWarning",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_table",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_mangle_dupe_cols_false": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "pandas.compat.StringIO",
    "pandas.io.parsers._python_unsupported",
    "pandas.io.parsers.read_csv",
    "pandas.tests.io.parser.test_unsupported.python_engine",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NoNextBuffer",
    "ValueError",
    "pandas.io.parsers.read_csv",
    "pandas.tests.io.parser.test_unsupported.python_engine",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.__iter__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.read": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.py_unsupported": {
  "data": {
   "shadows": "pandas.io.parsers._python_unsupported"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.python_engine": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.io.parser.test_unsupported.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.test_unsupported.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.parser.usecols.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.Timestamp": {
  "data": {
   "shadows": "pandas._libs.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_callable_usecols": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_empty_usecols": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_incomplete_first_row": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_np_array_usecols": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_raise_on_mixed_dtype_usecols": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_raise_on_usecols_names_mismatch": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_uneven_length_cols": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.usecols.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_implicit_index_col": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_index_col_False": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_index_col_conflict": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_regex_sep": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_integer_like_header": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_mixed_encoding_strings": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_multibyte_characters": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_multibyte_unicode_characters": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.io.parser.usecols.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_full_names": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_usecol_names": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas._libs.lib.Timestamp",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_single_byte_unicode_strings": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_unicode_strings": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_whitespace": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.parser.usecols.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.sas": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas.TestSas": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.sas.test_sas.TestSas.test_sas_buffer_format": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas.read_sas": {
  "data": {
   "shadows": "pandas.read_sas"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas7bdat.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.SAS7BDATReader": {
  "data": {
   "shadows": "pandas.io.sas.sas7bdat.SAS7BDATReader"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.setup_method": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int64",
    "pandas.compat.PY2",
    "pandas.datetime",
    "pandas.read_csv",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.to_timedelta",
    "pandas.util.testing.get_data_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_buffer": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "open",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.io",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_file": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_iterator": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_iterator_loop": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_iterator_read_too_much": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_path_localpath": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.tests.io.sas.test_sas7bdat.pytest",
    "pandas.util.testing._skip_if_no_localpath",
    "pandas.util.testing.assert_frame_equal",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_path_pathlib": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.tests.io.sas.test_sas7bdat.pytest",
    "pandas.util.testing._skip_if_no_pathlib",
    "pandas.util.testing.assert_frame_equal",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_12659": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_airline": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_encoding_options": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.io.sas.sas7bdat.SAS7BDATReader",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_productsales": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.tests.io.sas.test_sas7bdat.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_xport": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.sas.test_xport.TestXport": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.sas.test_xport.TestXport.setup_method": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.tests.io.sas.test_xport.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_basic": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.tests.io.sas.test_xport.numeric_as_float",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_incremental": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.tests.io.sas.test_xport.numeric_as_float",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_index": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.tests.io.sas.test_xport.numeric_as_float",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test2": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.tests.io.sas.test_xport.numeric_as_float",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test_multiple_types": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test_truncated_float_support": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_xport.numeric_as_float": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_xport.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_xport.read_sas": {
  "data": {
   "shadows": "pandas.io.sas.sasreader.read_sas"
  },
  "type": "import"
 },
 "pandas.tests.io.sas.test_xport.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.clipboard.exceptions.PyperclipException"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_clipboard.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.PyperclipException": {
  "data": {
   "shadows": "pandas.io.clipboard.exceptions.PyperclipException"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.TestClipboard": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object",
    "pandas.tests.io.test_clipboard._DEPS_INSTALLED",
    "pandas.tests.io.test_clipboard.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.check_round_trip_frame": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.read_clipboard",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.setup_class": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "list",
    "numpy.arange",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.get_option",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.teardown_class": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_invalid_encoding": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "pandas.read_clipboard",
    "pandas.tests.io.test_clipboard.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_read_clipboard_infer_excel": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.io.clipboard.clipboard_set",
    "pandas.read_clipboard",
    "pandas.util.testing.assert_frame_equal",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame_sep": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame_string": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_valid_encodings": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pandas.tests.io.test_clipboard._DEPS_INSTALLED": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.tests.io.test_clipboard.clipboard_set": {
  "data": {
   "shadows": "pandas.io.clipboard.clipboard_set"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.get_option": {
  "data": {
   "shadows": "pandas.get_option"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.read_clipboard": {
  "data": {
   "shadows": "pandas.read_clipboard"
  },
  "type": "import"
 },
 "pandas.tests.io.test_clipboard.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_common.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_expand_user": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "os.path.isabs",
    "pandas.io.common._expand_user",
    "pandas.tests.io.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_expand_user_normal_path": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.io.common._expand_user",
    "pandas.tests.io.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_buffer": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.common.get_filepath_or_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_path": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "os.path.isabs",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.tests.io.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_iterator": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "next",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_stringify_path_localpath": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.io.common._stringify_path",
    "pandas.tests.io.test_common.os",
    "pandas.util.testing._skip_if_no_localpath",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_stringify_path_pathlib": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.io.common._stringify_path",
    "pandas.tests.io.test_common.os",
    "pandas.util.testing._skip_if_no_pathlib",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.setup_method": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.tests.io.test_common.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_constructor_bad_file": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "open",
    "pandas.compat.StringIO",
    "pandas.compat.is_platform_windows",
    "pandas.io.common.MMapWrapper",
    "pandas.tests.io.test_common.mmap",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_get_attr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dir",
    "hasattr",
    "open",
    "pandas.io.common.MMapWrapper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_next": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "open",
    "pandas.io.common.MMapWrapper",
    "pandas.tests.io.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_unknown_engine": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "pandas.read_csv",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_common.common": {
  "data": {
   "shadows": "pandas.io.common"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.mmap": {
  "data": {
   "shadows": "mmap"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.test_common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.test_excel._frame",
    "pandas.tests.io.test_excel._mixed_frame",
    "pandas.tests.io.test_excel._seriesd",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_excel.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ExcelCell": {
  "data": {
   "shadows": "pandas.io.formats.excel.ExcelCell"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ExcelFormatter": {
  "data": {
   "shadows": "pandas.io.formats.excel.ExcelFormatter"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.SharedItems"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.setup_method": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "pandas.core.config.get_option",
    "pandas.core.config.set_option",
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.teardown_method": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pandas.core.config.set_option"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_basics_with_nan": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_bool_types": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "numpy.bool8",
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_bytes_io": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_colaliases": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_datetimes": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_items",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_duplicated_columns": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.makeCustomDataframe",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring.roundtrip": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.makeCustomDataframe",
    "roundtrip2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError.roundtrip2": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_date_datetime_format": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_roundtrip_datetime": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_roundtrip_indexname": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_sheet_by_name_raise": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel.pytest",
    "pandas.tests.io.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excelwriter_contextmanager": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_float_types": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.random_sample",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_freeze_panes": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_inf_roundtrip": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "numpy.inf",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_int_types": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "float",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_invalid_columns": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_mixed": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_path_localpath": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_path_pathlib": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_roundtrip": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_roundtrip_indexlabels": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "bool",
    "numpy.int64",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_sheets": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_swapped_columns": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_float_format": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_cols": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.map",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_dates": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_nan_label": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "numpy.random.sample",
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_no_write_index": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_output_encoding": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_periodindex": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_unicode_filename": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "open",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_true_and_false_value_options": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_tsframe": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_write_lists_dict": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests": {
  "data": {
   "lineno": 2301,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_ExcelWriter_dispatch": {
  "data": {
   "lineno": 2303,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "isinstance",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel._Openpyxl1Writer",
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel._XlwtWriter",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_register_writer": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "check_called",
    "func",
    "isinstance",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.register_writer",
    "pandas.option_context",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass.save": {
  "data": {
   "lineno": 2336
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass.write_cells": {
  "data": {
   "lineno": 2339
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterEngineTests.test_register_writer.check_called": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "func",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.Openpyxl20Tests": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel.raise_on_incompat_version",
    "pandas.tests.io.test_excel.skip_openpyxl_gt21",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.Openpyxl20Tests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "openpyxl.styles.Alignment",
    "openpyxl.styles.Border",
    "openpyxl.styles.Color",
    "openpyxl.styles.Font",
    "openpyxl.styles.NumberFormat",
    "openpyxl.styles.PatternFill",
    "openpyxl.styles.Protection",
    "openpyxl.styles.Side",
    "openpyxl.styles.borders.BORDER_THIN",
    "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs",
    "pandas.tests.io.test_excel.openpyxl"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.Openpyxl20Tests.test_write_cells_merge_styled": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "openpyxl.styles.Style",
    "pandas.io.excel._Openpyxl20Writer",
    "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.Openpyxl22Tests": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel.raise_on_incompat_version",
    "pandas.tests.io.test_excel.skip_openpyxl_lt22",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.Openpyxl22Tests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "openpyxl.styles.Alignment",
    "openpyxl.styles.Border",
    "openpyxl.styles.Color",
    "openpyxl.styles.Font",
    "openpyxl.styles.PatternFill",
    "openpyxl.styles.Protection",
    "openpyxl.styles.Side",
    "openpyxl.styles.borders.BORDER_THIN",
    "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.Openpyxl22Tests.test_write_cells_merge_styled": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel._Openpyxl22Writer",
    "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs",
    "pandas.io.formats.excel.ExcelCell",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.OpenpyxlTests": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel.raise_on_incompat_version",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.OpenpyxlTests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel._Openpyxl1Writer._convert_to_style",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel.openpyxl",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.OpenpyxlTests_NoMerge": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.SharedItems"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.setup_method": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ReadingTestsBase",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_date_conversion_overflow": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_cell_error_na": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_passes_na": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_stop_iterator": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_table": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_table_sheet_by_index": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.pytest",
    "pandas.tests.io.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_parse_cols_int": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_parse_cols_list": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_parse_cols_str": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_excel_blank": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_excel_blank_with_header": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_one_empty_col_no_header": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_one_empty_col_with_header": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_converters": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "pandas.DataFrame.from_items",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_dtype": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_special_dtypes": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datetime.datetime",
    "enumerate",
    "float",
    "pandas.DataFrame.from_items",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_all_sheets": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_all_sheets_with_blank": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_multiple_specific_sheets": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.util.testing.assert_contains_all",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_set_column_names_in_parameter": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.SharedItems.get_csv_refdf": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.io.parsers.read_csv",
    "pandas.tests.io.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.get_exceldf": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.get_excelfile": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.tests.io.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.setup_method": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel._frame",
    "pandas.tests.io.test_excel._frame2",
    "pandas.tests.io.test_excel._mixed_frame",
    "pandas.tests.io.test_excel._tsframe",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.XlrdTests": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ReadingTestsBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.iteritems",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "tdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets.tdf": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_multindex_roundtrip": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.compat.range",
    "pandas.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlsxwriter",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_oldindex_format": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_read_buffer": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "open",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_bool_header_arg": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "TypeError",
    "pandas.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_chunksize": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_multiindex": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_multiindex_empty_level": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlsxwriter",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_parse_dates": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.datetime.strptime",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_skiprows_list": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_squeeze": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_file_url": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "pandas.io.common.URLError",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.tests.io.test_excel.platform",
    "pandas.tests.io.test_excel.pytest",
    "pandas.tests.io.test_excel.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_http_url": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_pathlib_path": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing._skip_if_no_pathlib",
    "pandas.util.testing.assert_frame_equal",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_py_localpath": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os",
    "pandas.util.testing._skip_if_no_localpath",
    "pandas.util.testing.assert_frame_equal",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_s3_url": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_s3fs",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_xlrd_Book": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.tests.io.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_reader_closes_file": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "open",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.tests.io.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_reader_seconds": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "datetime.time",
    "distutils.version.LooseVersion",
    "pandas.DataFrame.from_items",
    "pandas.tests.io.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlsReaderTests": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.XlrdTests",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlsmReaderTests": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.XlrdTests",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlsxReaderTests": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.XlrdTests",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlsxWriterTests": {
  "data": {
   "lineno": 2221,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel._skip_if_no_xlsxwriter",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlsxWriterTests.test_column_format": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelWriter",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlsxwriter",
    "pandas.tests.io.test_excel.openpyxl",
    "pandas.tests.io.test_excel.warnings",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlsxWriterTests_NoMerge": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel._skip_if_no_xlsxwriter",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlwtTests": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlwtTests.test_excel_multiindex_columns_and_index_true": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlwtTests.test_excel_multiindex_index": {
  "data": {
   "lineno": 2189,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlwtTests.test_excel_raise_error_on_multiindex_columns_and_no_index": {
  "data": {
   "lineno": 2169,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlwtTests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 2199,
   "symbols_in_volume": [
    "pandas.io.excel._XlwtWriter._convert_to_style",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "pandas.tests.io.test_excel.xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlwtTests_NoMerge": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel.ExcelWriterBase",
    "pandas.tests.io.test_excel._skip_if_no_xlwt",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_excel._Openpyxl1Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl1Writer"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel._Openpyxl20Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl20Writer"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel._Openpyxl22Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl22Writer"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel._XlsxWriter": {
  "data": {
   "shadows": "pandas.io.excel._XlsxWriter"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel._XlwtWriter": {
  "data": {
   "shadows": "pandas.io.excel._XlwtWriter"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel._frame": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel._frame2": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel._mixed_frame": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel._seriesd": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel._skip_if_no_excelsuite": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel._skip_if_no_xlrd",
    "pandas.tests.io.test_excel._skip_if_no_xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_openpyxl": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_s3fs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlrd": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "int",
    "pandas.compat.map",
    "pandas.tests.io.test_excel.pytest",
    "pandas.tests.io.test_excel.xlrd",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlsxwriter": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlwt": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.test_excel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel._tsd": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel._tsframe": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.tests.io.test_excel.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.openpyxl_compat": {
  "data": {
   "shadows": "pandas.compat.openpyxl_compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.raise_on_incompat_version": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_on_incompat_version.versioned_raise_on_incompat_version": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "dir",
    "filter",
    "getattr",
    "pandas.tests.io.test_excel.operator",
    "pandas.tests.io.test_excel.raise_wrapper",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper": {
  "data": {
   "lineno": 1872
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper.versioned_raise_wrapper": {
  "data": {
   "lineno": 1873
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper.versioned_raise_wrapper.wrapped": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "ValueError",
    "orig_method",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel.functools",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.read_excel": {
  "data": {
   "shadows": "pandas.io.excel.read_excel"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.register_writer": {
  "data": {
   "shadows": "pandas.io.excel.register_writer"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.s3fs": {
  "data": {
   "shadows": "s3fs"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.set_option": {
  "data": {
   "shadows": "pandas.core.config.set_option"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_gt21": {
  "data": {
   "lineno": 1935
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_gt21.setup_class": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "classmethod",
    "distutils.version.LooseVersion",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel.openpyxl",
    "pandas.tests.io.test_excel.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_lt22": {
  "data": {
   "lineno": 2052
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_lt22.setup_class": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "classmethod",
    "distutils.version.LooseVersion",
    "pandas.tests.io.test_excel._skip_if_no_openpyxl",
    "pandas.tests.io.test_excel.openpyxl",
    "pandas.tests.io.test_excel.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.styles": {
  "data": {
   "shadows": "openpyxl.styles"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "assert_equal_style",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.formats.excel.ExcelFormatter",
    "pandas.tests.io.test_excel.pytest",
    "pandas.util.testing.ensure_clean",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.assert_equal_style": {
  "data": {
   "lineno": 2387
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.custom_converter": {
  "data": {
   "lineno": 2396
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.style": {
  "data": {
   "lineno": 2373,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_excel.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.tests.io.test_excel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.io.test_feather.feather",
    "pandas.tests.io.test_feather.pytest"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_feather.FeatherError": {
  "data": {
   "shadows": "feather.FeatherError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.TestFeather": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object",
    "pandas.tests.io.test_feather.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_feather.TestFeather.check_error_on_write": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.io.feather_format.to_feather",
    "pandas.tests.io.test_feather.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.check_round_trip": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.io.feather_format.read_feather",
    "pandas.io.feather_format.to_feather",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_basic": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_duplicate_columns": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_error": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.Series",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_path_localpath": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.read_feather",
    "pandas.tests.io.test_feather.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_path_pathlib": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.read_feather",
    "pandas.tests.io.test_feather.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_strided_data_issues": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "feather.FeatherError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.tests.io.test_feather.fv",
    "pandas.tests.io.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_stringify_columns": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_unsupported": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "feather.FeatherError",
    "pandas.DataFrame",
    "pandas.tests.io.test_feather.fv",
    "pandas.tests.io.test_feather.pytest",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_unsupported_other": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_write_with_index": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.feather": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pandas.tests.io.test_feather.fv": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.io.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.read_feather": {
  "data": {
   "shadows": "pandas.io.feather_format.read_feather"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_feather.to_feather": {
  "data": {
   "shadows": "pandas.io.feather_format.to_feather"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.tests.io.test_gbq.DATASET_ID",
    "pandas.tests.io.test_gbq.TABLE_ID",
    "pandas.tests.io.test_gbq.platform",
    "pandas.tests.io.test_gbq.pytest"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_gbq.DATASET_ID": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.DESTINATION_TABLE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.PRIVATE_KEY_JSON_CONTENTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.PRIVATE_KEY_JSON_PATH": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.PROJECT_ID": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.TABLE_ID": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object",
    "pandas.tests.io.test_gbq.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.setup_class": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_gbq.DATASET_ID",
    "pandas.tests.io.test_gbq._get_private_key_path",
    "pandas.tests.io.test_gbq._get_project_id",
    "pandas.tests.io.test_gbq._skip_if_no_private_key_path",
    "pandas.tests.io.test_gbq._skip_if_no_project_id",
    "pandas.tests.io.test_gbq.clean_gbq_environment",
    "pandas.tests.io.test_gbq.pandas_gbq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.teardown_class": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_gbq._get_private_key_path",
    "pandas.tests.io.test_gbq.clean_gbq_environment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_roundtrip": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.read_gbq",
    "pandas.tests.io.test_gbq.DESTINATION_TABLE",
    "pandas.tests.io.test_gbq._get_private_key_path",
    "pandas.tests.io.test_gbq._get_project_id",
    "pandas.tests.io.test_gbq.make_mixed_dataframe_v2",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.VERSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq._get_private_key_path": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.tests.io.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.tests.io.test_gbq._in_travis_environment",
    "pandas.tests.io.test_gbq.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq._get_project_id": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.tests.io.test_gbq.PROJECT_ID",
    "pandas.tests.io.test_gbq._in_travis_environment",
    "pandas.tests.io.test_gbq.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq._in_travis_environment": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.tests.io.test_gbq.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq._skip_if_no_private_key_path": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.tests.io.test_gbq._get_private_key_path",
    "pandas.tests.io.test_gbq.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq._skip_if_no_project_id": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.io.test_gbq._get_project_id",
    "pandas.tests.io.test_gbq.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.clean_gbq_environment": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.tests.io.test_gbq.DATASET_ID",
    "pandas.tests.io.test_gbq.TABLE_ID",
    "pandas.tests.io.test_gbq._get_project_id",
    "pandas.tests.io.test_gbq.pandas_gbq",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.make_mixed_dataframe_v2": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.now",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.io.test_gbq.pytz",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_gbq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.pandas_gbq": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.tests.io.test_gbq.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_gbq.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "importlib.import_module",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.DATA_PATH": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas.tests.io.test_html.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.ParserError": {
  "data": {
   "shadows": "pandas._libs.parsers.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.ReadHtmlMixin": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_html.ReadHtmlMixin.read_html": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.io.html.read_html"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.TestReadHtml": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.ReadHtmlMixin",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtml._bank_data": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.setup_class": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_html._skip_if_none_of"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_bad_url_protocol": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.io.common.URLError",
    "pandas.tests.io.test_html.pytest",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_header": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.read_csv",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_header.try_remove_ws": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_no_match": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_url": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_bool_header_arg": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.html.read_html",
    "pandas.tests.io.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_computer_sales_page": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pandas._libs.parsers.ParserError",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_converters": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.html.read_html",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_countries_municipalities": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_decimal_rows": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_different_number_of_rows": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_empty_tables": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_file_like": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "open",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_file_url": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.io.common.file_path_to_url",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_gold_canyon": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "open",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_index_no_types": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_index_with_types": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_one_column": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_index": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_infer_types": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_invalid_table_attrs": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_invalid_url": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.common.URLError",
    "pandas.tests.io.test_html.pytest",
    "pandas.util.testing.network",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_keep_default_na": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.html.read_html",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_index": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_index_skiprows": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_skiprows": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_skiprows_tuples": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_index": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiple_header_rows": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.html.read_html",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiple_matches": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_na_values": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.html.read_html",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_negative_skiprows": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_nyse_wsj_commas_table": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_parse_dates_combine": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_parse_dates_list": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_python_docs_table": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.util.testing.network",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_regex_idempotency": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.io.common.file_path_to_url",
    "pandas.tests.io.test_html.re",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_int": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_invalid": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_list": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_ndarray": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_set": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice_long": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice_short": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_xrange": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_header": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_no_match": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_no_types": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_url": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_with_types": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_string": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "open",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_string_io": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "open",
    "pandas.compat.StringIO",
    "pandas.tests.io.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_tfoot_read": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_thousands_macau_index_col": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "any",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_thousands_macau_stats": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "any",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_to_html_compat": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "float",
    "numpy.random.rand",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_wikipedia_states_table": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "object",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.glob",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_file_like": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "open",
    "pandas.compat.BytesIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_filename": {
  "data": {
   "lineno": 795
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_html": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "pandas.io.html.read_html"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_string": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.setup_class": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_html._skip_if_none_of"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.test_encode": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.is_platform_windows",
    "pandas.tests.io.test_html._lang_enc",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncodingLxml": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.TestReadHtmlEncoding"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncodingLxml.setup_class": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_html.TestReadHtmlEncodingLxml",
    "pandas.tests.io.test_html._skip_if_no",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.ReadHtmlMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.setup_class": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_html._skip_if_no"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_computer_sales_page": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_data_fail": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "lxml.etree.XMLSyntaxError",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os",
    "pandas.tests.io.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_fallback_success": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html._skip_if_none_of",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_parse_dates_combine": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_parse_dates_list": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_works_on_valid_markup": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.XMLSyntaxError": {
  "data": {
   "shadows": "lxml.etree.XMLSyntaxError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html._have_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html._lang_enc": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html._remove_whitespace": {
  "data": {
   "shadows": "pandas.io.html._remove_whitespace"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html._skip_if_no": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.tests.io.test_html._have_module",
    "pandas.tests.io.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html._skip_if_none_of": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.tests.io.test_html._have_module",
    "pandas.tests.io.test_html._skip_if_no",
    "pandas.tests.io.test_html.bs4",
    "pandas.tests.io.test_html.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.assert_framelist_equal": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.compat.map",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.bs4": {
  "data": {
   "shadows": "bs4"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.file_path_to_url": {
  "data": {
   "shadows": "pandas.io.common.file_path_to_url"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.get_elements_from_file": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "bs4.BeautifulSoup",
    "pandas.io.common.file_path_to_url",
    "pandas.io.common.urlopen",
    "pandas.tests.io.test_html._skip_if_none_of"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.get_lxml_elements": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "lxml.html.parse",
    "pandas.tests.io.test_html._skip_if_no"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.import_module": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.tests.io.test_html.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.parse": {
  "data": {
   "shadows": "lxml.html.parse"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.read_html": {
  "data": {
   "shadows": "pandas.io.html.read_html"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.test_bs4_finds_tables": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.get_elements_from_file",
    "pandas.tests.io.test_html.os",
    "pandas.tests.io.test_html.warnings",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.test_bs4_version_fails": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AssertionError",
    "distutils.version.LooseVersion",
    "pandas.io.html.read_html",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html._skip_if_none_of",
    "pandas.tests.io.test_html.bs4",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.test_invalid_flavor": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.html.read_html",
    "pandas.tests.io.test_html.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.test_lxml_finds_tables": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.get_lxml_elements",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.test_lxml_finds_tbody": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html.get_lxml_elements",
    "pandas.tests.io.test_html.os",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.test_same_ordering": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "pandas.io.html.read_html",
    "pandas.tests.io.test_html.DATA_PATH",
    "pandas.tests.io.test_html._skip_if_none_of",
    "pandas.tests.io.test_html.assert_framelist_equal",
    "pandas.tests.io.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_html.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_html.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.errors.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.TestAPI": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "pandas.io.packers.read_msgpack",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg.A": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg.A.__init__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_iterator_with_string_io": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_path_localpath": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.io.packers.read_msgpack",
    "pandas.tests.io.test_packers.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_path_pathlib": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pandas.io.packers.read_msgpack",
    "pandas.tests.io.test_packers.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_string_io": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestBasic.test_datetimes": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.datetime64",
    "pandas.tests.io.test_packers.datetime",
    "pandas.tests.io.test_packers.pytest",
    "pandas.tests.io.test_packers.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_nat": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_timedeltas": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.tests.io.test_packers.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_timestamp": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCategorical": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestCategorical.setup_method": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.tests.io.test_packers.TestCategorical",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCategorical.test_basic": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "pandas.util.testing.assert_categorical_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression_warns_when_decompress_caches": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "globals",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.errors.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.patch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression_warns_when_decompress_caches.decompress": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "bytearray",
    "real_decompress"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_small_strings_no_warn": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "numpy.array",
    "ord",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.setup_method": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "list",
    "numpy.arange",
    "numpy.float64",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.io.test_packers.TestCompression",
    "pandas.tests.io.test_packers.datetime",
    "range",
    "sqlalchemy.create_engine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_blosc": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._BLOSC_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_warns_when_decompress_caches_blosc": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._BLOSC_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_warns_when_decompress_caches_zlib": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._ZLIB_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_zlib": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._ZLIB_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_plain": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_blosc": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.tests.io.test_packers._BLOSC_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_blosc_to_sql": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.tests.io.test_packers._BLOSC_INSTALLED",
    "pandas.tests.io.test_packers.pandas",
    "pandas.tests.io.test_packers.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_zlib": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_zlib_to_sql": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.tests.io.test_packers._ZLIB_INSTALLED",
    "pandas.tests.io.test_packers.pandas",
    "pandas.tests.io.test_packers.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_small_strings_no_warn_blosc": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._BLOSC_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_small_strings_no_warn_zlib": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers._ZLIB_INSTALLED",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestEncoding.setup_method": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.arange",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.tests.io.test_packers.TestEncoding",
    "pandas.tests.io.test_packers.datetime",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding.test_default_encoding": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding.test_utf": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestIndex.categorical_index": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.setup_method": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.bdate_range",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tests.io.test_packers.TestIndex",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_basic_index": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_multi_index": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_unicode": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestMsgpack.check_min_structure": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "KeyError",
    "comparator",
    "distutils.version.LooseVersion",
    "getattr",
    "pandas.io.packers.read_msgpack",
    "pandas.tests.io.test_packers.check_arbitrary"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare_frame_dt_mixed_tzs": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare_series_dt_tz": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.test_msgpacks_legacy": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.PY3",
    "pandas.tests.io.test_packers.all_packers_data",
    "pandas.tests.io.test_packers.current_packers_data",
    "pandas.tests.io.test_packers.legacy_packers_versions",
    "pandas.tests.io.test_packers.os",
    "pandas.tests.io.test_packers.pytest",
    "pandas.util.testing.get_data_path",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestNDFrame.setup_method": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.io.test_packers.TestNDFrame",
    "super",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_basic_frame": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_basic_panel": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pandas.tests.test_panel.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_dataframe_duplicate_column_names": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_iterator": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "enumerate",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.tests.io.test_packers.check_arbitrary",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_multi": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tests.io.test_packers.check_arbitrary",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.tests_datetimeindex_freq_issue": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_complex": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.util.testing.assert_class_equal",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_float": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_numpy_complex": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.complex128",
    "pandas.util.testing.assert_class_equal",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_numpy_float": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_float": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_float_complex": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_mixed": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.float32",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_numpy_float": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_numpy_float_complex": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "hasattr",
    "numpy",
    "numpy.allclose",
    "numpy.complex128",
    "numpy.float32",
    "numpy.random.rand",
    "pandas.tests.io.test_packers.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_array_complex": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "all",
    "map",
    "numpy.complex128",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_array_float": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_scalar_complex": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.complex64",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_scalar_float": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_scalar_complex": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_scalar_float": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestPackers.encode_decode": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers.setup_method": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers.teardown_method": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSeries": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestSeries.setup_method": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.date_range",
    "pandas.tests.io.test_packers.TestSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makeStringSeries",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSeries.test_basic": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestSparse._check_roundtrip": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse.test_sparse_frame": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse.test_sparse_series": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers._BLOSC_INSTALLED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.tests.io.test_packers._ZLIB_INSTALLED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.tests.io.test_packers.all_packers_data": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.tests.io.generate_legacy_storage_files.create_data",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.assert_categorical_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_categorical_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.assert_panel_equal": {
  "data": {
   "shadows": "pandas.tests.test_panel.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.check_arbitrary": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Panel",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.PY3",
    "pandas.tests.test_panel.assert_panel_equal",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.create_data": {
  "data": {
   "shadows": "pandas.tests.io.generate_legacy_storage_files.create_data"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.create_msgpack_data": {
  "data": {
   "shadows": "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.current_packers_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data",
    "pandas.tests.io.test_packers.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.legacy_packers_versions": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "pandas.tests.io.test_packers.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_packers.nan": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.tests.io.test_packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.patch": {
  "data": {
   "shadows": "pandas.util.testing.patch"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.read_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.read_msgpack"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.to_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.to_msgpack"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.test_packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.test_pickle.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.TestCompression": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_pickle.TestCompression.compress_file": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "pandas.tests.io.test_pickle.bz2",
    "pandas.tests.io.test_pickle.gzip",
    "pandas.tests.io.test_pickle.os",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.shutil",
    "pandas.tests.io.test_pickle.zipfile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.decompress_file": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "open",
    "pandas.tests.io.test_pickle.bz2",
    "pandas.tests.io.test_pickle.gzip",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.shutil",
    "pandas.tests.io.test_pickle.zipfile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_read_explicit": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.get_random_path",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_read_infer": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.get_random_path",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_explicit": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.get_random_path",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_explicit_bad": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_pickle.get_random_path",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_infer": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.get_random_path",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.c_pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.compare": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "comparator",
    "globals",
    "pandas.tests.io.test_pickle.pandas",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_element": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "comparator",
    "getattr",
    "isinstance",
    "pandas.Index",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_cat_and_float": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.compare_frame_cat_onecol"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_cat_onecol": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_dt_mixed_tzs": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_index_period": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_cat": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_dt_tz": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_ts": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.tseries.offsets.Day",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_sp_frame_float": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_sp_series_ts": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.create_pickle_data": {
  "data": {
   "shadows": "pandas.tests.io.generate_legacy_storage_files.create_pickle_data"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.current_pickle_data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.tests.io.generate_legacy_storage_files.create_pickle_data",
    "pandas.tests.io.test_pickle.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.get_random_path": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.is_platform_little_endian": {
  "data": {
   "shadows": "pandas.compat.is_platform_little_endian"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.legacy_pickle_versions": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.python_pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.test_pickle_path_localpath": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_path_pathlib": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_v0_14_1": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.os",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_v0_15_2": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.tests.io.test_pickle.os",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickles": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.compat.is_platform_little_endian",
    "pandas.tests.io.test_pickle.compare",
    "pandas.tests.io.test_pickle.current_pickle_data",
    "pandas.tests.io.test_pickle.legacy_pickle_versions",
    "pandas.tests.io.test_pickle.os",
    "pandas.tests.io.test_pickle.pytest",
    "pandas.util.testing.get_data_path",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "c_unpickler",
    "pandas.tests.io.test_pickle.compare_element",
    "pandas.tests.io.test_pickle.current_pickle_data",
    "pandas.tests.io.test_pickle.pandas",
    "pandas.util.testing.ensure_clean",
    "python_unpickler",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.c_pickler": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "cPickle.dump",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.c_unpickler": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "cPickle.load",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.python_pickler": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "open",
    "pickle.dump"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.python_unpickler": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "open",
    "pickle.load"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pickle.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pickle.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.compat.PY3",
    "pandas.compat.is_platform_windows",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.tests.io.test_pytables.tables"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_pytables.Base": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_pytables.Base.setup_class": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.reset_testing_mode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.setup_method": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.teardown_class": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.set_testing_mode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.teardown_method": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.ClosedFileError": {
  "data": {
   "shadows": "pandas.io.pytables.ClosedFileError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.HDFStore": {
  "data": {
   "shadows": "pandas.io.pytables.HDFStore"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.PY35": {
  "data": {
   "shadows": "pandas.compat.PY35"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Panel4D": {
  "data": {
   "shadows": "pandas.Panel4D"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.PossibleDataLossError": {
  "data": {
   "shadows": "pandas.io.pytables.PossibleDataLossError"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.TableIterator": {
  "data": {
   "shadows": "pandas.io.pytables.TableIterator"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.Term": {
  "data": {
   "shadows": "pandas.io.pytables.Term"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues": {
  "data": {
   "lineno": 5226,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_across_dimensions": {
  "data": {
   "lineno": 5321,
   "symbols_in_volume": [
    "comp",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Panel4D",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_across_dimensions_fixed": {
  "data": {
   "lineno": 5304,
   "symbols_in_volume": [
    "comp",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_append": {
  "data": {
   "lineno": 5362,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_fixed": {
  "data": {
   "lineno": 5229,
   "symbols_in_volume": [
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_indexing_error": {
  "data": {
   "lineno": 5339,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "numpy.complex128",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_mixed_fixed": {
  "data": {
   "lineno": 5266,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_mixed_table": {
  "data": {
   "lineno": 5282,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_series_error": {
  "data": {
   "lineno": 5350,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_table": {
  "data": {
   "lineno": 5247,
   "symbols_in_volume": [
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.Base",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_double_roundtrip": {
  "data": {
   "lineno": 4375,
   "symbols_in_volume": [
    "comparator",
    "pandas.tests.io.test_pytables._default_compressor",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_roundtrip": {
  "data": {
   "lineno": 4364,
   "symbols_in_volume": [
    "comparator",
    "pandas.tests.io.test_pytables._default_compressor",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_roundtrip_table": {
  "data": {
   "lineno": 4389,
   "symbols_in_volume": [
    "comparator",
    "pandas.tests.io.test_pytables._default_compressor",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_api": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.compat.FileNotFoundError",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_api_default_format": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_all_nans": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_diff_item_order": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_frame_column_oriented": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_hierarchical": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_misc": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "check",
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_misc.check": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "comparator",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_raise": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.object_",
    "object",
    "pandas.Series",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_series": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_some_nans": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple": {
  "data": {
   "lineno": 4078,
   "symbols_in_volume": [
    "ValueError",
    "pandas.concat",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple_dropna": {
  "data": {
   "lineno": 4103,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple_dropna_false": {
  "data": {
   "lineno": 4121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.concat",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_data_columns": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "check_col",
    "index",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_data_columns.check_col": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_diff_col_name_types_raises_value_error": {
  "data": {
   "lineno": 4753,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_different_block_ordering": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_strings": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "check_col",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeMixedDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame",
    "sorted",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_strings.check_col": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_timedelta": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_calendar_roundtrip_issue": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_can_serialize_dates": {
  "data": {
   "lineno": 2876,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.bdate_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_categorical": {
  "data": {
   "lineno": 4778,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_categorical_conversion": {
  "data": {
   "lineno": 4876,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_column_multiindex": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "ValueError",
    "index",
    "isinstance",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.RangeIndex",
    "pandas.concat",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_colums_multiindex_modified": {
  "data": {
   "lineno": 4944,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_complibs": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.tables",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_contains": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeSeries",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_context": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_conv_read_write": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.safe_remove",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "roundtrip",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_conv_read_write.roundtrip": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pandas.io.pytables.read_hdf"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_coordinates": {
  "data": {
   "lineno": 3978,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.concat",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_copy": {
  "data": {
   "lineno": 4571,
   "symbols_in_volume": [
    "do_copy",
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_copy.do_copy": {
  "data": {
   "lineno": 4575,
   "symbols_in_volume": [
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.os",
    "pandas.tests.io.test_pytables.safe_close",
    "pandas.tests.io.test_pytables.safe_remove",
    "pandas.tests.io.test_pytables.tempfile",
    "pandas.util.testing.get_data_path",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_create_table_index": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "TypeError",
    "col",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_create_table_index.col": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_duplicate_column_name": {
  "data": {
   "lineno": 4906,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_empty_series": {
  "data": {
   "lineno": 2871,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_empty_series_frame": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_encoding": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.pytables.Term",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.tests.io.test_pytables.sys",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_factory_fun": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pandas.io.pytables.get_store",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame",
    "type",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_float_index": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_flush": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame": {
  "data": {
   "lineno": 2824,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select": {
  "data": {
   "lineno": 3701,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.pytables.Term",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select_complex": {
  "data": {
   "lineno": 3734,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select_complex2": {
  "data": {
   "lineno": 3785,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_get": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_getattr": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_index_types": {
  "data": {
   "lineno": 2759,
   "symbols_in_volume": [
    "datetime.datetime.date.today",
    "datetime.datetime.datetime",
    "datetime.datetime.datetime.today",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_complib": {
  "data": {
   "lineno": 5049,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_filtering": {
  "data": {
   "lineno": 3849,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_terms": {
  "data": {
   "lineno": 2476,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeError",
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_iter_empty": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "list",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_keys": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "set",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "TypeError",
    "_try_decode",
    "numpy.nan",
    "object",
    "pandas.compat.PY2",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_raises_regex",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding._try_decode": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding.roundtrip": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_legacy_0_10_read": {
  "data": {
   "lineno": 4547,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.get_data_path",
    "str",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_legacy_0_11_read": {
  "data": {
   "lineno": 4556,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.os",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_legacy_table_read": {
  "data": {
   "lineno": 4524,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_legacy_table_write": {
  "data": {
   "lineno": 4636,
   "symbols_in_volume": [
    "dict",
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long": {
  "data": {
   "lineno": 3069,
   "symbols_in_volume": [
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long._check": {
  "data": {
   "lineno": 3070,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long_strings": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_longpanel": {
  "data": {
   "lineno": 3077
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mi_data_columns": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "check",
    "check_default_mode",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check.f": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "pandas.io.pytables.HDFStore"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check_default_mode": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_multiple_open_close": {
  "data": {
   "lineno": 4400,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.pytables.ClosedFileError",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables._table_file_open_policy_is_strict",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeDataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_multiple_open_close.f": {
  "data": {
   "lineno": 4500
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_nan_selection_bug_4858": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.tests.io.test_pytables.tables",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_ndim_indexables": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "ValueError",
    "check_indexers",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.makePanel4D",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_ndim_indexables.check_indexers": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "enumerate",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_open_args": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_overwrite_node": {
  "data": {
   "lineno": 3080,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_panel_select": {
  "data": {
   "lineno": 3676,
   "symbols_in_volume": [
    "len",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pass_spec_to_storer": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore": {
  "data": {
   "lineno": 4350,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore.reader": {
  "data": {
   "lineno": 4358,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore.writer": {
  "data": {
   "lineno": 4354,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib": {
  "data": {
   "lineno": 4321,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore": {
  "data": {
   "lineno": 4329,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore.reader": {
  "data": {
   "lineno": 4337,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore.writer": {
  "data": {
   "lineno": 4333,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pickle_path_localpath": {
  "data": {
   "lineno": 4343,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_preserve_timedeltaindex_type": {
  "data": {
   "lineno": 4931,
   "symbols_in_volume": [
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_compression": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_compression_blosc": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.tests.io.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.skip_if_no_package"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_integer": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_mixed_type": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_string_index": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pytables_native2_read": {
  "data": {
   "lineno": 4512,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.PY35",
    "pandas.compat.is_platform_windows",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pytables_native_read": {
  "data": {
   "lineno": 4504,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_compare_column_type": {
  "data": {
   "lineno": 5149,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "col",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_long_float_literal": {
  "data": {
   "lineno": 5126,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_with_nested_special_character": {
  "data": {
   "lineno": 4768,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_column": {
  "data": {
   "lineno": 3913,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ValueError",
    "isinstance",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_column.f": {
  "data": {
   "lineno": 3924
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_from_pathlib_path": {
  "data": {
   "lineno": 5090,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing._skip_if_no_pathlib",
    "pandas.util.testing.assert_frame_equal",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_from_py_localpath": {
  "data": {
   "lineno": 5108,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing._skip_if_no_localpath",
    "pandas.util.testing.assert_frame_equal",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_errors": {
  "data": {
   "lineno": 5035,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "list",
    "numpy.random.rand",
    "open",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_iterator": {
  "data": {
   "lineno": 5019,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "next",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.TableIterator",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_open_store": {
  "data": {
   "lineno": 5001,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_series_mode_r": {
  "data": {
   "lineno": 5193,
   "symbols_in_volume": [
    "format",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey": {
  "data": {
   "lineno": 5058,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey_empty": {
  "data": {
   "lineno": 5084,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey_table": {
  "data": {
   "lineno": 5072,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_py2_hdf_file_in_py3": {
  "data": {
   "lineno": 5204,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_crit": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_startstop": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_where": {
  "data": {
   "lineno": 2289,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_reopen_handle": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "len",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.PossibleDataLossError",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_repr": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "repr",
    "str",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_retain_index_attributes": {
  "data": {
   "lineno": 3602,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_retain_index_attributes2": {
  "data": {
   "lineno": 3644,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_round_trip_equals": {
  "data": {
   "lineno": 4920,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_same_name_scoping": {
  "data": {
   "lineno": 2668,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select": {
  "data": {
   "lineno": 3121,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_as_multiple": {
  "data": {
   "lineno": 4143,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ValueError",
    "pandas.concat",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_columns_in_where": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_dtypes": {
  "data": {
   "lineno": 3189,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.bdate_range",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_filter_corner": {
  "data": {
   "lineno": 4304,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator": {
  "data": {
   "lineno": 3345,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.concat",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_complete_8014": {
  "data": {
   "lineno": 3411,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_many_empty_frames": {
  "data": {
   "lineno": 3541,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.concat",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_non_complete_8014": {
  "data": {
   "lineno": 3485,
   "symbols_in_volume": [
    "len",
    "pandas.concat",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_with_dups": {
  "data": {
   "lineno": 2998,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_with_many_inputs": {
  "data": {
   "lineno": 3298,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.bdate_range",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_series": {
  "data": {
   "lineno": 2691,
   "symbols_in_volume": [
    "numpy.asarray",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_frame": {
  "data": {
   "lineno": 2723,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_series": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_with_compression": {
  "data": {
   "lineno": 3089,
   "symbols_in_volume": [
    "numpy.random.binomial",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_fixed": {
  "data": {
   "lineno": 4258,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_multiple": {
  "data": {
   "lineno": 4243,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_table": {
  "data": {
   "lineno": 4223,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_datetime_fractional_secs": {
  "data": {
   "lineno": 4661,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "pandas.Series",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_datetime_mixed": {
  "data": {
   "lineno": 4737,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_hierarchical": {
  "data": {
   "lineno": 2883,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name": {
  "data": {
   "lineno": 2902,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name_numpy_str": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "numpy.arange",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "pandas.io.pytables.read_hdf",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name_with_tz": {
  "data": {
   "lineno": 2911,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_types": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "TypeError",
    "check",
    "index",
    "pandas.compat.PY3",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_types.check": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "format",
    "index",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_mixed": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "_make_one",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_mixed._make_one": {
  "data": {
   "lineno": 2955,
   "symbols_in_volume": [
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_multiindex": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "ValueError",
    "make_index",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_multiindex.make_index": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_series_name": {
  "data": {
   "lineno": 2944,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_string_select": {
  "data": {
   "lineno": 3866,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.isnull",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_index_incompatible_dtypes": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_mixed_dtypes": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_values_dtypes_roundtrip": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_term_compat": {
  "data": {
   "lineno": 2614,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_terms": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "pandas.Panel",
    "pandas.Panel.fromDict",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_timeseries_preepoch": {
  "data": {
   "lineno": 2812,
   "symbols_in_volume": [
    "OverflowError",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.tests.io.test_pytables.sys",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_to_hdf_with_min_itemsize": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeMixedDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_to_hdf_with_object_column_names": {
  "data": {
   "lineno": 4967,
   "symbols_in_volume": [
    "ValueError",
    "index",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.tests.io.test_pytables.ensure_clean_path",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tseries_indices_frame": {
  "data": {
   "lineno": 4690,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_class_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tseries_indices_series": {
  "data": {
   "lineno": 4669,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_class_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tuple_index": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "col",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unicode_index": {
  "data": {
   "lineno": 4713,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unicode_longer_encoded": {
  "data": {
   "lineno": 4722,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unimplemented_dtypes_table_columns": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.tests.io.test_pytables.datetime",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_versioning": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_wide": {
  "data": {
   "lineno": 2992,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_wide_table_dups": {
  "data": {
   "lineno": 3057,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones": {
  "data": {
   "lineno": 5373,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestTimezones._compare_with_tz": {
  "data": {
   "lineno": 5375,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_append_with_timezones_dateutil": {
  "data": {
   "lineno": 5387,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "dict",
    "gettz",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_append_with_timezones_pytz": {
  "data": {
   "lineno": 5463,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_dst_transitions": {
  "data": {
   "lineno": 5631,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.tests.io.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_fixed_offset_tz": {
  "data": {
   "lineno": 5582,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_legacy_datetimetz_object": {
  "data": {
   "lineno": 5619,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_store_timezone": {
  "data": {
   "lineno": 5592,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "pandas.DataFrame",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.set_timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_timezones_fixed": {
  "data": {
   "lineno": 5561,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.io.test_pytables._maybe_remove",
    "pandas.tests.io.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_tseries_select_index_column": {
  "data": {
   "lineno": 5529,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.tests.io.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables._default_compressor": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.tests.io.test_pytables._maybe_remove": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.create_tempfile": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.os",
    "pandas.tests.io.test_pytables.tempfile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.ensure_clean_path": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "isinstance",
    "list",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.safe_remove"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.ensure_clean_store": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "len",
    "pandas.io.pytables.HDFStore",
    "pandas.tests.io.test_pytables.create_tempfile",
    "pandas.tests.io.test_pytables.os",
    "pandas.tests.io.test_pytables.safe_close",
    "pandas.tests.io.test_pytables.safe_remove"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.get_store": {
  "data": {
   "shadows": "pandas.io.pytables.get_store"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.maybe_get_tz": {
  "data": {
   "shadows": "pandas._libs.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.pytables": {
  "data": {
   "shadows": "pandas.io.pytables"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.read_hdf": {
  "data": {
   "shadows": "pandas.io.pytables.read_hdf"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.safe_close": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.safe_remove": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.tests.io.test_pytables.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_pytables.set_timezone": {
  "data": {
   "shadows": "pandas.util.testing.set_timezone"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.skip_compression": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.tests.io.test_pytables.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.tables": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.tests.io.test_pytables.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_pytables.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.io.test_s3": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.test_s3.TestS3URL": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_s3.TestS3URL.test_is_s3_url": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas.io.common._is_s3_url"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_s3._is_s3_url": {
  "data": {
   "shadows": "pandas.io.common._is_s3_url"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "datetime.datetime",
    "float",
    "int",
    "numpy.float64",
    "numpy.str_",
    "pandas.compat.binary_type",
    "pandas.compat.text_type",
    "pandas.core.tools.datetimes.format",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.tests.io.test_sql.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.Error": {
  "data": {
   "shadows": "pymysql.err.Error"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.MixInBase": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.MixInBase.teardown_method": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.MySQLMixIn": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.MySQLMixIn._close_conn": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pymysql.err.Error"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.MySQLMixIn._get_all_tables": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.MySQLMixIn.drop_table": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.io.sql._get_valid_mysql_name"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PY36": {
  "data": {
   "shadows": "pandas.compat.PY36"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.PandasSQLTest": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._check_iris_loaded_frame": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._count_rows": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._execute_sql": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._get_exec": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_iris_data": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "next",
    "pandas.tests.io.test_sql.SQL_STRINGS",
    "pandas.tests.io.test_sql.csv",
    "pandas.tests.io.test_sql.io",
    "pandas.tests.io.test_sql.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_iris_view": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_raw_sql": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test1_data": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test2_data": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test3_data": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris_named_parameter": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris_parameter": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._roundtrip": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_append": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_empty": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_fail": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_replace": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_save_index": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._transaction_test": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLALCHEMY_INSTALLED": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn._close_conn": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn._get_all_tables": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn.drop_table": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQL_STRINGS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn._close_conn": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn._get_all_tables": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn.drop_table": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.io.sql._get_valid_sqlite_name"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.TestMySQLAlchemy": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestMySQLAlchemy",
    "pandas.tests.io.test_sql._TestSQLAlchemy",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestMySQLAlchemyConn": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestMySQLAlchemy",
    "pandas.tests.io.test_sql._TestSQLAlchemyConn",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestPostgreSQLAlchemy": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestPostgreSQLAlchemy",
    "pandas.tests.io.test_sql._TestSQLAlchemy",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestPostgreSQLAlchemyConn": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestPostgreSQLAlchemy",
    "pandas.tests.io.test_sql._TestSQLAlchemyConn",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLApi": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQLAlchemyMixIn",
    "pandas.tests.io.test_sql._TestSQLApi",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLApi._get_index_columns": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "sqlalchemy.engine.reflection.Inspector.from_engine"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi._make_iris_table_metadata": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.connect": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQLALCHEMY_INSTALLED",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_database_uri_string": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_not_reflect_all_tables": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_query_by_select_obj": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql.sqlalchemy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_query_by_text_obj": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql.sqlalchemy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_sql_delegate": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_table_columns": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_table_index_col": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_sqlalchemy_type_mapping": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase",
    "pandas.io.sql.SQLTable",
    "pandas.to_datetime",
    "sqlalchemy.sql.sqltypes.DateTime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_warning_case_insensitive_table_name": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "len",
    "pandas.tests.io.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApiConn": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.TestSQLApi",
    "pandas.tests.io.test_sql._EngineToConnMixin",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "object",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation.test_deprecated_flavor": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.io.sql",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation.test_unsupported_flavor": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas.io.sql",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteAlchemy": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestSQLAlchemy",
    "pandas.tests.io.test_sql._TestSQLiteAlchemy",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteAlchemyConn": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._TestSQLAlchemyConn",
    "pandas.tests.io.test_sql._TestSQLiteAlchemy",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.PandasSQLTest",
    "pandas.tests.io.test_sql.SQLiteMixIn",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback._get_index_columns": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback._get_sqlite_column_type": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.connect": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.setup_method": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "pandas.io.sql.SQLiteDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_create_and_drop_table": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_datetime_date": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_datetime_time": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "datetime.time",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_dtype": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "pandas.DataFrame",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_execute_sql": {
  "data": {
   "lineno": 1915
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_illegal_names": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "pandas.DataFrame",
    "pandas.io.sql.table_exists",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_notnull_dtype": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql": {
  "data": {
   "lineno": 1876
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql_named_parameter": {
  "data": {
   "lineno": 1882
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql_parameter": {
  "data": {
   "lineno": 1879
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_roundtrip": {
  "data": {
   "lineno": 1912
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql": {
  "data": {
   "lineno": 1885
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_append": {
  "data": {
   "lineno": 1897
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_empty": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_fail": {
  "data": {
   "lineno": 1891
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_replace": {
  "data": {
   "lineno": 1894
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_save_index": {
  "data": {
   "lineno": 1950
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_transactions": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "pandas.compat.PY36",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQLiteMixIn",
    "pandas.tests.io.test_sql._TestSQLApi",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi._get_sqlite_column_type": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.connect": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_con_string_import_error": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql.SQLALCHEMY_INSTALLED",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_get_schema2": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_read_sql_delegate": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.tests.io.test_sql.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_safe_names_warning": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_sql_open_close": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_sqlite_type_mapping": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLiteDatabase",
    "pandas.io.sql.SQLiteTable",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.MySQLMixIn",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestXMySQL._check_roundtrip": {
  "data": {
   "lineno": 2504,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.warnings",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.setup_class": {
  "data": {
   "lineno": 2314,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.pymysql",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.setup_method": {
  "data": {
   "lineno": 2343,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.pymysql",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_basic": {
  "data": {
   "lineno": 2371,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_chunksize_read_type": {
  "data": {
   "lineno": 2397,
   "symbols_in_volume": [
    "next",
    "pandas.io.sql.to_sql",
    "pandas.read_sql_query",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute_closed_connection": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.sql.execute",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.tquery",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute_fail": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.sql.execute",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.pytest",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_if_exists": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": [
    "ValueError",
    "clean_up",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.tquery"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_if_exists.clean_up": {
  "data": {
   "lineno": 2555
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_keyword_as_column_names": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql._skip_if_no_pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_na_roundtrip": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._skip_if_no_pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_schema": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.get_schema",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_write_row_by_row": {
  "data": {
   "lineno": 2376,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql._skip_if_no_pymysql",
    "pandas.tests.io.test_sql.format_query",
    "pandas.tests.io.test_sql.tquery",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.SQLiteMixIn",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestXSQLite._check_roundtrip": {
  "data": {
   "lineno": 2189,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.setup_method": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_basic": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute": {
  "data": {
   "lineno": 2112,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute_closed_connection": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.sql.execute",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.tquery",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute_fail": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.sql.execute",
    "pandas.tests.io.test_sql.pytest",
    "pandas.util.testing.capture_stdout"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_if_exists": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "ValueError",
    "clean_up",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.tquery"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_if_exists.clean_up": {
  "data": {
   "lineno": 2237
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_keyword_as_column_names": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_na_roundtrip": {
  "data": {
   "lineno": 2186
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_onecolumn_of_integer": {
  "data": {
   "lineno": 2214,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_schema": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.get_schema",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_write_row_by_row": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.tests.io.test_sql.format_query",
    "pandas.tests.io.test_sql.tquery",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin.setup_method": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.tests.io.test_sql._EngineToConnMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin.teardown_method": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.tests.io.test_sql._EngineToConnMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.connect": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.test_read_procedure": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.connect": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.test_schema_support": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.io.sql.SQLDatabase",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.sqlalchemy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.PandasSQLTest",
    "pandas.tests.io.test_sql.SQLAlchemyMixIn"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy._get_index_columns": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "sqlalchemy.engine.reflection.Inspector.from_engine"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.connect": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_class": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_connect": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_import": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.SQLALCHEMY_INSTALLED",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_method": {
  "data": {
   "lineno": 1107
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_aread_sql": {
  "data": {
   "lineno": 1138
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_bigint": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "main",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.bar": {
  "data": {
   "lineno": 1577
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.foo": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.main": {
  "data": {
   "lineno": 1581
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_create_table": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_date_parsing": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.string_types",
    "pandas.date_range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_NaT": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.string_types",
    "pandas.date_range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_date": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_time": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "datetime.time",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_with_timezone": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "check",
    "hasattr",
    "list",
    "pandas.concat",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.io.sql.read_sql_table",
    "pandas.read_sql_query",
    "pandas.tests.io.test_sql.pytest",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_with_timezone.check": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_datetime64_dtype",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_default_date_load": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.floating",
    "numpy.integer",
    "numpy.object",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_double_precision": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "isinstance",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.sqlalchemy",
    "sqlalchemy.sql.sqltypes.BigInteger",
    "sqlalchemy.sql.sqltypes.Float",
    "sqlalchemy.sql.sqltypes.Integer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_drop_table": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_dtype": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.tests.io.test_sql.pytest",
    "pandas.tests.io.test_sql.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_execute_sql": {
  "data": {
   "lineno": 1190
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_get_schema_create_table": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_mixed_dtype_insert": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_fullcolumn": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_numeric": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_string": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_notnull_dtype": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.sqlalchemy",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.DateTime",
    "sqlalchemy.sql.sqltypes.Float",
    "sqlalchemy.sql.sqltypes.Integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_sql_named_parameter": {
  "data": {
   "lineno": 1144
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_sql_parameter": {
  "data": {
   "lineno": 1141
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table_absent": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table_columns": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_roundtrip": {
  "data": {
   "lineno": 1187
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_temporary_table": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "Session",
    "Temporary",
    "Temporary.spam",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.tests.io.test_sql.sqlalchemy",
    "pandas.util.testing.assert_frame_equal",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.orm.session",
    "sqlalchemy.orm.session.add",
    "sqlalchemy.orm.session.connection",
    "sqlalchemy.orm.session.flush",
    "sqlalchemy.orm.session.sessionmaker",
    "sqlalchemy.orm.session.transaction"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_temporary_table.Temporary": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "id",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql": {
  "data": {
   "lineno": 1147
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_append": {
  "data": {
   "lineno": 1159
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_empty": {
  "data": {
   "lineno": 1150
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_fail": {
  "data": {
   "lineno": 1153
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_replace": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_save_index": {
  "data": {
   "lineno": 1463
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_transactions": {
  "data": {
   "lineno": 1466
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemyConn": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql._EngineToConnMixin",
    "pandas.tests.io.test_sql._TestSQLAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemyConn.test_transactions": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.tests.io.test_sql.PandasSQLTest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLApi.setup_method": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_categorical": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_chunksize_read": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_complex": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_date_and_index": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_date_parsing": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_execute_sql": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema_dtypes": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.get_schema",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema_keys": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_integer_col_names": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_multiindex_roundtrip": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_read_sql_iris": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_read_sql_view": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_roundtrip": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "int",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_roundtrip_chunksize": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_timedelta": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Series",
    "pandas.io.sql.read_sql_query",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_append": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_fail": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_index_label": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_index_label_multiindex": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_panel": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.sql.to_sql",
    "pandas.tests.io.test_sql.pytest",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_replace": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_series": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_type_mapping": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_unicode_column_name": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.connect": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.io.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.setup_driver": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_bigint_warning": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.tests.io.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_default_date_load": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql._formatters": {
  "data": {
   "lineno": 2035
  },
  "type": "constant"
 },
 "pandas.tests.io.test_sql._skip_if_no_pymysql": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.io.test_sql.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.date_format": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.format"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.declarative": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.format_query": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": [
    "float",
    "formatter",
    "isinstance",
    "pandas.io.sql",
    "pandas.isnull",
    "pandas.tests.io.test_sql._formatters",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.psycopg2": {
  "data": {
   "shadows": "psycopg2"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.pymysql": {
  "data": {
   "shadows": "pymysql"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.read_sql_query": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_query"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.read_sql_table": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_table"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.reflection": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sa_session": {
  "data": {
   "shadows": "sqlalchemy.orm.session"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sql": {
  "data": {
   "shadows": "pandas.io.sql"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sqlalchemy.schema": {
  "data": {
   "shadows": "sqlalchemy.schema"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.sqltypes": {
  "data": {
   "shadows": "sqlalchemy.sql.sqltypes"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.io.test_sql.tquery": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "list",
    "pandas.io.sql.execute"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_sql.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.io.test_stata.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.InvalidColumnName": {
  "data": {
   "shadows": "pandas.io.stata.InvalidColumnName"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.NaT": {
  "data": {
   "shadows": "pandas._libs.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.PossiblePrecisionLoss": {
  "data": {
   "shadows": "pandas.io.stata.PossiblePrecisionLoss"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.Series": {
  "data": {
   "shadows": "pandas.core.frame.Series"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.StataMissingValue": {
  "data": {
   "shadows": "pandas.io.stata.StataMissingValue"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.StataReader": {
  "data": {
   "shadows": "pandas.io.stata.StataReader"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.TestStata": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.io.test_stata.TestStata.read_csv": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandas.io.parsers.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.read_dta": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.setup_method": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.io.test_stata.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_105": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int16",
    "numpy.int8",
    "pandas.DataFrame",
    "pandas.read_stata",
    "pandas.tests.io.test_stata.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_big_dates": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "numpy.object",
    "pandas._libs.tslib.NaT",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_bool_uint": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_order": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_ordering": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.io.stata.read_stata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_sorting": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_warnings_and_errors": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame.from_records",
    "pandas.concat",
    "pandas.tests.io.test_stata.pytest",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_with_stata_missing_values": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame.from_records",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_writing": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_data_method": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.io.stata.StataReader",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_date_export_formats": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_dates_invalid_column": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.InvalidColumnName",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_default_date_conversion": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_drop_column": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_dtype_conversion": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_encoding": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.PY3",
    "pandas.compat.string_types",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_excessively_long_string": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_invalid_encoding": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_iterator": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "list",
    "pandas.concat",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_large_value_conversion": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.io.stata.PossiblePrecisionLoss",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_minimal_size_col": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "int",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.ensure_clean",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_missing_value_conversion": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "pandas.compat.iterkeys",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_missing_value_generator": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "chr",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.StataReader",
    "pandas.tests.io.test_stata.struct",
    "pandas.util.testing.ensure_clean",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_nan_to_missing_value": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_no_index": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "numpy.reshape",
    "pandas.core.frame.DataFrame",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_numeric_column_names": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "int",
    "list",
    "map",
    "numpy.arange",
    "numpy.reshape",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.InvalidColumnName",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_out_of_range_double": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "ValueError",
    "numpy.double",
    "numpy.finfo",
    "numpy.inf",
    "pandas.core.frame.DataFrame",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_out_of_range_float": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "ValueError",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_path_pathlib": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_pathlib"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_pickle_path_localpath": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.round_trip_localpath"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_115": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_117": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_columns": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta1": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta12": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta18": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta2": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "UserWarning",
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "len",
    "pandas.NaT",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.tests.io.test_stata.pytest",
    "pandas.tests.io.test_stata.sys",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta3": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int16",
    "numpy.int8",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta4": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_empty_dta": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta10": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.int32",
    "object",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta11": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "pandas.compat.u",
    "pandas.core.frame.DataFrame",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta12": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "pandas.core.frame.DataFrame",
    "pandas.tests.io.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta13": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta5": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_reread_dta14": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_reread_dta15": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_repeated_column_labels": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.stata.read_stata",
    "pandas.tests.io.test_stata.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_stata_111": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_stata_doc_examples": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_string_no_dates": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_timestamp_and_label": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_unsupported_datetype": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.io.test_stata.datetime",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_unsupported_type": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_variable_labels": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.io.stata.StataReader"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_dta6": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_missing_strings": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_preserves_original": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_variable_label_errors": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.io.test_stata.pytest",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_variable_labels": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.io.test_stata.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.iterkeys": {
  "data": {
   "shadows": "pandas.compat.iterkeys"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.read_stata": {
  "data": {
   "shadows": "pandas.io.stata.read_stata"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.io.test_stata.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.plotting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.plotting.common": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.common.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.Collection": {
  "data": {
   "shadows": "matplotlib.collections.Collection"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.NullFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.NullFormatter"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.PolyCollection": {
  "data": {
   "shadows": "matplotlib.collections.PolyCollection"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.TestPlotBase": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_ax_scales": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_axes_shape": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float64",
    "pandas.plotting._tools._flatten",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_box_return_type": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "AssertionError",
    "dict",
    "isinstance",
    "matplotlib.axes.Axes",
    "pandas.Series",
    "pandas.compat.iteritems",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_colors": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matplotlib.collections.Collection",
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PolyCollection",
    "matplotlib.lines.Line2D",
    "numpy.ndarray",
    "pandas.compat.zip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_data": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "check_line",
    "len",
    "pandas.compat.zip",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_data.check_line": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_grid_settings": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "is_grid_on",
    "len",
    "matplotlib.rc",
    "pandas.tests.plotting.common._ok_for_gaussian_kde"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_grid_settings.is_grid_on": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_has_errorbars": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_legend_labels": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_text_labels": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "len",
    "pandas.compat.zip",
    "pandas.core.dtypes.api.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_ticks_props": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.ticker.NullFormatter",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_visible": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.collections.Collection",
    "pandas.core.dtypes.api.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._flatten_visible": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pandas.plotting._tools._flatten"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._get_axes_layout": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._get_colors_mapped": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dict",
    "matplotlib.colors",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._maybe_unpack_cycler": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "matplotlib.colors"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.colorconverter": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "matplotlib.colors.colorConverter",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.plt": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.setup_method": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "matplotlib.rcdefaults",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.random.randint",
    "numpy.random.uniform",
    "pandas.DataFrame",
    "pandas.plotting._compat._mpl_ge_1_3_1",
    "pandas.plotting._compat._mpl_ge_1_4_0",
    "pandas.plotting._compat._mpl_ge_1_5_0",
    "pandas.plotting._compat._mpl_ge_2_0_0",
    "pandas.plotting._compat._mpl_ge_2_0_1",
    "pandas.plotting._compat._mpl_le_1_2_1",
    "pandas.read_csv",
    "pandas.tests.plotting.common.curpath",
    "pandas.tests.plotting.common.os",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.teardown_method": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common._check_plot_works": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "f",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.savefig",
    "pandas.tests.plotting.common.warnings",
    "pandas.util.testing.assert_is_valid_plot_return_object",
    "pandas.util.testing.close",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common._flatten": {
  "data": {
   "shadows": "pandas.plotting._tools._flatten"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common._ok_for_gaussian_kde": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.plotting.common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.assert_is_valid_plot_return_object": {
  "data": {
   "shadows": "pandas.util.testing.assert_is_valid_plot_return_object"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.curpath": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.common.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.api.is_list_like"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.plotting.common.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_boxplot_method.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_boxplot_legacy": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "UserWarning",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lzip",
    "pandas.compat.range",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_boxplot_method.string",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_fontsize": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_layout": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_boxplot_method.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_multiple_axes": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "list",
    "numpy.array",
    "pandas.tests.plotting.test_boxplot_method.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_return_type": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_plot_fignums": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_axis_limits": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_check_ax_limits",
    "numpy.random.randint",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_axis_limits._check_ax_limits": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_empty_column": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_boxplot_method._skip_if_mpl_14_or_dev_boxplot",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_legacy": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.plotting._core.boxplot",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_boxplot_method.itertools",
    "pandas.tests.plotting.test_boxplot_method.string",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_return_type_legacy": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.test_boxplot_method.pytest",
    "pandas.tests.plotting.test_boxplot_method.string",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_return_type_none": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_figsize": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_fontsize": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method._check_plot_works": {
  "data": {
   "shadows": "pandas.tests.plotting.common._check_plot_works"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method._skip_if_mpl_14_or_dev_boxplot": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.plotting.test_boxplot_method.matplotlib",
    "pandas.tests.plotting.test_boxplot_method.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_boxplot_method.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.plotting.test_converter.pytest"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_converter.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.Micro": {
  "data": {
   "shadows": "pandas.tseries.offsets.Micro"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.Milli": {
  "data": {
   "shadows": "pandas.tseries.offsets.Milli"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.Second": {
  "data": {
   "shadows": "pandas.tseries.offsets.Second"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.setup_method": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.plotting.test_converter.converter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "numpy.array",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.tseries.offsets.Day"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion_float": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.tests.plotting.test_converter.converter",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion_outofbounds_datetime": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.tests.plotting.test_converter.converter",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_convert_accepts_unicode": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_convert_nested": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_dateindex_conversion": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.tests.plotting.test_converter.converter",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_resolution": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_assert_less",
    "pandas.Timestamp",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Second"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_resolution._assert_less": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_time_formatter": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.setup_method": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Axis",
    "pandas.tests.plotting.test_converter.converter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.setup_method.Axis": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_conversion": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Period",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_convert_accepts_unicode": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_convert_nested": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_integer_passthrough": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.converter": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.tests.plotting.test_converter.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.test_timtetonum_accepts_unicode": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.tests.plotting.test_converter.converter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_converter.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_boxplot_deprecated": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.test_deprecated.string",
    "pandas.tools.plotting.boxplot",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_plot_params": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.plot_params",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_radviz_deprecated": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.tools.plotting.radviz",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_scatter_plot_legacy": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.scatter_matrix",
    "pandas.tools.plotting.scatter_matrix",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.plotting": {
  "data": {
   "shadows": "pandas.tools.plotting"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_deprecated.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_groupby": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_groupby.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_groupby.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_hist_single_row": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plot_kwargs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plot_submethod_works": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plotting_with_float_index_works": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_series_groupby_plotting_nominally_works": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.choice",
    "numpy.random.normal",
    "pandas.Series",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_groupby.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_hist_method.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_x": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_xy": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_y": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_layout": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_legacy": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "isinstance",
    "matplotlib.patches.Rectangle",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.plotting._core.grouped_hist",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_legacy2": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_multiple_axes": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_hist_df_legacy": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "UserWarning",
    "isinstance",
    "matplotlib.patches.Rectangle",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_hist_layout": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_tight_layout": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.setup_method": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "matplotlib.rcdefaults",
    "pandas.tests.plotting.common.TestPlotBase.setup_method",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_bins_legacy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_by_no_extra_plots": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_layout": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_layout_with_by": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_legacy": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_no_overlap": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplot",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_plot_fails_when_ax_differs_from_figure": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.tests.plotting.test_hist_method.pytest",
    "pandas.util.testing.slow",
    "pylab.figure"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method._check_plot_works": {
  "data": {
   "shadows": "pandas.tests.plotting.common._check_plot_works"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.figure": {
  "data": {
   "shadows": "pylab.figure"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.gcf": {
  "data": {
   "shadows": "matplotlib.pyplot.gcf"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.grouped_hist": {
  "data": {
   "shadows": "pandas.plotting._core.grouped_hist"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.subplot": {
  "data": {
   "shadows": "matplotlib.pyplot.subplot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_hist_method.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_misc.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_andrews_curves": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "FutureWarning",
    "matplotlib.cm.jet",
    "numpy.linspace",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.plotting.andrews_curves",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_parallel_coordinates": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "matplotlib.cm.jet",
    "numpy.linspace",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.plotting.parallel_coordinates",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_parallel_coordinates_with_sorted_labels": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.plotting.parallel_coordinates",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_radviz": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "matplotlib.cm.jet",
    "numpy.linspace",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.plotting.radviz",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_scatter_matrix_axis": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.plotting.scatter_matrix",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_scatter_plot_legacy": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_scatter_plot_legacy.scat": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.plotting.scatter_matrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_scatter_plot_legacy.scat2": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.plotting._core.scatter_plot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_subplot_titles": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.tests.plotting.test_misc.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.setup_method": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "matplotlib.rcdefaults",
    "pandas.tests.plotting.common.TestPlotBase.setup_method",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_autocorrelation_plot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.plotting.autocorrelation_plot",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_bootstrap_plot": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.plotting.bootstrap_plot",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_lag_plot": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.plotting.lag_plot",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_misc._check_plot_works": {
  "data": {
   "shadows": "pandas.tests.plotting.common._check_plot_works"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc._ok_for_gaussian_kde": {
  "data": {
   "shadows": "pandas.tests.plotting.common._ok_for_gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.andrews_curves": {
  "data": {
   "shadows": "pandas.plotting.andrews_curves"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.autocorrelation_plot": {
  "data": {
   "shadows": "pandas.plotting.autocorrelation_plot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.bootstrap_plot": {
  "data": {
   "shadows": "pandas.plotting.bootstrap_plot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.lag_plot": {
  "data": {
   "shadows": "pandas.plotting.lag_plot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.parallel_coordinates": {
  "data": {
   "shadows": "pandas.plotting.parallel_coordinates"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.radviz": {
  "data": {
   "shadows": "pandas.plotting.radviz"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_misc.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing._skip_module_if_no_mpl"
   ]
  },
  "type": "module"
 },
 "pandas.tests.plotting.test_series.CustomBusinessDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.CustomBusinessDay"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.plotting.common.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.plotting.common.TestPlotBase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.setup_method": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "matplotlib.rcdefaults",
    "pandas.tests.plotting.common.TestPlotBase.setup_method",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_bar_ignore_index": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_bar_log": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_boxplot_series": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_custom_business_day_freq": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.compat.range",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tseries.offsets.CustomBusinessDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_df_series_secondary_legend": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_dont_modify_rcParams": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_dup_datetime_index_plot": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_errorbar_plot": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_bins_legacy": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_df_kwargs": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_df_with_nonnumerics": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kde": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "len",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kde_color": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "len",
    "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kwargs": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_layout": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_layout_with_by": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_legacy": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_no_overlap": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplot",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_secondary_legend": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.close",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_invalid_kind": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.plotting.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_invalid_plot_data": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.Series",
    "pandas.plotting._core._common_kinds",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_irregular_datetime": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kde_kwargs": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.linspace",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kde_missing_vals": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "any",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.uniform",
    "pandas.Series",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kind_both_ways": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.plotting._core._common_kinds",
    "pandas.plotting._core._series_kinds",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_label": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_line_area_nan_series": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.delete",
    "numpy.float64",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_line_use_index_false": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_partially_invalid_plot_data": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.plotting._core._common_kinds",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.tests.plotting.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_pie_nan": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_pie_series": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "iter",
    "list",
    "next",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.test_series.itertools",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot_fails_with_dupe_color_and_style": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.plotting.test_series.pytest",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot_figsize_and_title": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_rotation": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_series_grid_settings": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.plotting._core._common_kinds",
    "pandas.plotting._core._series_kinds",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_series_plot_color_kwargs": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_standard_colors": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pandas.plotting._style._get_standard_colors",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_standard_colors_all": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "matplotlib.colors.ColorConverter.colors",
    "matplotlib.colors.cnames",
    "pandas.plotting._style._get_standard_colors",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_table": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "pandas.tests.plotting.common._check_plot_works"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_time_series_plot_color_kwargs": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_time_series_plot_color_with_empty_kwargs": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "matplotlib.rcParams",
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_ts_area_lim": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_ts_line_lim": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_valid_object_plot": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.plotting._core._common_kinds",
    "pandas.tests.plotting.common._check_plot_works",
    "pandas.tests.plotting.common._ok_for_gaussian_kde",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_xticklabels": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.plotting.test_series._check_plot_works": {
  "data": {
   "shadows": "pandas.tests.plotting.common._check_plot_works"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series._get_standard_colors": {
  "data": {
   "shadows": "pandas.plotting._style._get_standard_colors"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series._ok_for_gaussian_kde": {
  "data": {
   "shadows": "pandas.tests.plotting.common._ok_for_gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series._skip_if_no_scipy_gaussian_kde": {
  "data": {
   "shadows": "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.gcf": {
  "data": {
   "shadows": "matplotlib.pyplot.gcf"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.subplot": {
  "data": {
   "shadows": "matplotlib.pyplot.subplot"
  },
  "type": "import"
 },
 "pandas.tests.plotting.test_series.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_interval": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_interval.Interval": {
  "data": {
   "shadows": "pandas.Interval"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_interval.TestInterval": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_interval.TestInterval.setup_method": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.Interval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_comparison": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_contains": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.tests.scalar.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_equal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.Interval"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_hash": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_add": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.tests.scalar.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_div": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.tests.scalar.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_mult": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.tests.scalar.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_sub": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Interval",
    "pandas.tests.scalar.test_interval.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_properties": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_repr": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.Interval",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_interval.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_interval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_nat.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.test_NaT_methods": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "getattr",
    "hasattr",
    "numpy.isnan",
    "pandas.NaT",
    "pandas.NaT.isoformat",
    "pandas.tests.scalar.test_nat.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_equality": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "klass",
    "numpy.nan",
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull",
    "pandas.tests.scalar.test_nat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_identity": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "klass",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull",
    "pandas.tests.scalar.test_nat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_isoformat": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "klass",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_nat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_arithmetic": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_nat.pytest",
    "pandas.tests.scalar.test_nat.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_arithmetic_index": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_fields": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "getattr",
    "numpy.isnan",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_nat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_vector_field_access": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "getattr",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._bool_ops",
    "pandas.DatetimeIndex._field_ops",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_round_nat": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "getattr",
    "klass",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_nat.pytest",
    "round_method"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_nat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_period.DAYS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.DAYS"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.MONTHS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.MONTHS"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.TestComparisons": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestComparisons.setup_method": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_equal": {
  "data": {
   "lineno": 933
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_equal_Raises_Value": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater": {
  "data": {
   "lineno": 944
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greaterEqual": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greaterEqual_Raises_Value": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "TypeError",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater_Raises_Type": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater_Raises_Value": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_notEqual": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_period_nat_comp": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller": {
  "data": {
   "lineno": 976
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual": {
  "data": {
   "lineno": 965
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual_Raises_Type": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual_Raises_Value": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller_Raises_Type": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller_Raises_Value": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_sort": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_offset": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "isinstance",
    "numpy.timedelta64",
    "pandas.Period",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_offset_nat": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "isinstance",
    "numpy.timedelta64",
    "pandas.Period",
    "pandas._libs.tslib.NaT",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_pdnat": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_raises": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Period",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_nat_ops": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_period_ops_offset": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_offset": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Period",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_offset_nat": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Period",
    "pandas._libs.tslib.NaT",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_pdnat": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodField": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestPeriodField.test_get_period_field_array_raises_on_out_of_range": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pandas._libs.period.get_period_field_arr",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodField.test_get_period_field_raises_on_out_of_range": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "ValueError",
    "pandas._libs.period.get_period_field",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_anchor_week_end_time": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "_ex",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_anchor_week_end_time._ex": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_badinput": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas._libs.tslib.DateParseError",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "datetime.datetime.now",
    "pandas.Period",
    "pandas.Period.now",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_bday": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_month": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.Period",
    "pandas.compat.numpy.np_datetime64_compat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_quarter": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_constructor_corner": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.now",
    "pandas.NaT",
    "pandas.Period",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_constructor_infer_freq": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_end_time": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "_ex",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_end_time._ex": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_freq_str": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.offsets.Minute"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_hash": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "hash",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_is_leap_year": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_microsecond_repr": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "pandas.Period",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_millisecond_repr": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pandas.Period",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_multiples": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_annual": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.Period",
    "pandas.tseries.frequencies.MONTHS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_combined": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_mult": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.offsets.MonthEnd",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_nat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Period",
    "pandas._libs.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_quarterly": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.tseries.frequencies.MONTHS",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_weekly": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.tseries.frequencies.DAYS",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_constructor_offsets": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "datetime.date",
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.Period",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.offsets.BDay",
    "pandas.offsets.BusinessDay",
    "pandas.offsets.Day",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.QuarterEnd",
    "pandas.offsets.YearEnd",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_deprecated_freq": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Period",
    "pandas.compat.iteritems",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_from_ordinal": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.Period._from_ordinal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_pnow": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas._libs.period.pnow",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_annually": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_daily": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_hourly": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_minutely": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_monthly": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandas.Period",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_quarterly": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.Period",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_secondly": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_weekly": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_weekly_legacy": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_quarterly_negative_ordinals": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_repr": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.Period",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_repr_nat": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.tslib.NaT",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_round_trip": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_start_time": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_strftime": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_sub_delta": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.tests.scalar.test_period.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_mult": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_period.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg_dateutil": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timestamp",
    "pandas._libs.tslib._dateutil_gettz",
    "pandas._libs.tslib.maybe_get_tz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg_dateutil_from_string": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas._libs.tslib._dateutil_gettz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_to_timestamp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_ex",
    "aliases",
    "datetime.datetime",
    "enumerate",
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_to_timestamp._ex": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.gettz": {
  "data": {
   "shadows": "pandas._libs.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.libperiod": {
  "data": {
   "shadows": "pandas._libs.period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.maybe_get_tz": {
  "data": {
   "shadows": "pandas._libs.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period_asfreq": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_period_asfreq.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_MS": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.tseries.frequencies._period_code_map.get",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_combined": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "pandas.Period",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_corner": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_mult": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_annual": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_business": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_daily": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_hourly": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_minutely": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_monthly": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_quarterly": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_secondly": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_weekly": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_weekly_legacy": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Period",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq._period_code_map": {
  "data": {
   "shadows": "pandas.tseries.frequencies._period_code_map"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period_asfreq.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period_asfreq.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_period_asfreq.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_timedelta.NaTType": {
  "data": {
   "shadows": "pandas._libs.tslib.NaTType"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.setup_method": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_apply_to_timedelta": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_components": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_construction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "npdtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.offsets.Hour",
    "pandas.offsets.Second",
    "pandas.tests.scalar.test_timedelta.pytest",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_raises_regex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_contains": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.NaT",
    "pandas.offsets.Hour",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_conversion": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "numpy.timedelta64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_fields": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "check",
    "pandas.Timedelta",
    "pandas.tests.scalar.test_timedelta.pytest",
    "pandas.to_timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_fields.check": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_freq_conversion": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "float",
    "numpy.timedelta64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_full_format_converters": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "conv",
    "numpy.timedelta64",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_full_format_converters.conv": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_identity": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_implementation_limits": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "OverflowError",
    "isinstance",
    "numpy.iinfo",
    "numpy.int64",
    "pandas.Timedelta",
    "pandas.Timedelta.max",
    "pandas.Timedelta.min",
    "pandas._libs.tslib.NaTType",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_isoformat": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_nat_converters": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas._libs.tslib.iNaT",
    "pandas.to_timedelta",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_nat_converters.testit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "transform"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_numeric_conversions": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_ops_error_str": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timedelta",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_overflow": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.allclose",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_overflow_on_construction": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OverflowError",
    "pandas.Timedelta",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_pickle": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_repr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_round": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.tests.scalar.test_timedelta.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_short_format_converters": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "conv",
    "numpy.timedelta64",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.tests.scalar.test_timedelta.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_short_format_converters.conv": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_arithmetic": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_conversions": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_hash_equality": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "all",
    "datetime.timedelta",
    "hash",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_total_seconds_scalar": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Timedelta",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.ct": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timedelta.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.scalar.test_timestamp.AmbiguousTimeError": {
  "data": {
   "shadows": "pytz.exceptions.AmbiguousTimeError"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.NonExistentTimeError": {
  "data": {
   "shadows": "pytz.exceptions.NonExistentTimeError"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_DAY": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_DAY"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_HR": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_HR"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_MIN": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_MIN"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_MS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_MS"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_SEC": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_SEC"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.RESO_US": {
  "data": {
   "shadows": "pandas.tseries.frequencies.RESO_US"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_dti_slicing": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_frame_setitem_timestamp": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_box_timestamp": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_map_box_timestamps": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_map_box_timestamps.f": {
  "data": {
   "lineno": 1437
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_compare_with_early_datetime": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.min",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_date_out_of_range": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_equality": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_fields": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "getattr",
    "pandas.Timestamp",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_from_ordinal": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.Timestamp.fromordinal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_repr": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_dateutil": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_explicit_dateutil": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "pandas._libs.tslib._dateutil_gettz",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_windows_python_3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_explicit_pytz": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tests.scalar.test_timestamp.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_to_html_timestamp": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_woy_boundary": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_asm8": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.random.seed",
    "pandas.Timestamp",
    "pandas.Timestamp.max.value",
    "pandas.Timestamp.min.value"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_barely_oob_dts": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.Timestamp",
    "pandas.Timestamp.max",
    "pandas.Timestamp.min",
    "pandas.tests.scalar.test_timestamp.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_basics_nanos": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int64",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_bounds_with_different_units": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "numpy.datetime64",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "Exception",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.tests.scalar.test_timestamp.sys",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware_dateutil": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "Exception",
    "dateutil.tz.tzutc",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.tests.scalar.test_timestamp.sys",
    "pandas.util.testing._skip_if_no_dateutil",
    "pytz.utc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware_explicit_pytz": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "Exception",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.tests.scalar.test_timestamp.sys",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.utc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_dateutil": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "compare",
    "datetime.datetime.combine",
    "datetime.datetime.fromtimestamp",
    "datetime.datetime.now",
    "datetime.datetime.today",
    "datetime.datetime.utcfromtimestamp",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "dateutil.tz.tzutc",
    "pandas.Timestamp.combine",
    "pandas.Timestamp.fromtimestamp",
    "pandas.Timestamp.now",
    "pandas.Timestamp.today",
    "pandas.Timestamp.utcfromtimestamp",
    "pandas.Timestamp.utcnow",
    "pandas.tests.scalar.test_timestamp.calendar",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_dateutil.compare": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "int",
    "numpy.round",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_pytz": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "compare",
    "datetime.datetime.combine",
    "datetime.datetime.fromtimestamp",
    "datetime.datetime.now",
    "datetime.datetime.today",
    "datetime.datetime.utcfromtimestamp",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "pandas.Timestamp.combine",
    "pandas.Timestamp.fromtimestamp",
    "pandas.Timestamp.now",
    "pandas.Timestamp.today",
    "pandas.Timestamp.utcfromtimestamp",
    "pandas.Timestamp.utcnow",
    "pandas.tests.scalar.test_timestamp.calendar",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_pytz.compare": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "int",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_compare_invalid": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.long",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_comparison": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas._libs.tslib.pydt_to_i8",
    "pandas.tests.scalar.test_timestamp.calendar",
    "pandas.tests.scalar.test_timestamp.dateutil",
    "pandas.tests.scalar.test_timestamp.pytz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_fromordinal": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.Timestamp.fromordinal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_invalid": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_keyword": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_offset_depr": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "pandas.Timestamp",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_offset_depr_fromordinal": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.Timestamp.fromordinal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_positional": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_with_stringoffset": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datetime.datetime",
    "eval",
    "pandas.Timestamp",
    "pandas._libs.tslib.pydt_to_i8",
    "pandas.tests.scalar.test_timestamp.calendar",
    "pandas.tests.scalar.test_timestamp.dateutil",
    "pandas.tests.scalar.test_timestamp.pytz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_conversion": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.Timestamp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_delta_preserve_nanos": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Timestamp",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_fields": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "AttributeError",
    "check",
    "getattr",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_fields.check": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_frequency_misc": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.tseries.frequencies.FreqGroup.FR_HR",
    "pandas.tseries.frequencies.FreqGroup.FR_MIN",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_freq_group",
    "pandas.tseries.frequencies.get_standard_freq",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_hash_equivalent": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_is_leap_year": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_now": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime.now",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.Timestamp.now"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_pprint": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pprint"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_repr": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "eval",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round_misc": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "ValueError",
    "_check_round",
    "pandas.Timestamp",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round_misc._check_round": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_roundtrip": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_timestamp_compare_scalars": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "datetime.datetime",
    "getattr",
    "left_f",
    "numpy.datetime64",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.operator",
    "right_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_timestamp_compare_series": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "getattr",
    "left_f",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.scalar.test_timestamp.operator",
    "pandas.util.testing.assert_series_equal",
    "right_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_today": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime.today",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.Timestamp.today"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tseries.offsets.Nano"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_convert_roundtrip": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_ambiguous": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_errors_ambiguous": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pytz.exceptions.AmbiguousTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_nonexistent": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest",
    "pytz.exceptions.NonExistentTimeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_roundtrip": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timestamp",
    "pandas.tests.scalar.test_timestamp.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_unit": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "check",
    "pandas.Timestamp",
    "pandas.compat.PY3",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_unit.check": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_utc_z_designator": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas._libs.tslib.get_timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.to_datetime_depr": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.to_pydatetime_nonzero_nano": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "UserWarning",
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.assert_ns_timedelta": {
  "data": {
   "lineno": 1102
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.setup_method": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_nanosecond_string_parsing": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_nanosecond_timestamp": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.tseries.offsets.Nano",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ms_arithmetic": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ns_arithmetic": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ns_based_arithmetic": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_us_arithmetic": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_addition_subtraction_preserve_frequency": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_addition_subtraction_types": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.date_range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_resolution": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "pandas._libs.period.resolution",
    "pandas.date_range",
    "pandas.tseries.frequencies.RESO_DAY",
    "pandas.tseries.frequencies.RESO_HR",
    "pandas.tseries.frequencies.RESO_MIN",
    "pandas.tseries.frequencies.RESO_MS",
    "pandas.tseries.frequencies.RESO_SEC",
    "pandas.tseries.frequencies.RESO_US",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_timestamp_and_datetime": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_timestamp_and_series": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_1700": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_2000": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_2100": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_hour01": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_hour13": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_max_valid": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.Timestamp.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_min_valid": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.Timestamp.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_to_datetime_bijective": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Timestamp",
    "pandas.Timestamp.max.nanosecond",
    "pandas.Timestamp.max.to_pydatetime",
    "pandas.Timestamp.max.value",
    "pandas.Timestamp.min.nanosecond",
    "pandas.Timestamp.min.to_pydatetime",
    "pandas.Timestamp.min.value",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.get_timezone": {
  "data": {
   "shadows": "pandas._libs.tslib.get_timezone"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.gettz": {
  "data": {
   "shadows": "pandas._libs.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.period": {
  "data": {
   "shadows": "pandas._libs.period"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.timezone": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.tzutc": {
  "data": {
   "shadows": "dateutil.tz.tzutc"
  },
  "type": "import"
 },
 "pandas.tests.scalar.test_timestamp.utc": {
  "data": {
   "shadows": "pytz.utc"
  },
  "type": "import"
 },
 "pandas.tests.series": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.common": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "module"
 },
 "pandas.tests.series.common.TestData": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.common.TestData.empty": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.objSeries": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly",
    "pandas.util.testing.makeObjectSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.series": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util._decorators.cache_readonly",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.ts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.tests.series.common._ts",
    "pandas.util._decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common._ts": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pandas.tests.series.common.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tests.series.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_alter_axes.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.RangeIndex": {
  "data": {
   "shadows": "pandas.core.index.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "renamer",
    "renamer.index.name",
    "renamer.rename"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_by_series": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "renamer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_inplace": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "renamer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name_inplace": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reorder_levels": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index_level": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index_range": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.RangeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_index_makes_timeseries": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name_attribute": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_setindex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.tests.series.test_alter_axes.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.is_platform_windows",
    "pandas.core.nanops._USE_BOTTLENECK"
   ]
  },
  "type": "module"
 },
 "pandas.tests.series.test_analytics.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_error": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "TypeError",
    "itertools.product",
    "len",
    "list",
    "method",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_misc": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_n": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_nsmallest_nlargest": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "len",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.tests.series.test_analytics.s_main_dtypes",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_accum_op": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "func",
    "getattr",
    "numpy",
    "numpy.NaN",
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_stat_op": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ImportError",
    "pandas.core.nanops._USE_BOTTLENECK",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_stat_op.testit": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "alternate",
    "bottleneck.__version__",
    "distutils.version.LooseVersion",
    "f",
    "float",
    "getattr",
    "list",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.compat.lrange",
    "pandas.compat.signature",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any_params": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_apply_categorical": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "list",
    "numpy.object",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort_stable": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.argsort",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_built_in_round": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal",
    "round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "isinstance",
    "numpy.clip",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_against_series": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_types_and_nulls": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_with_datetimes": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_compress": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeSeries",
    "scipy.stats.pearsonr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr_rank": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.tests.series.test_analytics.scipy",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeSeries",
    "scipy.stats.kendalltau",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_count": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cov": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "numpy.maximum.accumulate",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_datetime64": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_timedelta64": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "getattr",
    "itertools.product",
    "len",
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummax": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.maximum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummin": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.minimum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "numpy.minimum.accumulate",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_datetime64": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_timedelta64": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumprod": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumsum": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_describe": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_dot": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.all",
    "numpy.dot",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_drop_duplicates": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_empty_timeseries_redections_return_nat": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmax": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmin": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_is_monotonic": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.date_range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_is_unique": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randint",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_i8": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_string_scalar": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_kurt": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ones",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_max": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mean": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_median": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int",
    "numpy.median",
    "numpy.ones",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_min": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mode": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.object",
    "numpy.typecodes",
    "numpy.uint64",
    "object",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_modulo": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.errstate",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_nansum_buglet": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.nansum",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_npdiff": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.diff",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmax": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.random.randint",
    "pandas.Series",
    "pandas._np_version_under1p10",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmin": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmin",
    "numpy.random.randint",
    "pandas.Series",
    "pandas._np_version_under1p10",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_compress": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.compress",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_repeat": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.repeat",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_reshape": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "numpy.reshape",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_round": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "numpy.round",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ops_consistency_on_empty": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "float",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_overflow": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.allclose",
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_overflow_with_bottleneck": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.allclose",
    "numpy.arange",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.tests.series.test_analytics.skip_if_bottleneck_on_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod_numpy16_bug": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ptp": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.float64",
    "numpy.nan",
    "numpy.ptp",
    "numpy.random.randn",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.isnull",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_repeat": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_2d_return_array": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "numpy.random.random",
    "numpy.reshape",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_bad_kwarg": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_deprecate": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.random",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_non_2d": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "numpy.random.random",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_round": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.round",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_list": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_scalar": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.intp",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_scalar": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_vector": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_sorter": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.intp",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sem": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.std",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_categorical": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "numpy.all",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_int": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "float",
    "int",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_skew": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing._skip_if_no_scipy",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_index_level": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.tests.series.test_analytics.skip_if_bottleneck_on_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_inf": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.config.option_context",
    "pandas.core.nanops.nansum",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_zero": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.nanops.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_timedelta64_analytics": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique_data_ownership": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unstack": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_not_ordered": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_ordered": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime_tz": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_nunique": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_period": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_var_std": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.std",
    "numpy.var",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.Timedelta": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.s_main_dtypes": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_analytics.pytest",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.skip_if_bottleneck_on_windows": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.tests.series.test_analytics.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_api.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.SharedWithSparse": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_api.SharedWithSparse._pickle_roundtrip": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.read_pickle",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_append_preserve_name": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_argsort_preserve_name": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_binop_maybe_preserve_name": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_combine_first_name": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_copy_index_name_checking": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.io.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_copy_name": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_getitem_preserve_name": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_pickle": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_scalarop_preserve_name": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_sort_index_name": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_to_sparse_pass_name": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.tests.series.test_api.SharedWithSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_axis_alias": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_contains": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_copy": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_empty_method": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_iter": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_iter_box": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_iteritems": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "hasattr",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_keys": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "getkeys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_ndarray_compat": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "list",
    "numpy.compress",
    "numpy.ones_like",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_ndarray_compat.f": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_not_hashable": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.Series",
    "pandas.tests.series.test_api.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_numpy_unique": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_raise_on_info": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.series.test_api.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_str_attribute": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.Series",
    "pandas.Series.str",
    "pandas.compat.range",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_tab_completion": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dir",
    "list",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_values": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_api.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.printing": {
  "data": {
   "shadows": "pandas.io.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_api.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_apply.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_agg_apply_evaluate_lambdas_the_same": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_demo": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_multiple_aggregators_with_dict_api": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_non_callable_aggregates": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_reduce": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_replicate_describe": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.errstate",
    "numpy.sqrt",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform_and_agg_error": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.series.test_apply.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform_and_agg_error.f": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_with_nested_series": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.exp",
    "numpy.sqrt",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_apply.math",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_args": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.Series",
    "str.split"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_box": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "list",
    "numpy.int64",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.Day",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz.f": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_dict_depr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_dont_convert_dtype": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_same_length_inference_bug": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_with_string_args": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap": {
  "data": {
   "lineno": 326
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_box": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_categorical": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.object",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.series.test_apply.pytest",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_compat": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_counter": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "collections.Counter",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.int64",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.Day",
    "pandas.tests.series.test_apply.pytest",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz.f": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_decimal": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "decimal.Decimal",
    "isinstance",
    "numpy.object_",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_defaultdict": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "collections.defaultdict",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "DictWithMissing",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing.DictWithMissing": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing.DictWithMissing.__missing__": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_without_missing": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "DictWithoutMissing",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_without_missing.DictWithoutMissing": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_with_tuple_keys": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_int": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "issubclass",
    "numpy.float_",
    "numpy.integer",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_na_exclusion": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_type_inference": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.where",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_asof.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_all_nans": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_basic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_errors": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.series.test_asof.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_periodindex": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.offsets.BDay",
    "pandas.period_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_scalar": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.BDay",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_with_nan": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_asof.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_asof.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_combine_concat.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.iteritems",
    "pandas.tests.series.test_combine_concat.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append_duplicates": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append_many": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "numpy.isfinite",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first_dt64": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "pandas.Series",
    "pandas.core.tools.datetimes.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "get_result_type",
    "map",
    "numpy.dtype",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.float_result_type": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.get_result_type": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "float_result_type",
    "int_result_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.int_result_type": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_update": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz_dateutil": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz_explicit_pytz": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.timezone": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.to_datetime": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_constructors.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_NaT_cast": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_NaT_scalar": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_auto_conversion": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_construction_consistency": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_construction_interval": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "pandas.IntervalIndex.from_breaks",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "id",
    "numpy.NaN",
    "numpy.arange",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.tests.series.test_constructors.pytest",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cant_cast_datetime64": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cast": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pandas.Series",
    "pandas.tests.series.test_constructors.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cast_object": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_categorical": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.tests.series.test_constructors.pytest",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_copy": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_corner": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_datelike_coercion": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_datetimes_with_nulls": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.array",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_default_index": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "create_data",
    "datetime.datetime.strptime",
    "numpy.datetime64",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index.create_data": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_multiindex": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "check",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_timedelta_index": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_datetime64": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.ndarray",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.lrange",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.tests.series.test_constructors.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_nocast": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "datetime.timedelta",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tests.series.test_constructors.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64.f": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_empty": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_generator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_generic_timestamp_deprecated": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_iterator": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_list_like": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_list_of_tuples": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_map": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "map",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_maskedarray": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "float",
    "int",
    "numpy.ma.masked_all",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_hashable": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.ones",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_unhashable": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "pandas.Series",
    "pandas.tests.series.test_constructors.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_pass_nan_nat": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_pass_none": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.object_",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_periodindex": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_sanitize": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_series": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_set": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "TypeError",
    "frozenset",
    "pandas.Series",
    "pandas.tests.series.test_constructors.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_subclass_dict": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.TestSubDict",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_tuple_of_tuples": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas.Series",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_with_datetime_tz": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "object",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.lib.infer_dtype",
    "pandas.concat",
    "pandas.core.dtypes.common.is_datetime64tz_dtype",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromDict": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "float",
    "numpy.float64",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.is_sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromValue": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "len",
    "numpy.NaN",
    "numpy.float_",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_invalid_dtype": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_ctor": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "all",
    "list",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tests.series.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_subclass_ctor": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "A",
    "all",
    "list",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tests.series.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_subclass_ctor.A": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.compat.OrderedDict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_scalar_conversion": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.Series",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_series_ctor_plus_datetimeindex": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_datetime_values.CombinedDatetimelikeProperties": {
  "data": {
   "shadows": "pandas.core.indexes.accessors.CombinedDatetimelikeProperties"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DatetimeProperties": {
  "data": {
   "shadows": "pandas.core.indexes.accessors.DatetimeProperties"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_between": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_date_tz": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_api": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Series.dt",
    "pandas.core.indexes.accessors.CombinedDatetimelikeProperties",
    "pandas.core.indexes.accessors.DatetimeProperties",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_no_new_attributes": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "compare",
    "get_dir",
    "getattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "object",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex._datetimelike_ops",
    "pandas.PeriodIndex",
    "pandas.PeriodIndex._datetimelike_ops",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.TimedeltaIndex._datetimelike_ops",
    "pandas.core.common.SettingWithCopyError",
    "pandas.date_range",
    "pandas.option_context",
    "pandas.period_range",
    "pandas.tests.series.test_datetime_values.pytest",
    "pandas.timedelta_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.compare": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "get_expected",
    "getattr",
    "pandas.core.dtypes.common.is_list_like",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.f": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_dir": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_expected": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.dtypes.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_strftime": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.object_",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_sub_of_datetime_from_TimeSeries": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.abs",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.tools.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_valid_dt_with_missing_values": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.time",
    "getattr",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.is_list_like": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.to_timedelta": {
  "data": {
   "shadows": "pandas.core.tools.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_dtypes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_arg_for_errors_in_astype": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.float64",
    "numpy.int8",
    "pandas.Series",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.series.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_nan_inf_int": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.int32",
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_object_int": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_object_int_fail": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.int64",
    "numpy.int8",
    "pandas.Series",
    "pandas.tests.series.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_datetimes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.lrange",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_dict_like": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "dtype_class",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_empty_constructor_equality": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dtype",
    "numpy.typecodes",
    "pandas.Series",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.tests.series.test_dtypes.warnings",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_generic_timestamp_deprecated": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "FutureWarning",
    "dtype",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_str_cast": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dtype",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.compat.text_type",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_str_map": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.str_",
    "pandas.Series",
    "pandas.compat.text_type",
    "pandas.tests.series.test_dtypes.pytest",
    "pandas.tests.series.test_dtypes.string",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_unicode": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "pandas.tests.series.test_dtypes.string",
    "pandas.tests.series.test_dtypes.sys",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands",
    "reload"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_complex": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_dtype": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_intercept_astype_object": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_series_to_categorical": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_indexing.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.IndexingError": {
  "data": {
   "shadows": "pandas.core.indexing.IndexingError"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.JOIN_TYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.tests.series.test_indexing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.TestData": {
  "data": {
   "shadows": "pandas.tests.series.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing": {
  "data": {
   "lineno": 2512,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.setup_method": {
  "data": {
   "lineno": 2517,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_dti_reset_index_round_trip": {
  "data": {
   "lineno": 2565,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.dtype",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_dti_snap": {
  "data": {
   "lineno": 2550,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_fancy_getitem": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "KeyError",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas._libs.lib.Timestamp",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_fancy_setitem": {
  "data": {
   "lineno": 2538,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_frame_datetime64_duplicated": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_series_set_value": {
  "data": {
   "lineno": 2581,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_slice_locs_indexerror": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_slicing_datetimes": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing": {
  "data": {
   "lineno": 2656,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.setup_method": {
  "data": {
   "lineno": 2658,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_nat_operations": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_round_nat": {
  "data": {
   "lineno": 2685,
   "symbols_in_volume": [
    "getattr",
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "round_method"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_set_none_nan": {
  "data": {
   "lineno": 2664,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.tests.series.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "_check_align",
    "pandas.tests.series.test_indexing.JOIN_TYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align._check_align": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "_check_align",
    "pandas.tests.series.test_indexing.JOIN_TYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method._check_align": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_multiindex": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_nocopy": {
  "data": {
   "lineno": 1861
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_same_index": {
  "data": {
   "lineno": 1890
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_setitem_corner": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_with_labels": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_indexing": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_setitem_with_labels": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_cast_on_putmask": {
  "data": {
   "lineno": 2193,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_datetime_indexing": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem.f": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_drop": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Float64Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get_nan": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get_set_boolean_different_order": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_ambiguous_keyerror": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.indexing.IndexingError",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty.f": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_object": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "object",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_box_float64": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_callable": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dataframe": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups_with_missing": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_fancy": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_generator": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_get": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_int64": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_median_slice_bug": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_negative_out_of_bounds": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "IndexError",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_out_of_bounds": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_regression": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_boolean_corner": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetime_tz_dateutil": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.tz.tzutc",
    "numpy.random.randn",
    "pandas.Series",
    "pandas._libs.tslib._dateutil_gettz",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetime_tz_pytz": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetimeindex": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_ellipsis": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.fix",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_integers": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_periodindex": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_bug": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_integers": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_unordered_dup": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.dtypes.common.is_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_head_tail": {
  "data": {
   "lineno": 2225,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iloc": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iloc_nonunique": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_int_indexing": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_boolean": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_corner": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_iterator": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_not_monotonic": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.series.test_indexing.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_setitem_integer_slice_keyerrors": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_broadcast": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.nan",
    "numpy.resize",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_inplace": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_multilevel_preserve_name": {
  "data": {
   "lineno": 2231,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.MultiIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_pop": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_preserveRefs": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.isnan",
    "numpy.may_share_memory",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_backfill": {
  "data": {
   "lineno": 2076
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.bool_",
    "numpy.object_",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool_pad": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_corner": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 2133,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_int": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.float_",
    "numpy.int_",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_like": {
  "data": {
   "lineno": 2116,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nan": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nearest": {
  "data": {
   "lineno": 2059,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.around",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_pad": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_series_add_nat": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.issubdtype",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_with_datetimes": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_select": {
  "data": {
   "lineno": 2183,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_set_value": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "numpy.isnan",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeIntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_ambiguous_keyerror": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_boolean": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_callable": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_dtypes": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_float_labels": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_na": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_other_callable": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_scalar_into_readonly_backing_data": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.zeros",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_slice_into_readonly_backing_data": {
  "data": {
   "lineno": 2257,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_with_tz": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_with_tz_dst": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setslice": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_can_reorder_not_uniquely_indexed": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float64": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.series.test_indexing.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set.f": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_floats2": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_timedelta_assignment": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_type_promote_putmask": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_type_promotion": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_underlying_data_conversion": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.set_option",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where.f": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_array_like": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_broadcast": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.nan",
    "numpy.resize",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_datetime": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_dups": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_inplace": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_invalid_input": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "ValueError",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_ndframe_align": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_numeric_with_string": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.Series",
    "pandas.core.dtypes.common.is_integer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid.f": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "list",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_timedelta": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.setup_method": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_constructor": {
  "data": {
   "lineno": 2281,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_duplicate_dates_indexing": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "KeyError",
    "datetime.datetime",
    "numpy.where",
    "pandas.Series",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_groupby_average_dup_values": {
  "data": {
   "lineno": 2367,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_index_dupes_contains": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_index_unique": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing": {
  "data": {
   "lineno": 2456,
   "symbols_in_volume": [
    "KeyError",
    "datetime.datetime",
    "dict",
    "len",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.tests.series.test_indexing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_over_size_cutoff": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "datetime.datetime.timedelta",
    "len",
    "list",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas._libs.index._SIZE_CUTOFF",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_unordered": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "compare",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.permutation",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.concat",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_unordered.compare": {
  "data": {
   "lineno": 2427,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_is_unique_monotonic": {
  "data": {
   "lineno": 2285
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_range_slice": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing._index": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.gettz": {
  "data": {
   "shadows": "pandas._libs.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.is_scalar": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_scalar"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.tz": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.tzutc": {
  "data": {
   "shadows": "dateutil.tz.tzutc"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.dtype",
    "numpy.nan",
    "pandas.Series",
    "pandas._libs.lib.NaT",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_no_arg_error": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.series.test_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "numpy.nan",
    "pandas.Series",
    "pandas._libs.lib.NaT",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_all_bool": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "FutureWarning",
    "bool",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_bool": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "FutureWarning",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_all_bool": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "bool",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_bool": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_io.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.TestSeriesIO": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO._pickle_roundtrip_name": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.read_pickle",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_pickle_preserve_name": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_timeseries_periodindex": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_dict": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "SubclassedFrame",
    "SubclassedSeries",
    "isinstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedFrame": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries._constructor_expanddim": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_from_csv": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datetime.datetime",
    "open",
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "pandas.tests.series.test_io.io",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_float_format": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_list_entries": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_path_is_none": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_unicode_index": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToList": {
  "data": {
   "lineno": 171
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesToList.test_tolist": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToList.test_tolist_np_float": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToList.test_tolist_np_int": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.Series",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToList.test_tolist_np_uint": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.Series",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.series.test_missing.scipy"
   ]
  },
  "type": "module"
 },
 "pandas.tests.series.test_missing.Akima1DInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.Akima1DInterpolator"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData": {
  "data": {
   "lineno": 703
  },
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_all_good": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_datetime64": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_bad_direction": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_before_ends": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_direction": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_forward": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_no_nans": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_to_ends": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_multiIndex": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_nonmono_raise": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_quad": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_scipy_basic": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing._is_scipy_ge_0190",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_timedelta64": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_unlimited": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.NaN",
    "numpy.arange",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_akima": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_missing._skip_if_no_akima",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_corners": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_from_derivatives": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_index_values": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "float",
    "numpy.interp",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sort",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_non_ts": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_pchip": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "numpy.sort",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_missing._skip_if_no_pchip",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_piecewise_polynomial": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_interpolate": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_irregular_index": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_str_index": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_no_order": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_series_interpolate_intraday": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "pandas.DateOffset",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_series_interpolate_method_values": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.tests.series.test_missing._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_error": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_extrapolate": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.skip_if_no_package"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_interpolation": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_smooth": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_bfill": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_fillna": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_dropna": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_fillna": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64tz_fillna_round_issue": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_empty": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_intervals": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.IntervalIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_no_nan": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_preserve_name": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_ffill": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_ffill_mixed_dtypes_without_missing_data": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_bug": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_downcast": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_inplace": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_int": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_invalid_method": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_nat": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_raise": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isnull": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isnull_for_inf": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pandas.Series",
    "pandas.option_context",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_notnull": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_pad_nan": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_pad_require_monotonicity": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_series_fillna_limit": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_series_pad_backfill_limit": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_sparse_series_fillna_limit": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_sparse_series_pad_backfill_limit": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta64_nan": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.range",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta_fillna": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datetime.timedelta",
    "int",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_valid": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "pandas.notnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing._is_scipy_ge_0190": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.series.test_missing._simple_ts": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing._skip_if_no_akima": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing._skip_if_no_pchip": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.series.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pchip_interpolate": {
  "data": {
   "shadows": "scipy.interpolate.pchip_interpolate"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_operators.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_arith_ops_df_compat": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_bool_ops_df_compat": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comp_ops_df_compat": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_different_length": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.series.test_operators.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_alignment": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_alignment_fill": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_basic": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy.random.randn",
    "op",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_invalid": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.series.test_operators.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_label_based": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_object_numeric_nas": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "f",
    "float",
    "getattr",
    "numpy.random.randn",
    "object",
    "op",
    "pandas.Series",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_operators_with_nas": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "bool",
    "f",
    "getattr",
    "numpy.nan",
    "object",
    "op",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_tuples": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "frozenset",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparisons": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.nanops.nangt",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_datetime64_with_index": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_div": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.array_equal",
    "numpy.errstate",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divide_decimal": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "decimal.Decimal",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divmod": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divmod.check": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "collections.Iterable",
    "divmod",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.errstate",
    "numpy.nan",
    "pandas.compat.zip",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_dti_tz_convert_to_utc": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_frame_radd_more": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_invert": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_more_na_comparisons": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_nat_comparisons": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_nat_comparisons_scalar": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "object",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ne": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_neg": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_object_comparisons": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_duplicate_index": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.makeFloatSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method.check": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "alt",
    "getattr",
    "op",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_almost_equal",
    "rop"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operator_series_comparison_zerorank": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "check",
    "check_comparators"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators._check_op": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.abs",
    "op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_check_op",
    "getattr",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check_comparators": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "_check_op",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_bitwise": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "list",
    "numpy.NaN",
    "numpy.int16",
    "numpy.int32",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.range",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "_check_fill",
    "equiv_op",
    "getattr",
    "numpy.arange",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.Series.div",
    "pandas.Series.rdiv",
    "pandas.compat.PY3",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal",
    "rop"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine._check_fill": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "len",
    "meth",
    "numpy.errstate",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_corner": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.isnan",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.Series",
    "pandas._np_version_under1p8",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.tests.series.test_operators.pytest",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal",
    "run_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike.run_ops": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "op",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_empty_int_corner": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_frame": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_na_handling": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "datetime.date",
    "decimal.Decimal",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "_check_op",
    "numpy.arange",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object._check_op": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "float",
    "op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_timedelta64": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "datetime.timedelta",
    "dict",
    "isinstance",
    "numpy.array",
    "numpy.int64",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_datetimelike_align": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_nat": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_return_dtypes_bool_op_costant": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_series_equal",
    "tester"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners.tester": {
  "data": {
   "lineno": 1437
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_comparison_scalars": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_frame_radd_bug": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_radd_more": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_sub_datetime_compat": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.tests.series.test_operators.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_sub_single_tz": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_conversions": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.nan",
    "numpy.object_",
    "numpy.timedelta64",
    "object",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "AssertionError",
    "datetime.timedelta",
    "itertools.product",
    "op",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal",
    "timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops.timedelta64": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "itertools.starmap",
    "numpy.timedelta64",
    "pandas.compat.zip",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_DateOffset": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "datetime.timedelta",
    "getattr",
    "op",
    "pandas.Series",
    "pandas.offsets",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.Second",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_integers": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "getattr",
    "numpy.int64",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.Timedelta",
    "pandas.date_range",
    "pandas.tests.series.test_operators.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_timedeltas": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta_series_ops": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedeltas_with_DateOffset": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "getattr",
    "numpy.timedelta64",
    "op",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.offsets",
    "pandas.offsets.Milli",
    "pandas.offsets.Minute",
    "pandas.offsets.Second",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.Timedelta": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.starmap": {
  "data": {
   "shadows": "itertools.starmap"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_period.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.setup_method": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_align_series": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.period_range",
    "pandas.tests.series.test_period._permute",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_auto_conversion": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list",
    "pandas.Period",
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_between": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_object": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_scalar": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_series": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.core.indexes.period.IncompatibleFrequency",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_dropna": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_fillna": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_getitem": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_intercept_astype_object": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_isnull": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_series_comparison_scalars": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_set_none_nan": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period._permute": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.period": {
  "data": {
   "shadows": "pandas.core.indexes.period"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_period.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_quantile.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_datetime_timedelta_quantiles": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_box": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_empty": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.percentile",
    "pandas._np_version_under1p9",
    "pandas.tests.series.test_quantile.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation_dtype": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.percentile",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.core.dtypes.common.is_integer",
    "pandas.tests.series.test_quantile.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation_np_lt_1p9": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "object",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.tests.series.test_quantile.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_multi": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "float",
    "numpy.percentile",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.indexes.datetimes.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nan": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nat": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.Timestamp": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.is_integer": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_rank.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.TestData": {
  "data": {
   "shadows": "pandas.tests.series.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.TestSeriesRank": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.permutation",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_categorical": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_dense_method": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_descending": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_inf": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.random.permutation",
    "pandas.Series",
    "pandas.tests.series.test_rank.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_int": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_methods_series": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "chr",
    "distutils.version.LooseVersion",
    "len",
    "numpy.concatenate",
    "numpy.random.randn",
    "numpy.random.shuffle",
    "ord",
    "pandas.Series",
    "pandas.tests.series.test_rank.scipy",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.skip_if_no_package",
    "range",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_object_bug": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_signature": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.series.test_rank.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_tie_methods": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_check",
    "object",
    "pandas.compat.product",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_tie_methods._check": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_rank.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_rank.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.fabs",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas._libs.lib.NaT",
    "pandas.isnull",
    "pandas.tests.series.test_replace.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.fabs",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_bool": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string_no_op": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_gh5319": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "check_replace",
    "numpy.arange",
    "object",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types.check_replace": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types_with_string": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_string_with_number": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_unicode_with_number": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_dict_with_bool_keys": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_empty_dictlike": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_single_list": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.series.test_replace.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_repr.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_bytestring_with_unicode": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bytes",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_latex_repr": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_multilevel_name_print": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.index.MultiIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_name_printing": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "numpy.NaN",
    "numpy.arange",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.randn",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_bool_fails": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_repr.sys",
    "pandas.util.testing.capture_stderr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_max_rows": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.option_context",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_name_iterable_indexable": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_should_return_str": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_tidy_repr": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_timeseries_repr_object_dtype": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "len",
    "numpy.random.randint",
    "numpy.random.randn",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.makeTimeSeries",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_sorting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.tests.series.test_sorting.pytest",
    "pandas.tests.series.test_sorting.random",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_inplace": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "list",
    "pandas.tests.series.test_sorting.random",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_intervals": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.IntervalIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_kind": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_multiindex": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_na_position": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_values": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.sort",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_sorting.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_values.f": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sortlevel_deprecated": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_sorting.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.series.test_sorting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_subclass": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_indexing_sliced": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_to_frame": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_addition": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.util.testing.SubclassedSparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_slice": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "pandas.util.testing.SubclassedSparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_to_frame": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "list",
    "numpy.int64",
    "pandas.SparseArray",
    "pandas.util.testing.SubclassedSparseDataFrame",
    "pandas.util.testing.SubclassedSparseSeries",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_subclass.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_subclass.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_timeseries.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.BMonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.BMonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.TestData": {
  "data": {
   "shadows": "pandas.tests.series.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.tests.series.common.TestData"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.Series",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.offsets.BMonthEnd",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_datetimeindex_empty_series": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_keep_index_name": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_normalize": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_resample_set_correct_freq": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_at_time": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_autocorr": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.isnan",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time_formats": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing._skip_if_has_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time_types": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.series.test_timeseries.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_contiguous_boolean_preserve_freq": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "pandas.date_range",
    "pandas.tests.series.test_timeseries.assert_range_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_diff": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.indexes.timedeltas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_empty_series_ops": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_first_last_valid": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_first_subset": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "len",
    "pandas.tests.series.test_timeseries._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_format_pre_1900_dates": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_from_M8_structured": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.Series.from_array",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_get_level_values_box": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_groupby_count_dateparseerror": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_last_subset": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "len",
    "pandas.tests.series.test_timeseries._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_min_max": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.random.permutation",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_min_max_series": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_mpl_compat_hack": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.newaxis",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pct_change": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pct_change_shift_over_nas": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pickle": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_promote_datetime_date": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_ctor_datetime64": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "numpy.issubdtype",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_map_box_timedelta": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_map_box_timedelta.f": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_repr_nat": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_setops_preserve_freq": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "list",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift2": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.date_range",
    "pandas.offsets.Hour",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift_dst": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_timeseries_coercion": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_csv_numpy_16_bug": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_datetime_unit": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas._libs.tslib.iNaT",
    "pandas.concat",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_period": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.core.indexes.period.period_range",
    "pandas.tests.series.test_timeseries._simple_ts",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_truncate": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_tshift": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_timeseries.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries._simple_ts": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries._skip_if_has_locale": {
  "data": {
   "shadows": "pandas.util.testing._skip_if_has_locale"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.assert_range_equal": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.offsets": {
  "data": {
   "shadows": "pandas.offsets"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.period_range": {
  "data": {
   "shadows": "pandas.core.indexes.period.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_validate": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_validate.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_validate.TestSeriesValidate": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object",
    "pandas.core.series.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_validate.TestSeriesValidate.test_validate_bool_args": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.series.test_validate.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_validate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_arithmetics": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.SparseArray"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._assert": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_bool_result": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_comparison_ops": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_logical_ops": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_numeric_ops": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.errstate",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_bool_array_logical": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_bool_same_index": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array_comparison": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array_different_kind": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_same_index": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_same_index_comparison": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_scalar": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_scalar_comparison": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_int_array": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_int_array_comparison": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_mixed_array_comparison": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_mixed_array_float_int": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic._assert": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic.test_alignment": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_arithmetics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_arithmetics.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_array.IntIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseArray"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.TestSparseArray": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.setup_method": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_astype": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_astype_all": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_bad_take": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "IndexError",
    "pandas.tests.sparse.test_array.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "_check_inplace_op",
    "_check_op",
    "getattr",
    "numpy.errstate",
    "numpy.nan",
    "numpy.random.randn",
    "op",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators._check_inplace_op": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "NotImplementedError",
    "op",
    "pandas.tests.sparse.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators._check_op": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "op",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_bool": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.asarray",
    "numpy.int32",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_bool_fill_value": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.bool",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_copy": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_dtype": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_float32": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_from_sparse": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_from_too_large_array": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_object_dtype": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "numpy.object",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_spindex_dtype": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas._libs.sparse.IntIndex",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_copy_shallow": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "_get_base"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_copy_shallow._get_base": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_fillna": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_fillna_overlap": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_generator_warnings": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "len",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_get_item": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.isnan",
    "pandas.tests.sparse.test_array.re",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getitem": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "_checkit",
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getitem._checkit": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getslice": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getslice_tuple": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.pytest",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_pickle": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "_check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_pickle._check_roundtrip": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_array_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_fill_value": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.bool",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item.setitem": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item.setslice": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_sparseseries_roundtrip": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.take",
    "pandas._np_version_under1p8",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_fill_value": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.take",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling_all_nan": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.pytest",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling_fill_value": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.tests.sparse.test_array.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_invalid_kwargs": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_negative": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.take",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_to_dense": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_values_asarray": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_cumsum": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_mean": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.array",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_mean": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.int64",
    "numpy.mean",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_sum": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.int64",
    "numpy.nan",
    "numpy.sum",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_sum": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_ufunc": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.nan",
    "numpy.sin",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_ufunc_args": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.nan",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_array._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_array.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_combine_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.setup_method": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_axis1": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_columns": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_fill_value": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_series": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_sparse_dense": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1_different_fill": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_different_fill": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_different_kind": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_sparse_dense": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.is_platform_32bit",
    "pandas.compat.is_platform_windows"
   ]
  },
  "type": "module"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting.test_sparse_frame": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting.test_sparse_repr_after_set": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.option_context",
    "pandas.util.testing.assert_sp_frame_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.dtype_format_for_platform": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.tests.sparse.test_format.use_32bit_repr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_bool": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.SparseSeries",
    "pandas.core.config.option_context",
    "pandas.tests.sparse.test_format.use_32bit_repr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_int": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.SparseSeries",
    "pandas.core.config.option_context",
    "pandas.tests.sparse.test_format.use_32bit_repr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_max_row": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_mi_max_row": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_format.is_platform_32bit": {
  "data": {
   "shadows": "pandas.compat.is_platform_32bit"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_format.use_32bit_repr": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_frame": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_frame.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.BlockIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.BlockIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.IntIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.SharedWithSparse": {
  "data": {
   "shadows": "pandas.tests.frame.test_api.SharedWithSparse"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseArray"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.tests.frame.test_api.SharedWithSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_all": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "check_func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_frame_ops": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_compare_to_dense",
    "enumerate",
    "getattr",
    "op",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.index",
    "pandas.core.sparse.frame.reindex",
    "pandas.core.sparse.frame.to_dense",
    "pandas.core.sparse.frame.xs",
    "pandas.tests.sparse.test_frame.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_frame_ops._compare_to_dense": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "op",
    "pandas.DataFrame",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.setup_method": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.bdate_range",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_append": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_apply": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "isinstance",
    "numpy.sqrt",
    "numpy.sum",
    "pandas.core.nanops.nansum",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_apply_nonuq": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "isinstance",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_applymap": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_array_interface": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_as_blocks": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_as_matrix": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_astype": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_astype_bool": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "bool",
    "numpy.bool",
    "numpy.int64",
    "pandas.SparseDataFrame",
    "pandas.core.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_combine_add": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_combine_first": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "pandas.SparseArray",
    "pandas._libs.sparse.IntIndex",
    "pandas.compat.iteritems",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_convert_index_once": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.lrange",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_dataframe": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_empty": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_from_series": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_nan_dataframe": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_ndarray": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_preserve_attr": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.SparseArray",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_copy": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_corr": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_count": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_delitem": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_dense_to_sparse": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas._libs.sparse.BlockIndex",
    "pandas._libs.sparse.IntIndex",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_density": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_describe": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.nan",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_dtypes": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fancy_index_misc": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fillna": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fillna_fill_value": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_getitem": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_getitem_overload": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_iloc": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_class_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_isin": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_isnotnull": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_isnull": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_join": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_nan_columnname": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_numpy_transpose": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "numpy.transpose",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_op_corners": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_pickle": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "_test_roundtrip",
    "pandas.DataFrame",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.core.sparse.frame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "_check_frame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex._check_frame": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.isnan",
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.columns",
    "pandas.core.sparse.frame.default_fill_value",
    "pandas.core.sparse.frame.fill_value",
    "pandas.core.sparse.frame.index",
    "pandas.core.sparse.frame.reindex",
    "pandas.core.sparse.frame.to_dense",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex_fill_value": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex_method": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_sp_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_rename": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_scalar_ops": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_columns": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.sparse.test_frame.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_index": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.sparse.test_frame.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_value": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Index",
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.set_value",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem._check_frame": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.__setitem__",
    "pandas.core.sparse.frame.default_fill_value",
    "pandas.core.sparse.frame.index",
    "pandas.core.sparse.frame.sp_values",
    "pandas.core.sparse.frame.sp_values.all",
    "pandas.core.sparse.frame.to_dense",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem_array": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem_corner": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shape": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shift": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shift._check": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pandas.core.sparse.frame.default_fill_value",
    "pandas.core.sparse.frame.shift",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_frame_fillna_limit": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_frame_pad_backfill_limit": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_pow_issue": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_fill": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_i": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_z": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_to_dense": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_stack_sparse_frame": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "Exception",
    "_check",
    "pandas.tests.sparse.test_frame.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_stack_sparse_frame._check": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "pandas.Panel.from_dict",
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.stack_sparse_frame",
    "pandas.core.sparse.frame.to_dense",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_str": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_take": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_to_dense": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_to_dense._check": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.to_dense",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_transpose": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_transpose._check": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "pandas.core.sparse.frame",
    "pandas.core.sparse.frame.T",
    "pandas.core.sparse.frame.T.T",
    "pandas.core.sparse.frame.T.T.to_dense",
    "pandas.core.sparse.frame.T.to_dense",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_type_coercion_at_construction": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.setup_method": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.bdate_range",
    "pandas.core.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_cumsum": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cumsum",
    "numpy.int64",
    "pandas.core.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_numpy_func_call": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "getattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic.test_comparison_op_scalar": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic.test_numeric_op_scalar": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.is_float": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.spf": {
  "data": {
   "shadows": "pandas.core.sparse.frame"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_frame.test_from_scipy_correct_ordering": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "numpy.arange",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.skip_if_no_package",
    "spmatrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_to_scipy": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "bool",
    "dict",
    "dtype",
    "float",
    "int",
    "len",
    "list",
    "numpy.arange",
    "numpy.dtype",
    "numpy.eye",
    "numpy.nan",
    "numpy.object_",
    "numpy.uint16",
    "object",
    "pandas.SparseDataFrame",
    "pandas.core.dtypes.common.is_bool_dtype",
    "pandas.core.dtypes.common.is_float",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.skip_if_no_package",
    "spmatrix",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_to_scipy_object": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "dict",
    "dtype",
    "list",
    "numpy.dtype",
    "numpy.eye",
    "numpy.nan",
    "object",
    "pandas.SparseDataFrame",
    "pandas.tests.sparse.test_frame.pytest",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.skip_if_no_package",
    "spmatrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_groupby": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.setup_method": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.test_aggfuncs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.test_first_last_nth": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_groupby.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.setup_method": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_basic_dtypes": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "object",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_indexing_multiple": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_indexing_single": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_series_indexing_multiple": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_series_indexing_single": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.assert_class_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_at": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_at_fill_value": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_getitem": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_getitem_fill_value": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iat": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iat_fill_value": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iloc": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "IndexError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.sparse.test_indexing.pytest",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iloc_slice": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc_index": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc_slice": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_reindex": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_take": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_take_fill_value": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.setup_method": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_at": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_at_fill_value": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_fill_value_reindex": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_get": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "numpy.isnan",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_ellipsis": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_fill_value": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_int_dtype": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_slice": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_slice_fill_value": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iat": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iat_fill_value": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "IndexError",
    "numpy.isnan",
    "pandas.tests.sparse.test_indexing.pytest",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_fill_value": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_slice": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_slice_fill_value": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "numpy.isnan",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_index": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bool",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_index_fill_value": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice_fill_value": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice_index_fill_value": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex_nearest": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.around",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_take": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_take_fill_value": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.tests_indexing_with_sparse": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.float64",
    "numpy.nan",
    "pandas.SparseArray",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_sp_array_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.setup_method": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitem_multi": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bool",
    "numpy.isnan",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitem_multi_tuple": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitems_slice_multi": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "bool",
    "pandas.SparseArray",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc_multi_tuple": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc_slice": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_reindex": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.sparse.test_indexing.pytest",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.tests.sparse.test_libsparse.TestSparseOperators",
    "pandas.tests.sparse.test_libsparse.check_ops",
    "pandas.tests.sparse.test_libsparse.g",
    "pandas.tests.sparse.test_libsparse.make_optestf",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.tests.sparse.test_libsparse.BlockIndex": {
  "data": {
   "shadows": "pandas.core.sparse.array.BlockIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.IntIndex": {
  "data": {
   "shadows": "pandas.core.sparse.array.IntIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.TEST_LENGTH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_block_internal": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_check_integrity": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.tests.sparse.test_libsparse.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_equals": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.core.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_make_block_boundary": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.int32",
    "numpy.ones",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_to_block_index": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "pandas.core.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_to_int_index": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_check_integrity": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.sparse.array.IntIndex",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_equals": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pandas.core.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_int_internal": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.IntIndex",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_block_index": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_check_case",
    "pandas.tests.sparse.test_libsparse.check_cases"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_block_index._check_case": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.tests.sparse.test_libsparse.TEST_LENGTH"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_int_index": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "pandas.core.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_block_internal": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_int_internal": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.IntIndex",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array._make_index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_array": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_basics": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "_check",
    "pandas.core.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_basics._check": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_check_case",
    "pandas.compat.is_platform_windows",
    "pandas.tests.sparse.test_libsparse.check_cases",
    "pandas.tests.sparse.test_libsparse.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_case": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "_check_correct",
    "_check_length_exc",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.tests.sparse.test_libsparse.TEST_LENGTH"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_correct": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_length_exc": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.sparse.test_libsparse.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect_empty": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect_identical": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_index_make_union": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_index_make_union._check_case": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.core.sparse.array.IntIndex",
    "pandas.tests.sparse.test_libsparse.TEST_LENGTH",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_intindex_make_union": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int32",
    "pandas.core.sparse.array.IntIndex",
    "pandas.tests.sparse.test_libsparse.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators._op_tests": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "_check_case",
    "pandas.tests.sparse.test_libsparse.check_cases"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators._op_tests._check_case": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.core.sparse.array.BlockIndex",
    "pandas.tests.sparse.test_libsparse.TEST_LENGTH",
    "pandas.util.testing.assert_numpy_array_equal",
    "python_op",
    "sparse_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse._make_index": {
  "data": {
   "shadows": "pandas.core.sparse.array._make_index"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.check_cases": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_check_case",
    "_check_case_dict",
    "pandas.tests.sparse.test_libsparse.delete_blocks",
    "pandas.tests.sparse.test_libsparse.no_intersect",
    "pandas.tests.sparse.test_libsparse.plain_case",
    "pandas.tests.sparse.test_libsparse.skip_block",
    "pandas.tests.sparse.test_libsparse.split_blocks"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.check_cases._check_case_dict": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.check_ops": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.delete_blocks": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.g": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.make_optestf": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.make_optestf.f": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "getattr",
    "pandas._libs.sparse",
    "pandas.tests.sparse.test_libsparse.operator",
    "python_op",
    "sparse_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.no_intersect": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.plain_case": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.skip_block": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.splib": {
  "data": {
   "shadows": "pandas._libs.sparse"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_libsparse.split_blocks": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.sparse.test_libsparse.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_list.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseArray"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list.SparseList": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseList"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list.TestSparseList": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_list.TestSparseList.setup_method": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_append_na": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseArray",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_append_zero": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseArray",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_consolidate": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseArray",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_constructor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_list_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_copy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseArray",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_deprecation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_getitem": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas.compat.range",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_len": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas.core.sparse.api.SparseList",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_list.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_list.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_pivot": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.setup_method": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.test_pivot_table": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.test_pivot_table_multi": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_pivot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_pivot.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.sparse.test_series.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.BlockIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.BlockIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.IntIndex": {
  "data": {
   "shadows": "pandas._libs.sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.SharedWithSparse": {
  "data": {
   "shadows": "pandas.tests.series.test_api.SharedWithSparse"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.SparseSeries": {
  "data": {
   "shadows": "pandas.core.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.setup_method": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.test_round_trip_preserve_multiindex_names": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.test_to_sparse_preserve_multiindex_names_columns": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.tests.series.test_api.SharedWithSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries._check_all": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "check_func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.setup_method": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "pandas.bdate_range",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.tests.sparse.test_series._test_data1",
    "pandas.tests.sparse.test_series._test_data1_zero",
    "pandas.tests.sparse.test_series._test_data2",
    "pandas.tests.sparse.test_series._test_data2_zero"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_abs": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_astype": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_astype_all": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.Series",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_binary_operators": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "_check_inplace_op",
    "getattr",
    "op",
    "pandas.tests.sparse.test_series.operator",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_binary_operators._check_inplace_op": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "iop",
    "op",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_combine_first": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_construct_DataFrame_with_sp_series": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_check_const",
    "isinstance",
    "len",
    "numpy.isnan",
    "numpy.ones",
    "pandas._libs.sparse.BlockIndex",
    "pandas._libs.sparse.IntIndex",
    "pandas.bdate_range",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor._check_const": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_dtype": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_empty": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_ndarray": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_nonnan": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_preserve_attr": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.SparseArray",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_scalar": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.common.isnull",
    "pandas.core.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_copy_astype": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_dense_to_sparse": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_dropna": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.SparseArray",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fill_value_corner": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.isinf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fillna": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_get_get_value": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "Exception",
    "_check_getitem",
    "len",
    "pandas.tests.sparse.test_series.pytest",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem._check_getitem": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem_slice": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_groupby": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_homogenize": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "TypeError",
    "_check_matches",
    "numpy.arange",
    "pandas._libs.sparse.BlockIndex",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.frame.homogenize",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_homogenize._check_matches": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "enumerate",
    "numpy.nan",
    "pandas.compat.iteritems",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.core.sparse.frame.homogenize"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_iter": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_iteration_and_str": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_kind": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_numpy_take": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.take",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators._check_op": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "isinstance",
    "op",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators.check": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "_check_op",
    "pandas.tests.sparse.test_series.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_pickle": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "_compare_all",
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions._compare_all": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "_compare_with_dense",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions._compare_with_dense": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "getattr",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reindex": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "_compare_with_series",
    "list",
    "numpy.arange",
    "numpy.repeat",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reindex._compare_with_series": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_repr": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_series_density": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_set_value": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_setitem": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_setslice": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shape": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.bdate_range",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.tests.sparse.test_series._dense_series_compare",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_dtype": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_dtype_fill_value": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_nan": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "TypeError",
    "_check_all",
    "numpy.arange",
    "numpy.nan",
    "pandas._libs.sparse.IntIndex",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check_all": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "_check_with_fill_value",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check_with_fill_value": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "_check",
    "numpy.nan",
    "pandas._libs.sparse.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_to_dense": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.isfinite",
    "pandas.Series",
    "pandas.tests.sparse.test_series._test_data1",
    "pandas.tests.sparse.test_series._test_data1_zero",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.nan",
    "numpy.ones",
    "numpy.repeat",
    "pandas.Series",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.tests.sparse.test_series.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take._compare_with_dense": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "_compare"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take._compare_with_dense._compare": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_dense_fill_value": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_dense_preserve_name": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_frame": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_truncate": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.setup_method": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseSeries",
    "pandas.tests.sparse.test_series._test_data1",
    "pandas.tests.sparse.test_series._test_data1_zero"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_cumsum": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cumsum",
    "numpy.int64",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_numpy_func_call": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "getattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction._check_results_to_coo": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction._run_test": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.setup_method": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.reshape.util.cartesian_product",
    "pandas.util.testing._skip_if_no_scipy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1_different_fill": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_different_fill": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_different_kind": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_sparse_dense": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_dense_index": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "check",
    "pandas.core.sparse.api.SparseSeries.from_coo",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_long_repr": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "pandas.core.sparse.api.SparseSeries.from_coo",
    "pandas.util.testing._skip_if_no_scipy",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_nodense_index": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "check",
    "check.dropna",
    "pandas.core.sparse.api.SparseSeries.from_coo",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_isnotnull": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_isnull": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_ilevel": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_nonnull_intersection": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_small_union": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_duplicate_index_entries": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "ValueError",
    "pandas.concat",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_integer_names_integer_row_levels_nosort": {
  "data": {
   "lineno": 1026
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_nlevels_less_than_two": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.tests.sparse.test_series.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_nosort": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_sort": {
  "data": {
   "lineno": 1010
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort_col_level_single": {
  "data": {
   "lineno": 1018
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts_dup": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts_int": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series._dense_series_compare": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "pandas.core.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data1": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data1_zero": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.tests.sparse.test_series._test_data1"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data2_zero": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.tests.sparse.test_series._test_data2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.sparse.test_series.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.cartesian_product": {
  "data": {
   "shadows": "pandas.core.reshape.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.spf": {
  "data": {
   "shadows": "pandas.core.sparse.frame"
  },
  "type": "import"
 },
 "pandas.tests.sparse.test_series.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_algos": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_algos.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.GroupVarTestMixin": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_constant": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.nan.astype",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.squeeze",
    "numpy.tile",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d_flat_labels": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_all_finite": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.tile",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_some_nan": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.tile",
    "numpy.vstack",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.TestDuplicated": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestDuplicated.test_datetime_likes": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "object",
    "pandas.Index",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.algorithms.duplicated",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_duplicated_with_nas": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.empty",
    "numpy.nan",
    "object",
    "pandas.core.algorithms.duplicated",
    "pandas.util.testing.assert_numpy_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_numeric_object_likes": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.uint64",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.algorithms.duplicated",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_unique_index": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_unique_tuples": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object",
    "pandas.tests.test_algos.pytest",
    "pandas.unique",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestFactorize.test_basic": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.intp",
    "object",
    "pandas.compat.range",
    "pandas.core.algorithms.factorize",
    "pandas.util.testing.assert_numpy_array_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_complex_sorting": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "numpy.array",
    "object",
    "pandas._np_version_under1p11",
    "pandas.compat.range",
    "pandas.core.algorithms.factorize",
    "pandas.tests.test_algos.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_datelike": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.DatetimeIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.algorithms.factorize",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_factorize_nan": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas._libs.hashtable.Factorizer",
    "pandas.isnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_mixed": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.intp",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.algorithms.factorize",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_uint64_factorize": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "numpy.uint64",
    "object",
    "pandas.core.algorithms.factorize",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestGroupVarFloat32": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas._libs.groupby.group_var_float32",
    "pandas.tests.test_algos.GroupVarTestMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas._libs.groupby.group_var_float64",
    "pandas.tests.test_algos.GroupVarTestMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64.test_group_var_large_inputs": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestHashTable.test_get_unique": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_lookup_nan": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "pandas._libs.hashtable.Float64HashTable",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_lookup_overflow": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.uint64",
    "pandas._libs.hashtable.UInt64HashTable",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_vector_resize": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "_test_vector_resize",
    "pandas._libs.hashtable.Float64HashTable",
    "pandas._libs.hashtable.Float64Vector",
    "pandas._libs.hashtable.Int64HashTable",
    "pandas._libs.hashtable.Int64Vector",
    "pandas._libs.hashtable.ObjectVector",
    "pandas._libs.hashtable.PyObjectHashTable",
    "pandas._libs.hashtable.StringHashTable",
    "pandas._libs.hashtable.UInt64HashTable",
    "pandas._libs.hashtable.UInt64Vector",
    "tbl",
    "vect"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_vector_resize._test_vector_resize": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestIsin.test_basic": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.core.algorithms.isin",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_i8": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.algorithms.isin",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_invalid": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.algorithms.isin",
    "pandas.tests.test_algos.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_large": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "pandas.core.algorithms.isin",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestMatch.test_ints": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.algorithms.match",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch.test_strings": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.algorithms.match",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestMode.test_categorical": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_datelike_mode": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_index": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "numpy.int64",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_mixed_dtype": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_mode_single": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.object",
    "numpy.typecodes",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_no_mode": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_number_mode": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "numpy.typecodes",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_strobj_mode": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_timedelta_mode": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_uint64_overflow": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "numpy.uint64",
    "pandas.Series",
    "pandas.core.algorithms.mode",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestRank.test_basic": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.typecodes",
    "pandas.Series",
    "pandas.core.algorithms.rank",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_scipy_compat": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "_check",
    "numpy.array",
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_scipy_compat._check": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "pandas._libs.algos.rank_1d_float64",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_too_many_ndims": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.core.algorithms.rank",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_uint64_overflow": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.uint64",
    "pandas.Series",
    "pandas.core.algorithms.rank",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestSafeSort": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestSafeSort.test_basic_sort": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.core.algorithms.safe_sort",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestSafeSort.test_exceptions": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.algorithms.safe_sort",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestSafeSort.test_labels": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "pandas.core.algorithms.safe_sort",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestSafeSort.test_mixed_integer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.intp",
    "object",
    "pandas.core.algorithms.safe_sort",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestSafeSort.test_unsortable": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "datetime.datetime.now",
    "numpy.array",
    "object",
    "pandas._np_version_under1p10",
    "pandas.compat.PY2",
    "pandas.core.algorithms.safe_sort",
    "pandas.tests.test_algos.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_backfill": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.algos.backfill_int64",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_combineFunc": {
  "data": {
   "lineno": 1205
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_groupby": {
  "data": {
   "lineno": 1214
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_groupby_withnull": {
  "data": {
   "lineno": 1217
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_isnull": {
  "data": {
   "lineno": 1211
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_pad": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.algos.pad_int64",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_reindex": {
  "data": {
   "lineno": 1208
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestUnique.test_categorical": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.core.algorithms.unique",
    "pandas.unique",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_datetime64_dtype_array_returned": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.core.algorithms.unique",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_datetime64tz_aware": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.unique",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_ints": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randint",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_nan_in_object_array": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.unique",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_object_refcount_bug": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_objects": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randint",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_on_index_object": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.MultiIndex.from_arrays",
    "pandas.unique",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_order_of_appearance": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "object",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.unique",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_timedelta64_dtype_array_returned": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.core.algorithms.unique",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_uint64_overflow": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64",
    "pandas.Series",
    "pandas.core.algorithms.unique",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_nans": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_zeroes": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_dropna": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.is_platform_32bit",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.IntervalIndex.from_breaks",
    "pandas.Series",
    "pandas.core.algorithms.value_counts",
    "pandas.core.reshape.tile.cut",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_bins": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.IntervalIndex.from_tuples",
    "pandas.Series",
    "pandas.core.algorithms.value_counts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_datetime_outofbounds": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_dtypes": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.Series",
    "pandas.core.algorithms.value_counts",
    "pandas.tests.test_algos.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_nat": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "len",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.algorithms.value_counts",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_normalized": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "numpy.object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_uint64": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint64",
    "object",
    "pandas.Series",
    "pandas.compat.is_platform_32bit",
    "pandas.core.algorithms.value_counts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.cut": {
  "data": {
   "shadows": "pandas.core.reshape.tile.cut"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.hashtable": {
  "data": {
   "shadows": "pandas._libs.hashtable"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.libalgos": {
  "data": {
   "shadows": "pandas._libs.algos"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.libgroupby": {
  "data": {
   "shadows": "pandas._libs.groupby"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.test_arrmap": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "pandas._libs.algos.arrmap_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_ensure_platform_int": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.intp",
    "pandas._libs.algos.ensure_platform_int"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_groupsort_indexer": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.int64",
    "numpy.lexsort",
    "numpy.random.randint",
    "pandas._libs.algos.groupsort_indexer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_infinity_sort": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "all",
    "float",
    "itertools.permutations",
    "numpy.array",
    "pandas._libs.algos.Infinity",
    "pandas._libs.algos.NegInfinity",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_int64_add_overflow": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "AssertionError",
    "OverflowError",
    "RuntimeWarning",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.algorithms.checked_add_with_arr",
    "pandas.tests.test_algos.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_is_lexsorted": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "numpy.array",
    "pandas._libs.algos.is_lexsorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_pad_backfill_object_segfault": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas._libs.algos.backfill_object",
    "pandas._libs.algos.pad_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_quantile": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.algorithms.quantile",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_unique_label_indices": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.unique",
    "pandas._libs.hashtable.unique_label_indices",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.unique_label_indices": {
  "data": {
   "shadows": "pandas._libs.hashtable.unique_label_indices"
  },
  "type": "import"
 },
 "pandas.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_base.CheckImmutable": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_base.re"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.CheckImmutable.check_mutable_error": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.check_result": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delitem": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delslice": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setitem": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setslice": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_slicing_maintains_type": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.CheckStringMixin.test_string_methods_dont_fail": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bytes",
    "pandas.compat.PY3",
    "repr",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin.test_tricky_container": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "pandas.compat.PY3",
    "pandas.tests.test_base.pytest",
    "repr",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_base.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.DatetimeIndexOpsMixin": {
  "data": {
   "shadows": "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Interval": {
  "data": {
   "shadows": "pandas.Interval"
  },
  "type": "import"
 },
 "pandas.tests.test_base.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Ops": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.Ops._allow_na_ops": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.check_ops_properties": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "filter",
    "getattr",
    "isinstance",
    "issubclass",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
    "pandas.tests.test_base.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.setup_method": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.makeBoolIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.test_binary_ops_docs": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.PandasDelegate": {
  "data": {
   "shadows": "pandas.core.base.PandasDelegate"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_base.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_base.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_base.TestIndexOps": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestIndexOps.setup_method": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pandas.tests.test_base.TestIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_drop_duplicates_series_vs_dataframe": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_duplicated_drop_duplicates_index": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_factorize": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_factorize_repeated": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.intp",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_fillna": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "list",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_memory_usage": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "pandas.Series",
    "pandas.core.dtypes.common.is_object_dtype",
    "pandas.tests.test_base.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_nanops": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "datetime.datetime",
    "getattr",
    "klass",
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ndarray_compat_properties": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "len",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_none_comparison": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ops": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "pandas.Period",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_searchsorted": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.searchsorted",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_validate_bool_args": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_bins": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "klass",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.Interval",
    "pandas.IntervalIndex.from_breaks",
    "pandas.Series",
    "pandas.tests.test_base.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_datetime64": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "klass",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.compat.StringIO",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.isnull",
    "pandas.read_fwf",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_inferred": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "numpy.object_",
    "numpy.unique",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_unique_nunique": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "len",
    "numpy.repeat",
    "numpy.unique",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_unique_nunique_null": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "len",
    "list",
    "numpy.bool",
    "numpy.nan",
    "numpy.zeros",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas._libs.tslib.iNaT",
    "pandas.core.dtypes.common.is_datetimetz",
    "pandas.core.dtypes.common.needs_i8_conversion",
    "pandas.isnull",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "AttributeError",
    "T",
    "dir",
    "getattr",
    "hasattr",
    "pandas.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.T": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "pandas.core.base.NoNewAttributesMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.f": {
  "data": {
   "lineno": 1027
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegate": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.core.base.PandasDelegate"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegate.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator._get_foo": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator._set_foo": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator.bar": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.setup_method": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.f": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_memory_usage": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.tests.test_base.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestTranspose.test_numpy_transpose": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.transpose",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose_non_default_axes": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_base.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.test_base.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.tests.test_base.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_base.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.dtypes.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_base.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_base.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_categorical.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.CategoricalAccessor": {
  "data": {
   "shadows": "pandas.core.categorical.CategoricalAccessor"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.CategoricalDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Interval": {
  "data": {
   "shadows": "pandas.Interval"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.IntervalIndex": {
  "data": {
   "shadows": "pandas.IntervalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Properties": {
  "data": {
   "shadows": "pandas.core.indexes.accessors.Properties"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.StringMethods": {
  "data": {
   "shadows": "pandas.core.strings.StringMethods"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.TestCategorical": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategorical.setup_method": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories.f": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_argsort": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_big_print": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments.f": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_none": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable.f": {
  "data": {
   "lineno": 1146
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparison_with_unknown_scalars": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "len",
    "list",
    "numpy.__version__",
    "numpy.array",
    "numpy.asarray",
    "numpy.random.permutation",
    "numpy.repeat",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons.f": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_construction_with_ordered": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor.f": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_datetimetz": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_period": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_timedelta": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_interval": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Interval",
    "pandas.IntervalIndex.from_intervals",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_invariant": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_unsortable": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "numpy.array",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_datetimelike": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int8",
    "pandas.Categorical",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_generator": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.util.testing.assert_categorical_equal",
    "xrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_index": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_null": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_datetime_categorical_comparison": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_from_array": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Categorical.from_array",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_labels": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_describe": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_empty_print": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.random",
    "numpy.random.choice",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes.f": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.int8",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem_category_type": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem_listlike": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_is_equal_dtype": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_isnull": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_map": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.int64",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_memory_usage": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "abs",
    "pandas.Categorical",
    "pandas.tests.test_categorical.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_min_max": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_mode": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_na_flags_int_categories": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Categorical",
    "pandas.compat.lrange",
    "pandas.isnull",
    "pandas.util.testing.assert_numpy_array_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nan_handling": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nbytes": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_numpy_argsort": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_ordered_api": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_periodindex": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "pandas.Categorical",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print_none_width": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reflected_comparison_with_scalars": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories.f": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_unused_categories": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.int8",
    "numpy.nan",
    "numpy.random.choice",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories.f": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_searchsorted": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.array",
    "numpy.intp",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_item_nan": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_ordered": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.Categorical",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem_listlike": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_shift": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_slicing_directly": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values_na_position": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_tab_complete_warning": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "IPython.core.completer.provisionalcompleter",
    "list",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unicode_print": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "_rep",
    "pandas.Categorical",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique_index_series": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique_ordered": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_validate_inplace": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_validate_ordered": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.setup_method": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops": {
  "data": {
   "lineno": 3333,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops.f": {
  "data": {
   "lineno": 3641
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assignment_to_dataframe": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.random.randint",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.cut",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_categorical": {
  "data": {
   "lineno": 4193,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.array",
    "pandas.Categorical",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other": {
  "data": {
   "lineno": 4147,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cmp",
    "int",
    "invalid",
    "numpy.array",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.core.dtypes.dtypes.CategoricalDtype",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "valid"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other.cmp": {
  "data": {
   "lineno": 4164,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.unique",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_basic": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "len",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_api": {
  "data": {
   "lineno": 4264,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "invalid",
    "invalid.cat",
    "isinstance",
    "list",
    "pandas.Series",
    "pandas.Series.cat",
    "pandas.core.categorical.CategoricalAccessor",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_no_new_attributes": {
  "data": {
   "lineno": 4277,
   "symbols_in_volume": [
    "AttributeError",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_equality": {
  "data": {
   "lineno": 3783,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition": {
  "data": {
   "lineno": 4249,
   "symbols_in_volume": [
    "get_dir",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition.get_dir": {
  "data": {
   "lineno": 4256,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_frame": {
  "data": {
   "lineno": 2761,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_preserver": {
  "data": {
   "lineno": 3951,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.arange",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime_ordered": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_ordered": {
  "data": {
   "lineno": 2617,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period_ordered": {
  "data": {
   "lineno": 2715,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta": {
  "data": {
   "lineno": 2729,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta_ordered": {
  "data": {
   "lineno": 2745,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime_ordered": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_ordered": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period_ordered": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta_ordered": {
  "data": {
   "lineno": 2349,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr": {
  "data": {
   "lineno": 2382,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime_ordered": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_ordered": {
  "data": {
   "lineno": 2408,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period_ordered": {
  "data": {
   "lineno": 2518,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta": {
  "data": {
   "lineno": 2544,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta_ordered": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_codes_dtypes": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_compare_different_lengths": {
  "data": {
   "lineno": 3865,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Categorical",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons": {
  "data": {
   "lineno": 3692,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons.f": {
  "data": {
   "lineno": 3759
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_append": {
  "data": {
   "lineno": 3872,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_append_gh7864": {
  "data": {
   "lineno": 3896,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_categorical": {
  "data": {
   "lineno": 4441,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_preserve": {
  "data": {
   "lineno": 3920,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_frame": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_series": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_count": {
  "data": {
   "lineno": 3058,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_creation_astype": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_describe": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "len",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dt_accessor_api_for_categorical": {
  "data": {
   "lineno": 4360,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "dir",
    "get_ops",
    "getattr",
    "hasattr",
    "invalid",
    "invalid.dt",
    "isinstance",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.core.indexes.accessors.Properties",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dtypes": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.all",
    "numpy.max",
    "numpy.nan",
    "numpy.sum",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby.f": {
  "data": {
   "lineno": 2989
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby_sort": {
  "data": {
   "lineno": 2792,
   "symbols_in_volume": [
    "float",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_info": {
  "data": {
   "lineno": 2777,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_merge": {
  "data": {
   "lineno": 3972,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_min_max": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_mode": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions": {
  "data": {
   "lineno": 4073,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions.f": {
  "data": {
   "lineno": 4092
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_nan_handling": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int8",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numeric_like_ops": {
  "data": {
   "lineno": 4222,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "numpy.log",
    "numpy.sum",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_repeat": {
  "data": {
   "lineno": 4030,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_reshape": {
  "data": {
   "lineno": 4063,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.reshape",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_pivot_table": {
  "data": {
   "lineno": 3040,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reindex": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repeat": {
  "data": {
   "lineno": 4023,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repr": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reshape": {
  "data": {
   "lineno": 4038,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reshaping": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sequence_like": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "numpy.arange",
    "numpy.array",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations.f": {
  "data": {
   "lineno": 2016
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_functions_no_warnings": {
  "data": {
   "lineno": 2022,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.cut",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sideeffects_free": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing": {
  "data": {
   "lineno": 3140,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Interval",
    "pandas.Series",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "reversed",
    "reversed.__array__"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_and_getting_ops": {
  "data": {
   "lineno": 3163,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.core.dtypes.common.is_categorical_dtype",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_doc_examples": {
  "data": {
   "lineno": 3302,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sort_values": {
  "data": {
   "lineno": 3065,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "numpy.array",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_str_accessor_api_for_categorical": {
  "data": {
   "lineno": 4284,
   "symbols_in_volume": [
    "AttributeError",
    "dir",
    "getattr",
    "hasattr",
    "invalid",
    "invalid.str",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.strings.StringMethods",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_to_records": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "list",
    "numpy.rec.array",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_unordered_different_categories_raises": {
  "data": {
   "lineno": 3858,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Categorical",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_unordered_different_order_equal": {
  "data": {
   "lineno": 3835,
   "symbols_in_volume": [
    "ctor",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.tests.test_categorical.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts_with_nan": {
  "data": {
   "lineno": 2884,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing": {
  "data": {
   "lineno": 4461,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_constructor": {
  "data": {
   "lineno": 4463,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Categorical",
    "pandas.util.testing.SubclassedCategorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_from_array": {
  "data": {
   "lineno": 4468,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Categorical.from_codes",
    "pandas.util.testing.SubclassedCategorical",
    "pandas.util.testing.SubclassedCategorical.from_codes",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_map": {
  "data": {
   "lineno": 4474,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Categorical",
    "pandas.util.testing.SubclassedCategorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.provisionalcompleter": {
  "data": {
   "shadows": "IPython.core.completer.provisionalcompleter"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_common.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_common.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_common.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_common.npr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_common.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_common.test_all_not_none": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pandas.core.common._all_not_none"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_any_none": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.core.common._any_none"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_dict_compat": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Timestamp",
    "pandas.core.common._dict_compat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_difference": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.core.common.difference",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "functools.partial",
    "getname",
    "pandas.core.common._get_callable_name",
    "somecall"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.fn": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall.__call__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_groupby": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.core.common.groupby"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_intersection": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.core.common.intersection",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_iterpairs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "list",
    "pandas.core.common.iterpairs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_map_indices_py": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.core.common.map_indices_py"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_maybe_match_name": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.common._maybe_match_name"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_mut_exclusive": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common._mut_exclusive",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_random_state": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random",
    "numpy.random.RandomState",
    "pandas.core.common._random_state",
    "pandas.tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_bin",
    "int",
    "len",
    "list",
    "pandas.compat.lmap",
    "pandas.compat.range",
    "test_locs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges._bin": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.compat.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges.test_locs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.core.common.split_ranges",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_union": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.core.common.union",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_compat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_compat.TestBuiltinIterators": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.check_result": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "list",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_dict_iterators": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.compat.iterkeys",
    "pandas.compat.itervalues",
    "pandas.compat.next"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_filter": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.filter",
    "pandas.compat.builtins.range",
    "pandas.compat.filter",
    "pandas.compat.lfilter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_map": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.map",
    "pandas.compat.builtins.range",
    "pandas.compat.lmap",
    "pandas.compat.map"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_range": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.range",
    "pandas.compat.lrange",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_zip": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.range",
    "pandas.compat.builtins.zip",
    "pandas.compat.lzip",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.filter": {
  "data": {
   "shadows": "pandas.compat.filter"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.iterkeys": {
  "data": {
   "shadows": "pandas.compat.iterkeys"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.itervalues": {
  "data": {
   "shadows": "pandas.compat.itervalues"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lfilter": {
  "data": {
   "shadows": "pandas.compat.lfilter"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.next": {
  "data": {
   "shadows": "pandas.compat.next"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_config.TestConfig": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_config.TestConfig.setup_class": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "copy.deepcopy",
    "getattr",
    "pandas.core.config"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.setup_method": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.teardown_method": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_api": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hasattr",
    "pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f2": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f3": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback.callback": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "v.append"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_case_insensitive": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_config_prefix": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_deprecate_option": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.tests.test_config.pytest",
    "pandas.tests.test_config.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_describe_option": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_get_option": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_is_one_of_factory": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_config.pytest",
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_option_context_scope": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_register_option": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option_all": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "eq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager.eq": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_empty_args": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_invalid_single_argument_type": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_multiple": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_uneven_args": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_validation": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_config.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.test_config.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_downstream.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.PY36": {
  "data": {
   "shadows": "pandas.compat.PY36"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.df": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.test_downstream.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.import_module": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "pandas.compat.PY36",
    "pandas.tests.test_downstream.importlib",
    "pandas.tests.test_downstream.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.sm": {
  "data": {
   "shadows": "statsmodels.api"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.smf": {
  "data": {
   "shadows": "statsmodels.formula.api"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas.tests.test_downstream.test_dask": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dask.dataframe.from_pandas",
    "pandas.tests.test_downstream.df",
    "pandas.tests.test_downstream.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_geopandas": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pandas_datareader": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.import_module",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pandas_gbq": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pyarrow": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.df",
    "pandas.tests.test_downstream.import_module",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_scikit_learn": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.import_module",
    "sklearn.datasets.load_digits",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_seaborn": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_statsmodels": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.df",
    "pandas.tests.test_downstream.import_module",
    "pandas.util.testing.network",
    "statsmodels.api.datasets.get_rdataset",
    "statsmodels.formula.api.ols"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.test_xarray": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.tests.test_downstream.df",
    "pandas.tests.test_downstream.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_downstream.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_errors": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_errors.CParserError": {
  "data": {
   "shadows": "pandas.io.common.CParserError"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.ParserError": {
  "data": {
   "shadows": "pandas.errors.ParserError"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.errors": {
  "data": {
   "shadows": "pandas.errors"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_errors.test_catch_oob": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.errors.OutOfBoundsDatetime",
    "pandas.tests.test_errors.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_errors.test_error_rename": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.errors.ParserError",
    "pandas.io.common.CParserError",
    "pandas.tests.test_errors.pandas",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_errors.test_exception_importable": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "e",
    "getattr",
    "pandas.errors",
    "pandas.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Panel",
    "pandas.tests.test_expressions._frame",
    "pandas.tests.test_expressions._frame2",
    "pandas.tests.test_expressions._integer",
    "pandas.tests.test_expressions._integer2",
    "pandas.tests.test_expressions._mixed",
    "pandas.tests.test_expressions._mixed2",
    "warnings.catch_warnings"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_expressions.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.Panel": {
  "data": {
   "shadows": "pandas.core.api.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.TestExpressions": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object",
    "pandas.core.computation.expressions._USE_NUMEXPR",
    "pandas.tests.test_expressions.pytest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_expressions.TestExpressions.run_arithmetic": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "assert_func",
    "getattr",
    "op",
    "op.__name__",
    "pandas._np_version_under1p11",
    "pandas.compat.PY3",
    "pandas.core.computation.expressions._MIN_ELEMENTS",
    "pandas.core.computation.expressions.set_use_numexpr",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.tests.test_expressions.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_binary": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "assert_func",
    "getattr",
    "op",
    "op.__name__",
    "pandas.core.computation.expressions._MIN_ELEMENTS",
    "pandas.core.computation.expressions.get_test_result",
    "pandas.core.computation.expressions.set_test_mode",
    "pandas.core.computation.expressions.set_use_numexpr",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.tests.test_expressions.operator",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_frame": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pandas.core.computation.expressions.set_use_numexpr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_panel": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "assert_func",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_series": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.setup_method": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.core.computation.expressions._MIN_ELEMENTS",
    "pandas.tests.test_expressions._frame",
    "pandas.tests.test_expressions._frame2",
    "pandas.tests.test_expressions._integer",
    "pandas.tests.test_expressions._mixed",
    "pandas.tests.test_expressions._mixed2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.teardown_method": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.core.computation.expressions._MIN_ELEMENTS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandas.core.computation.expressions.set_numexpr_threads",
    "pandas.core.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops.testit": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "op",
    "pandas._np_version_under1p11",
    "pandas.core.api.DataFrame",
    "pandas.core.computation.expressions._can_use_numexpr",
    "pandas.core.computation.expressions.evaluate",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_raise_on_arithmetic": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "f",
    "getattr",
    "numpy.random.rand",
    "op",
    "pandas.compat.PY3",
    "pandas.core.api.DataFrame",
    "pandas.tests.test_expressions.operator",
    "pandas.tests.test_expressions.re",
    "pandas.util.testing.assert_raises_regex",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_warn_on_arithmetic": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "f",
    "fe",
    "getattr",
    "numpy.random.rand",
    "op",
    "pandas._np_version_under1p13",
    "pandas.core.api.DataFrame",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.use_numexpr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.core.computation.expressions.set_numexpr_threads",
    "pandas.core.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops.testit": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "op",
    "pandas.core.api.DataFrame",
    "pandas.core.computation.expressions._can_use_numexpr",
    "pandas.core.computation.expressions.evaluate",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic_frame": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithmetic_series": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_panel": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.tests.test_expressions._frame2_panel",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_frame": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_series": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_panel": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.tests.test_expressions._integer2_panel",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_with_zeros": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.shape",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_invalid": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.core.computation.expressions._can_use_numexpr",
    "pandas.tests.test_expressions.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_frame": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_series": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_panel": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.tests.test_expressions._mixed2_panel",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_panel4d": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.slow",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.core.computation.expressions.set_numexpr_threads",
    "pandas.core.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where.testit": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.empty",
    "numpy.where",
    "pandas.core.computation.expressions.where",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions._frame": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame2_panel": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame_panel": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer2": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer2_panel": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer_panel": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed2_panel": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed_panel": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._np_version_under1p11": {
  "data": {
   "shadows": "pandas._np_version_under1p11"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions._np_version_under1p13": {
  "data": {
   "shadows": "pandas._np_version_under1p13"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.expr": {
  "data": {
   "shadows": "pandas.core.computation.expressions"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.slow": {
  "data": {
   "shadows": "pandas.util.testing.slow"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_internals": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.test_internals.sys"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_internals.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.BlockPlacement": {
  "data": {
   "shadows": "pandas.core.internals.BlockPlacement"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.N": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.tests.test_internals.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.PY361": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.test_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.SingleBlockManager": {
  "data": {
   "shadows": "pandas.core.internals.SingleBlockManager"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.SparseArray": {
  "data": {
   "shadows": "pandas.core.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.TestBlock": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlock.setup_method": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_block"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_attrs": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_constructor": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.tests.test_internals.create_block"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_copy": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.tests.test_internals.assert_block_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_delete": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.BlockPlacement",
    "pandas.tests.test_internals.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_insert": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_merge": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.core.internals.make_block",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_mgr_locs": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.BlockPlacement",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_pickle": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_pickle._check": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pandas.tests.test_internals.assert_block_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_reindex_cast": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_reindex_index": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_split_block_at": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array_equal",
    "pandas.tests.test_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_datetime": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_datetime_tz": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_float": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_int_bool": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.int32",
    "numpy.int64",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_astype": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_attrs": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_categorical_block_pickle": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.create_single_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_consolidate": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_consolidate_ordering_issues": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas._libs.lib.BlockPlacement",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_constructor_corner": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_contains": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_convert": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_compare",
    "numpy.array",
    "numpy.bool_",
    "numpy.datetime64",
    "numpy.float16",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_convert._compare": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_copy": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.compat.zip",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_duplicate_ref_loc_failure": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.tests.test_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_equals": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_equals_block_order_different_dtypes": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.Index",
    "pandas.core.internals.BlockManager",
    "pandas.core.internals.make_block",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_bool_data": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_numeric_data": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_scalar": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "enumerate",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_interleave": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_interleave_non_unique_cols": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_is_indexed_like": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_is_mixed_dtype": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_missing_unicode_key": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_multiindex_xs": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_non_unique_pickle": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_pickle": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "hasattr",
    "pandas.DataFrame",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_reindex_index": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_reindex_items": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set_change_dtype": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "numpy.repeat",
    "numpy.zeros",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set_change_dtype_slice": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_single_mgr_ctor": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_single_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_sparse": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_sparse_mixed": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_unicode_repr_doesnt_raise": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.tests.test_internals.create_mgr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_validate_bool_args": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_array_to_slice_conversion": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "assert_as_slice_equals",
    "pandas.tests.test_internals.PY361",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_array_to_slice_conversion.assert_as_slice_equals": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add_int": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "ValueError",
    "assert_add_equals",
    "pandas.core.internals.BlockPlacement",
    "pandas.tests.test_internals.PY361",
    "pandas.tests.test_internals.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add_int.assert_add_equals": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "list",
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_arrays": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "assert_not_slice_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_arrays.assert_not_slice_like": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_slices": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "assert_not_slice_like",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_slices.assert_not_slice_like": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_iter": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "list",
    "pandas.core.internals.BlockPlacement",
    "pandas.tests.test_internals.PY361",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_len": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "len",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_to_array_conversion": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "assert_as_array_equals",
    "pandas.tests.test_internals.PY361",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_to_array_conversion.assert_as_array_equals": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int64",
    "pandas.core.internals.BlockPlacement",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_unbounded_slice_raises": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "assert_unbounded_slice_error",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_unbounded_slice_raises.assert_unbounded_slice_error": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.internals.BlockPlacement",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_zero_step_raises": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.internals.BlockPlacement",
    "pandas.tests.test_internals.pytest",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestDatetimeBlock": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestDatetimeBlock.test_try_coerce_arg": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.int64",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.test_internals.create_block",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.create_single_mgr"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestIndexing.test_get_slice": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "assert_slice_ok",
    "numpy.arange",
    "numpy.array",
    "numpy.bool_",
    "numpy.ones",
    "numpy.zeros",
    "pandas.compat.lrange",
    "pandas.tests.test_internals.mgr",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_get_slice.assert_slice_ok": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.zeros",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_axis": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "assert_reindex_axis_is_ok",
    "numpy.nan",
    "pandas.Index",
    "pandas.tests.test_internals.mgr",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_axis.assert_reindex_axis_is_ok": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pandas.core.algorithms.take_nd",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_indexer": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "assert_reindex_indexer_is_ok",
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.tests.test_internals.mgr",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_indexer.assert_reindex_indexer_is_ok": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "pandas.core.algorithms.take_nd",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_take": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "assert_take_ok",
    "pandas.compat.lrange",
    "pandas.tests.test_internals.mgr",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_take.assert_take_ok": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "numpy.take",
    "pandas.tests.test_internals.mgr",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_block_equal": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "pandas._libs.lib.BlockPlacement",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.create_block": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "numpy.arange",
    "numpy.bool_",
    "numpy.nan",
    "numpy.ones",
    "numpy.reshape",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.core.internals.BlockPlacement",
    "pandas.core.internals.make_block",
    "pandas.core.sparse.array.SparseArray",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.get_numeric_mat",
    "pandas.tests.test_internals.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.create_mgr": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "numpy.arange",
    "pandas.Index",
    "pandas.compat.OrderedDict",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_block",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.create_single_mgr": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.internals.SingleBlockManager",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_block",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.get_numeric_mat": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.mgr": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.randn": {
  "data": {
   "shadows": "pandas.util.testing.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_join": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_join.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_join.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_join.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_join.TestIndexer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_join.TestIndexer.test_outer_join_indexer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "indexer",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.ndarray",
    "pandas._libs.join.outer_join_indexer_float32",
    "pandas._libs.join.outer_join_indexer_float64",
    "pandas._libs.join.outer_join_indexer_int32",
    "pandas._libs.join.outer_join_indexer_int64",
    "pandas._libs.join.outer_join_indexer_object",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join._join": {
  "data": {
   "shadows": "pandas._libs.join"
  },
  "type": "import"
 },
 "pandas.tests.test_join.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_join.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_join.merge": {
  "data": {
   "shadows": "pandas.merge"
  },
  "type": "import"
 },
 "pandas.tests.test_join.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_join.test_inner_join_indexer": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas._libs.join.inner_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_inner_join_indexer2": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.join.inner_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas._libs.join.left_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer2": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.join.left_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer_unique": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas._libs.join.left_join_indexer_unique_int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_left_outer_join_bug": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "numpy.ones",
    "pandas._libs.join.left_outer_join"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_merge_join_categorical_multiindex": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_outer_join_indexer": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas._libs.join.outer_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.test_outer_join_indexer2": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas._libs.join.outer_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_join.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_lib": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_lib.TestIndexing": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.TestIndexing.test_get_reverse_indexer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas._libs.lib.get_reverse_indexer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_booleans_to_slice": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.uint8",
    "pandas._libs.lib.maybe_booleans_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_both_edges": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.maybe_indices_to_slice",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_left_edge": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.maybe_indices_to_slice",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_middle": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.maybe_indices_to_slice",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_right_edge": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.lib.maybe_indices_to_slice",
    "pandas.tests.test_lib.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.TestMisc.test_fast_unique_multiple_list_gen_sort": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "pandas._libs.lib.fast_unique_multiple_list_gen",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_max_len_string_array": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas._libs.lib.max_len_string_array",
    "pandas.tests.test_lib.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.TestNullObj._check_behavior": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "getattr",
    "numpy.atleast_2d",
    "pandas._libs.lib",
    "pandas.tests.test_lib.TestNullObj",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj.test_basic": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj.test_empty_arr": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj.test_empty_like": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj.test_empty_str_inp": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestNullObj.test_non_obj_dtype": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.lib": {
  "data": {
   "shadows": "pandas._libs.lib"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_multilevel.Base": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_multilevel.Base.setup_method": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.N",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.TestMultiLevel": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.tests.test_multilevel.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_alignment": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append_index": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.index.Index",
    "pandas.core.index.Index._simple_new",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.tests.test_multilevel.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_assign_index_sequences": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_check_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level._check_op": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "getattr",
    "numpy.sum",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_constructor_with_tz": {
  "data": {
   "lineno": 2111,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "TypeError",
    "_check_counts",
    "numpy.nan",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level._check_counts": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_corner": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_series": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_constructor": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_insert_column_all_na": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_datetimeindex": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp.today",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.tests.test_multilevel.itertools",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_delevel_infer_dtype": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.product",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.dtypes.common.is_integer_dtype",
    "pandas.core.index.MultiIndex.from_tuples",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level_nonunique_datetime": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_nonunique": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_preserve_names": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_groupby_issues": {
  "data": {
   "lineno": 2022,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_mi": {
  "data": {
   "lineno": 2033,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicated_drop_duplicates": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_fancy_slice_partial": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_any_all_group": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_dict_constructor_empty_series": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_multicolumn_empty_level": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_boolean": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "TypeError",
    "numpy.putmask",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_multislice": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_slice": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "f",
    "pandas.core.common.SettingWithCopyError",
    "pandas.tests.test_multilevel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view.f": {
  "data": {
   "lineno": 1354
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "op",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops.aggf": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "getattr",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_series_agg_multiple_levels": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_ix": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_multi_column": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_level_number_out_of_bounds": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_loc_single_level": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_int": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_lowerdim_corner": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_multilevel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial_column_select": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "slice",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_slice_integers": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_tuple_plus_columns": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_simple": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_toplevel": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_tuple_plus_slice": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_corner": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_level_no_obs": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel_with_transform": {
  "data": {
   "lineno": 1503
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_transform": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_iloc_mi": {
  "data": {
   "lineno": 2357,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_ambiguity_bug_1678": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_over_hashtable_size_cutoff": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas._libs.index._SIZE_CUTOFF",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_insert_index": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_int_series_slicing": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_ix_preserve_names": {
  "data": {
   "lineno": 1513
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join_segfault": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_level_with_tuples": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_drop": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_get": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_insert": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_pop": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_na_repr": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_set_index": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multilevel_consolidate": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_nonunique_assignment_1750": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_ix_missing": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_set": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_test_roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level_partial_selection": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_preserve_levels": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reorder_levels": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repeat": {
  "data": {
   "lineno": 2349,
   "symbols_in_volume": [
    "len",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_name_coincide": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_to_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_datetime": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_multiindex_columns": {
  "data": {
   "lineno": 2271,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_period": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Period",
    "pandas.period_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_with_drop": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_constructor": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem_corner": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_group_min_max": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_setitem": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.isnull",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_slice_partial": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_column_scalar_with_ix": {
  "data": {
   "lineno": 1919
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_datetime": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_period": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_change_dtype": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_multiple_partial": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "check",
    "list",
    "numpy.arange",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack.check": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_dropna": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_level_name": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_mixed_dtype": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "numpy.float_",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_bug": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_out_of_bounds": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_names_and_numbers": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_order_with_unsorted_levels": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "len",
    "manual_compare_stacked",
    "numpy.arange",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.tests.test_multilevel.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_order_with_unsorted_levels.manual_compare_stacked": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_multiple": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_preserve_names": {
  "data": {
   "lineno": 961
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stat_op_corner": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_std_var_pass_ddof": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel_panel": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "pandas.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_to_html": {
  "data": {
   "lineno": 1615
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_tuples_have_na": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_issues": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.compat.u",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_level_names": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.u",
    "pandas.core.index.MultiIndex.from_tuples",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "int",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_bug": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_group_index_overflow": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_level_name": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_hierarchical": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_no_empty_columns": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_odd_failure": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_frame": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_series": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_preserve_types": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_sparse_keyspace": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_unobserved_keys": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.common.SettingWithCopyError",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level.f": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level0": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "len",
    "pandas.compat.StringIO",
    "pandas.read_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.core.common.SettingWithCopyError",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.read_table",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple.f": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_series": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.test_multilevel.pytest",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_partial": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted": {
  "data": {
   "lineno": 2386,
   "symbols_in_volume": [
    "pandas.tests.test_multilevel.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_multilevel.TestSorted.test_frame_getitem_not_sorted": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_frame_getitem_not_sorted2": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_getitem_multilevel_index_tuple_not_sorted": {
  "data": {
   "lineno": 2509,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_getitem_slice_not_sorted": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_is_lexsorted": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_series_getitem_not_sorted": {
  "data": {
   "lineno": 2574,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_and_reconstruction": {
  "data": {
   "lineno": 2590,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_and_reconstruction_doc_example": {
  "data": {
   "lineno": 2649,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_by_name": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_large_cardinality": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_mixed": {
  "data": {
   "lineno": 2476,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_nan": {
  "data": {
   "lineno": 2730,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_preserve_levels": {
  "data": {
   "lineno": 2389
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_reorder_on_ops": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_reorder_on_ops.my_func": {
  "data": {
   "lineno": 2689
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_non_lexsorted": {
  "data": {
   "lineno": 2703,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted",
    "sorted.index.is_lexsorted",
    "sorted.index.is_monotonic",
    "sorted.loc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sorting_repr_8017": {
  "data": {
   "lineno": 2393,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel._index": {
  "data": {
   "shadows": "pandas._libs.index"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.cart_product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.read_table": {
  "data": {
   "shadows": "pandas.read_table"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.nanops._USE_BOTTLENECK"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_nanops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_convertable_values": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_ndarray": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.array",
    "object",
    "pandas.core.nanops._ensure_numeric",
    "pandas.tests.test_nanops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_non_convertable_values": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.nanops._ensure_numeric",
    "pandas.tests.test_nanops.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_numeric_values": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.prng": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.setup_method": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_all_finite": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_axis": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_constant_series": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_ground_truth": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans_skipna": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.prng": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.setup_method": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_all_finite": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "pandas.core.nanops.nanskew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_axis": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_constant_series": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.core.nanops.nanskew",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_ground_truth": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.nanops.nanskew",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans_skipna": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.prng": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.setup_method": {
  "data": {
   "lineno": 789
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_ground_truth": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_nans": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_roundoff": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_all_finite": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_axis": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_ddof": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_nans": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._argminmax_wrap": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.min",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._badobj_wrap": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._minmax_wrap": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "func",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._skew_kurt_wrap": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.floating",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_bool": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "func",
    "getattr",
    "hasattr",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun_data": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "list",
    "numpy.take",
    "range",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TypeError",
    "functools.partial",
    "numpy.vstack",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs_ddof": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "BaseException",
    "range",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancomp": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "checkfun",
    "numpy.hstack",
    "numpy.take",
    "numpy.vstack",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_1d": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "checkfun",
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_2d": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "checkfun",
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "_coerce_tds",
    "getattr",
    "hasattr",
    "numpy.split",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results._coerce_tds": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.setup_method": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.errstate",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.tile",
    "numpy.vstack",
    "pandas.core.nanops._USE_BOTTLENECK"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.teardown_method": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.tests.test_nanops.use_bn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__bn_ok_dtype": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "pandas.core.nanops._bn_ok_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__has_infs": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "pandas.core.nanops._has_infs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__isfinite": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "numpy.any",
    "pandas.core.nanops._isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanall": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.all",
    "pandas.core.nanops.nanall"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanany": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.any",
    "pandas.core.nanops.nanany"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmax": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.argmax",
    "pandas.core.nanops.nanargmax"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmin": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.argmin",
    "pandas.core.nanops.nanargmin",
    "pandas.util.testing.sys.version_info"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "pandas.core.nanops.nancorr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_kendall": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pandas.core.nanops.nancorr",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.kendalltau"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_pearson": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "pandas.core.nanops.nancorr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_spearman": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pandas.core.nanops.nancorr",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancov": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "numpy.cov",
    "pandas.core.nanops.nancov"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_naneq": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pandas.core.nanops.naneq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nange": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas.core.nanops.nange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nangt": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.core.nanops.nangt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nankurt": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.errstate",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanle": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "pandas.core.nanops.nanle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanlt": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "pandas.core.nanops.nanlt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmax": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.max",
    "pandas.core.nanops.nanmax"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.core.nanops.nanmean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean_overflow": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmedian": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.median",
    "pandas.core.nanops.nanmedian",
    "pandas.tests.test_nanops.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmin": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.min",
    "pandas.core.nanops.nanmin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanne": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.core.nanops.nanne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanprod": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.core.nanops.nanprod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansem": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.errstate",
    "pandas.core.nanops.nansem",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.sem"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanskew": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.errstate",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanstd": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.std",
    "pandas.core.nanops.nanstd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansum": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.core.nanops.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanvar": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "numpy.var",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_returned_dtype": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "numpy",
    "numpy.float128",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.Series",
    "pandas.core.dtypes.common.is_integer_dtype",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.kendalltau": {
  "data": {
   "shadows": "scipy.stats.kendalltau"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.sem": {
  "data": {
   "shadows": "scipy.stats.sem"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.test_use_bottleneck": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "pandas.core.nanops._BOTTLENECK_INSTALLED",
    "pandas.get_option",
    "pandas.set_option",
    "pandas.tests.test_nanops.use_bn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.use_bn": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.test_nanops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panel": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_panel.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.CheckIndexing": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.CheckIndexing._check_view": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "numpy.errstate",
    "pandas.tests.test_panel.operator",
    "pandas.util.testing.makePanel",
    "test_comp",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons.test_comp": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "Exception",
    "func",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_delitem_and_pop": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "Exception",
    "numpy.empty",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_get_value": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_callable": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_labels": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_slice": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs_check_view": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_invert": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_align": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_frame_align": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_setitem_slice_dataframe": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_logical_with_nas": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs_mixed": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs_mixed": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_neg": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_minor_major": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.notnull",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_value": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.bool_",
    "numpy.int64",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem_ndarray": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.linspace",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_xs": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.PanelTests": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.PanelTests.not_hashable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_cumsum": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_pickle": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.round_trip_pickle",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_rank": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "alternative",
    "f",
    "getattr",
    "pandas.compat.range",
    "pandas.compat.signature",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan",
    "pandas.core.series.remove_na"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.wrapper": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "alternative",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_copy_names": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "getattr",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_count": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_iter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_max": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_mean": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median.wrapper": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_min": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_prod": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_repr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem.alt": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.test_panel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew.this_skew": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std.alt": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sum": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var.alt": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForSparse._test_op": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "op",
    "pandas.util.testing.assert_frame_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.assert_panel_equal": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_abs": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_arith": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.operator",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "check_op",
    "getattr",
    "op",
    "pandas.compat.PY3",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.tests.test_panel.operator",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame.check_op": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "func",
    "getattr",
    "op",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combinePanel": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_name": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_number": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_plane_axes": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_value": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_iteritems": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_keys": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_neg": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_raise_when_not_implemented": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "list",
    "numpy.arange",
    "op",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_select": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_set_axis": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_truncate": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.TestLongPanel": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.TestLongPanel.setup_method": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "pandas.tests.test_panel.make_test_panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_arith_flex_panel": {
  "data": {
   "lineno": 2505,
   "symbols_in_volume": [
    "aliases",
    "aliases.get",
    "f",
    "getattr",
    "numpy.random.randint",
    "op",
    "pandas.compat.PY3",
    "pandas.tests.test_panel.operator",
    "pandas.util.testing.assert_panel_equal",
    "r_f",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_axis_dummies": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "len",
    "numpy.uint8",
    "pandas.Index",
    "pandas.core.reshape.reshape.make_axis_dummies",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combineFrame": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combinePanel": {
  "data": {
   "lineno": 2471,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_scalar": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_series": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "pandas.DataFrame.add",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_count": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "enumerate",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_get_dummies": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "numpy.uint8",
    "pandas.core.reshape.reshape.get_dummies",
    "pandas.core.reshape.reshape.make_axis_dummies",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_join": {
  "data": {
   "lineno": 2645,
   "symbols_in_volume": [
    "Exception",
    "len",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_mean": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_operators": {
  "data": {
   "lineno": 2499,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_differently_indexed": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_scalar": {
  "data": {
   "lineno": 2459,
   "symbols_in_volume": [
    "pandas.DataFrame.__mul__",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_pivot": {
  "data": {
   "lineno": 2657,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "pandas.core.reshape.reshape._slow_pivot",
    "pandas.pivot",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "is_sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort.is_sorted": {
  "data": {
   "lineno": 2530
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sum": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_to_sparse": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_to_string": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_truncate": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "pandas.tests.test_panel.CheckIndexing",
    "pandas.tests.test_panel.PanelTests",
    "pandas.tests.test_panel.SafeForLongAndSparse",
    "pandas.tests.test_panel.SafeForSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.TestPanel.assert_panel_equal": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.setup_method": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "pandas.tests.test_panel.make_test_panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": [
    "pandas.core.nanops.nanall",
    "pandas.core.nanops.nanany"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any_unhandled": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.test_panel.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.errstate",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_no_or_zero_ndim": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_slabs": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "dict",
    "f",
    "list",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_astype": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_panel_equal",
    "str",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_compound": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_conform": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_consolidate": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object_",
    "pandas.compat.range",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_cast": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.int32",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dict_mixed": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "_check_dtype",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes._check_dtype": {
  "data": {
   "lineno": 1002
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_empty_panel": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "len",
    "pandas.core.panel.Panel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs.testit": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_fails_with_not_3d_input": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_observe_dtype": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_resize": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_convert_objects": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "dict",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_dict": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_orderedDict": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.compat.OrderedDict",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.makeCustomDataframe",
    "set",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "ValueError",
    "check_drop",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop.check_drop": {
  "data": {
   "lineno": 2267,
   "symbols_in_volume": [
    "AssertionError",
    "aliases",
    "pandas.io.formats.printing.pprint_thing",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dropna": {
  "data": {
   "lineno": 2227,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dtypes": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ffill_bfill": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_fillna": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_filter": {
  "data": {
   "lineno": 1936
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_dict_mixed_orient": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.makeDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_frame_level1_unsorted": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_get_attr": {
  "data": {
   "lineno": 2169,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_blocks": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_get": {
  "data": {
   "lineno": 2116,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_numpy_round": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.around",
    "numpy.round",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_panel_dups": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_pct_change": {
  "data": {
   "lineno": 2022,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_like": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_multi": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_rename": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "str.lower",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_repr_empty": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "repr",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_round": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "float",
    "numpy.around",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_shift": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "dict",
    "f",
    "f.shift",
    "list",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeMixedDataFrame",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_sort_index": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "list",
    "pandas.tests.test_panel.random",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_swapaxes": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "id",
    "numpy.nan",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_take": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.excel.ExcelFile",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel_xlsxwriter": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.excel.ExcelFile",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_mixed": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_drop_level": {
  "data": {
   "lineno": 1847,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major_minor": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_duplicates": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_na_handling": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.isnull",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.tests.test_panel.pytest",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose_copy": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.notnull",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_truncate_fillna_bug": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_tshift": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.Index",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.make_test_panel",
    "pandas.tests.test_panel.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makePeriodPanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_filtered": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_from_dict": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_nooverwrite": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_raise": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel._slow_pivot": {
  "data": {
   "shadows": "pandas.core.reshape.reshape._slow_pivot"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.get_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.get_dummies"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.makeMixedDataFrame": {
  "data": {
   "shadows": "pandas.util.testing.makeMixedDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.make_axis_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.reshape.make_axis_dummies"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.make_test_panel": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.util.testing.add_nans",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.nanall": {
  "data": {
   "shadows": "pandas.core.nanops.nanall"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.nanany": {
  "data": {
   "shadows": "pandas.core.nanops.nanany"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.panelm": {
  "data": {
   "shadows": "pandas.core.panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pivot": {
  "data": {
   "shadows": "pandas.pivot"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pprint_thing": {
  "data": {
   "shadows": "pandas.io.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.remove_na": {
  "data": {
   "shadows": "pandas.core.series.remove_na"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.signature": {
  "data": {
   "shadows": "pandas.compat.signature"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.test_panel_index": {
  "data": {
   "lineno": 2682,
   "symbols_in_volume": [
    "numpy.repeat",
    "numpy.tile",
    "pandas.MultiIndex.from_arrays",
    "pandas.core.panel.panel_index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_panel4d.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.CheckIndexing": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.errstate",
    "pandas.tests.test_panel4d.operator",
    "pandas.util.testing.makePanel4D",
    "test_comp",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons.test_comp": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "Exception",
    "func",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_delitem_and_pop": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Exception",
    "numpy.empty",
    "pandas.compat.lrange",
    "pandas.core.panel4d.Panel4D",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_get_value": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel4d.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_labels": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_slice": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel4d.pytest",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs_mixed": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs_mixed": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_set_value": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.dtypes.common.is_float_dtype",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "numpy.bool_",
    "numpy.int64",
    "numpy.object_",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.test_panel4d.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer.func": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer_mixed_type": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_xs": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.Panel4D": {
  "data": {
   "shadows": "pandas.core.panel4d.Panel4D"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "alternative",
    "f",
    "getattr",
    "pandas.compat.range",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan",
    "pandas.core.series.remove_na"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.wrapper": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "alternative",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_count": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_iter": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_max": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_mean": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median.wrapper": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_min": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_prod": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_repr": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem.alt": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.test_panel4d.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew.this_skew": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std.alt": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sum": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var.alt": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForSparse._test_op": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "op",
    "pandas.util.testing.assert_panel_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_abs": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.abs",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_arith": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel4d.operator",
    "pandas.tests.test_panel4d.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_combinePanel4d": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_name": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_number": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_value": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_iteritems": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_keys": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_neg": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_select": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_set_axis": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "pandas.Index",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.TestPanel4d": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.CheckIndexing",
    "pandas.tests.test_panel4d.SafeForLongAndSparse",
    "pandas.tests.test_panel4d.SafeForSparse"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.TestPanel4d.setup_method": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.add_nans",
    "pandas.util.testing.makePanel4D",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_conform": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_consolidate": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object_",
    "pandas.compat.range",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_cast": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.int32",
    "pandas.core.panel.Panel",
    "pandas.core.panel4d.Panel4D",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_dict_mixed": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.core.panel4d.Panel4D",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_resize": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_ctor_dict": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_dtypes": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_fillna": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.isfinite",
    "pandas.tests.test_panel4d.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_get_attr": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_not_hashable": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.core.panel4d.Panel4D",
    "pandas.tests.test_panel4d.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.tests.test_panel4d.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex_like": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_rename": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "str.lower",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_repr_empty": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "repr",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_sort_index": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "list",
    "pandas.tests.test_panel4d.random",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_swapaxes": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "id",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_update": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.add_nans": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.add_nans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.remove_na": {
  "data": {
   "shadows": "pandas.core.series.remove_na"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_panelnd.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.TestPanelnd": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panelnd.TestPanelnd.setup_method": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Panel4D",
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_alt": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Panel4D",
    "dict",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_error": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.tests.test_panelnd.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_5d_construction": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Panel4D",
    "Panel5D",
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.panelnd": {
  "data": {
   "shadows": "pandas.core.panelnd"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_resample": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.test_resample.downsample_methods",
    "pandas.tests.test_resample.series_methods",
    "pandas.tests.test_resample.upsample_methods",
    "pandas.tseries.offsets.BDay"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_resample.ABCDataFrame": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Base": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.Base.create_index": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "factory"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_asfreq_downsample": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.tseries.frequencies.to_offset",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_asfreq_fill_value": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_asfreq_upsample": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_raises_on_non_datetimelike_index": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_dataframe": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.tests.test_resample.downsample_methods",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_dtypes": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "getattr",
    "numpy.float",
    "numpy.int",
    "numpy.object",
    "pandas.Series",
    "pandas.core.groupby.DataError",
    "pandas.tests.test_resample.downsample_methods",
    "pandas.tests.test_resample.upsample_methods",
    "pandas.util.testing.all_timeseries_index_generator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_series": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "getattr",
    "pandas.tests.test_resample.resample_methods",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_interpolate": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_loffset_arg_type": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "AssertionError",
    "FutureWarning",
    "datetime.timedelta",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.core.indexes.timedeltas.TimedeltaIndex",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.DAYS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.DAYS"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.DataError": {
  "data": {
   "shadows": "pandas.core.groupby.DataError"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.resample.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.DatetimeIndexResampler": {
  "data": {
   "shadows": "pandas.core.resample.DatetimeIndexResampler"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.IncompatibleFrequency": {
  "data": {
   "shadows": "pandas._libs.period.IncompatibleFrequency"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.MONTHS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.MONTHS"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Minute": {
  "data": {
   "shadows": "pandas.tseries.offsets.Minute"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Period": {
  "data": {
   "shadows": "pandas.core.indexes.period.Period"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.PeriodIndex": {
  "data": {
   "shadows": "pandas.core.indexes.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.SpecificationError": {
  "data": {
   "shadows": "pandas.core.base.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.TestDatetimeIndex": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.create_series": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.setup_method": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_anchored_lowercase_buglet": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_asfreq_non_unique": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_corner_cases": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.indexes.period.Period",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_custom_grouper": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.array",
    "numpy.random.rand",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex",
    "pandas.core.resample.TimeGrouper",
    "pandas.notnull",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_downsample_non_unique": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_how_lambda_functions": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "pandas.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_monthly_resample_error": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_nanosecond_resample_error": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.tseries.offsets.Nano",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_numpy_compat": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_ohlc_5min": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "_ohlc",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_ohlc_5min._ohlc": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_period_with_agg": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_across_dst": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.resample.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_intraday": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_monthstart": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "pandas.tests.test_resample._simple_ts"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_multiday": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_ticks": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_axis1": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_base": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_base_with_timedeltaindex": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_basic": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.resample.TimeGrouper",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_basic_from_daily": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_categorical_data_with_timedeltaindex": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_consistency": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_daily_anchored": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_datetime_values": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dst_anchor": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dtype_coerceion": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dtype_preservation": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dup_index": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.indexes.period.Period",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_extra_index_point": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_frame_basic": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_group_info": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.lexsort",
    "numpy.r_",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.searchsorted",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "numpy.ones_like",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample.downsample_methods",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how._ohlc": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "fn_class",
    "functools.partial",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class": {
  "data": {
   "lineno": 1000
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class.__call__": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_method": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_loffset": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "len",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.resample.DatetimeIndex",
    "pandas.tests.test_resample.bday",
    "pandas.tseries.offsets.Minute",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_loffset_count": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_median_bug_1688": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_not_monotonic": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_nunique": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_nunique_with_date_gap": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.Series.nunique",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "len",
    "pandas.core.resample.TimeGrouper",
    "pandas.tseries.offsets.Minute"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_dataframe": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_result": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "p_apply",
    "pandas.Panel",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel.p_apply": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "f",
    "pandas.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel_numpy": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_reresample": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_rounding": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_segfault": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_single_group": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "numpy.std",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_single_period_timedelta": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_size": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.searchsorted",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timedelta_idempotency": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timedelta_values": {
  "data": {
   "lineno": 2155,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timegrouper": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Grouper",
    "pandas.NaT",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timestamp_to_period": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_to_period_monthly_buglet": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_unequal_times": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_upsample": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_upsampling_picked_but_not_correct": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_with_nat": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.core.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_with_timedeltas": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.timedelta_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_upsample_apply_functions": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_upsample_with_limit": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_weekly_resample_buglet": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestPeriodIndex._check_annual_upsample_cases": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "getattr",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.create_series": {
  "data": {
   "lineno": 2193,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.core.indexes.period.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_all_values_single_bin": {
  "data": {
   "lineno": 2754,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample": {
  "data": {
   "lineno": 2365,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_b": {
  "data": {
   "lineno": 2301
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_f": {
  "data": {
   "lineno": 2295
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_b": {
  "data": {
   "lineno": 2298
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_f": {
  "data": {
   "lineno": 2292
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_b": {
  "data": {
   "lineno": 2289
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_f": {
  "data": {
   "lineno": 2283
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_b": {
  "data": {
   "lineno": 2286
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_f": {
  "data": {
   "lineno": 2280
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_b": {
  "data": {
   "lineno": 2313
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_f": {
  "data": {
   "lineno": 2307
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_b": {
  "data": {
   "lineno": 2310
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_f": {
  "data": {
   "lineno": 2304
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_asfreq_downsample": {
  "data": {
   "lineno": 2199,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.tseries.frequencies.to_offset",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_asfreq_fill_value": {
  "data": {
   "lineno": 2245,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_asfreq_upsample": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_basic_downsample": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_basic_upsample": {
  "data": {
   "lineno": 2345,
   "symbols_in_volume": [
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_cant_fill_missing_dups": {
  "data": {
   "lineno": 2567,
   "symbols_in_volume": [
    "Exception",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_closed_left_corner": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_default_left_closed_label": {
  "data": {
   "lineno": 2742,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_default_right_closed_label": {
  "data": {
   "lineno": 2730,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_evenly_divisible_with_no_extra_bins": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_fill_method_and_how_upsample": {
  "data": {
   "lineno": 2501,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_monthly_upsample": {
  "data": {
   "lineno": 2394,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_not_subperiod": {
  "data": {
   "lineno": 2337,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_quarterly_resampling": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_quarterly_upsample": {
  "data": {
   "lineno": 2382,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_5minute": {
  "data": {
   "lineno": 2572,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_basic": {
  "data": {
   "lineno": 2405,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.indexes.period.Period",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_bms_2752": {
  "data": {
   "lineno": 2709,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_count": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_fill_missing": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_incompat_freq": {
  "data": {
   "lineno": 2442,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas._libs.period.IncompatibleFrequency",
    "pandas.compat.range",
    "pandas.period_range",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_irregular_sparse": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_same_freq": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.period_range",
    "pandas.tests.test_resample.resample_methods",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_to_quarterly": {
  "data": {
   "lineno": 2528,
   "symbols_in_volume": [
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_to_timestamps": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_tz_localized": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": [
    "len",
    "numpy.cumsum",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_weekly_all_na": {
  "data": {
   "lineno": 2603,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_weekly_bug_1726": {
  "data": {
   "lineno": 2698,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_selection": {
  "data": {
   "lineno": 2264,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_upsample_daily_business_daily": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "pandas.core.indexes.period.period_range",
    "pandas.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_upsample_with_limit": {
  "data": {
   "lineno": 2356,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_weekly_upsample": {
  "data": {
   "lineno": 2509,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tests.test_resample._simple_pts",
    "pandas.tseries.frequencies.DAYS",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_with_local_timezone_dateutil": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tests.test_resample.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_with_local_timezone_pytz": {
  "data": {
   "lineno": 2448,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tests.test_resample.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestResampleAPI.setup_method": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "list",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.std",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_consistency": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_misc": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "list",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.std",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.base.SpecificationError",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_misc.f": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_nested_dicts": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "list",
    "numpy.random.rand",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.test_resample.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_changes_v018": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "ValueError",
    "getattr",
    "isinstance",
    "numpy.array",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.dtypes.generic.ABCDataFrame",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.resample.DatetimeIndexResampler",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_changes_v018.f": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_compat_before_use": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_apply_without_aggregation": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pandas.Grouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_attribute_access": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_attribute_access.f": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_combined_up_downsampling_of_irregular": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_downsample_but_actually_upsampling": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_fillna": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_getitem": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_groupby_resample_api": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_groupby_resample_on_api": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_plot_api": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing._skip_if_no_mpl",
    "pandas.util.testing.assert_is_valid_plot_return_object",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_select_bad_cols": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "KeyError",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_selection_api_validation": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.test_resample.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_str": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_transform": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.Grouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.tests_skip_nuisance": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper": {
  "data": {
   "lineno": 2819,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.setup_method": {
  "data": {
   "lineno": 2821,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply.f": {
  "data": {
   "lineno": 2973
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_back_compat_v180": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_consistency_with_window": {
  "data": {
   "lineno": 2999,
   "symbols_in_volume": [
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_deferred_with_groupby": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_getitem": {
  "data": {
   "lineno": 2886,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_getitem_multiple": {
  "data": {
   "lineno": 2900,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_median_duplicate_columns": {
  "data": {
   "lineno": 3012,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_methods": {
  "data": {
   "lineno": 2919,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_resample_groupby_with_label": {
  "data": {
   "lineno": 2979,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_tab_complete_ipython6_warning": {
  "data": {
   "lineno": 2845,
   "symbols_in_volume": [
    "IPython.core.completer.provisionalcompleter",
    "list",
    "pandas.util.testing.assert_produces_warning",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper": {
  "data": {
   "lineno": 3027,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestTimeGrouper.setup_method": {
  "data": {
   "lineno": 3029,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aaa_group_order": {
  "data": {
   "lineno": 3129,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aggregate_normal": {
  "data": {
   "lineno": 3151,
   "symbols_in_volume": [
    "datetime.datetime",
    "func",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aggregate_with_nat": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "datetime.datetime",
    "func",
    "getattr",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_apply": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": [
    "f",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_apply_iteration": {
  "data": {
   "lineno": 3069,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.core.resample.TimeGrouper",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_count": {
  "data": {
   "lineno": 3047,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_fails_on_no_datetime_index": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.resample.TimeGrouper",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_numpy_reduction": {
  "data": {
   "lineno": 3061,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_panel_aggregation": {
  "data": {
   "lineno": 3086,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.core.resample.TimeGrouper",
    "pandas.date_range",
    "pandas.util.testing.assert_panel_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_panel_aggregation.f": {
  "data": {
   "lineno": 3099,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "pandas.core.indexes.timedeltas.timedelta_range",
    "pandas.tests.test_resample.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex.create_series": {
  "data": {
   "lineno": 2801,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.core.indexes.timedeltas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex.test_asfreq_bug": {
  "data": {
   "lineno": 2807,
   "symbols_in_volume": [
    "datetime.datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.indexes.timedeltas.timedelta_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.TimeGrouper": {
  "data": {
   "shadows": "pandas.core.resample.TimeGrouper"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.UnsupportedFunctionCall": {
  "data": {
   "shadows": "pandas.errors.UnsupportedFunctionCall"
  },
  "type": "import"
 },
 "pandas.tests.test_resample._simple_pts": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.period.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample._simple_ts": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_resample.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.bday": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.tests.test_resample.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.date_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.downsample_methods": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.tests.test_resample.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.period_range": {
  "data": {
   "shadows": "pandas.core.indexes.period.period_range"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.provisionalcompleter": {
  "data": {
   "shadows": "IPython.core.completer.provisionalcompleter"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.resample_methods": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.tests.test_resample.series_methods": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.tests.test_resample.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.timedelta_range": {
  "data": {
   "shadows": "pandas.core.indexes.timedeltas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "pandas.tests.test_resample.upsample_methods": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.tests.test_resample.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_sorting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.TestMerge": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "align",
    "collections.defaultdict",
    "itertools.product",
    "len",
    "list",
    "numpy.arange",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series.nunique",
    "pandas.concat",
    "pandas.core.sorting.is_int64_overflow_possible",
    "pandas.merge",
    "pandas.tests.test_sorting.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "tuple",
    "verify_order"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues.align": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues.verify_order": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.core.common._asarray_tuplesafe",
    "pandas.tests.test_sorting.pytest",
    "pandas.util.testing.assert_index_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow_moar": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "aggr",
    "collections.defaultdict",
    "len",
    "list",
    "map",
    "numpy.mean",
    "numpy.median",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.vstack",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.sorting.is_int64_overflow_possible",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow_moar.aggr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "f",
    "map",
    "numpy.fromiter",
    "numpy.vstack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_lexsort_indexer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.intp",
    "numpy.nan",
    "pandas.core.sorting.lexsort_indexer",
    "pandas.util.testing.assert_numpy_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_nargsort": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.nan",
    "pandas.core.sorting.nargsort",
    "pandas.tests.test_sorting.pytest",
    "pandas.util.testing.assert_numpy_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.decons_group_index": {
  "data": {
   "shadows": "pandas.core.sorting.decons_group_index"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.get_group_index": {
  "data": {
   "shadows": "pandas.core.sorting.get_group_index"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.is_int64_overflow_possible": {
  "data": {
   "shadows": "pandas.core.sorting.is_int64_overflow_possible"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.lexsort_indexer": {
  "data": {
   "shadows": "pandas.core.sorting.lexsort_indexer"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.merge": {
  "data": {
   "shadows": "pandas.merge"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.nargsort": {
  "data": {
   "shadows": "pandas.core.sorting.nargsort"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_sorting.test_decons": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.test_decons.testit": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.core.sorting.decons_group_index",
    "pandas.core.sorting.get_group_index",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_sorting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_strings": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_strings.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.NA": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.StringMethods": {
  "data": {
   "shadows": "pandas.core.strings.StringMethods"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.TestStringMethods": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_strings.TestStringMethods.test_api": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "isinstance",
    "pandas.Series",
    "pandas.Series.str",
    "pandas.core.strings.StringMethods",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_capitalize": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_casemethods": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.core.strings.str_cat",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat_on_filtered_index": {
  "data": {
   "lineno": 2666,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust_fillchar": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_contains": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.array",
    "numpy.bool_",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.core.strings.str_contains",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_contains_nan": {
  "data": {
   "lineno": 2517,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_count": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_count",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "bool",
    "int",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.test_strings.string",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str",
    "str.maketrans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods_to_frame": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode_errors": {
  "data": {
   "lineno": 2621,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_endswith": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.today",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_endswith",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "ValueError",
    "check_index",
    "datetime.datetime.today",
    "index",
    "klass",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False.check_index": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_None": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_True": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.today",
    "isinstance",
    "klass",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.pytest",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_unspecified": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_index_one_two_groups": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "check_index",
    "index",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups.check_index": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "index",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_series": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_single_group_returns_frame": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_errors": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_no_matches": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract_subject_index": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_single_group": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_single_group_with_quantifier": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_stringindex": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.int64",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find_nan": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_findall": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies_with_name_dummy": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check",
    "klass",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index._check": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index_str_accessor_visibility": {
  "data": {
   "lineno": 2692,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.core.strings.StringMethods",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_ismethods": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_isnumeric": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.isnull",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_empty": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_object_try_string": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.compat.range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_single_element": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_join": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_len": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_lower_upper": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.pytest",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match_findall_flags": {
  "data": {
   "lineno": 2586,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_method_on_bytes": {
  "data": {
   "lineno": 2747,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.test_strings.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_contains": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_replace": {
  "data": {
   "lineno": 2537,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_normalize": {
  "data": {
   "lineno": 2641,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad_fillchar": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad_width": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_index": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_series": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_to_dataframe": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_with_name": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pipe_failures": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_repeat": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.today",
    "isinstance",
    "klass",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.pytest",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace_callable": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.PY2",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace_compiled_regex": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_dataframe_expand": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_multiindex_expand": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice_replace": {
  "data": {
   "lineno": 2315,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_maxsplit": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_no_pat_with_nonzero_n": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_noargs": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_dataframe": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_multiindex_expand": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_with_name": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_startswith": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.today",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_startswith",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_accessor_no_new_attributes": {
  "data": {
   "lineno": 2740,
   "symbols_in_volume": [
    "AttributeError",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_cat_raises_intuitive_error": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_get_syntax": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_out_of_bounds": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args_unicode": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_mixed": {
  "data": {
   "lineno": 2368,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "isinstance",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_unicode": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_swapcase": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_title": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_translate": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "ValueError",
    "_check",
    "klass",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.test_strings.string",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal",
    "str.maketrans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_translate._check": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_wrap": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_zfill": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.strings": {
  "data": {
   "shadows": "pandas.core.strings"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_take": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_take.TestTake": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_take.re"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_take.TestTake.test_1d_bool": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.object_",
    "pandas.core.algorithms.take_1d",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_1d"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_other_dtypes": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_1d",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out._test_dtype": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_1d",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_bool": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.object_",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_datetime64": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.empty_like",
    "numpy.int64",
    "numpy.random.randint",
    "pandas._libs.tslib.iNaT",
    "pandas.compat.long",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_float32": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_other_dtypes": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out._test_dtype": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out._test_dtype": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_take.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_take.iNaT": {
  "data": {
   "shadows": "pandas._libs.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.test_take.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.test_take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_take.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_take.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_window": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.test_window._create_consistency_data"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_window.Base": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Base._create_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_window.DatetimeLike": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.DatetimeLike.check_dtypes": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype._create_data": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype._create_dtype_data": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.check_dtypes": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.get_expects": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.test_dtypes": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype_float": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_integer": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_uinteger": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_window.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_window.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.test_window.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_window.SpecificationError": {
  "data": {
   "shadows": "pandas.core.base.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tests.test_window.TestApi": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestApi.setup_method": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_consistency": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.base.SpecificationError",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_frame_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_attribute_access": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.DataFrame",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_count_nonnumeric_types": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.Inf",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_getitem": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_how_compat": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dfunc",
    "getattr",
    "numpy.random.randn",
    "pandas",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_preserve_metadata": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_select_bad_cols": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.a": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.b": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.tests_skip_nuisance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDeprecations.setup_method": {
  "data": {
   "lineno": 596
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations.test_deprecations": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.Series",
    "pandas.stats.moments.rolling_mean",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_category": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_category._create_dtype_data": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_datetime": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC._create_data": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_float16": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.float16",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float32": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float64": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int16": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "numpy.int16",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int32": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int64": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int8": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.int8",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_object": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_timedelta": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint16": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.uint16",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint32": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.uint32",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint64": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "numpy.uint64",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint8": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.uint8",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestEWM": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestEWM.setup_method": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_constructor": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_doc_string": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_numpy_compat": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "getattr",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.window.EWM",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestExpanding.setup_method": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_constructor": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_doc_string": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_empty_df_expanding": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_numpy_compat": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "getattr",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.window.Expanding",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping": {
  "data": {
   "lineno": 3084,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestGrouperGrouping.setup_method": {
  "data": {
   "lineno": 3086,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding": {
  "data": {
   "lineno": 3181,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_apply": {
  "data": {
   "lineno": 3219,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov": {
  "data": {
   "lineno": 3200,
   "symbols_in_volume": [
    "f",
    "func",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov.func": {
  "data": {
   "lineno": 3214,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_getitem": {
  "data": {
   "lineno": 3102,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_getitem_multiple": {
  "data": {
   "lineno": 3120,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated": {
  "data": {
   "lineno": 3091,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated.f": {
  "data": {
   "lineno": 3093
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling": {
  "data": {
   "lineno": 3134,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_apply": {
  "data": {
   "lineno": 3172,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov": {
  "data": {
   "lineno": 3153,
   "symbols_in_volume": [
    "f",
    "func",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov.func": {
  "data": {
   "lineno": 3167,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestMoments._check_ew": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_ndarray": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "func",
    "numpy.NaN",
    "numpy.arange",
    "numpy.float_",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_structures": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_moment_func": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "f",
    "pandas.tests.test_window.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "get_result",
    "len",
    "numpy.NaN",
    "numpy.array",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray.get_result": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "get_result",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tseries.offsets.BDay",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "static_comp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures.get_result": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "f",
    "getattr",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.setup_method": {
  "data": {
   "lineno": 822
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_centered_axis_validation": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_mean": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.stats.moments.rolling_mean",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.stats.moments.rolling_window",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_corner": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.stats.moments.rolling_window",
    "pandas.util.testing._skip_if_no_scipy",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_frame": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_na_min_periods": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_linear_range": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_missing_data": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special_linear_range": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ew_empty_arrays": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "f",
    "numpy.array",
    "numpy.float64",
    "pandas.stats.moments.ewma",
    "pandas.stats.moments.ewmvar",
    "pandas.stats.moments.ewmvol",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "c",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha_arg": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_domain_checks": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "f",
    "numpy.abs",
    "numpy.zeros",
    "pandas.Series",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_arg_old_api": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.tests.test_window.pytest",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_old_api": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "c",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_numpy_array_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_halflife_arg": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "simple_wma"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling.simple_wma": {
  "data": {
   "lineno": 1547
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_span_com_args": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvar": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "pandas.stats.moments.ewmvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvol": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "pandas.stats.moments.ewmvol"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_fperr_robustness": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "pandas.compat.PY3",
    "pandas.stats.moments.rolling_mean",
    "pandas.stats.moments.rolling_sum",
    "pandas.stats.moments.rolling_var",
    "pandas.tests.test_window.pytest",
    "pandas.tests.test_window.sys",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "len",
    "numpy.isfinite",
    "numpy.mean",
    "pandas.Series",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply.roll_mean": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "f",
    "pandas.stats.moments.rolling_apply"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply_out_of_bounds": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sum",
    "pandas.isnull",
    "pandas.stats.moments.rolling_apply",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_count": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "float",
    "numpy.isfinite",
    "pandas.stats.moments.rolling_count"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_kurt": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.moments.rolling_kurt",
    "pandas.tests.test_window.pytest",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_max": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.max",
    "pandas.stats.moments.rolling_max",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_mean": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.stats.moments.rolling_mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_median": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "numpy.median",
    "pandas.stats.moments.rolling_median",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_min": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.min",
    "numpy.ones",
    "pandas.stats.moments.rolling_min",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.alt": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.f": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "pandas.stats.moments.rolling_quantile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.scoreatpercentile": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "int",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile_param": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Series",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_skew": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.moments.rolling_skew",
    "pandas.tests.test_window.pytest",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "numpy.std",
    "pandas.stats.moments.rolling_std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_1obs": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.zeros",
    "pandas.stats.moments.rolling_std",
    "pandas.util.testing.assert_almost_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_neg_sqrt": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isfinite",
    "pandas.stats.moments.ewmstd",
    "pandas.stats.moments.rolling_std",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_sum": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.stats.moments.rolling_sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_var": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "numpy.var",
    "pandas.stats.moments.rolling_var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanmin",
    "numpy.nanstd",
    "numpy.nansum",
    "numpy.nanvar",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "pandas.Series",
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew": {
  "data": {
   "lineno": 2502,
   "symbols_in_volume": [
    "Exception",
    "func",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew.func": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding": {
  "data": {
   "lineno": 2960,
   "symbols_in_volume": [
    "func",
    "pandas.tests.test_window.warnings",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_ndarray": {
  "data": {
   "lineno": 2920,
   "symbols_in_volume": [
    "func",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_structures": {
  "data": {
   "lineno": 2954,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "get_result",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment.get_result": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._create_data": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "pandas.tests.test_window.TestMomentsConsistency",
    "pandas.tests.test_window._consistency_data",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "corr",
    "count",
    "cov",
    "is_constant",
    "isinstance",
    "max",
    "mean",
    "mock_mean",
    "no_nans",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.test_window.assert_equal",
    "std",
    "var",
    "var_biased",
    "var_debiasing_factors",
    "var_unbiased"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency._non_null_values": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "pandas.notnull",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.setup_method": {
  "data": {
   "lineno": 2005
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_corr_sanity": {
  "data": {
   "lineno": 2447,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "numpy.abs",
    "numpy.array",
    "numpy.nan_to_num",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.range",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "_ewma",
    "_variance_debiasing_factors",
    "itertools.product",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._ewma": {
  "data": {
   "lineno": 2169,
   "symbols_in_volume": [
    "_weights",
    "max",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._variance_debiasing_factors": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "_weights",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._weights": {
  "data": {
   "lineno": 2125,
   "symbols_in_volume": [
    "_weights",
    "enumerate",
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.concat",
    "pow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr": {
  "data": {
   "lineno": 2496
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr_pairwise": {
  "data": {
   "lineno": 2499
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov": {
  "data": {
   "lineno": 2490
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov_pairwise": {
  "data": {
   "lineno": 2493
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply.expanding_mean": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "pandas.stats.moments.expanding_apply"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs": {
  "data": {
   "lineno": 2551,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs.mean_w_arg": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_consistency": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "RuntimeWarning",
    "expanding_f",
    "f",
    "getattr",
    "is_constant",
    "no_nans",
    "numpy.nan",
    "pandas.tests.test_window.assert_equal",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr": {
  "data": {
   "lineno": 2565,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_diff_index": {
  "data": {
   "lineno": 2634,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise": {
  "data": {
   "lineno": 2609,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise_diff_length": {
  "data": {
   "lineno": 2852,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_count": {
  "data": {
   "lineno": 2575,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_diff_index": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise": {
  "data": {
   "lineno": 2601,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise_diff_length": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_max": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "numpy.max",
    "pandas.stats.moments.expanding_max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_quantile": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame._check": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_moment": {
  "data": {
   "lineno": 2442,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.window._flex_binary_moment",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_moment_functions_zero_length": {
  "data": {
   "lineno": 2732,
   "symbols_in_volume": [
    "ImportError",
    "f",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_moment_functions_zero_length_pairwise": {
  "data": {
   "lineno": 2793,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_consistency": {
  "data": {
   "lineno": 2296,
   "symbols_in_volume": [
    "RuntimeWarning",
    "cases",
    "f",
    "getattr",
    "is_constant",
    "no_nans",
    "numpy.nan",
    "pandas.tests.test_window.assert_equal",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.slow",
    "rolling_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_consistency.cases": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr": {
  "data": {
   "lineno": 2412,
   "symbols_in_volume": [
    "len",
    "numpy.corrcoef",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_diff_length": {
  "data": {
   "lineno": 2664,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_pairwise": {
  "data": {
   "lineno": 2428
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "len",
    "numpy.cov",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_diff_length": {
  "data": {
   "lineno": 2652,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_pairwise": {
  "data": {
   "lineno": 2409
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_functions_window_non_shrinkage": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "ImportError",
    "f",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_functions_window_non_shrinkage_binary": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_kurt_edge_cases": {
  "data": {
   "lineno": 2899,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_gh6297": {
  "data": {
   "lineno": 2970,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_how_resample": {
  "data": {
   "lineno": 2988,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_how_resample": {
  "data": {
   "lineno": 3041,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_memory_error": {
  "data": {
   "lineno": 3060,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_how_resample": {
  "data": {
   "lineno": 3022,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_max_numeric_types": {
  "data": {
   "lineno": 3066,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_skew_edge_cases": {
  "data": {
   "lineno": 2878,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestPairwise.compare": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_flex": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_pairwise_with_other": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_pairwise_with_self": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_other": {
  "data": {
   "lineno": 1830,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_self": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_series": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "pandas.compat.zip",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestRolling.setup_method": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_closed": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor_with_timedelta_window": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.append",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor_with_win_type": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_doc_string": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_multi_index_names": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_numpy_compat": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "getattr",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.window.Rolling",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.tests_empty_df_rolling": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS": {
  "data": {
   "lineno": 3229,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestRollingTS.setup_method": {
  "data": {
   "lineno": 3234,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all": {
  "data": {
   "lineno": 3759,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all2": {
  "data": {
   "lineno": 3781,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all2.agg_by_day": {
  "data": {
   "lineno": 3803,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_basic_regular": {
  "data": {
   "lineno": 3407,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_closed": {
  "data": {
   "lineno": 3443,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_doc_string": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_frame_on": {
  "data": {
   "lineno": 3334,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_frame_on2": {
  "data": {
   "lineno": 3378,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_groupby_monotonic": {
  "data": {
   "lineno": 3811,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_min_periods": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_monotonic_on": {
  "data": {
   "lineno": 3308,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.test_window.pytest",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_non_monotonic": {
  "data": {
   "lineno": 3831,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_on": {
  "data": {
   "lineno": 3288,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.date_range",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_perf_min": {
  "data": {
   "lineno": 3704,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_apply": {
  "data": {
   "lineno": 3739,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_count": {
  "data": {
   "lineno": 3636,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_kurt": {
  "data": {
   "lineno": 3623,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_max": {
  "data": {
   "lineno": 3720,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_mean": {
  "data": {
   "lineno": 3525,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_median": {
  "data": {
   "lineno": 3538,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_min": {
  "data": {
   "lineno": 3685,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_quantile": {
  "data": {
   "lineno": 3551,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_skew": {
  "data": {
   "lineno": 3610,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_std": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_sum": {
  "data": {
   "lineno": 3482,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_var": {
  "data": {
   "lineno": 3587,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_regular_min": {
  "data": {
   "lineno": 3658,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_rolling_cov_offset": {
  "data": {
   "lineno": 3849,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_valid": {
  "data": {
   "lineno": 3259,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "numpy.array",
    "pandas.offsets.Day",
    "pandas.offsets.MonthBegin",
    "pandas.tests.test_window.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestWindow.setup_method": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow.test_constructor": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array",
    "pandas.tests.test_window.pytest",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow.test_numpy_compat": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "getattr",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.window.Window",
    "pandas.errors.UnsupportedFunctionCall",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_window.UnsupportedFunctionCall": {
  "data": {
   "shadows": "pandas.errors.UnsupportedFunctionCall"
  },
  "type": "import"
 },
 "pandas.tests.test_window._consistency_data": {
  "data": {
   "lineno": 1953
  },
  "type": "constant"
 },
 "pandas.tests.test_window._create_consistency_data": {
  "data": {
   "lineno": 1901,
   "symbols_in_volume": [
    "create_dataframes",
    "create_series",
    "is_constant",
    "no_nans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_dataframes": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "create_series",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_series": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.is_constant": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "len",
    "pandas.notnull",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.no_nans": {
  "data": {
   "lineno": 1944
  },
  "type": "function"
 },
 "pandas.tests.test_window.assert_equal": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.test_window.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_window.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.test_window.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_window.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_window.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.test_window.mom": {
  "data": {
   "shadows": "pandas.stats.moments"
  },
  "type": "import"
 },
 "pandas.tests.test_window.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_window.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_window.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.test_window.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_window.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.test_window.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.test_window.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_window.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_window.rwindow": {
  "data": {
   "shadows": "pandas.core.window"
  },
  "type": "import"
 },
 "pandas.tests.test_window.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_window.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_window.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_window.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_window.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_window.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.tools.test_numeric": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_all_nan": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_datetimelike": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_downcast": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int64",
    "numpy.typecodes",
    "numpy.uint16",
    "object",
    "pandas.to_numeric",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_downcast_limits": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.tests.tools.test_numeric.pytest",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_empty": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.int8",
    "object",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_error_seen_bool": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_list": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.to_numeric",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_list_numeric": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.to_numeric",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_non_hashable": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dict",
    "numpy.inf",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.tools.test_numeric.decimal",
    "pandas.to_numeric",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric_dtypes": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric_lists_and_arrays": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.tests.tools.test_numeric.decimal",
    "pandas.to_numeric",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_period": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_scalar": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isnan",
    "pandas.tests.tools.test_numeric.pytest",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_series": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_series_numeric": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_str": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_timedelta": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_type_check": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tools.test_numeric._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.iinfo": {
  "data": {
   "shadows": "numpy.iinfo"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.tools.test_numeric.to_numeric": {
  "data": {
   "shadows": "pandas.to_numeric"
  },
  "type": "import"
 },
 "pandas.tests.tseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.tseries.test_frequencies": {
  "data": {
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "module"
 },
 "pandas.tests.tseries.test_frequencies.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.MONTHS": {
  "data": {
   "lineno": 825
  },
  "type": "constant"
 },
 "pandas.tests.tseries.test_frequencies.PeriodIndex": {
  "data": {
   "shadows": "pandas.core.indexes.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_code": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.tseries.frequencies._period_code_map",
    "pandas.tseries.frequencies.get_freq",
    "pandas.tseries.frequencies.get_freq_group"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_group": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq_group",
    "pandas.tseries.offsets.Week",
    "pandas.tseries.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_to_reso": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.Resolution"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_get_freq_code": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.tseries.offsets.Week"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_get_to_timestamp_base": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_to_timestamp_base",
    "tsb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_resolution_bumping": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies.Resolution"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference._check_generated_range": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference._check_tick": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_annual": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_annual_ambiguous": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_annual": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_daily": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_monthly": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_start_monthly": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_day": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_day_corner": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_fifth_week_of_month": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tests.tseries.test_frequencies.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_fifth_week_of_month_infer": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_hour": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_businesshour": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_tz": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_tz_transition": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_invalid_index_types": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.compat.is_platform_windows",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_legacy_offset_warnings": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.tseries.frequencies.get_offset",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_microsecond": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_millisecond": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_minute": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_monthly": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_monthly_ambiguous": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_nanosecond": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_non_datetimeindex": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "pandas.core.tools.datetimes.to_datetime",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_non_datetimeindex2": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_not_monotonic": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_quarterly": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_raise_if_period_index": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.indexes.period.PeriodIndex",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_raise_if_too_few": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.tseries.test_frequencies._dti",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_second": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_series": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_string_datetimelike_compat": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_week_of_month": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_week_of_month_fake": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_weekly": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_anchored_shortcuts": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.QuarterEnd",
    "pandas.tseries.offsets.SemiMonthBegin",
    "pandas.tseries.offsets.SemiMonthEnd",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_invalid": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.SemiMonthBegin",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_leading_zero": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_multiple": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.Nano",
    "pandas.tseries.offsets.Second",
    "pandas.tseries.offsets.SemiMonthBegin",
    "pandas.tseries.offsets.SemiMonthEnd",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_negative": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_pd_timedelta": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.tests.tseries.test_frequencies.pytest",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.Second"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies._dti": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "pandas.tests.tseries.test_frequencies.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.test_get_rule_month": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.tseries.frequencies._get_rule_month",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.QuarterEnd",
    "pandas.tseries.offsets.Week",
    "pandas.tseries.offsets.YearEnd",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_is_superperiod_subperiod": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.is_subperiod",
    "pandas.tseries.frequencies.is_superperiod",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.tseries.offsets.Nano",
    "pandas.tseries.offsets.Second",
    "pandas.tseries.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_ms_vs_MS": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_offset",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.MonthBegin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_period_str_to_code": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "_assert_depr",
    "pandas.tseries.frequencies._period_str_to_code"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_period_str_to_code._assert_depr": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "aliases",
    "isinstance",
    "list",
    "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
    "pandas.tseries.frequencies._period_str_to_code",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_rule_aliases": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Micro"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_frequencies.to_datetime": {
  "data": {
   "shadows": "pandas.core.tools.datetimes.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.tseries.test_holiday.AbstractHolidayCalendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.AbstractHolidayCalendar"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.holiday.DateOffset"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.EasterMonday": {
  "data": {
   "shadows": "pandas.tseries.holiday.EasterMonday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.GoodFriday": {
  "data": {
   "shadows": "pandas.tseries.holiday.GoodFriday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.Holiday": {
  "data": {
   "shadows": "pandas.tseries.holiday.Holiday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.HolidayCalendarFactory": {
  "data": {
   "shadows": "pandas.tseries.holiday.HolidayCalendarFactory"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.MO": {
  "data": {
   "shadows": "pandas.tseries.holiday.MO"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.SA": {
  "data": {
   "shadows": "pandas.tseries.holiday.SA"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.setup_method": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USFederalHolidayCalendar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tests.tseries.test_holiday.TestCalendar",
    "pandas.tseries.holiday.Holiday",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching.TestCalendar": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching.TestCalendar.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_holiday.TestCalendar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_observance_dates": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.get_calendar",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_rule_from_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.get_calendar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_memorial_day": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "MemorialDay",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_memorial_day.MemorialDay": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.USMemorialDay"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1984": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "MLKCalendar",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1984.MLKCalendar": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.USMartinLutherKingJr"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.check_results": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.holiday.Timestamp",
    "pytz.utc.localize"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.setup_method": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_argument_types": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USThanksgivingDay.dates",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_easter": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.tseries.holiday.EasterMonday",
    "pandas.tseries.holiday.GoodFriday",
    "pandas.tseries.holiday.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_factory": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "len",
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.HolidayCalendarFactory",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USThanksgivingDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_get_calendar": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_holiday.TestCalendar",
    "pandas.tseries.holiday.get_calendar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_get_calendar.TestCalendar": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_holidays_within_dates": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "len",
    "pandas.compat.iteritems",
    "pandas.tseries.holiday.EasterMonday",
    "pandas.tseries.holiday.GoodFriday",
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USColumbusDay",
    "pandas.tseries.holiday.USLaborDay",
    "pandas.tseries.holiday.USMartinLutherKingJr",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USPresidentsDay",
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.get_calendar",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_non_observed_holiday": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_special_holidays": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.MO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_usmemorialday": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.USMemorialDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_usthanksgivingday": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.USThanksgivingDay"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHolidayConflictingArguments": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHolidayConflictingArguments.test_both_offset_observance_raises": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.tseries.test_holiday.pytest",
    "pandas.tseries.holiday.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.SA",
    "pandas.tseries.holiday.next_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.setup_method": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_after_nearest_workday": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pandas.tseries.holiday.after_nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_before_nearest_workday": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.tseries.holiday.before_nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_nearest_workday": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_monday": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_monday_or_tuesday": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_monday_or_tuesday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_workday": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_previous_friday": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pandas.tseries.holiday.previous_friday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_previous_workday": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pandas.tseries.holiday.previous_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_sunday_to_monday": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pandas.tseries.holiday.sunday_to_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_weekend_to_monday": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pandas.tseries.holiday.weekend_to_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.holiday.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USColumbusDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USColumbusDay"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USFederalHolidayCalendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.USFederalHolidayCalendar"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USLaborDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USLaborDay"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USMartinLutherKingJr": {
  "data": {
   "shadows": "pandas.tseries.holiday.USMartinLutherKingJr"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USMemorialDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USMemorialDay"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USPresidentsDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USPresidentsDay"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.USThanksgivingDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USThanksgivingDay"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.after_nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.after_nearest_workday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.before_nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.before_nearest_workday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.get_calendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.get_calendar"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.nearest_workday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.next_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_monday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.next_monday_or_tuesday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_monday_or_tuesday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.next_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_workday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.previous_friday": {
  "data": {
   "shadows": "pandas.tseries.holiday.previous_friday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.previous_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.previous_workday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.sunday_to_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.sunday_to_monday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.utc": {
  "data": {
   "shadows": "pytz.utc"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_holiday.weekend_to_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.weekend_to_monday"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.tseries.test_timezones.FixedOffset"
   ]
  },
  "type": "module"
 },
 "pandas.tests.tseries.test_timezones.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datetime.tzinfo"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.dst": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.tzname": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.utcoffset": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.NonExistentTimeError": {
  "data": {
   "shadows": "pytz.exceptions.NonExistentTimeError"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneCacheKey": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneCacheKey.test_cache_keys_are_distinct_for_pytz_vs_dateutil": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "pandas._libs.tslib._p_tz_cache_key",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.cmptz": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.localize": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.setup_method": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_dst": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat",
    "pandas.Index",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_trans_pos_plus_1__bug": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.repeat",
    "pandas.Index",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_hour_overflow_dst": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_hour_overflow_dst_timestamps": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_tzlocal": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.dateutil",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_localize_tzlocal": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.dateutil",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tzlocal": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas.tests.tseries.test_timezones.dateutil",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_utc_with_system_utc": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas.tests.tseries.test_timezones.dateutil",
    "pandas.util.testing._skip_if_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.tz": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "pandas._libs.tslib.maybe_get_tz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.tzstr": {
  "data": {
   "lineno": 958
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.cmptz": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.localize": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.setup_method": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_bool": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_bool.f": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "numpy.array",
    "numpy.hstack",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.dateutil",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tseries.offsets.Hour",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags.f": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_infer": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.tseries.offsets.Hour",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_nat": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_astimezone": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_convert_datetime_list": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_convert_tz_aware_datetime_datetime": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.Timestamp",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixed_tz": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.FixedOffset",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixedoffset_noname": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Index",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.fixed_off_no_name"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_tz": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_date_range_localize": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_date_range_span_dst_transition": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz_nat": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.isnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_dateutil_tzoffset_support": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.tzinfo",
    "dateutil.tz.tzoffset",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_field_access_localize": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_fixed_offset": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tests.tseries.test_timezones.fixed_off",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_fixedtz_topydatetime": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.tests.tseries.test_timezones.fixed_off",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_from_records_utc": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_records",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_no_datetime64_dtype": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.dtypes.dtypes.DatetimeTZDtype",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_reset_index": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_getitem_pydatetime_tz": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_hongkong_tz_convert": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_astype_asobject_tzinfos": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "enumerate",
    "object",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_drop_dont_lose_tz": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_with_timezone_repr": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_infer_tz": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.core.tools.datetimes._infer_tzinfo",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tseries.offsets.Hour",
    "pandas.util.testing.assert_numpy_array_equal",
    "pytz.NonExistentTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion_explicit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tseries.offsets.Hour",
    "pytz.NonExistentTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localized_at_time_between_time": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_nonexistent_raise_coerce": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.util.testing.assert_index_equal",
    "pytz.exceptions.NonExistentTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_pass_dates_localize_to_utc": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_shift_localized": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_static_tzinfo": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_string_index_alias_tz_aware": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_take_dont_lose_meta": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary_explicit": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz_explicit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructor_near_dst_boundary": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_to_datetime_tzoffset": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datetime.tzinfo",
    "dateutil.tz.tzoffset",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_convert": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize_explicit": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_tzlocal": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "dateutil.tz.tzlocal",
    "numpy.array",
    "object",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_utc": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "numpy.array",
    "object",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_aware_asfreq": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_convert_unsorted": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_dti": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_empty_series": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_string": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tzaware_datetime_to_index": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_box_timestamp_and_localize": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify_explicit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_with_tz": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.core.indexes.datetimes.bdate_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.tseries.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_with_tz_ambiguous_times": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Minute"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.tz": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.tzstr": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.setup_method": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_align_aware": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_ambiguous_compat": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.Timestamp",
    "pandas.tests.tseries.test_timezones.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_aware": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_aware_naive": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_dst": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_arith_utc_convert": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_datetimeindex_tz": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_equal_join_ensure_utc": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_index_equals_with_tz": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_intersection": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_join_aware": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.random.randn",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_join_utc_convert": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_nat": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.tseries.offsets.Hour",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_normalize_tz": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_normalize_tz_local": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.set_timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_replace": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.Timestamp",
    "pandas.tests.tseries.test_timezones.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_replace.f": {
  "data": {
   "lineno": 1236
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_series_frame_tz_convert": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_series_frame_tz_localize": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_timestamp_equality_different_timezones": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "pandas.compat.zip",
    "pandas.core.indexes.datetimes.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_convert_roundtrip": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_localize_naive": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_localize_roundtrip": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tests.tseries.test_timezones.pytest",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tzaware_offset": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.tseries.offsets.Hour",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "compare_local_to_utc",
    "compare_utc_to_local",
    "numpy.array",
    "numpy.int64",
    "pandas._libs.tslib.iNaT",
    "pandas._libs.tslib.maybe_get_tz",
    "pandas._libs.tslib.tz_convert",
    "pandas.core.indexes.datetimes.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert.compare_local_to_utc": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "numpy.vectorize",
    "pandas._libs.tslib.tz_convert",
    "pandas._libs.tslib.tz_convert_single",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert.compare_utc_to_local": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "numpy.vectorize",
    "pandas._libs.tslib.tz_convert",
    "pandas._libs.tslib.tz_convert_single",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.bdate_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.date_range": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.date_range"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.fixed_off": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.tests.tseries.test_timezones.fixed_off_no_name": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.tests.tseries.test_timezones.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.maybe_get_tz": {
  "data": {
   "shadows": "pandas._libs.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.set_timezone": {
  "data": {
   "shadows": "pandas.util.testing.set_timezone"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tools": {
  "data": {
   "shadows": "pandas.core.tools.datetimes"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tslib": {
  "data": {
   "shadows": "pandas._libs.tslib"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tzinfo": {
  "data": {
   "shadows": "datetime.tzinfo"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.tzoffset": {
  "data": {
   "shadows": "dateutil.tz.tzoffset"
  },
  "type": "import"
 },
 "pandas.tests.tseries.test_timezones.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.util": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.util.test_hashing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.util.test_hashing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.TestHashing": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_hashing.TestHashing.check_equal": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.check_not_equal_with_index": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Index",
    "pandas.util.hash_pandas_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.setup_method": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_alread_encoded": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_alternate_encoding": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_categorical_consistency": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.assert_series_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_categorical_with_nan_consistency": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.hash_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_consistency": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.util.hash_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array_errors": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timestamp",
    "pandas.tests.util.test_hashing.pytest",
    "pandas.util.hash_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array_mixed": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.util.hash_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_collisions": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.uint64",
    "object",
    "pandas.util.hash_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_keys": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.hash_pandas_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_empty_object": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_object": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.makeMissingDataframe",
    "pandas.util.testing.makeMixedDataFrame",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries",
    "pandas.util.testing.makeTimedeltaIndex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_object2": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_scalar": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Interval",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.util.hashing._hash_scalar",
    "pandas.tests.util.test_hashing.datetime",
    "pandas.util.hash_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuple": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.core.util.hashing.hash_tuple",
    "pandas.core.util.hashing.hash_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuples": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.core.util.hashing.hash_tuples",
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuples_err": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timestamp",
    "pandas.core.util.hashing.hash_tuples",
    "pandas.tests.util.test_hashing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_invalid_key": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tests.util.test_hashing.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_invalid_key.f": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.hash_pandas_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_multiindex_objects": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.sort",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_multiindex_unique": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.util.hash_pandas_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_pandas_errors": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timestamp",
    "pandas.tests.util.test_hashing.pytest",
    "pandas.util.hash_pandas_object",
    "pandas.util.testing.makePanel",
    "warnings.catch_warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_same_len_hash_collisions": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.util.hash_array",
    "pandas.util.testing.rands_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing._hash_scalar": {
  "data": {
   "shadows": "pandas.core.util.hashing._hash_scalar"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.hash_array": {
  "data": {
   "shadows": "pandas.tools.hashing.hash_array"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.hash_pandas_object": {
  "data": {
   "shadows": "pandas.tools.hashing.hash_pandas_object"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.hash_tuple": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_tuple"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.hash_tuples": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_tuples"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.util.test_hashing.test_deprecation": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.tools.hashing.hash_array",
    "pandas.tools.hashing.hash_pandas_object",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_hashing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.util.test_testing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.RNGContext": {
  "data": {
   "shadows": "pandas.util.testing.RNGContext"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual._assert_almost_equal_both": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual._assert_not_almost_equal_both": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DictLikeObj"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.__getitem__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.keys": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dicts": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_edge_case_ndarrays": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_inf": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_iterables": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "iter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_null": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.NaN"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_mixed": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_zeros": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_object": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_pandas": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_strings": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertCategoricalEqual": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertCategoricalEqual.test_categorical_equal_message": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual._assert_equal": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual._assert_not_equal": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_empty_dtypes": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_equal_with_different_row_order": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_frame_equal_message": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_index_dtype": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_multiindex_dtype": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_not_equal_with_different_shape": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual.test_index_equal_message": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual.test_index_equal_metadata_message": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_assert_almost_equal_iterable_message": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_copy_flag": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_message": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.nan",
    "pandas.compat.is_platform_windows",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_object_message": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pandas.Timestamp",
    "pandas.compat.is_platform_windows",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual._assert_equal": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual._assert_not_equal": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_equal": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_index_dtype": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_less_precise": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Series",
    "pandas.tests.util.test_testing.pytest",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_multiindex_dtype": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_not_equal": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_series_equal_message": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Series",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestLocale": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestLocale.test_locale": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "len",
    "pandas.tests.util.test_testing.pytest",
    "pandas.tests.util.test_testing.sys",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestRNGContext": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestRNGContext.test_RNGContext": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.RNGContext"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestUtilTesting": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestUtilTesting.test_raise_with_traceback": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "LookupError",
    "ValueError",
    "pandas.tests.util.test_testing.sys",
    "pandas.util.testing.assert_raises_regex",
    "pandas.util.testing.raise_with_traceback"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_testing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.raise_with_traceback": {
  "data": {
   "shadows": "pandas.util.testing.raise_with_traceback"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.util.test_testing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.util.test_util.locale",
    "pandas.tests.util.test_util.os"
   ]
  },
  "type": "module"
 },
 "pandas.tests.util.test_util.BadMove": {
  "data": {
   "shadows": "pandas.util._move.BadMove"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.CURRENT_LOCALE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.tests.util.test_util.LOCALE_OVERRIDE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.util.test_util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.TestDecorators": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f1": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f2": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f3": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_bad_deprecate_kwarg": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.util.test_util.pytest"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_bad_deprecate_kwarg.f4": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.util._decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_callable_deprecate_kwarg": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "pandas.tests.util.test_util.pytest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_deprecate_kwarg": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_dict_deprecate_kwarg": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_missing_deprecate_kwarg": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.setup_class": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.util.test_util.pytest",
    "pandas.util.testing._skip_if_windows",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.teardown_class": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_get_locales": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_get_locales_prefix": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len",
    "pandas.tests.util.test_util.pytest",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_set_locale": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "all",
    "len",
    "pandas.tests.util.test_util.CURRENT_LOCALE",
    "pandas.tests.util.test_util.LOCALE_OVERRIDE",
    "pandas.tests.util.test_util.codecs",
    "pandas.tests.util.test_util.locale",
    "pandas.tests.util.test_util.pytest",
    "pandas.util.testing._can_set_locale",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestMove.test_cannot_create_instance_of_stolenbuffer": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util._move.stolenbuf",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_exactly_one_ref": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "bytearray",
    "pandas.util._move.move_into_mutable_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "make_string",
    "pandas.compat.intern",
    "pandas.tests.util.test_util.pytest",
    "pandas.tests.util.test_util.sys",
    "pandas.util._move.BadMove",
    "pandas.util._move.move_into_mutable_buffer",
    "ref_capture",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned.make_string": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned.ref_capture": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "pandas.tests.util.test_util.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_more_than_one_ref": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pandas.tests.util.test_util.pytest",
    "pandas.util._move.BadMove",
    "pandas.util._move.move_into_mutable_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_more_than_one_ref.handle_success": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_arg_length_max_value_multiple": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "len",
    "pandas.util._validators.validate_args",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_arg_length_max_value_single": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util._validators.validate_args",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_min_fname_arg_count": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util._validators.validate_args",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_not_all_defaults": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "pandas.util._validators.validate_args",
    "pandas.util.testing.assert_raises_regex",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_validation": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "pandas.util._validators.validate_args"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_bad_kwarg": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "pandas.util._validators.validate_kwargs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_not_all_none": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "dict",
    "pandas.util._validators.validate_kwargs",
    "pandas.util.testing.assert_raises_regex",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_validate_bool_kwarg": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util._validators.validate_bool_kwarg",
    "pandas.util.testing.assert_raises_regex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_validation": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "pandas.util._validators.validate_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_duplicate_argument": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "pandas.util._validators.validate_args_and_kwargs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_multiple": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util._validators.validate_args_and_kwargs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_one": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util._validators.validate_args_and_kwargs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_no_args_with_kwargs": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "pandas.util._validators.validate_args_and_kwargs",
    "pandas.util.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_validation": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.util._validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util._decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.intern": {
  "data": {
   "shadows": "pandas.compat.intern"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.move_into_mutable_buffer": {
  "data": {
   "shadows": "pandas.util._move.move_into_mutable_buffer"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.numpy": {
  "data": {
   "shadows": "pandas.compat.numpy"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.stolenbuf": {
  "data": {
   "shadows": "pandas.util._move.stolenbuf"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.test_numpy_errstate_is_default": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.tests.util.test_util.numpy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.test_rands": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.test_rands_array": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.util.test_util.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.validate_args": {
  "data": {
   "shadows": "pandas.util._validators.validate_args"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.validate_args_and_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_args_and_kwargs"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.validate_bool_kwarg": {
  "data": {
   "shadows": "pandas.util._validators.validate_bool_kwarg"
  },
  "type": "import"
 },
 "pandas.tests.util.test_util.validate_kwargs": {
  "data": {
   "shadows": "pandas.util._validators.validate_kwargs"
  },
  "type": "import"
 },
 "pandas.tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tools.hashing": {
  "data": {
   "symbols_in_volume": [
    "pandas.tools.hashing.m",
    "pandas.tools.hashing.outer",
    "pandas.tools.hashing.sys",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.tools.hashing.m": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pandas.tools.hashing.outer": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pandas.tools.hashing.outer.wrapper": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "pandas.tools.hashing.warnings",
    "pandas.util"
   ]
  },
  "type": "function"
 },
 "pandas.tools.hashing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tools.hashing.util": {
  "data": {
   "shadows": "pandas.util"
  },
  "type": "import"
 },
 "pandas.tools.hashing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tools.merge": {
  "data": {
   "symbols_in_volume": [
    "pandas.tools.merge.concat_wrap"
   ]
  },
  "type": "module"
 },
 "pandas.tools.merge.concat": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.tools.merge.concat_wrap": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "pandas.tools.merge.concat_wrap.wrapper": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.concat",
    "pandas.tools.merge.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tools.merge.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tools.merge.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tools.plotting": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "pandas.plotting",
    "pandas.tools.plotting.m",
    "pandas.tools.plotting.outer",
    "pandas.tools.plotting.sys",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.tools.plotting._plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.tools.plotting.m": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.tools.plotting.outer": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pandas.tools.plotting.outer.wrapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.plotting",
    "pandas.tools.plotting.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tools.plotting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tools.plotting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.api": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.api.infer_freq": {
  "data": {
   "shadows": "pandas.tseries.frequencies.infer_freq"
  },
  "type": "import"
 },
 "pandas.tseries.api.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.converter": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.converter.DatetimeConverter": {
  "data": {
   "shadows": "pandas.plotting._converter.DatetimeConverter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.MilliSecondLocator": {
  "data": {
   "shadows": "pandas.plotting._converter.MilliSecondLocator"
  },
  "type": "import"
 },
 "pandas.tseries.converter.PandasAutoDateFormatter": {
  "data": {
   "shadows": "pandas.plotting._converter.PandasAutoDateFormatter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.PandasAutoDateLocator": {
  "data": {
   "shadows": "pandas.plotting._converter.PandasAutoDateLocator"
  },
  "type": "import"
 },
 "pandas.tseries.converter.PeriodConverter": {
  "data": {
   "shadows": "pandas.plotting._converter.PeriodConverter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.TimeConverter": {
  "data": {
   "shadows": "pandas.plotting._converter.TimeConverter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.TimeFormatter": {
  "data": {
   "shadows": "pandas.plotting._converter.TimeFormatter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.TimeSeries_DateFormatter": {
  "data": {
   "shadows": "pandas.plotting._converter.TimeSeries_DateFormatter"
  },
  "type": "import"
 },
 "pandas.tseries.converter.TimeSeries_DateLocator": {
  "data": {
   "shadows": "pandas.plotting._converter.TimeSeries_DateLocator"
  },
  "type": "import"
 },
 "pandas.tseries.converter.get_datevalue": {
  "data": {
   "shadows": "pandas.plotting._converter.get_datevalue"
  },
  "type": "import"
 },
 "pandas.tseries.converter.get_finder": {
  "data": {
   "shadows": "pandas.plotting._converter.get_finder"
  },
  "type": "import"
 },
 "pandas.tseries.converter.register": {
  "data": {
   "shadows": "pandas.plotting._converter.register"
  },
  "type": "import"
 },
 "pandas.tseries.converter.time2num": {
  "data": {
   "shadows": "pandas.plotting._converter.time2num"
  },
  "type": "import"
 },
 "pandas.tseries.holiday": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.relativedelta.MO",
    "dateutil.relativedelta.TH",
    "pandas.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Easter"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datetime.datetime",
    "object",
    "pandas.Timestamp",
    "pandas.compat.add_metaclass",
    "pandas.tseries.holiday.HolidayCalendarMetaClass"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.holidays": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "Exception",
    "pandas.Timestamp",
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge_class": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.rule_from_name": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pandas.tseries.holiday.DateOffset": {
  "data": {
   "shadows": "pandas.DateOffset"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Easter": {
  "data": {
   "shadows": "pandas.tseries.offsets.Easter"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.EasterMonday": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.FR": {
  "data": {
   "shadows": "dateutil.relativedelta.FR"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.GoodFriday": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.Holiday": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.Holiday.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.Timestamp",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.__repr__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._apply_rule": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.tseries.holiday.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._reference_dates": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.dates": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datetime.datetime",
    "max",
    "min",
    "numpy.in1d",
    "pandas.Series",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarFactory": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass.__new__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "pandas.tseries.holiday.HolidayCalendarMetaClass",
    "pandas.tseries.holiday.register",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.MO": {
  "data": {
   "shadows": "dateutil.relativedelta.MO"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.SA": {
  "data": {
   "shadows": "dateutil.relativedelta.SA"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.SU": {
  "data": {
   "shadows": "dateutil.relativedelta.SU"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.TH": {
  "data": {
   "shadows": "dateutil.relativedelta.TH"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.TU": {
  "data": {
   "shadows": "dateutil.relativedelta.TU"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.USColumbusDay": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USFederalHolidayCalendar": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.USColumbusDay",
    "pandas.tseries.holiday.USLaborDay",
    "pandas.tseries.holiday.USMartinLutherKingJr",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USPresidentsDay",
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.nearest_workday"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.USLaborDay": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USMartinLutherKingJr": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USMemorialDay": {
  "data": {
   "lineno": 466
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USPresidentsDay": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USThanksgivingDay": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.WE": {
  "data": {
   "shadows": "dateutil.relativedelta.WE"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.add_metaclass": {
  "data": {
   "shadows": "pandas.compat.add_metaclass"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.after_nearest_workday": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday",
    "pandas.tseries.holiday.next_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.before_nearest_workday": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday",
    "pandas.tseries.holiday.previous_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.get_calendar": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.tseries.holiday.holiday_calendars"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.holiday_calendars": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.nearest_workday": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday_or_tuesday": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_workday": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.previous_friday": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.previous_workday": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.register": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.tseries.holiday.holiday_calendars"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.sunday_to_monday": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.weekend_to_monday": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.plotting": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.plotting.tsplot": {
  "data": {
   "shadows": "pandas.plotting._timeseries.tsplot"
  },
  "type": "import"
 },
 "pandas.tseries.util": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.util.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.util._ensure_platform_int": {
  "data": {
   "shadows": "pandas.core.dtypes.common._ensure_platform_int"
  },
  "type": "import"
 },
 "pandas.tseries.util.algorithms": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tseries.util.isleapyear": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.asarray",
    "numpy.logical_and",
    "numpy.logical_or",
    "pandas.tseries.util.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.util.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tseries.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.util.pivot_annual": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.nan",
    "pandas.compat.lrange",
    "pandas.core.algorithms.unique1d",
    "pandas.core.dtypes.common._ensure_platform_int",
    "pandas.core.frame.DataFrame",
    "pandas.tseries.util.isleapyear",
    "pandas.tseries.util.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tslib": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.tslib.NaT": {
  "data": {
   "shadows": "pandas._libs.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.tslib.NaTType": {
  "data": {
   "shadows": "pandas._libs.tslib.NaTType"
  },
  "type": "import"
 },
 "pandas.tslib.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas._libs.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "pandas.tslib.Timedelta": {
  "data": {
   "shadows": "pandas._libs.tslib.Timedelta"
  },
  "type": "import"
 },
 "pandas.tslib.Timestamp": {
  "data": {
   "shadows": "pandas._libs.tslib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tslib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.types": {
  "data": {},
  "type": "module"
 },
 "pandas.types.common": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "pandas.types.common.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.types.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.types.concat": {
  "data": {},
  "type": "module"
 },
 "pandas.types.concat.union_categoricals": {
  "data": {
   "shadows": "pandas.api.types.union_categoricals",
   "symbols_in_volume": [
    "pandas.api.types.union_categoricals"
   ]
  },
  "type": "import"
 },
 "pandas.types.concat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util": {
  "data": {},
  "type": "module"
 },
 "pandas.util.Appender": {
  "data": {
   "shadows": "pandas.util._decorators.Appender"
  },
  "type": "import"
 },
 "pandas.util.Substitution": {
  "data": {
   "shadows": "pandas.util._decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.util._decorators": {
  "data": {},
  "type": "module"
 },
 "pandas.util._decorators.Appender": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util._decorators.Appender.__call__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "func",
    "func.__doc__",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.Appender.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.util._decorators.indent"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.Substitution": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util._decorators.Substitution.__call__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "func",
    "func.__doc__"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.Substitution.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.Substitution.from_params": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.Substitution.update": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas.util._decorators.cache_readonly": {
  "data": {
   "shadows": "pandas._libs.lib.cache_readonly"
  },
  "type": "import"
 },
 "pandas.util._decorators.callable": {
  "data": {
   "shadows": "pandas.compat.callable"
  },
  "type": "import"
 },
 "pandas.util._decorators.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.util._decorators.deprecate": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pandas.util._decorators.deprecate.wrapper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "FutureWarning",
    "alternative",
    "pandas.util._decorators.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "pandas.compat.callable"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg.wrapper": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "func",
    "functools.wraps",
    "hasattr",
    "mapping",
    "pandas.util._decorators.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util._decorators.docstring_wrapper.__call__": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__doc__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__get__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.util._decorators.types"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "func",
    "functools.update_wrapper",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.indent": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.make_signature": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "len",
    "pandas.compat.signature",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util._decorators.signature": {
  "data": {
   "shadows": "pandas.compat.signature"
  },
  "type": "import"
 },
 "pandas.util._decorators.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pandas.util._decorators.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "pandas.util._decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util._decorators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.util._depr_module": {
  "data": {},
  "type": "module"
 },
 "pandas.util._depr_module._DeprecatedModule": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util._depr_module._DeprecatedModule.__dir__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__getattr__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "FutureWarning",
    "ImportError",
    "getattr",
    "object.__getattribute__",
    "pandas.util._depr_module.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dir",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__repr__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule._import_deprmod": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util._depr_module.importlib",
    "pandas.util._depr_module.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util._depr_module.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas.util._depr_module.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util._doctools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "matplotlib.pyplot.show",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.util._doctools.TablePlotter",
    "pandas.util._doctools.col",
    "pandas.util._doctools.df1",
    "pandas.util._doctools.df2",
    "pandas.util._doctools.df3",
    "pandas.util._doctools.idx",
    "pandas.util._doctools.p"
   ]
  },
  "type": "module"
 },
 "pandas.util._doctools.TablePlotter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util._doctools.TablePlotter.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._conv": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._get_cells": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "max",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._insert_index": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.concat",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._make_table": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems",
    "pandas.plotting.table"
   ]
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._shape": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter.plot": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.gridspec.GridSpec",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "max",
    "numpy.max",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util._doctools.col": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "pandas.util._doctools.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.util._doctools.df1": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandas.util._doctools.df2": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.util._doctools.df3": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "pandas.util._doctools.gridspec": {
  "data": {
   "shadows": "matplotlib.gridspec"
  },
  "type": "import"
 },
 "pandas.util._doctools.idx": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "pandas.util._doctools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.util._doctools.p": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pandas.util._doctools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.util._doctools.plotting": {
  "data": {
   "shadows": "pandas.plotting"
  },
  "type": "import"
 },
 "pandas.util._doctools.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.util._print_versions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.util._print_versions.main",
    "pandas.util._print_versions.sys"
   ]
  },
  "type": "module"
 },
 "pandas.util._print_versions.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "pandas.util._print_versions.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.util._print_versions.get_sys_info": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util._print_versions.locale",
    "pandas.util._print_versions.os",
    "pandas.util._print_versions.platform",
    "pandas.util._print_versions.struct",
    "pandas.util._print_versions.subprocess",
    "pandas.util._print_versions.sys"
   ]
  },
  "type": "function"
 },
 "pandas.util._print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas.util._print_versions.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "pandas.util._print_versions.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pandas.util._print_versions.main": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "optparse.OptionParser",
    "pandas.util._print_versions.show_versions"
   ]
  },
  "type": "function"
 },
 "pandas.util._print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util._print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.util._print_versions.show_versions": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.util._print_versions.codecs",
    "pandas.util._print_versions.get_sys_info",
    "pandas.util._print_versions.importlib",
    "pandas.util._print_versions.sys",
    "print",
    "simplejson.dump",
    "ver_f"
   ]
  },
  "type": "function"
 },
 "pandas.util._print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.util._print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.util._print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util._tester": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.util._tester.os"
   ]
  },
  "type": "module"
 },
 "pandas.util._tester.PKG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas.util._tester.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.util._tester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util._tester.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas.util._tester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util._tester.test": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.util._tester.PKG",
    "pandas.util._tester.pytest",
    "pandas.util._tester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators": {
  "data": {},
  "type": "module"
 },
 "pandas.util._validators._check_arg_length": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators._check_for_default_values": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.dtypes.common.is_bool"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators._check_for_invalid_keys": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators.is_bool": {
  "data": {
   "shadows": "pandas.core.dtypes.common.is_bool"
  },
  "type": "import"
 },
 "pandas.util._validators.validate_args": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "pandas.util._validators._check_arg_length",
    "pandas.util._validators._check_for_default_values",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators.validate_args_and_kwargs": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "pandas.util._validators._check_arg_length",
    "pandas.util._validators.validate_kwargs",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators.validate_bool_kwarg": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.dtypes.common.is_bool",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.util._validators.validate_kwargs": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.util._validators._check_for_default_values",
    "pandas.util._validators._check_for_invalid_keys"
   ]
  },
  "type": "function"
 },
 "pandas.util.cache_readonly": {
  "data": {
   "shadows": "pandas.util._decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.util.decorators": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "pandas.util.decorators.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.util.decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util.hash_array": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_array"
  },
  "type": "import"
 },
 "pandas.util.hash_pandas_object": {
  "data": {
   "shadows": "pandas.core.util.hashing.hash_pandas_object"
  },
  "type": "import"
 },
 "pandas.util.hashing": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.hashing.m",
    "pandas.util.hashing.outer",
    "pandas.util.hashing.sys",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.util.hashing.m": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pandas.util.hashing.outer": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pandas.util.hashing.outer.wrapper": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "pandas.util",
    "pandas.util.hashing.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util.hashing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util.hashing.util": {
  "data": {
   "shadows": "pandas.util"
  },
  "type": "import"
 },
 "pandas.util.hashing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.v": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 }
}