{
 "pandas": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.lib",
   "pandas._libs.tslib",
   "pandas.util._depr_module._DeprecatedModule"
  ],
  "type": "module"
 },
 "pandas._libs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas._libs.tslibs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas._version": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "module"
 },
 "pandas._version.get_versions": {
  "lineno": 22,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pandas.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.api.types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "__builtin__.filter",
   "__builtin__.map",
   "__builtin__.range",
   "__builtin__.zip",
   "cStringIO.StringIO",
   "dateutil.__version__",
   "dateutil.parser.parse",
   "distutils.version.LooseVersion",
   "functools.reduce",
   "io.StringIO",
   "itertools.ifilter",
   "itertools.imap",
   "itertools.izip",
   "platform.python_implementation",
   "re.compile",
   "sys.intern",
   "sys.version_info",
   "types.ClassType"
  ],
  "type": "module"
 },
 "pandas.compat.ResourceWarning": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.compat.add_metaclass": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.add_metaclass.wrapper": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.bind_method": {
  "lineno": 212,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandas.compat.bytes_to_str": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.callable": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.compat.chainmap.DeepChainMap": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.compat.chainmap_impl.ChainMap"
  ],
  "type": "class"
 },
 "pandas.compat.chainmap.DeepChainMap.__delitem__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.__setitem__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.new_child": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.compat.chainmap_impl.ChainMap": {
  "lineno": 35,
  "symbols_in_volume": [
   "collections.MutableMapping"
  ],
  "type": "class"
 },
 "pandas.compat.chainmap_impl.ChainMap.__bool__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__contains__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__delitem__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__getitem__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__iter__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__len__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__missing__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__repr__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__setitem__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.clear": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.copy": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.fromkeys": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.get": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.new_child": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.parents": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.pop": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.popitem": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function.wrapper": {
  "lineno": 15,
  "symbols_in_volume": [
   "_thread.get_ident"
  ],
  "type": "function"
 },
 "pandas.compat.east_asian_len": {
  "lineno": 330,
  "symbols_in_volume": [
   "unicodedata.east_asian_width"
  ],
  "type": "function"
 },
 "pandas.compat.get_range_parameters": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.import_lzma": {
  "lineno": 343,
  "symbols_in_volume": [
   "backports.lzma"
  ],
  "type": "function"
 },
 "pandas.compat.is_platform_32bit": {
  "lineno": 438,
  "symbols_in_volume": [
   "struct.calcsize"
  ],
  "type": "function"
 },
 "pandas.compat.is_platform_linux": {
  "lineno": 430,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "pandas.compat.is_platform_little_endian": {
  "lineno": 421,
  "symbols_in_volume": [
   "sys.byteorder"
  ],
  "type": "function"
 },
 "pandas.compat.is_platform_mac": {
  "lineno": 434,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "pandas.compat.is_platform_windows": {
  "lineno": 426,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "pandas.compat.isidentifier": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.iteritems": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.iterkeys": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.itervalues": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.lfilter": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.lmap": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.lrange": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.lzip": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.numpy": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "re.compile"
  ],
  "type": "module"
 },
 "pandas.compat.numpy.function": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict"
  ],
  "type": "module"
 },
 "pandas.compat.numpy.function.CompatValidator": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.compat.numpy.function.CompatValidator.__call__": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args",
   "pandas.util._validators.validate_args_and_kwargs",
   "pandas.util._validators.validate_kwargs"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.CompatValidator.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.numpy.function.process_skipna": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmax_with_skipna": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmin_with_skipna": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argsort_with_ascending": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_clip_with_axis": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_cum_func_with_skipna": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_expanding_func": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.errors.UnsupportedFunctionCall"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_groupby_func": {
  "lineno": 326,
  "symbols_in_volume": [
   "pandas.errors.UnsupportedFunctionCall"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_resampler_func": {
  "lineno": 349,
  "symbols_in_volume": [
   "pandas.errors.UnsupportedFunctionCall"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_rolling_func": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.errors.UnsupportedFunctionCall"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_take_with_convert": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_transpose_for_generic": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_window_func": {
  "lineno": 284,
  "symbols_in_volume": [
   "pandas.errors.UnsupportedFunctionCall"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.np_array_datetime64_compat": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.string_and_binary_types"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.np_datetime64_compat": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.compat.numpy.tz_replacer": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.compat.openpyxl_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.compat.openpyxl_compat.is_compat": {
  "lineno": 13,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "openpyxl.__version__"
  ],
  "type": "function"
 },
 "pandas.compat.parse_date": {
  "lineno": 412,
  "symbols_in_volume": [
   "dateutil.parser.parse",
   "functools.wraps"
  ],
  "type": "function"
 },
 "pandas.compat.pickle_compat": {
  "lineno": null,
  "symbols_in_volume": [
   "copy.copy",
   "pandas.compat.PY3",
   "pickle.NEWOBJ",
   "pickle.NEWOBJ_EX",
   "pickle.REDUCE"
  ],
  "type": "module"
 },
 "pandas.compat.pickle_compat.Unpickler": {
  "lineno": 121,
  "symbols_in_volume": [
   "pickle.Unpickler"
  ],
  "type": "class"
 },
 "pandas.compat.pickle_compat.Unpickler.find_class": {
  "lineno": 123,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "pandas.compat.pickle_compat.load": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj_ex": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_reduce": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "pandas.compat.raise_with_traceback": {
  "lineno": 382,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "pandas.compat.set_function_name": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.signature": {
  "lineno": 150,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "pandas.compat.str_to_bytes": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.strlen": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.to_str": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.u": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.compat.u_safe": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.computation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.computation.expressions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.computation.expressions.set_use_numexpr": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.set_option",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.conftest.add_imports": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy",
   "pandas",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.conftest.configure_tests": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.set_option",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.conftest.ip": {
  "lineno": 57,
  "symbols_in_volume": [
   "IPython.core.interactiveshell.InteractiveShell",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.conftest.pytest_addoption": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.conftest.pytest_runtest_setup": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.conftest.spmatrix": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.fixture",
   "scipy.sparse"
  ],
  "type": "function"
 },
 "pandas.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.accessor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.accessor.AccessorProperty": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.accessor.AccessorProperty.__delete__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.AccessorProperty.__get__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.AccessorProperty.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.AccessorProperty.__set__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.DirNamesMixin": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.accessor.DirNamesMixin.__dir__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.DirNamesMixin._dir_additions": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.DirNamesMixin._dir_deletions": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors._create_delegator_method": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors._create_delegator_method.f": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors._create_delegator_property": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors._create_delegator_property._getter": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._add_delegate_accessors._create_delegator_property._setter": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._delegate_method": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._delegate_property_get": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._delegate_property_set": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.accessor.PandasDelegate._make_accessor": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.algorithms": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.uint8",
   "pandas._libs.algos.diff_2d_float32",
   "pandas._libs.algos.diff_2d_float64",
   "pandas._libs.algos.diff_2d_int16",
   "pandas._libs.algos.diff_2d_int32",
   "pandas._libs.algos.diff_2d_int64",
   "pandas._libs.algos.diff_2d_int8",
   "pandas._libs.algos.rank_1d_float64",
   "pandas._libs.algos.rank_1d_int64",
   "pandas._libs.algos.rank_1d_object",
   "pandas._libs.algos.rank_1d_uint64",
   "pandas._libs.algos.rank_2d_float64",
   "pandas._libs.algos.rank_2d_int64",
   "pandas._libs.algos.rank_2d_object",
   "pandas._libs.algos.rank_2d_uint64",
   "pandas._libs.algos.take_1d_bool_bool",
   "pandas._libs.algos.take_1d_bool_object",
   "pandas._libs.algos.take_1d_float32_float32",
   "pandas._libs.algos.take_1d_float32_float64",
   "pandas._libs.algos.take_1d_float64_float64",
   "pandas._libs.algos.take_1d_int16_float64",
   "pandas._libs.algos.take_1d_int16_int16",
   "pandas._libs.algos.take_1d_int16_int32",
   "pandas._libs.algos.take_1d_int16_int64",
   "pandas._libs.algos.take_1d_int32_float64",
   "pandas._libs.algos.take_1d_int32_int32",
   "pandas._libs.algos.take_1d_int32_int64",
   "pandas._libs.algos.take_1d_int64_float64",
   "pandas._libs.algos.take_1d_int64_int64",
   "pandas._libs.algos.take_1d_int8_float64",
   "pandas._libs.algos.take_1d_int8_int32",
   "pandas._libs.algos.take_1d_int8_int64",
   "pandas._libs.algos.take_1d_int8_int8",
   "pandas._libs.algos.take_1d_object_object",
   "pandas._libs.algos.take_2d_axis0_bool_bool",
   "pandas._libs.algos.take_2d_axis0_bool_object",
   "pandas._libs.algos.take_2d_axis0_float32_float32",
   "pandas._libs.algos.take_2d_axis0_float32_float64",
   "pandas._libs.algos.take_2d_axis0_float64_float64",
   "pandas._libs.algos.take_2d_axis0_int16_float64",
   "pandas._libs.algos.take_2d_axis0_int16_int16",
   "pandas._libs.algos.take_2d_axis0_int16_int32",
   "pandas._libs.algos.take_2d_axis0_int16_int64",
   "pandas._libs.algos.take_2d_axis0_int32_float64",
   "pandas._libs.algos.take_2d_axis0_int32_int32",
   "pandas._libs.algos.take_2d_axis0_int32_int64",
   "pandas._libs.algos.take_2d_axis0_int64_float64",
   "pandas._libs.algos.take_2d_axis0_int64_int64",
   "pandas._libs.algos.take_2d_axis0_int8_float64",
   "pandas._libs.algos.take_2d_axis0_int8_int32",
   "pandas._libs.algos.take_2d_axis0_int8_int64",
   "pandas._libs.algos.take_2d_axis0_int8_int8",
   "pandas._libs.algos.take_2d_axis0_object_object",
   "pandas._libs.algos.take_2d_axis1_bool_bool",
   "pandas._libs.algos.take_2d_axis1_bool_object",
   "pandas._libs.algos.take_2d_axis1_float32_float32",
   "pandas._libs.algos.take_2d_axis1_float32_float64",
   "pandas._libs.algos.take_2d_axis1_float64_float64",
   "pandas._libs.algos.take_2d_axis1_int16_float64",
   "pandas._libs.algos.take_2d_axis1_int16_int16",
   "pandas._libs.algos.take_2d_axis1_int16_int32",
   "pandas._libs.algos.take_2d_axis1_int16_int64",
   "pandas._libs.algos.take_2d_axis1_int32_float64",
   "pandas._libs.algos.take_2d_axis1_int32_int32",
   "pandas._libs.algos.take_2d_axis1_int32_int64",
   "pandas._libs.algos.take_2d_axis1_int64_float64",
   "pandas._libs.algos.take_2d_axis1_int64_int64",
   "pandas._libs.algos.take_2d_axis1_int8_float64",
   "pandas._libs.algos.take_2d_axis1_int8_int32",
   "pandas._libs.algos.take_2d_axis1_int8_int64",
   "pandas._libs.algos.take_2d_axis1_int8_int8",
   "pandas._libs.algos.take_2d_axis1_object_object",
   "pandas._libs.algos.take_2d_multi_bool_bool",
   "pandas._libs.algos.take_2d_multi_bool_object",
   "pandas._libs.algos.take_2d_multi_float32_float32",
   "pandas._libs.algos.take_2d_multi_float32_float64",
   "pandas._libs.algos.take_2d_multi_float64_float64",
   "pandas._libs.algos.take_2d_multi_int16_float64",
   "pandas._libs.algos.take_2d_multi_int16_int16",
   "pandas._libs.algos.take_2d_multi_int16_int32",
   "pandas._libs.algos.take_2d_multi_int16_int64",
   "pandas._libs.algos.take_2d_multi_int32_float64",
   "pandas._libs.algos.take_2d_multi_int32_int32",
   "pandas._libs.algos.take_2d_multi_int32_int64",
   "pandas._libs.algos.take_2d_multi_int64_float64",
   "pandas._libs.algos.take_2d_multi_int64_int64",
   "pandas._libs.algos.take_2d_multi_int8_float64",
   "pandas._libs.algos.take_2d_multi_int8_int32",
   "pandas._libs.algos.take_2d_multi_int8_int64",
   "pandas._libs.algos.take_2d_multi_int8_int8",
   "pandas._libs.algos.take_2d_multi_object_object",
   "pandas._libs.hashtable.Float64HashTable",
   "pandas._libs.hashtable.Float64Vector",
   "pandas._libs.hashtable.Int64HashTable",
   "pandas._libs.hashtable.Int64Vector",
   "pandas._libs.hashtable.ObjectVector",
   "pandas._libs.hashtable.PyObjectHashTable",
   "pandas._libs.hashtable.StringHashTable",
   "pandas._libs.hashtable.UInt64HashTable",
   "pandas._libs.hashtable.UInt64Vector"
  ],
  "type": "module"
 },
 "pandas.core.algorithms.SelectN": {
  "lineno": 906,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.algorithms.SelectN.__init__": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.is_valid_dtype_n_method": {
  "lineno": 922,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_complex_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.nlargest": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.SelectN.nsmallest": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.algorithms.SelectNFrame.__init__": {
  "lineno": 1006,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame.compute": {
  "lineno": 1013,
  "symbols_in_volume": [
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.SelectNFrame.compute.get_indexer": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.SelectNSeries": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.algorithms.SelectNSeries.compute": {
  "lineno": 947,
  "symbols_in_volume": [
   "numpy.nonzero",
   "numpy.s_",
   "pandas._libs.algos.kth_smallest"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._convert_wrapper": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms._convert_wrapper.wrapper": {
  "lineno": 1100,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._ensure_arraylike": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype",
   "pandas._libs.lib.list_to_object_array",
   "pandas.core.dtypes.generic.ABCCategorical",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._ensure_data": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common._ensure_uint64",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_complex_dtype",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.is_signed_integer_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.common.is_unsigned_integer_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._get_data_algo": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._get_hashtable_algo": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas._libs.hashtable",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._get_take_nd_function": {
  "lineno": 1254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms._get_take_nd_function.func": {
  "lineno": 1279,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._reconstruct_data": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_period_dtype"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._take_2d_multi_object": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms._take_nd_object": {
  "lineno": 1130,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._value_counts_arraylike": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.insert",
   "pandas._libs.hashtable",
   "pandas._libs.hashtable.value_count_int64",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.algorithms._view_wrapper": {
  "lineno": 1086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms._view_wrapper.wrapper": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.checked_add_with_arr": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.iinfo",
   "numpy.int64",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.checked_add_with_arr._broadcast": {
  "lineno": 747,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.empty",
   "pandas._libs.lib.isscalar",
   "pandas.compat.numpy._np_version_under1p10"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.diff": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.float64",
   "numpy.nan",
   "numpy.object_",
   "pandas.TimedeltaIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.duplicated": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas._libs.hashtable"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.factorize": {
  "lineno": 438,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.sorting.safe_sort"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.isin": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.in1d",
   "numpy.ndarray",
   "pandas._libs.hashtable.ismember_float64",
   "pandas._libs.hashtable.ismember_int64",
   "pandas._libs.hashtable.ismember_object",
   "pandas._libs.lib.list_to_object_array",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.generic.ABCIndex",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.match": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.hashtable",
   "pandas.core.common._asarray_tuplesafe"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.mode": {
  "lineno": 637,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.Series",
   "pandas._libs.hashtable",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.quantile": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.sort",
   "pandas._libs.algos.arrmap_float64",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.quantile._get_score": {
  "lineno": 874,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floor",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.quantile._interpolate": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.rank": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.algorithms.take_2d_multi": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.take_2d_multi.func": {
  "lineno": 1453,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.take_nd": {
  "lineno": 1287,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_interval_dtype"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.unique": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas._libs.hashtable",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.algorithms.value_counts": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.reshape.tile.cut",
   "pandas.core.series.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.api": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util._depr_module._DeprecatedModule"
  ],
  "type": "module"
 },
 "pandas.core.api.TimeGrouper": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.api.TimeGrouper.__new__": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.core.resample.TimeGrouper",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.api.groupby": {
  "lineno": 62,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.api.match": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.core.algorithms.match",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.base.DataError": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.GroupByError": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.GroupByMixin": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.GroupByMixin._dispatch": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer.f": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._gotitem": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.IndexOpsMixin.__iter__": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._reduce": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._update_inplace": {
  "lineno": 1163,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._values": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmax": {
  "lineno": 775,
  "symbols_in_volume": [
   "pandas.core.nanops.nanargmax"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmin": {
  "lineno": 789,
  "symbols_in_volume": [
   "pandas.core.nanops.nanargmin"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.base": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.data": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.drop_duplicates": {
  "lineno": 1118,
  "symbols_in_volume": [
   "numpy.logical_not",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.duplicated": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.zeros",
   "pandas.core.algorithms.duplicated",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.empty": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.factorize": {
  "lineno": 1004,
  "symbols_in_volume": [
   "pandas.core.algorithms.factorize"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.flags": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.hasnans": {
  "lineno": 827,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_monotonic": {
  "lineno": 941,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_monotonic_decreasing": {
  "lineno": 958,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_unique": {
  "lineno": 930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.item": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.itemsize": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.max": {
  "lineno": 771,
  "symbols_in_volume": [
   "pandas.core.nanops.nanmax"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.memory_usage": {
  "lineno": 973,
  "symbols_in_volume": [
   "pandas._libs.lib.memory_usage_of_objects",
   "pandas.compat.PYPY",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.min": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.core.nanops.nanmin"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nbytes": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.ndim": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nunique": {
  "lineno": 909,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.searchsorted": {
  "lineno": 1094,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.shape": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.size": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.strides": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.tolist": {
  "lineno": 799,
  "symbols_in_volume": [
   "pandas.core.common._maybe_box_datetimelike",
   "pandas.core.dtypes.common.is_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.transpose": {
  "lineno": 694,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_transpose"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.unique": {
  "lineno": 897,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique1d",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.value_counts": {
  "lineno": 841,
  "symbols_in_volume": [
   "pandas.core.algorithms.value_counts"
  ],
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.NoNewAttributesMixin.__setattr__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin._freeze": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.PandasObject": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.core.accessor.DirNamesMixin"
  ],
  "type": "class"
 },
 "pandas.core.base.PandasObject.__sizeof__": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.base.PandasObject.__unicode__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.PandasObject._constructor": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.PandasObject._reset_cache": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.cumsum",
   "numpy.max",
   "numpy.mean",
   "numpy.median",
   "numpy.min",
   "numpy.prod",
   "numpy.std",
   "numpy.sum",
   "numpy.var",
   "pandas.compat.builtins.max",
   "pandas.compat.builtins.min",
   "pandas.compat.builtins.sum"
  ],
  "type": "class"
 },
 "pandas.core.base.SelectionMixin.__getitem__": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems",
   "pandas.compat.iterkeys",
   "pandas.compat.itervalues",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg": {
  "lineno": 422,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_1dim": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_2dim": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.is_any_frame": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.core.dtypes.generic.ABCDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.is_any_series": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate.nested_renaming_depr": {
  "lineno": 350,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate_multiple_funcs": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.common._get_callable_name",
   "pandas.core.dtypes.cast.is_nested_object",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._gotitem": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_builtin_func": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_cython_func": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._obj_with_exclusions": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selected_obj": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selection_list": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selection_name": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._shallow_copy": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._try_aggregate_string_function": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.aggregate": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.ndim": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.base.SpecificationError": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.StringMixin": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.base.StringMixin.__bytes__": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.base.StringMixin.__repr__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.base.StringMixin.__str__": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.base.StringMixin.__unicode__": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.categorical.Categorical": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "class"
 },
 "pandas.core.categorical.Categorical.T": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__array__": {
  "lineno": 1197,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__getitem__": {
  "lineno": 1832,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__init__": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.string_types",
   "pandas.core.algorithms.factorize",
   "pandas.core.dtypes.cast.coerce_indexer_dtype",
   "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.generic.ABCCategoricalIndex",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.series._sanitize_array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__iter__": {
  "lineno": 1734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__len__": {
  "lineno": 1730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__setitem__": {
  "lineno": 1845,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.integer",
   "numpy.where",
   "pandas.Index",
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__setstate__": {
  "lineno": 1213,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.cast.coerce_indexer_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.__unicode__": {
  "lineno": 1813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._codes_for_groupby": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._constructor": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._from_inferred_categories": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.to_datetime",
   "pandas.to_numeric",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._get_codes": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._get_labels": {
  "lineno": 649,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._get_repr": {
  "lineno": 1806,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.io.formats.format.CategoricalFormatter"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._maybe_coerce_indexer": {
  "lineno": 1826,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._reduce": {
  "lineno": 1959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._repr_categories": {
  "lineno": 1753,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.io.formats.format.format_array"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._repr_categories_info": {
  "lineno": 1770,
  "symbols_in_volume": [
   "pandas.core.common.in_ipython_frontend",
   "pandas.core.config.get_option",
   "pandas.io.formats.terminal.get_terminal_size"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._repr_footer": {
  "lineno": 1801,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._reverse_indexer": {
  "lineno": 1919,
  "symbols_in_volume": [
   "pandas._libs.algos.groupsort_indexer"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._set_categories": {
  "lineno": 661,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_fastpath"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._set_codes": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._set_dtype": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._slice": {
  "lineno": 1712,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._tidy_repr": {
  "lineno": 1738,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical._values_for_rank": {
  "lineno": 1566,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.add_categories": {
  "lineno": 986,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.coerce_indexer_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.argsort": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.argsort",
   "pandas.compat.numpy.function.validate_argsort_with_ascending"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.as_ordered": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.as_unordered": {
  "lineno": 782,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.astype": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.base": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.categories": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.check_for_ordered": {
  "lineno": 1427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.copy": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.describe": {
  "lineno": 2126,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.dropna": {
  "lineno": 1354,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.dtype": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.equals": {
  "lineno": 2092,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.fillna": {
  "lineno": 1629,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.where",
   "pandas.core.missing.interpolate_2d",
   "pandas.isna",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.from_array": {
  "lineno": 568,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.from_codes": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "pandas.core.dtypes.dtypes.CategoricalDtype._validate_categories"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.get_values": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.dtypes.common.is_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.is_dtype_equal": {
  "lineno": 2107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.isna": {
  "lineno": 1297,
  "symbols_in_volume": [
   "numpy.logical_or",
   "numpy.nan",
   "numpy.where",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.itemsize": {
  "lineno": 467,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.map": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.take"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.max": {
  "lineno": 1993,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.memory_usage": {
  "lineno": 1251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.min": {
  "lineno": 1968,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.mode": {
  "lineno": 2018,
  "symbols_in_volume": [
   "pandas._libs.hashtable.mode_int64",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.nbytes": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.ndim": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.notna": {
  "lineno": 1326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.ordered": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.put": {
  "lineno": 1347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.ravel": {
  "lineno": 1595,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.remove_categories": {
  "lineno": 1035,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.remove_unused_categories": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.unique",
   "pandas.core.dtypes.cast.coerce_indexer_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_fastpath",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.rename_categories": {
  "lineno": 866,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dict_like",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._validators.validate_bool_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.reorder_categories": {
  "lineno": 944,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.repeat": {
  "lineno": 2144,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_repeat"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.reshape": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.reshape",
   "pandas.compat.numpy.function.validate_reshape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.searchsorted": {
  "lineno": 1277,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.set_categories": {
  "lineno": 795,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.set_ordered": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.shape": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.shift": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.roll",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.size": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.sort_values": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.take_nd": {
  "lineno": 1695,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.to_dense": {
  "lineno": 1618,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.tolist": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.common._maybe_box_datetimelike",
   "pandas.core.dtypes.common.is_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.unique": {
  "lineno": 2036,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique1d"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.value_counts": {
  "lineno": 1370,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.arange",
   "numpy.bincount",
   "numpy.nan",
   "numpy.where",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.core.categorical.Categorical.view": {
  "lineno": 1606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor": {
  "lineno": 2161,
  "symbols_in_volume": [
   "pandas.core.accessor.PandasDelegate",
   "pandas.core.base.NoNewAttributesMixin",
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.categorical.CategoricalAccessor.__init__": {
  "lineno": 2184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor._delegate_method": {
  "lineno": 2201,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor._delegate_property_get": {
  "lineno": 2190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor._delegate_property_set": {
  "lineno": 2193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor._make_accessor": {
  "lineno": 2208,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.categorical.CategoricalAccessor.codes": {
  "lineno": 2196,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.categorical._cat_compare_op": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.categorical._cat_compare_op.f": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pandas._libs.lib.item_from_zerodim",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.categorical._convert_to_list_like": {
  "lineno": 2278,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.is_sequence",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "pandas.core.categorical._factorize_from_iterable": {
  "lineno": 2293,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCCategoricalIndex",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.indexes.category.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.core.categorical._factorize_from_iterables": {
  "lineno": 2330,
  "symbols_in_volume": [
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.core.categorical._get_codes_for_values": {
  "lineno": 2229,
  "symbols_in_volume": [
   "pandas.core.algorithms._get_data_algo",
   "pandas.core.algorithms._hashtables",
   "pandas.core.dtypes.cast.coerce_indexer_dtype",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.categorical._maybe_to_categorical": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCCategoricalIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.categorical._recode_for_categories": {
  "lineno": 2246,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.cast.coerce_indexer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.lib.values_from_object",
   "pandas.api.types",
   "sys.modules"
  ],
  "type": "module"
 },
 "pandas.core.common.AbstractMethodError": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.common.AbstractMethodError.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.AbstractMethodError.__str__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.SettingWithCopyError": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.common.SettingWithCopyWarning": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.common._all_none": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._all_not_none": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._any_none": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._any_not_none": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._apply_if_callable": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._asarray_tuplesafe": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.object_",
   "pandas._libs.lib.list_to_object_array",
   "pandas.compat.string_types",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.common._consensus_name_attr": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._count_not_none": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._default_index": {
  "lineno": 207,
  "symbols_in_volume": [
   "pandas.core.index.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.core.common._dict_compat": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.common._get_callable_name": {
  "lineno": 447,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.common._get_distinct_objs": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._get_info_slice": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._index_labels_to_array": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.common._long_prod": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.core.common._maybe_box": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.common._maybe_box_datetimelike": {
  "lineno": 170,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.common._maybe_make_list": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._maybe_match_name": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._mut_exclusive": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._not_none": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._pipe": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._random_state": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.random",
   "numpy.random.RandomState",
   "pandas.api.types.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.common._try_sort": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common._where_compat": {
  "lineno": 482,
  "symbols_in_volume": [
   "numpy.where",
   "pandas._libs.tslib.ints_to_pydatetime",
   "pandas.core.dtypes.common._NS_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.common.array_equivalent": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.array_equivalent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.common.difference": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.flatten": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.core.dtypes.inference._iterable_not_string"
  ],
  "type": "function"
 },
 "pandas.core.common.groupby": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.common.groupby.__init__": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.groupby.__iter__": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.in_interactive_session": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.in_interactive_session.check_main": {
  "lineno": 564,
  "symbols_in_volume": [
   "__main__",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.common.in_ipnb": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.in_ipython_frontend": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.in_qtconsole": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.intersection": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.is_bool_indexer": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bool_",
   "numpy.ndarray",
   "numpy.object_",
   "pandas._libs.lib.is_bool_array",
   "pandas.core.dtypes.generic.ABCIndex",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.common.is_full_slice": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.is_null_slice": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.is_true_slices": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.iterpairs": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.common.map_indices_py": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.outer": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.outer.wrapper": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.core.dtypes.common",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.common.sentinel_factory": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.sentinel_factory.Sentinel": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.common.split_ranges": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.common.standardize_mapping": {
  "lineno": 512,
  "symbols_in_volume": [
   "collections.Mapping",
   "collections.defaultdict",
   "functools.partial",
   "inspect.isclass"
  ],
  "type": "function"
 },
 "pandas.core.common.union": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.align": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.align._align": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.result_type",
   "pandas.core.common.flatten",
   "pandas.core.computation.common._result_type_many",
   "pandas.core.generic.NDFrame"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._align_core": {
  "lineno": 61,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.log10",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._align_core_single_unary_op": {
  "lineno": 17,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.asanyarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._any_pandas_objects": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.core.generic.PandasObject"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._filter_special_cases": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.align._filter_special_cases.wrapper": {
  "lineno": 45,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.core.computation.common._result_type_many"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._reconstruct_object": {
  "lineno": 137,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "numpy.bool_",
   "numpy.ndarray",
   "numpy.result_type",
   "pandas.core.generic.PandasObject"
  ],
  "type": "function"
 },
 "pandas.core.computation.align._zip_axes_from_type": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.computation.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.api.Expr": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.core.computation.expr.Expr",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.computation.check": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numexpr.__version__",
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.core.computation.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.common.NameResolutionError": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.common._ensure_decoded": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.bytes_",
   "pandas.get_option"
  ],
  "type": "function"
 },
 "pandas.core.computation.common._result_type_many": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.result_type",
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.core.computation.engines": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.computation.ops._mathops",
   "pandas.core.computation.ops._reductions"
  ],
  "type": "module"
 },
 "pandas.core.computation.engines.AbstractEngine": {
  "lineno": 41,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "pandas.core.computation.engines.AbstractEngine.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine._evaluate": {
  "lineno": 84,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine._is_aligned": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine.convert": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.engines.AbstractEngine.evaluate": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.core.computation.align._align",
   "pandas.core.computation.align._reconstruct_object"
  ],
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprClobberingError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.engines.NumExprEngine": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.engines.NumExprEngine.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprEngine._evaluate": {
  "lineno": 112,
  "symbols_in_volume": [
   "numexpr.evaluate",
   "pandas.compat.text_type",
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.engines.NumExprEngine.convert": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.engines.PythonEngine.__init__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine._evaluate": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines.PythonEngine.evaluate": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.engines._check_ne_builtin_clash": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.core.computation.eval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.eval._check_engine": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.core.computation.check._NUMEXPR_INSTALLED",
   "pandas.core.computation.engines._engines",
   "pandas.core.computation.engines._engines.keys"
  ],
  "type": "function"
 },
 "pandas.core.computation.eval._check_expression": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.eval._check_for_locals": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.core.computation.expr.tokenize_string",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pandas.core.computation.eval._check_parser": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.core.computation.expr._parsers",
   "pandas.core.computation.expr._parsers.keys"
  ],
  "type": "function"
 },
 "pandas.core.computation.eval._check_resolvers": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.eval._convert_expression": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.eval.eval": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.computation.engines._engines",
   "pandas.core.computation.expr.Expr",
   "pandas.core.computation.scope._ensure_scope",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr": {
  "lineno": null,
  "symbols_in_volume": [
   "ast",
   "ast.AST",
   "ast.alias",
   "ast.arguments",
   "ast.boolop",
   "ast.cmpop",
   "ast.comprehension",
   "ast.excepthandler",
   "ast.expr",
   "ast.expr_context",
   "ast.keyword",
   "ast.mod",
   "ast.operator",
   "ast.slice",
   "ast.stmt",
   "ast.unaryop",
   "pandas.compat.PY35",
   "pandas.compat.string_types",
   "pandas.core.computation.ops.BinOp",
   "pandas.core.computation.ops.UnaryOp",
   "pandas.core.computation.ops._mathops",
   "pandas.core.computation.ops._reductions"
  ],
  "type": "module"
 },
 "pandas.core.computation.expr.BaseExprVisitor": {
  "lineno": 266,
  "symbols_in_volume": [
   "ast.Eq",
   "ast.In",
   "ast.NodeVisitor",
   "ast.NotEq",
   "ast.NotIn",
   "pandas.compat.zip",
   "pandas.core.computation.ops.Constant",
   "pandas.core.computation.ops.Term",
   "pandas.core.computation.ops._arith_ops_syms",
   "pandas.core.computation.ops._bool_ops_syms",
   "pandas.core.computation.ops._cmp_ops_syms",
   "pandas.core.computation.ops._unary_ops_syms"
  ],
  "type": "class"
 },
 "pandas.core.computation.expr.BaseExprVisitor.__init__": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_downcast_constants": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_eval": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_evaluate_binop": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.core.computation.ops._cmp_ops_syms"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._maybe_transform_eq_ne": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._rewrite_membership_op": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandas.core.computation.ops.is_term"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor._try_visit_binop": {
  "lineno": 661,
  "symbols_in_volume": [
   "pandas.core.computation.ops.Op",
   "pandas.core.computation.ops.Term"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.translate_In": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit": {
  "lineno": 307,
  "symbols_in_volume": [
   "ast.fix_missing_locations",
   "ast.parse",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Assign": {
  "lineno": 484,
  "symbols_in_volume": [
   "ast.Name",
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Attribute": {
  "lineno": 515,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BinOp": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BoolOp": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_BoolOp.visitor": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Call_35": {
  "lineno": 535,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Name",
   "ast.keyword",
   "pandas.core.computation.ops.FuncNode",
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Call_legacy": {
  "lineno": 586,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Name",
   "ast.keyword",
   "pandas.core.computation.ops.FuncNode",
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Compare": {
  "lineno": 641,
  "symbols_in_volume": [
   "ast.And",
   "ast.BinOp",
   "ast.BoolOp",
   "ast.Compare",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Div": {
  "lineno": 422,
  "symbols_in_volume": [
   "pandas.core.computation.ops.Div"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Expr": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Index": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_List": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Module": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Name": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_NameConstant": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Num": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Slice": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Str": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_Subscript": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.BaseExprVisitor.visit_UnaryOp": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr": {
  "lineno": 710,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.core.computation.expr.Expr.__call__": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__init__": {
  "lineno": 724,
  "symbols_in_volume": [
   "pandas.core.computation.scope.Scope"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__len__": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.__unicode__": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.assigner": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.names": {
  "lineno": 751,
  "symbols_in_volume": [
   "pandas.core.common.flatten",
   "pandas.core.computation.ops.is_term"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.Expr.parse": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.PandasExprVisitor": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.expr.PandasExprVisitor.__init__": {
  "lineno": 696,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.core.reshape.util.compose"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.PythonExprVisitor": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.expr.PythonExprVisitor.__init__": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._filter_nodes": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._is_type": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._node_not_implemented": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._node_not_implemented.f": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._op_maker": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr._op_maker.f": {
  "lineno": 235,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr._preparse": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.compat.lmap",
   "pandas.core.reshape.util.compose",
   "tokenize.untokenize"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr._replace_booleans": {
  "lineno": 57,
  "symbols_in_volume": [
   "tokenize.NAME",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr._replace_locals": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.core.computation.ops._LOCAL_TAG",
   "tokenize.OP"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr._rewrite_assign": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.add_ops": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.add_ops.f": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.computation.expr.disallow": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.disallow.disallowed": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expr.tokenize_string": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.computation.check._NUMEXPR_INSTALLED",
   "pandas.core.config.get_option"
  ],
  "type": "module"
 },
 "pandas.core.computation.expressions._bool_arith_check": {
  "lineno": 169,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._can_use_numexpr": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._evaluate_numexpr": {
  "lineno": 92,
  "symbols_in_volume": [
   "numexpr.evaluate"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._evaluate_standard": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._has_bool_dtype": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._store_test_result": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expressions._where_numexpr": {
  "lineno": 129,
  "symbols_in_volume": [
   "numexpr.evaluate"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions._where_standard": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions.evaluate": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expressions.get_test_result": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expressions.set_numexpr_threads": {
  "lineno": 50,
  "symbols_in_volume": [
   "numexpr.detect_number_of_cores",
   "numexpr.set_num_threads",
   "pandas.core.computation.check._NUMEXPR_INSTALLED"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions.set_test_mode": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.expressions.set_use_numexpr": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.core.computation.check._NUMEXPR_INSTALLED"
  ],
  "type": "function"
 },
 "pandas.core.computation.expressions.where": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops": {
  "lineno": null,
  "symbols_in_volume": [
   "operator.add",
   "operator.and_",
   "operator.div",
   "operator.eq",
   "operator.floordiv",
   "operator.ge",
   "operator.gt",
   "operator.invert",
   "operator.le",
   "operator.lt",
   "operator.mod",
   "operator.mul",
   "operator.ne",
   "operator.neg",
   "operator.or_",
   "operator.pos",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pandas.compat.PY3"
  ],
  "type": "module"
 },
 "pandas.core.computation.ops.BinOp": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.BinOp.__call__": {
  "lineno": 343,
  "symbols_in_volume": [
   "operator.truediv"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.__init__": {
  "lineno": 326,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp._disallow_scalar_only_bool_ops": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.convert_values": {
  "lineno": 402,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.core.computation.common._ensure_decoded"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.convert_values.stringify": {
  "lineno": 405,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.io.formats.printing.pprint_thing_encoded"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.BinOp.evaluate": {
  "lineno": 365,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Constant": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.Constant.__init__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Constant.__unicode__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Constant._resolve_name": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Constant.name": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Div": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.Div.__init__": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float_",
   "pandas.compat.PY3",
   "pandas.core.common.flatten"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.FuncNode": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.FuncNode.__call__": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.FuncNode.__init__": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.MathCall.__call__": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.errstate",
   "operator"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall.__init__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.MathCall.__unicode__": {
  "lineno": 534,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.core.computation.ops.Op.__init__": {
  "lineno": 183,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.__iter__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.__unicode__": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.has_invalid_return_type": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.is_datetime": {
  "lineno": 220,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.isscalar": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.operand_types": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.core.common.flatten"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Op.return_type": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.core.common.flatten",
   "pandas.core.computation.common._result_type_many"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.core.computation.ops.Term.__call__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.core.computation.scope._DEFAULT_GLOBALS"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__new__": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.__unicode__": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term._resolve_name": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.evaluate": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.is_datetime": {
  "lineno": 126,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.isscalar": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.local_name": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.name": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.ndim": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.raw": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.type": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.update": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.Term.value": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.UnaryOp.__call__": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.__init__": {
  "lineno": 495,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.__unicode__": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.UnaryOp.return_type": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.UndefinedVariableError": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.ops.UndefinedVariableError.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops._cast_inplace": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops._in": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops._not_in": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.computation.ops.is_term": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.ops.isnumeric": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.number"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.computation.pytables.BinOp": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.core.computation.ops.BinOp"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.BinOp.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp._disallow_scalar_only_bool_ops": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.conform": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.convert_value": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.compat.string_types",
   "pandas.compat.u",
   "pandas.core.common._values_from_object",
   "pandas.core.computation.common._ensure_decoded",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.convert_value.stringify": {
  "lineno": 171,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.io.formats.printing.pprint_thing_encoded"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.convert_values": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.generate": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.is_in_table": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.is_valid": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.kind": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.meta": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.metadata": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.prune": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.core.computation.ops.is_term"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.BinOp.prune.pr": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ConditionBinOp": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.ConditionBinOp.__unicode__": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.ConditionBinOp.evaluate": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ConditionBinOp.format": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ConditionBinOp.invert": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Constant": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.Constant.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Constant._resolve_name": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Expr": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.core.computation.expr.Expr"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.Expr.__init__": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas.compat.DeepChainMap",
   "pandas.compat.string_types",
   "pandas.core.common.flatten"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.Expr.__unicode__": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.Expr.evaluate": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.core.computation.expr.BaseExprVisitor"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.ExprVisitor.__init__": {
  "lineno": 383,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor._rewrite_membership_op": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.translate_In": {
  "lineno": 449,
  "symbols_in_volume": [
   "ast.Eq",
   "ast.In"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.visit_Assign": {
  "lineno": 402,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.Eq"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.visit_Attribute": {
  "lineno": 423,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.visit_Index": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.visit_Subscript": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.ExprVisitor.visit_UnaryOp": {
  "lineno": 391,
  "symbols_in_volume": [
   "ast.Invert",
   "ast.Not",
   "ast.UAdd",
   "ast.USub"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.FilterBinOp": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.FilterBinOp.__unicode__": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.FilterBinOp.evaluate": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.FilterBinOp.format": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.FilterBinOp.generate_filter_op": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.FilterBinOp.invert": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.JointConditionBinOp": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.JointConditionBinOp.evaluate": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.JointFilterBinOp": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.JointFilterBinOp.evaluate": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.JointFilterBinOp.format": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Scope": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.core.computation.expr.Scope"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.Scope.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Term": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.core.computation.ops.Term"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.Term.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.Term.__new__": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.base.StringMixin.__new__"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.Term._resolve_name": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.Term.value": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.TermValue": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.computation.pytables.TermValue.__init__": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.TermValue.tostring": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables.UnaryOp": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas.core.computation.ops.UnaryOp"
  ],
  "type": "class"
 },
 "pandas.core.computation.pytables.UnaryOp.prune": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.pytables._validate_where": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.computation.pytables.maybe_expression": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.computation.ops"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.inf",
   "pandas._libs.lib.Timestamp"
  ],
  "type": "module"
 },
 "pandas.core.computation.scope.Scope": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.core.computation.scope.Scope.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.compat.DeepChainMap",
   "sys._getframe"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.__unicode__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope._get_vars": {
  "lineno": 220,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.add_tmp": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.full_scope": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.compat.DeepChainMap"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.has_resolvers": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.ntemps": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.resolve": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.core.computation.ops.UndefinedVariableError"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.swapkey": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope.Scope.update": {
  "lineno": 242,
  "symbols_in_volume": [
   "inspect.stack"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope._ensure_scope": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.computation.scope._get_pretty_string": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pprint.pprint"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope._raw_hex_id": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.compat.map",
   "struct.pack"
  ],
  "type": "function"
 },
 "pandas.core.computation.scope._replacer": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.compat.text_type"
  ],
  "type": "module"
 },
 "pandas.core.config.CallableDynamicDoc": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.config.CallableDynamicDoc.__call__": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.CallableDynamicDoc.__doc__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.CallableDynamicDoc.__init__": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.DictWrapper": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.config.DictWrapper.__dir__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.DictWrapper.__getattr__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.DictWrapper.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.DictWrapper.__setattr__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.OptionError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.config._build_option_description": {
  "lineno": 632,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.config._describe_option": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.config._get_deprecated_option": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._get_option": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._get_registered_option": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._get_root": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._get_single_key": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._is_deprecated": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._reset_option": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._select_options": {
  "lineno": 529,
  "symbols_in_volume": [
   "re.I",
   "re.search"
  ],
  "type": "function"
 },
 "pandas.core.config._set_option": {
  "lineno": 104,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.core.config._translate_key": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config._warn_if_deprecated": {
  "lineno": 603,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.config.config_prefix": {
  "lineno": 692,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "pandas.core.config.config_prefix.wrap": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.config_prefix.wrap.inner": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.deprecate_option": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.get_default_val": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.is_callable": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.is_instance_factory": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.config.is_instance_factory.inner": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.is_one_of_factory": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.is_one_of_factory.inner": {
  "lineno": 799,
  "symbols_in_volume": [
   "pandas.compat.lmap",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.config.is_type_factory": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.is_type_factory.inner": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.option_context": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.config.option_context.__enter__": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.option_context.__exit__": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.option_context.__init__": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.config.pp_options_list": {
  "lineno": 659,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "pandas.core.config.pp_options_list.pp": {
  "lineno": 665,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "pandas.core.config.register_option": {
  "lineno": 411,
  "symbols_in_volume": [
   "keyword.iskeyword",
   "re.match",
   "tokenize.Name"
  ],
  "type": "function"
 },
 "pandas.core.config_init": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.config.config_prefix",
   "pandas.core.config.deprecate_option",
   "pandas.core.config.get_default_val",
   "pandas.core.config.is_bool",
   "pandas.core.config.is_callable",
   "pandas.core.config.is_instance_factory",
   "pandas.core.config.is_int",
   "pandas.core.config.is_one_of_factory",
   "pandas.core.config.is_text",
   "pandas.core.config.register_option",
   "pandas.io.formats.console.detect_console_encoding"
  ],
  "type": "module"
 },
 "pandas.core.config_init.register_converter_cb": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.plotting.deregister_matplotlib_converters",
   "pandas.plotting.register_matplotlib_converters"
  ],
  "type": "function"
 },
 "pandas.core.config_init.table_schema_cb": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.io.formats.printing._enable_data_resource_formatter"
  ],
  "type": "function"
 },
 "pandas.core.config_init.use_bottleneck_cb": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.core.nanops.set_use_bottleneck"
  ],
  "type": "function"
 },
 "pandas.core.config_init.use_inf_as_na_cb": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing._use_inf_as_na"
  ],
  "type": "function"
 },
 "pandas.core.config_init.use_numexpr_cb": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.set_use_numexpr",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.datetools": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.core.dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.dtypes.api": {
  "lineno": null,
  "symbols_in_volume": [
   "sys",
   "sys.modules"
  ],
  "type": "module"
 },
 "pandas.core.dtypes.api.outer": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.api.outer.wrapper": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.core.dtypes.common",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8"
  ],
  "type": "module"
 },
 "pandas.core.dtypes.cast.astype_nansafe": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.floating",
   "numpy.int64",
   "numpy.integer",
   "numpy.isfinite",
   "numpy.issubdtype",
   "numpy.nan",
   "numpy.object_",
   "pandas._libs.lib.astype_intsafe",
   "pandas._libs.lib.astype_str",
   "pandas._libs.lib.astype_unicode",
   "pandas._libs.tslib.ints_to_pydatetime",
   "pandas._libs.tslib.ints_to_pytimedelta",
   "pandas.compat.PY3",
   "pandas.compat.string_types",
   "pandas.compat.text_type",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.cast_scalar_to_array": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_indexer_dtype": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_to_dtypes": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.coerce_to_dtypes.conv": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas._libs.tslib.Timestamp",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.find_common_type": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.find_common_type",
   "numpy.object"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.infer_dtype_from": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.infer_dtype_from_array": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.object_",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.infer_dtype_from_scalar": {
  "lineno": 354,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool_",
   "numpy.complex_",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.float64",
   "numpy.floating",
   "numpy.int64",
   "numpy.integer",
   "numpy.ndarray",
   "numpy.object_",
   "numpy.timedelta64",
   "pandas._libs.lib.is_period",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.invalidate_string_dtypes": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.is_nested_object": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_cast_item": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.integer",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_cast_to_datetime": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.dtype",
   "numpy.integer",
   "numpy.ndarray",
   "numpy.object_",
   "numpy.prod",
   "pandas._libs.tslib.iNaT",
   "pandas._libs.tslib.ints_to_pydatetime",
   "pandas.compat.string_types",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.core.tools.timedeltas.to_timedelta",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_castable": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_objects": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_platform": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas._libs.lib.list_to_object_array",
   "pandas._libs.lib.maybe_convert_objects"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_scalar": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_convert_string_to_object": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.string_",
   "numpy.unicode_",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_downcast_to_dtype": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.bool",
   "numpy.dtype",
   "numpy.floating",
   "numpy.integer",
   "numpy.number",
   "numpy.object_",
   "numpy.prod",
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.string_types",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_downcast_to_dtype.trans": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_dtype_type": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.infer_datetimelike_array",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_datetime": {
  "lineno": 879,
  "symbols_in_volume": [
   "pandas._libs.tslib.array_to_datetime",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_infer_to_datetimelike.try_timedelta": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_promote": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.float64",
   "numpy.floating",
   "numpy.integer",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.object_",
   "numpy.timedelta64",
   "pandas._libs.lib.Timedelta",
   "pandas._libs.tslib.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast_putmask": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.place"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.maybe_upcast_putmask.changeit": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.place"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.cast.soft_convert_objects": {
  "lineno": 770,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "numpy.object_",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.to_datetime",
   "pandas.to_numeric",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64",
   "pandas._libs.algos.ensure_float32",
   "pandas._libs.algos.ensure_float64",
   "pandas._libs.algos.ensure_int16",
   "pandas._libs.algos.ensure_int32",
   "pandas._libs.algos.ensure_int64",
   "pandas._libs.algos.ensure_int8",
   "pandas._libs.algos.ensure_object",
   "pandas._libs.algos.ensure_platform_int",
   "pandas._libs.algos.ensure_uint64",
   "pandas.compat.binary_type",
   "pandas.compat.text_type"
  ],
  "type": "module"
 },
 "pandas.core.dtypes.common._coerce_to_dtype": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._ensure_categorical": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._ensure_float": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._get_dtype": {
  "lineno": 1722,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._get_dtype_from_object": {
  "lineno": 1817,
  "symbols_in_volume": [
   "numpy",
   "numpy.dtype",
   "numpy.generic",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._get_dtype_type": {
  "lineno": 1773,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._is_unorderable_exception": {
  "lineno": 1177,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.PY36"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common._validate_date_like_dtype": {
  "lineno": 1874,
  "symbols_in_volume": [
   "numpy.datetime_data"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_any_int_dtype": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_bool_dtype": {
  "lineno": 1545,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_categorical": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_categorical_dtype": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_complex_dtype": {
  "lineno": 1655,
  "symbols_in_volume": [
   "numpy.complexfloating"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime64_any_dtype": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime64_dtype": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime64_ns_dtype": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime64tz_dtype": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime_arraylike": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype": {
  "lineno": 1136,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetimelike": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetimelike_v_numeric": {
  "lineno": 1260,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetimelike_v_numeric.is_numeric": {
  "lineno": 1307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetimelike_v_object": {
  "lineno": 1318,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_datetimetz": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_dtype_equal": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_dtype_union_equal": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_extension_type": {
  "lineno": 1596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_float_dtype": {
  "lineno": 1493,
  "symbols_in_volume": [
   "numpy.floating"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_floating_dtype": {
  "lineno": 1528,
  "symbols_in_volume": [
   "numpy.floating"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_int64_dtype": {
  "lineno": 914,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_int_or_datetime_dtype": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.integer",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_integer_dtype": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.integer",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_interval_dtype": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_numeric_dtype": {
  "lineno": 1412,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.number",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_numeric_v_string_like": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_object_dtype": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_period": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_period_arraylike": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_period_dtype": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_scipy_sparse": {
  "lineno": 151,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_signed_integer_dtype": {
  "lineno": 824,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.signedinteger",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_sparse": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_string_dtype": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_string_like_dtype": {
  "lineno": 1456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_timedelta64_dtype": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_timedelta64_ns_dtype": {
  "lineno": 1098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.is_unsigned_integer_dtype": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.unsignedinteger"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.common.needs_i8_conversion": {
  "lineno": 1371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.common.pandas_dtype": {
  "lineno": 1903,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.object_",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.dtypes.concat._concat_categorical": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_categorical._concat_asobject": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_compat": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_compat.is_nonempty": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetime": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.int64",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common._TD_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetime.convert_to_pydatetime": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.int64",
   "pandas._libs.tslib.ints_to_pydatetime",
   "pandas._libs.tslib.ints_to_pytimedelta",
   "pandas.core.dtypes.common._NS_DTYPE.kind",
   "pandas.core.dtypes.common._TD_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_datetimetz": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_index_asobject": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.Index",
   "pandas.core.dtypes.generic.ABCDatetimeIndex",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.dtypes.generic.ABCTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_rangeindex_same_dtype": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_sparse": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.sparse.array.SparseArray",
   "pandas.core.sparse.array._make_index"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._concat_sparse.convert_sparse": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._get_frame_result_type": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat._get_series_result_type": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.frame.DataFrame",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat.get_dtype_kinds": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.generic.ABCRangeIndex"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat.union_categoricals": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.core.algorithms.take_1d",
   "pandas.core.categorical._recode_for_categories",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.concat.union_categoricals._maybe_unwrap": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__eq__": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__hash__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__repr__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.__setstate__": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._finalize": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._from_categorical_dtype": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._from_fastpath": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._hash_categories": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.bitwise_xor.reduce",
   "numpy.vstack",
   "pandas.core.util.hashing._combine_hash_arrays",
   "pandas.core.util.hashing.hash_array",
   "pandas.core.util.hashing.hash_tuples"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._validate_categories": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.generic.ABCCategoricalIndex",
   "pandas.core.dtypes.generic.ABCIndexClass"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype._validate_ordered": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.categories": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtype.ordered": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.CategoricalDtypeType": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.dtype",
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__eq__": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__hash__": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__new__": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.__unicode__": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtype.name": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.DatetimeTZDtypeType": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__bytes__": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__eq__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__getstate__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__hash__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__ne__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__repr__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__str__": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.__unicode__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.is_dtype": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.ExtensionDtype.reset_cache": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.dtype",
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__eq__": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__hash__": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__new__": {
  "lineno": 602,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.pandas_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.__unicode__": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string": {
  "lineno": 645,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.is_dtype": {
  "lineno": 678,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtype.name": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.IntervalDtypeType": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.dtype",
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__eq__": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__hash__": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__new__": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.__unicode__": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype._parse_dtype_strict": {
  "lineno": 510,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string": {
  "lineno": 524,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype": {
  "lineno": 556,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtype.name": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.dtypes.PeriodDtypeType": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.generic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.dtypes.generic._ABCGeneric": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.dtypes.generic._ABCGeneric.__instancecheck__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.generic.create_pandas_abc_type": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.generic.create_pandas_abc_type._check": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.lib.is_bool",
   "pandas._libs.lib.is_complex",
   "pandas._libs.lib.is_decimal",
   "pandas._libs.lib.is_float",
   "pandas._libs.lib.is_integer",
   "pandas._libs.lib.is_interval",
   "pandas._libs.lib.isscalar"
  ],
  "type": "module"
 },
 "pandas.core.dtypes.inference._iterable_not_string": {
  "lineno": 75,
  "symbols_in_volume": [
   "collections.Iterable",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_dict_like": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_file_like": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_hashable": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_iterator": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.compat.PY2"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_list_like": {
  "lineno": 234,
  "symbols_in_volume": [
   "collections.Iterable",
   "pandas.compat.string_and_binary_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_named_tuple": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_nested_list_like": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_number": {
  "lineno": 27,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.number"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_re": {
  "lineno": 181,
  "symbols_in_volume": [
   "re._pattern_type"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_re_compilable": {
  "lineno": 205,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_sequence": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.compat.string_and_binary_types"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.inference.is_string_like": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.dtypes.missing._infer_fill_value": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._isna_compat": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._isna_ndarraylike": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.isnan",
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.IntervalIndex",
   "pandas.Series",
   "pandas._libs.lib.isnaobj",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._isna_ndarraylike_old": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.isfinite",
   "numpy.zeros",
   "pandas.Series",
   "pandas._libs.lib.isnaobj_old",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._isna_new": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas._libs.lib.checknull"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._isna_old": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas._libs.lib.checknull_old"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._maybe_fill": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing._use_inf_as_na": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing.array_equivalent": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.isnan",
   "numpy.void",
   "pandas._libs.lib.array_equivalent_object",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing.is_null_datelike_scalar": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing.isna": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.missing.na_value_for_dtype": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.core.dtypes.missing.notna": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.dtypes.missing.remove_na_arraylike": {
  "lineno": 395,
  "symbols_in_volume": [
   "pandas._libs.lib.values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.frame": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_flex_arithmetic_methods",
   "pandas.core.ops.add_special_arithmetic_methods",
   "pandas.core.ops.frame_flex_funcs",
   "pandas.core.ops.frame_special_funcs",
   "pandas.core.series.Series"
  ],
  "type": "module"
 },
 "pandas.core.frame.DataFrame": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.core.accessor.AccessorProperty",
   "pandas.core.generic.NDFrame",
   "pandas.core.generic.NDFrame._deprecations",
   "pandas.core.generic._shared_docs",
   "pandas.core.series.Series",
   "pandas.plotting._core.FramePlotMethods",
   "pandas.plotting._core.boxplot_frame",
   "pandas.plotting._core.hist_frame",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.frame.DataFrame.__getitem__": {
  "lineno": 2115,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common._apply_if_callable",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.indexing.convert_to_index_sliceable",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.__init__": {
  "lineno": 316,
  "symbols_in_volume": [
   "collections.Iterator",
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.getmaskarray",
   "numpy.ma.mrecords.MaskedRecords",
   "numpy.ndarray",
   "pandas.compat.raise_with_traceback",
   "pandas.core.categorical.Categorical",
   "pandas.core.common._default_index",
   "pandas.core.dtypes.cast.cast_scalar_to_array",
   "pandas.core.dtypes.cast.maybe_upcast",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_named_tuple",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.internals.BlockManager",
   "pandas.core.series.Series",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.__len__": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.__setitem__": {
  "lineno": 2505,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common._apply_if_callable",
   "pandas.core.index.Index",
   "pandas.core.indexing.convert_to_index_sliceable",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.__unicode__": {
  "lineno": 616,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "pandas.io.formats.console.get_console_size"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._apply_broadcast": {
  "lineno": 5004,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._apply_empty_result": {
  "lineno": 4881,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._apply_raw": {
  "lineno": 4895,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "pandas._libs.lib.reduce",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._apply_standard": {
  "lineno": 4907,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas._libs.lib.reduce",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_extension_type",
   "pandas.core.dtypes.common.is_sequence",
   "pandas.core.series.Series",
   "pandas.core.series.Series.from_array",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._box_col_values": {
  "lineno": 2500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._box_item_values": {
  "lineno": 2493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_const": {
  "lineno": 3984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_frame": {
  "lineno": 3877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_frame._arith_op": {
  "lineno": 3882,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_frame.f": {
  "lineno": 3911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_match_columns": {
  "lineno": 3971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_match_index": {
  "lineno": 3960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_series": {
  "lineno": 3930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._combine_series_infer": {
  "lineno": 3946,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._compare_frame": {
  "lineno": 4015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._compare_frame_evaluate": {
  "lineno": 3990,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.evaluate"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._compare_frame_evaluate._compare": {
  "lineno": 4005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._constructor": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._constructor_expanddim": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.core.panel.Panel"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._count_level": {
  "lineno": 5652,
  "symbols_in_volume": [
   "pandas._libs.lib.count_level_2d",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._ensure_valid_index": {
  "lineno": 2556,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._flex_compare_frame": {
  "lineno": 4022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._from_arrays": {
  "lineno": 1292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._get_agg_axis": {
  "lineno": 5877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._get_valid_indices": {
  "lineno": 4295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._get_value": {
  "lineno": 1975,
  "symbols_in_volume": [
   "pandas.core.common._maybe_box_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._getitem_array": {
  "lineno": 2158,
  "symbols_in_volume": [
   "pandas.core.common.is_bool_indexer",
   "pandas.core.indexing.check_bool_indexer",
   "pandas.core.series.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._getitem_column": {
  "lineno": 2141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._getitem_frame": {
  "lineno": 2216,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._getitem_multilevel": {
  "lineno": 2180,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.index.Index",
   "pandas.core.indexing.maybe_droplevels",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._getitem_slice": {
  "lineno": 2155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._gotitem": {
  "lineno": 4702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._info_repr": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._init_dict": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.flexible",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.nan",
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems",
   "pandas.core.common._try_sort",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._init_ndarray": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.raise_with_traceback",
   "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.internals.create_block_manager_from_blocks",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._init_ndarray._get_axes": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandas.core.common._default_index",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._ixs": {
  "lineno": 2041,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._join_compat": {
  "lineno": 5318,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat",
   "pandas.core.reshape.merge.merge",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reduce": {
  "lineno": 5693,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.errstate",
   "numpy.float64",
   "pandas.compat.raise_with_traceback",
   "pandas.core.dtypes.cast.coerce_to_dtypes",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reduce.f": {
  "lineno": 5697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reindex_axes": {
  "lineno": 2858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reindex_columns": {
  "lineno": 2883,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reindex_index": {
  "lineno": 2874,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._reindex_multi": {
  "lineno": 2892,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_2d_multi"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._repr_fits_horizontal_": {
  "lineno": 557,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.core.common.in_interactive_session",
   "pandas.core.common.in_ipython_frontend",
   "pandas.core.config.get_option",
   "pandas.io.formats.console.get_console_size"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._repr_fits_vertical_": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._repr_html_": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.core.common.in_qtconsole",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._sanitize_column": {
  "lineno": 2697,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.ndarray",
   "numpy.tile",
   "pandas.core.categorical.Categorical",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.cast.cast_scalar_to_array",
   "pandas.core.dtypes.cast.maybe_cast_to_datetime",
   "pandas.core.dtypes.cast.maybe_convert_platform",
   "pandas.core.dtypes.cast.maybe_infer_to_datetimelike",
   "pandas.core.dtypes.common.is_extension_type",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_sequence",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.indexing.maybe_droplevels",
   "pandas.core.series.Series",
   "pandas.core.series._sanitize_index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._sanitize_column.reindexer": {
  "lineno": 2717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._series": {
  "lineno": 2796,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._set_item": {
  "lineno": 2573,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame._set_item"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._set_value": {
  "lineno": 2022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._setitem_array": {
  "lineno": 2525,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.indexing.check_bool_indexer"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._setitem_frame": {
  "lineno": 2546,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._setitem_slice": {
  "lineno": 2521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._unpickle_frame_compat": {
  "lineno": 1917,
  "symbols_in_volume": [
   "pandas.core.common._unpickle_array"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame._unpickle_matrix_compat": {
  "lineno": 1929,
  "symbols_in_volume": [
   "pandas.core.common._unpickle_array"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.aggregate": {
  "lineno": 4754,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.align": {
  "lineno": 2910,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.append": {
  "lineno": 5073,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.apply": {
  "lineno": 4774,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ufunc",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.apply.f": {
  "lineno": 4853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.applymap": {
  "lineno": 5025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.applymap.infer": {
  "lineno": 5063,
  "symbols_in_volume": [
   "pandas._libs.lib.map_infer"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.assign": {
  "lineno": 2615,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.compat.PY36",
   "pandas.core.common._apply_if_callable"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.axes": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.combine": {
  "lineno": 4028,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.cast.maybe_cast_to_datetime",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.core.dtypes.common._ensure_float",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.datetimes.DatetimeIndex._simple_new"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.combine_first": {
  "lineno": 4139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.combine_first.combiner": {
  "lineno": 4170,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.where",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.corr": {
  "lineno": 5465,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.isfinite",
   "numpy.nan",
   "pandas._libs.algos.nancorr",
   "pandas._libs.algos.nancorr_spearman",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.nanops.get_corr_func"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.corrwith": {
  "lineno": 5558,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.count": {
  "lineno": 5611,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.cov": {
  "lineno": 5521,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.empty",
   "numpy.nan",
   "pandas._libs.algos.nancorr",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.diff": {
  "lineno": 4678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.dot": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.ndarray",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.drop_duplicates": {
  "lineno": 3513,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.dropna": {
  "lineno": 3404,
  "symbols_in_volume": [
   "numpy.compress",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.duplicated": {
  "lineno": 3544,
  "symbols_in_volume": [
   "numpy.iterable",
   "pandas._libs.hashtable.duplicated_int64",
   "pandas.compat.map",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.series.Series",
   "pandas.core.sorting.get_group_index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.duplicated.f": {
  "lineno": 3568,
  "symbols_in_volume": [
   "pandas._libs.hashtable._SIZE_HINT_LIMIT",
   "pandas.core.algorithms.factorize"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.eval": {
  "lineno": 2311,
  "symbols_in_volume": [
   "pandas.core.computation.eval.eval",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.fillna": {
  "lineno": 3029,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.first_valid_index": {
  "lineno": 4299,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.from_csv": {
  "lineno": 1297,
  "symbols_in_volume": [
   "pandas.io.parsers.read_table",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.from_dict": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.from_items": {
  "lineno": 1238,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.compat.lzip",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.from_records": {
  "lineno": 1062,
  "symbols_in_volume": [
   "itertools.islice",
   "numpy.array",
   "numpy.ndarray",
   "pandas.compat.iteritems",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.index._ensure_index_from_sequences"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.get_value": {
  "lineno": 1950,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.idxmax": {
  "lineno": 5841,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.nanops.nanargmax",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.idxmin": {
  "lineno": 5805,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.nanops.nanargmin",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.info": {
  "lineno": 1739,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.config.get_option",
   "pandas.io.formats.format._put_lines",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.info._non_verbose_repr": {
  "lineno": 1826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.info._sizeof_fmt": {
  "lineno": 1829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.info._verbose_repr": {
  "lineno": 1801,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.insert": {
  "lineno": 2594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.isin": {
  "lineno": 6062,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.core.algorithms.isin",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.isna": {
  "lineno": 3388,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.isnull": {
  "lineno": 3392,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.iteritems": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.iterrows": {
  "lineno": 703,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.itertuples": {
  "lineno": 751,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.compat.map",
   "pandas.compat.range",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.join": {
  "lineno": 5196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.last_valid_index": {
  "lineno": 4308,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.lookup": {
  "lineno": 2804,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.melt": {
  "lineno": 4664,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.core.reshape.reshape.melt",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.memory_usage": {
  "lineno": 1871,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.merge": {
  "lineno": 5360,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.mode": {
  "lineno": 5886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.mode.f": {
  "lineno": 5919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.nlargest": {
  "lineno": 3742,
  "symbols_in_volume": [
   "pandas.core.algorithms.SelectNFrame"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.notna": {
  "lineno": 3396,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.notnull": {
  "lineno": 3400,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.nsmallest": {
  "lineno": 3779,
  "symbols_in_volume": [
   "pandas.core.algorithms.SelectNFrame"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.nunique": {
  "lineno": 5774,
  "symbols_in_volume": [
   "pandas.core.series.Series.nunique"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.pivot": {
  "lineno": 4320,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.pivot"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.pivot_table": {
  "lineno": 4459,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.quantile": {
  "lineno": 5924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.query": {
  "lineno": 2221,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.reindex": {
  "lineno": 2921,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.rewrite_axis_style_signature",
   "pandas.util._validators.validate_axis_style_args"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.reindex_axis": {
  "lineno": 2937,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.rename": {
  "lineno": 2945,
  "symbols_in_volume": [
   "pandas.util._decorators.rewrite_axis_style_signature",
   "pandas.util._validators.validate_axis_style_args"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.reorder_levels": {
  "lineno": 3844,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.reset_index": {
  "lineno": 3169,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.core.common._default_index",
   "pandas.core.index.MultiIndex",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.reset_index._maybe_casted_values": {
  "lineno": 3311,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.object_",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.round": {
  "lineno": 5372,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_round",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.round._dict_round": {
  "lineno": 5428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.round._series_round": {
  "lineno": 5435,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.select_dtypes": {
  "lineno": 2368,
  "symbols_in_volume": [
   "itertools.starmap",
   "pandas.compat.map",
   "pandas.core.common._get_info_slice",
   "pandas.core.dtypes.cast.invalidate_string_dtypes",
   "pandas.core.dtypes.common._get_dtype_from_object",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.select_dtypes.is_dtype_instance_mapper": {
  "lineno": 2480,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.set_index": {
  "lineno": 3042,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.range",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.index._ensure_index_from_sequences",
   "pandas.core.series.Series",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.set_value": {
  "lineno": 1995,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.shape": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.shift": {
  "lineno": 3037,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.sort_index": {
  "lineno": 3645,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.core.index.MultiIndex",
   "pandas.core.sorting.lexsort_indexer",
   "pandas.core.sorting.nargsort",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.sort_values": {
  "lineno": 3590,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_sequence",
   "pandas.core.generic._shared_docs",
   "pandas.core.index.MultiIndex",
   "pandas.core.sorting.lexsort_indexer",
   "pandas.core.sorting.nargsort",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.sortlevel": {
  "lineno": 3709,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.stack": {
  "lineno": 4470,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.stack",
   "pandas.core.reshape.reshape.stack_multiple"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.style": {
  "lineno": 673,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.swaplevel": {
  "lineno": 3816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_csv": {
  "lineno": 1433,
  "symbols_in_volume": [
   "pandas.io.formats.format.CSVFormatter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_dict": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "pandas._libs.lib.map_infer",
   "pandas.compat.iteritems",
   "pandas.compat.zip",
   "pandas.core.common._maybe_box_datetimelike",
   "pandas.core.common.standardize_mapping",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_excel": {
  "lineno": 1529,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.io.formats.excel.ExcelFormatter",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_feather": {
  "lineno": 1612,
  "symbols_in_volume": [
   "pandas.io.feather_format.to_feather"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_gbq": {
  "lineno": 1007,
  "symbols_in_volume": [
   "pandas.io.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_html": {
  "lineno": 1681,
  "symbols_in_volume": [
   "pandas.io.formats.format.DataFrameFormatter",
   "pandas.io.formats.format._VALID_JUSTIFY_PARAMETERS",
   "pandas.io.formats.format.docstring_to_string",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_panel": {
  "lineno": 1381,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_parquet": {
  "lineno": 1627,
  "symbols_in_volume": [
   "pandas.io.parquet.to_parquet"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_period": {
  "lineno": 6031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_records": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.rec.fromarrays",
   "pandas.compat.lmap",
   "pandas.compat.text_type",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_sparse": {
  "lineno": 1363,
  "symbols_in_volume": [
   "pandas.core.sparse.frame.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_stata": {
  "lineno": 1547,
  "symbols_in_volume": [
   "pandas.io.stata.StataWriter"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_string": {
  "lineno": 1651,
  "symbols_in_volume": [
   "pandas.io.formats.format.DataFrameFormatter",
   "pandas.io.formats.format.docstring_to_string",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.to_timestamp": {
  "lineno": 5997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.transpose": {
  "lineno": 1906,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_transpose"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.unstack": {
  "lineno": 4510,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.unstack"
  ],
  "type": "function"
 },
 "pandas.core.frame.DataFrame.update": {
  "lineno": 4184,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.core.computation.expressions.where",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.frame._arrays_to_mgr": {
  "lineno": 6156,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index",
   "pandas.core.internals.create_block_manager_from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.frame._convert_object_array": {
  "lineno": 6413,
  "symbols_in_volume": [
   "pandas.core.common._default_index"
  ],
  "type": "function"
 },
 "pandas.core.frame._convert_object_array.convert": {
  "lineno": 6423,
  "symbols_in_volume": [
   "numpy.object",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.core.dtypes.cast.maybe_cast_to_datetime"
  ],
  "type": "function"
 },
 "pandas.core.frame._from_nested_dict": {
  "lineno": 6484,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.frame._get_names_from_index": {
  "lineno": 6434,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.common._default_index"
  ],
  "type": "function"
 },
 "pandas.core.frame._homogenize": {
  "lineno": 6452,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.lib.fast_multiget",
   "pandas.core.common._dict_compat",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.core.series.Series",
   "pandas.core.series._sanitize_array"
  ],
  "type": "function"
 },
 "pandas.core.frame._list_of_dict_to_arrays": {
  "lineno": 6398,
  "symbols_in_volume": [
   "pandas._libs.lib.dicts_to_array",
   "pandas._libs.lib.fast_unique_multiple_list_gen",
   "pandas.compat.OrderedDict"
  ],
  "type": "function"
 },
 "pandas.core.frame._list_of_series_to_arrays": {
  "lineno": 6366,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.vstack",
   "pandas.core.algorithms.take_1d",
   "pandas.core.common._default_index",
   "pandas.core.common._values_from_object",
   "pandas.core.index._get_objs_combined_axis"
  ],
  "type": "function"
 },
 "pandas.core.frame._list_to_arrays": {
  "lineno": 6356,
  "symbols_in_volume": [
   "pandas._libs.lib.to_object_array",
   "pandas._libs.lib.to_object_array_tuples"
  ],
  "type": "function"
 },
 "pandas.core.frame._masked_rec_array_to_mgr": {
  "lineno": 6309,
  "symbols_in_volume": [
   "numpy.ma.getdata",
   "numpy.ma.getmaskarray",
   "pandas.compat.zip",
   "pandas.core.common._default_index",
   "pandas.core.dtypes.cast.maybe_upcast",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.frame._prep_ndarray": {
  "lineno": 6228,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame._prep_ndarray.convert": {
  "lineno": 6233,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_convert_platform"
  ],
  "type": "function"
 },
 "pandas.core.frame._put_str": {
  "lineno": 6494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.frame._reorder_arrays": {
  "lineno": 6346,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.frame._to_arrays": {
  "lineno": 6262,
  "symbols_in_volume": [
   "collections.Mapping",
   "numpy.ndarray",
   "pandas.compat.lmap",
   "pandas.compat.range",
   "pandas.core.categorical.Categorical",
   "pandas.core.common._default_index",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.frame.extract_index": {
  "lineno": 6176,
  "symbols_in_volume": [
   "pandas.core.common._default_index",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.index._union_indexes",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexing.get_indexers_list"
  ],
  "type": "module"
 },
 "pandas.core.generic.NDFrame": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject",
   "pandas.core.base.SelectionMixin"
  ],
  "type": "class"
 },
 "pandas.core.generic.NDFrame.__abs__": {
  "lineno": 1141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__array__": {
  "lineno": 1150,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__array_wrap__": {
  "lineno": 1153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__contains__": {
  "lineno": 1073,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__copy__": {
  "lineno": 4029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__deepcopy__": {
  "lineno": 4032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__delitem__": {
  "lineno": 2070,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__finalize__": {
  "lineno": 3583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__getattr__": {
  "lineno": 3600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__getitem__": {
  "lineno": 1834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__getstate__": {
  "lineno": 1173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__hash__": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__invert__": {
  "lineno": 1019,
  "symbols_in_volume": [
   "numpy.prod",
   "operator.inv",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__iter__": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__len__": {
  "lineno": 1069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__neg__": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.bool_",
   "operator.inv",
   "operator.neg",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__nonzero__": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__round__": {
  "lineno": 1144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__setattr__": {
  "lineno": 3616,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.index.Index",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__setstate__": {
  "lineno": 1178,
  "symbols_in_volume": [
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.__unicode__": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_numeric_operations": {
  "lineno": 6906,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.maximum.accumulate",
   "numpy.minimum.accumulate",
   "numpy.nan",
   "pandas.core.nanops.nanall",
   "pandas.core.nanops.nanany",
   "pandas.core.nanops.nankurt",
   "pandas.core.nanops.nanmax",
   "pandas.core.nanops.nanmean",
   "pandas.core.nanops.nanmedian",
   "pandas.core.nanops.nanmin",
   "pandas.core.nanops.nanprod",
   "pandas.core.nanops.nansem",
   "pandas.core.nanops.nanskew",
   "pandas.core.nanops.nanstd",
   "pandas.core.nanops.nansum",
   "pandas.core.nanops.nanvar"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_numeric_operations.compound": {
  "lineno": 6962,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_numeric_operations.mad": {
  "lineno": 6921,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_only_operations": {
  "lineno": 7030,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_only_operations.nanptp": {
  "lineno": 7038,
  "symbols_in_volume": [
   "pandas.core.nanops.nanmax",
   "pandas.core.nanops.nanmin"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_or_dataframe_operations": {
  "lineno": 7050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_or_dataframe_operations.ewm": {
  "lineno": 7077,
  "symbols_in_volume": [
   "pandas.core.common",
   "pandas.core.window.ewm",
   "pandas.core.window.ewm.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_or_dataframe_operations.expanding": {
  "lineno": 7069,
  "symbols_in_volume": [
   "pandas.core.window.expanding",
   "pandas.core.window.expanding.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_or_dataframe_operations.rolling": {
  "lineno": 7058,
  "symbols_in_volume": [
   "pandas.core.window",
   "pandas.core.window.rolling",
   "pandas.core.window.rolling.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._add_series_or_dataframe_operations.transform": {
  "lineno": 7088,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._agg_by_level": {
  "lineno": 6897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._align_frame": {
  "lineno": 5734,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._align_series": {
  "lineno": 5781,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._box_item_values": {
  "lineno": 1872,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._check_inplace_setting": {
  "lineno": 3725,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._check_is_chained_assignment_possible": {
  "lineno": 1966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._check_percentile": {
  "lineno": 6840,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._check_setitem_copy": {
  "lineno": 1987,
  "symbols_in_volume": [
   "gc.collect",
   "gc.get_referents",
   "pandas.compat.string_types",
   "pandas.core.common.SettingWithCopyError",
   "pandas.core.common.SettingWithCopyWarning",
   "pandas.core.config.get_option",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._clear_item_cache": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._clip_with_one_bound": {
  "lineno": 4944,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_number",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.ops._align_method_FRAME",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._clip_with_scalar": {
  "lineno": 4920,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.errstate",
   "numpy.nan",
   "numpy.where",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._consolidate": {
  "lineno": 3679,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._consolidate_inplace": {
  "lineno": 3671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._consolidate_inplace.f": {
  "lineno": 3674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._construct_axes_dict": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._construct_axes_dict_for_slice": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._construct_axes_dict_from": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._construct_axes_from_arguments": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._constructor": {
  "lineno": 182,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._constructor_expanddim": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._constructor_sliced": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._convert": {
  "lineno": 4037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._create_indexer": {
  "lineno": 1796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._create_indexer._indexer": {
  "lineno": 1804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._dir_additions": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.compat.isidentifier",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._drop_axis": {
  "lineno": 2537,
  "symbols_in_volume": [
   "pandas.core.common._index_labels_to_array",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._expand_axes": {
  "lineno": 460,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._from_axes": {
  "lineno": 334,
  "symbols_in_volume": [
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_axis": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_axis_name": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_axis_number": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_axis_resolvers": {
  "lineno": 384,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_block_manager_axis": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_bool_data": {
  "lineno": 3747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_cacher": {
  "lineno": 1885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_index_resolvers": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_item_cache": {
  "lineno": 1837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_numeric_data": {
  "lineno": 3743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._get_values": {
  "lineno": 3818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._iget_item_cache": {
  "lineno": 1862,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._indexed_same": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._info_axis": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._init_mgr": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._is_cached": {
  "lineno": 1880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._is_datelike_mixed_type": {
  "lineno": 3720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._is_mixed_type": {
  "lineno": 3710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._is_numeric_mixed_type": {
  "lineno": 3715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._is_view": {
  "lineno": 1892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._maybe_cache_changed": {
  "lineno": 1875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._maybe_update_cacher": {
  "lineno": 1897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._needs_reindex_multi": {
  "lineno": 3045,
  "symbols_in_volume": [
   "pandas.core.common._count_not_none"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._obj_with_exclusions": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._protect_consolidate": {
  "lineno": 3661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._reindex_axes": {
  "lineno": 3025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._reindex_axis": {
  "lineno": 3152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._reindex_multi": {
  "lineno": 3050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._reindex_with_indexers": {
  "lineno": 3124,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._repr_data_resource_": {
  "lineno": 137,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._repr_latex_": {
  "lineno": 1220,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._reset_cacher": {
  "lineno": 1857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._selected_obj": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._set_as_cached": {
  "lineno": 1851,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._set_axis": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._set_axis_name": {
  "lineno": 954,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._set_is_copy": {
  "lineno": 1957,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._set_item": {
  "lineno": 1953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._setup_axes": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._setup_axes.set_axis": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas._libs.properties.AxisProperty"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._slice": {
  "lineno": 1937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._stat_axis": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._take": {
  "lineno": 2141,
  "symbols_in_volume": [
   "pandas.core.indexing.maybe_convert_indices",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._to_dict_of_blocks": {
  "lineno": 3886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._update_inplace": {
  "lineno": 2586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._validate_dtype": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.pandas_dtype"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._values": {
  "lineno": 3813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame._where": {
  "lineno": 5858,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.empty",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.common._apply_if_callable",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.index.InvalidIndexError",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.abs": {
  "lineno": 6506,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.add_prefix": {
  "lineno": 2604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.add_suffix": {
  "lineno": 2619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.align": {
  "lineno": 5690,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.missing.clean_fill_method",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.as_blocks": {
  "lineno": 3854,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.as_matrix": {
  "lineno": 3753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.asfreq": {
  "lineno": 5164,
  "symbols_in_volume": [
   "pandas.core.resample.asfreq"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.asof": {
  "lineno": 4772,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.Index",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.missing",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.astype": {
  "lineno": 3896,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.core.dtypes.common.is_dict_like",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.at_time": {
  "lineno": 5263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.axes": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.between_time": {
  "lineno": 5281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.bfill": {
  "lineno": 4366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.blocks": {
  "lineno": 3877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.bool": {
  "lineno": 1125,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.clip": {
  "lineno": 4969,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.compat.numpy.function.validate_clip_with_axis",
   "pandas.core.dtypes.common.is_number",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCPanel",
   "pandas.isnull",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.clip_lower": {
  "lineno": 5081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.clip_upper": {
  "lineno": 5057,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.consolidate": {
  "lineno": 3701,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.convert_objects": {
  "lineno": 4069,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.copy": {
  "lineno": 4007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.describe": {
  "lineno": 6517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.number",
   "numpy.unique",
   "pandas.Index",
   "pandas.concat",
   "pandas.io.formats.format.format_percentiles"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.describe.describe_1d": {
  "lineno": 6802,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.describe.describe_categorical_1d": {
  "lineno": 6782,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.lib.Timestamp",
   "pandas.core.dtypes.common.is_datetime64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.describe.describe_numeric_1d": {
  "lineno": 6775,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.drop": {
  "lineno": 2448,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.dtypes": {
  "lineno": 3837,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.empty": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.equals": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.ffill": {
  "lineno": 4359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.fillna": {
  "lineno": 4258,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.missing.clean_fill_method",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.filter": {
  "lineno": 3161,
  "symbols_in_volume": [
   "pandas.core.common._count_not_none",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.filter.f": {
  "lineno": 3242,
  "symbols_in_volume": [
   "pandas.compat.to_str"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.first": {
  "lineno": 5528,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.ftypes": {
  "lineno": 3844,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.get": {
  "lineno": 1816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.get_dtype_counts": {
  "lineno": 3827,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.get_ftype_counts": {
  "lineno": 3832,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.get_values": {
  "lineno": 3823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.groupby": {
  "lineno": 5105,
  "symbols_in_volume": [
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.head": {
  "lineno": 3250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.infer_objects": {
  "lineno": 4115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.interpolate": {
  "lineno": 4705,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.MultiIndex",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.isna": {
  "lineno": 4893,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.isnull": {
  "lineno": 4897,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.iteritems": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.keys": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.last": {
  "lineno": 5564,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.mask": {
  "lineno": 6132,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.common._apply_if_callable",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.ndim": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.notna": {
  "lineno": 4912,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.notnull": {
  "lineno": 4916,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.pct_change": {
  "lineno": 6880,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.putmask",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.pipe": {
  "lineno": 3495,
  "symbols_in_volume": [
   "pandas.core.common._pipe",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.pop": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rank": {
  "lineno": 5595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rank.ranker": {
  "lineno": 5633,
  "symbols_in_volume": [
   "pandas.core.algorithms.rank"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.reindex": {
  "lineno": 2981,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.missing.clean_reindex_fill_method",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.reindex_axis": {
  "lineno": 3108,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.missing.clean_reindex_fill_method",
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.reindex_like": {
  "lineno": 2415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rename": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.common._count_not_none",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rename._get_rename_function": {
  "lineno": 857,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rename._get_rename_function.f": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.rename_axis": {
  "lineno": 894,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dict_like",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util._validators.validate_bool_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.replace": {
  "lineno": 4373,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.lzip",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_dict_like",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_re_compilable",
   "pandas.util._validators.validate_bool_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.resample": {
  "lineno": 5305,
  "symbols_in_volume": [
   "pandas.core.resample._maybe_process_deprecations",
   "pandas.core.resample.resample"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.sample": {
  "lineno": 3286,
  "symbols_in_volume": [
   "numpy.inf.any",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.core.common._random_state"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.select": {
  "lineno": 2382,
  "symbols_in_volume": [
   "numpy.asarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.set_axis": {
  "lineno": 533,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.shape": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.shift": {
  "lineno": 6179,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.size": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.slice_shift": {
  "lineno": 6192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.sort_index": {
  "lineno": 2760,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.sort_values": {
  "lineno": 2722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.squeeze": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.swapaxes": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.swaplevel": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tail": {
  "lineno": 3267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.take": {
  "lineno": 2238,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take",
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_clipboard": {
  "lineno": 1566,
  "symbols_in_volume": [
   "pandas.io.clipboards.to_clipboard"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_dense": {
  "lineno": 1165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_hdf": {
  "lineno": 1419,
  "symbols_in_volume": [
   "pandas.io.pytables.to_hdf"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_json": {
  "lineno": 1295,
  "symbols_in_volume": [
   "pandas.io.json.to_json"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_latex": {
  "lineno": 1751,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.io.formats.format.DataFrameFormatter",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_msgpack": {
  "lineno": 1473,
  "symbols_in_volume": [
   "pandas.io.packers.to_msgpack"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_pickle": {
  "lineno": 1536,
  "symbols_in_volume": [
   "pandas.compat.cPickle.HIGHEST_PROTOCOL",
   "pandas.io.pickle.to_pickle"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_sql": {
  "lineno": 1494,
  "symbols_in_volume": [
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.to_xarray": {
  "lineno": 1591,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.DataArray.from_series",
   "xarray.Dataset.from_dataframe"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.transpose": {
  "lineno": 582,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_transpose_for_generic",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.truncate": {
  "lineno": 6285,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tshift": {
  "lineno": 6228,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tz_convert": {
  "lineno": 6384,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tz_convert._tz_convert": {
  "lineno": 6409,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tz_localize": {
  "lineno": 6436,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.tz_localize._tz_localize": {
  "lineno": 6477,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.values": {
  "lineno": 3795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.where": {
  "lineno": 6111,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.common._apply_if_callable",
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.generic.NDFrame.xs": {
  "lineno": 2250,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ndarray",
   "pandas.core.common._maybe_box_datetimelike",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.generic._doc_parms": {
  "lineno": 7116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.generic._make_cum_function": {
  "lineno": 7253,
  "symbols_in_volume": [
   "pandas.compat.set_function_name"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_cum_function.cum_func": {
  "lineno": 7255,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.integer",
   "numpy.putmask",
   "numpy.timedelta64",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.numpy.function.validate_cum_func_with_skipna",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_logical_function": {
  "lineno": 7288,
  "symbols_in_volume": [
   "pandas.compat.set_function_name"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_logical_function.logical_func": {
  "lineno": 7289,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_logical_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_stat_function": {
  "lineno": 7213,
  "symbols_in_volume": [
   "pandas.compat.set_function_name"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_stat_function.stat_func": {
  "lineno": 7214,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_stat_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_stat_function_ddof": {
  "lineno": 7233,
  "symbols_in_volume": [
   "pandas.compat.set_function_name"
  ],
  "type": "function"
 },
 "pandas.core.generic._make_stat_function_ddof.stat_func": {
  "lineno": 7234,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_stat_ddof_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.generic._single_replace": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.missing.get_fill_func",
   "pandas.core.missing.mask_missing"
  ],
  "type": "function"
 },
 "pandas.core.groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.groupby.ArraySplitter": {
  "lineno": 4678,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.BaseGrouper": {
  "lineno": 1864,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.BaseGrouper.__init__": {
  "lineno": 1887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.__iter__": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._aggregate": {
  "lineno": 2312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._aggregate_series_fast": {
  "lineno": 2353,
  "symbols_in_volume": [
   "pandas._libs.lib.SeriesGrouper",
   "pandas.core.algorithms.take_nd",
   "pandas.core.sorting.get_group_index_sorter"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._aggregate_series_pure_python": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray",
   "numpy.zeros",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._cython_operation": {
  "lineno": 2180,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.empty_like",
   "numpy.int64",
   "numpy.nan",
   "numpy.uint8",
   "numpy.zeros",
   "pandas._libs.iNaT",
   "pandas._libs.iNaT.any",
   "pandas._libs.lib.row_bool_subset",
   "pandas._libs.lib.row_bool_subset_object",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_complex_dtype",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_datetimelike",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing._maybe_fill"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_compressed_labels": {
  "lineno": 2050,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.sorting.compress_group_index",
   "pandas.core.sorting.get_group_index"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_cython_function": {
  "lineno": 2139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_cython_function.get_func": {
  "lineno": 2143,
  "symbols_in_volume": [
   "pandas._libs.groupby"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_cython_function.wrapper": {
  "lineno": 2165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_group_keys": {
  "lineno": 1926,
  "symbols_in_volume": [
   "pandas.core.sorting.get_flattened_iterator"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._get_splitter": {
  "lineno": 1922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._is_builtin_func": {
  "lineno": 2132,
  "symbols_in_volume": [
   "pandas.core.base.SelectionMixin._builtin_table.get"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._max_groupsize": {
  "lineno": 2006,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper._transform": {
  "lineno": 2328,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.agg_series": {
  "lineno": 2347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.aggregate": {
  "lineno": 2306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.apply": {
  "lineno": 1938,
  "symbols_in_volume": [
   "pandas._libs.lib.InvalidApply",
   "pandas.compat.zip",
   "pandas.core.common._get_callable_name"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.get_group_levels": {
  "lineno": 2081,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.get_iterator": {
  "lineno": 1908,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.group_info": {
  "lineno": 2033,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.groups": {
  "lineno": 2018,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.core.index.Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.indices": {
  "lineno": 1971,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object",
   "pandas.core.sorting.get_indexer_dict",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.is_monotonic": {
  "lineno": 2028,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.label_info": {
  "lineno": 2041,
  "symbols_in_volume": [
   "numpy.lexsort",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.labels": {
  "lineno": 1982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.levels": {
  "lineno": 1986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.names": {
  "lineno": 1990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.ngroups": {
  "lineno": 2060,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.nkeys": {
  "lineno": 1904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.recons_labels": {
  "lineno": 2064,
  "symbols_in_volume": [
   "pandas.core.sorting.decons_obs_group_ids"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.result_index": {
  "lineno": 2071,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.shape": {
  "lineno": 1897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.size": {
  "lineno": 1994,
  "symbols_in_volume": [
   "numpy.bincount",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BaseGrouper.transform": {
  "lineno": 2309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper": {
  "lineno": 2448,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "class"
 },
 "pandas.core.groupby.BinGrouper.__init__": {
  "lineno": 2479,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.agg_series": {
  "lineno": 2580,
  "symbols_in_volume": [
   "pandas._libs.lib.SeriesBinGrouper"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.get_iterator": {
  "lineno": 2503,
  "symbols_in_volume": [
   "pandas._libs.NaT",
   "pandas.compat.zip",
   "pandas.core.generic.NDFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.group_info": {
  "lineno": 2541,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.r_",
   "numpy.repeat",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.groupings": {
  "lineno": 2575,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.groups": {
  "lineno": 2487,
  "symbols_in_volume": [
   "pandas._libs.NaT",
   "pandas.compat.zip",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.indices": {
  "lineno": 2529,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas._libs.NaT",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.levels": {
  "lineno": 2567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.names": {
  "lineno": 2571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.ngroups": {
  "lineno": 2556,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.nkeys": {
  "lineno": 2499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.BinGrouper.result_index": {
  "lineno": 2560,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy": {
  "lineno": 4210,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.plotting._core.boxplot_frame_groupby",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.groupby.DataFrameGroupBy._apply_to_column_groupbys": {
  "lineno": 4442,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._get_data_to_aggregate": {
  "lineno": 4324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._gotitem": {
  "lineno": 4285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._insert_inaxis_grouper_inplace": {
  "lineno": 4331,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._iterate_column_groupbys": {
  "lineno": 4435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._reindex_output": {
  "lineno": 4382,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.categorical.Categorical",
   "pandas.core.index.CategoricalIndex",
   "pandas.core.index.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._wrap_agged_blocks": {
  "lineno": 4364,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.frame.DataFrame",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._wrap_aggregated_output": {
  "lineno": 4342,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._wrap_generic_output": {
  "lineno": 4314,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy._wrap_transformed_output": {
  "lineno": 4361,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy.aggregate": {
  "lineno": 4276,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy.count": {
  "lineno": 4449,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.atleast_2d",
   "pandas._libs.lib.count_level_2d",
   "pandas.compat.map",
   "pandas.core.dtypes.missing._isna_ndarraylike",
   "pandas.core.internals.make_block"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy.nunique": {
  "lineno": 4467,
  "symbols_in_volume": [
   "pandas.core.common._default_index",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataFrameGroupBy.nunique.groupby_series": {
  "lineno": 4516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter": {
  "lineno": 4630,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.DataSplitter.__init__": {
  "lineno": 4632,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter.__iter__": {
  "lineno": 4649,
  "symbols_in_volume": [
   "pandas._libs.lib.generate_slices",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter._chop": {
  "lineno": 4671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter._get_sorted_data": {
  "lineno": 4668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter.apply": {
  "lineno": 4674,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter.slabels": {
  "lineno": 4639,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_nd",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.DataSplitter.sort_idx": {
  "lineno": 4644,
  "symbols_in_volume": [
   "pandas.core.sorting.get_group_index_sorter",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.FrameSplitter": {
  "lineno": 4688,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.FrameSplitter.__init__": {
  "lineno": 4690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.FrameSplitter._chop": {
  "lineno": 4706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.FrameSplitter.fast_apply": {
  "lineno": 4693,
  "symbols_in_volume": [
   "pandas._libs.lib.apply_frame_axis0",
   "pandas._libs.lib.generate_slices"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy": {
  "lineno": 1039,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations": {
  "lineno": 1221,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.prod",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.first_compat": {
  "lineno": 1253,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.first_compat.first": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.groupby_function": {
  "lineno": 1225,
  "symbols_in_volume": [
   "pandas.compat.set_function_name"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.groupby_function.f": {
  "lineno": 1230,
  "symbols_in_volume": [
   "pandas.core.base.SpecificationError",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.last_compat": {
  "lineno": 1268,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy._add_numeric_operations.last_compat.last": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.backfill": {
  "lineno": 1362,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.count": {
  "lineno": 1108,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.cumcount": {
  "lineno": 1605,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.cummax": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.maximum.accumulate",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.cummin": {
  "lineno": 1681,
  "symbols_in_volume": [
   "numpy.minimum.accumulate",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.cumprod": {
  "lineno": 1661,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_groupby_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.cumsum": {
  "lineno": 1671,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_groupby_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.describe": {
  "lineno": 1303,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame.describe.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.expanding": {
  "lineno": 1332,
  "symbols_in_volume": [
   "pandas.core.window.ExpandingGroupby",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.head": {
  "lineno": 1728,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.mean": {
  "lineno": 1116,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_groupby_func",
   "pandas.core.base.GroupByError",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.median": {
  "lineno": 1134,
  "symbols_in_volume": [
   "pandas.core.base.GroupByError",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.median.f": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.ngroup": {
  "lineno": 1536,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.nth": {
  "lineno": 1381,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "numpy.intp",
   "numpy.nan",
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.ohlc": {
  "lineno": 1292,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.pad": {
  "lineno": 1343,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.pipe": {
  "lineno": 1782,
  "symbols_in_volume": [
   "pandas.core.common._pipe"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.resample": {
  "lineno": 1311,
  "symbols_in_volume": [
   "pandas.core.resample.get_resampler_for_grouping",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.rolling": {
  "lineno": 1321,
  "symbols_in_volume": [
   "pandas.core.window.RollingGroupby",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.sem": {
  "lineno": 1195,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.shift": {
  "lineno": 1699,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pandas._libs.groupby.group_shift_indexer",
   "pandas.core.algorithms.take_nd",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.size": {
  "lineno": 1211,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.std": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.compat.numpy.function.validate_groupby_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.tail": {
  "lineno": 1755,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupBy.var": {
  "lineno": 1174,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_groupby_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot": {
  "lineno": 461,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.groupby.GroupByPlot.__call__": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot.__call__.f": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot.__getattr__": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot.__getattr__.attr": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot.__getattr__.attr.f": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.GroupByPlot.__init__": {
  "lineno": 466,
  "symbols_in_volume": [
   "pandas._libs.groupby"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouper": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.Grouper.__init__": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouper.__new__": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandas.core.resample.TimeGrouper"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouper.__repr__": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouper._get_grouper": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouper._set_grouper": {
  "lineno": 396,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouper.ax": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouper.groups": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouping": {
  "lineno": 2591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.Grouping.__init__": {
  "lineno": 2617,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ndarray",
   "pandas.core.categorical.Categorical",
   "pandas.core.categorical.Categorical.from_codes",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.index.CategoricalIndex",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.series.Series",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.__iter__": {
  "lineno": 2720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.__repr__": {
  "lineno": 2717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouping._make_labels": {
  "lineno": 2751,
  "symbols_in_volume": [
   "pandas.core.algorithms.factorize",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.group_index": {
  "lineno": 2745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.groups": {
  "lineno": 2764,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical.from_codes",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.indices": {
  "lineno": 2730,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_categorical",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.labels": {
  "lineno": 2739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.Grouping.ngroups": {
  "lineno": 2726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDArrayGroupBy": {
  "lineno": 4622,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.NDFrameGroupBy": {
  "lineno": 3579,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.NDFrameGroupBy._aggregate_generic": {
  "lineno": 3744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._aggregate_item_by_item": {
  "lineno": 3774,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._choose_path": {
  "lineno": 4106,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._cython_agg_blocks": {
  "lineno": 3626,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.sort",
   "numpy.zeros",
   "pandas._libs.groupby",
   "pandas.core.base.DataError"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._cython_agg_general": {
  "lineno": 3598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._decide_output_index": {
  "lineno": 3806,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._define_paths": {
  "lineno": 4095,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._get_data_to_aggregate": {
  "lineno": 3698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._iterate_slices": {
  "lineno": 3581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._post_process_cython_aggregate": {
  "lineno": 3705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._transform_fast": {
  "lineno": 4074,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d",
   "pandas.core.frame.DataFrame._from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._transform_general": {
  "lineno": 3997,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.prod",
   "pandas.core.frame.DataFrame",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._transform_item_by_item": {
  "lineno": 4126,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._wrap_agged_blocks": {
  "lineno": 3603,
  "symbols_in_volume": [
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._wrap_aggregated_output": {
  "lineno": 3771,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._wrap_applied_output": {
  "lineno": 3822,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.vstack",
   "pandas._libs.Timestamp",
   "pandas.compat.map",
   "pandas.core.dtypes.common.is_datetimelike",
   "pandas.core.frame.DataFrame",
   "pandas.core.generic.NDFrame",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.core.index._all_indexes_same",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series",
   "pandas.core.tools.numeric.to_numeric"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy._wrap_applied_output.first_not_none": {
  "lineno": 3832,
  "symbols_in_volume": [
   "pandas.core.common._not_none"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy.aggregate": {
  "lineno": 3711,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy.filter": {
  "lineno": 4146,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameGroupBy.transform": {
  "lineno": 4047,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.frame.DataFrame",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameSplitter": {
  "lineno": 4713,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.NDFrameSplitter.__init__": {
  "lineno": 4715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameSplitter._chop": {
  "lineno": 4730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.NDFrameSplitter._get_sorted_data": {
  "lineno": 4720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.PanelGroupBy": {
  "lineno": 4535,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.PanelGroupBy._aggregate_item_by_item": {
  "lineno": 4599,
  "symbols_in_volume": [
   "pandas.core.panel.Panel._from_axes"
  ],
  "type": "function"
 },
 "pandas.core.groupby.PanelGroupBy._iterate_slices": {
  "lineno": 4542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.PanelGroupBy._wrap_aggregated_output": {
  "lineno": 4618,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.groupby.PanelGroupBy._wrap_generic_output": {
  "lineno": 4579,
  "symbols_in_volume": [
   "pandas.core.panel.Panel._from_axes"
  ],
  "type": "function"
 },
 "pandas.core.groupby.PanelGroupBy.aggregate": {
  "lineno": 4559,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy": {
  "lineno": 3044,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.groupby.SeriesGroupBy._aggregate_multiple_funcs": {
  "lineno": 3145,
  "symbols_in_volume": [
   "copy.copy",
   "pandas.compat.itervalues",
   "pandas.compat.lzip",
   "pandas.compat.string_types",
   "pandas.core.base.SpecificationError",
   "pandas.core.common._get_callable_name",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._aggregate_named": {
  "lineno": 3254,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._apply_to_column_groupbys": {
  "lineno": 3574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._selection_name": {
  "lineno": 3052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._transform_fast": {
  "lineno": 3310,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.algorithms.take_1d",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._wrap_aggregated_output": {
  "lineno": 3213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._wrap_applied_output": {
  "lineno": 3223,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._wrap_applied_output._get_index": {
  "lineno": 3228,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._wrap_output": {
  "lineno": 3201,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy._wrap_transformed_output": {
  "lineno": 3218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.aggregate": {
  "lineno": 3106,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.concat",
   "pandas.core.generic._shared_docs",
   "pandas.core.index.Index",
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.apply": {
  "lineno": 3100,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.count": {
  "lineno": 3560,
  "symbols_in_volume": [
   "numpy.bincount",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.describe": {
  "lineno": 3431,
  "symbols_in_volume": [
   "pandas.core.series.Series.describe.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.filter": {
  "lineno": 3325,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.filter.true_and_notna": {
  "lineno": 3361,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.nunique": {
  "lineno": 3376,
  "symbols_in_volume": [
   "numpy.add.reduceat",
   "numpy.flatnonzero",
   "numpy.lexsort",
   "numpy.nonzero",
   "numpy.r_",
   "numpy.zeros",
   "pandas.core.algorithms.factorize",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.transform": {
  "lineno": 3266,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.reshape.concat.concat",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesGroupBy.value_counts": {
  "lineno": 3439,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.add.at",
   "numpy.add.reduceat",
   "numpy.arange",
   "numpy.diff",
   "numpy.iterable",
   "numpy.lexsort",
   "numpy.nonzero",
   "numpy.r_",
   "numpy.repeat",
   "numpy.tile",
   "numpy.where",
   "numpy.zeros",
   "pandas.compat.map",
   "pandas.core.algorithms.factorize",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.index.MultiIndex",
   "pandas.core.reshape.merge._get_join_indexers",
   "pandas.core.reshape.tile.cut",
   "pandas.core.series.Series",
   "pandas.core.series.Series.value_counts"
  ],
  "type": "function"
 },
 "pandas.core.groupby.SeriesSplitter": {
  "lineno": 4682,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.groupby.SeriesSplitter._chop": {
  "lineno": 4684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy": {
  "lineno": 483,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject",
   "pandas.core.base.SelectionMixin"
  ],
  "type": "class"
 },
 "pandas.core.groupby._GroupBy.__getattr__": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.__init__": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.generic.NDFrame",
   "pandas.util._validators.validate_kwargs"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.__iter__": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.__len__": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.__unicode__": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._apply_filter": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.sort",
   "numpy.tile"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._assure_grouper": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._concat_objects": {
  "lineno": 962,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.algorithms.unique1d",
   "pandas.core.index.MultiIndex",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._concat_objects.reset_identity": {
  "lineno": 965,
  "symbols_in_volume": [
   "pandas.core.common._not_none"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._cumcount_array": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.empty",
   "numpy.int64",
   "numpy.intp",
   "numpy.nonzero",
   "numpy.r_",
   "numpy.repeat",
   "pandas.core.sorting.get_group_index_sorter"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._cython_agg_general": {
  "lineno": 911,
  "symbols_in_volume": [
   "pandas.core.base.DataError",
   "pandas.core.base.GroupByError",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._cython_transform": {
  "lineno": 891,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.core.base.DataError",
   "pandas.core.base.GroupByError",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._dir_additions": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._get_index": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._get_indices": {
  "lineno": 557,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._get_indices.get_converter": {
  "lineno": 563,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._index_with_as_index": {
  "lineno": 854,
  "symbols_in_volume": [
   "itertools.chain",
   "pandas.compat.range",
   "pandas.core.index.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._iterate_slices": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._make_wrapper": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas.compat.callable",
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._make_wrapper.wrapper": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._make_wrapper.wrapper.curried": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._make_wrapper.wrapper.curried_with_axis": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._python_agg_general": {
  "lineno": 929,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common._ensure_float",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._python_apply_general": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._reset_group_selection": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._selected_obj": {
  "lineno": 611,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._set_group_selection": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._set_result_index_ordered": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._try_cast": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy._wrap_applied_output": {
  "lineno": 959,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.apply": {
  "lineno": 780,
  "symbols_in_volume": [
   "pandas.compat.callable",
   "pandas.core.config.option_context",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.apply.f": {
  "lineno": 793,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.get_group": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.groups": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.indices": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.ngroups": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._GroupBy.transform": {
  "lineno": 819,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.groupby._convert_grouper": {
  "lineno": 2967,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.index.Index",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby._get_axes": {
  "lineno": 1846,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby._get_grouper": {
  "lineno": 2770,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.callable",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.series.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.groupby._get_grouper.is_in_axis": {
  "lineno": 2890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._get_grouper.is_in_obj": {
  "lineno": 2900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.groupby._is_indexed_like": {
  "lineno": 1853,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby._is_label_like": {
  "lineno": 2962,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.groupby._whitelist_method_generator": {
  "lineno": 2983,
  "symbols_in_volume": [
   "pandas.util._decorators.make_signature",
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandas.core.groupby.generate_bins_generic": {
  "lineno": 2396,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int64",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.groupby.get_splitter": {
  "lineno": 4734,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.groupby.groupby": {
  "lineno": 1834,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.index": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.accessors": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes.DatetimeIndex._datetimelike_methods",
   "pandas.core.indexes.datetimes.DatetimeIndex._datetimelike_ops",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.period.PeriodIndex._datetimelike_methods",
   "pandas.core.indexes.period.PeriodIndex._datetimelike_ops",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex._datetimelike_methods",
   "pandas.core.indexes.timedeltas.TimedeltaIndex._datetimelike_ops"
  ],
  "type": "module"
 },
 "pandas.core.indexes.accessors.CombinedDatetimelikeProperties": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.accessors.CombinedDatetimelikeProperties._make_accessor": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.DatetimeProperties": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.accessors.DatetimeProperties.freq": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.DatetimeProperties.to_pydatetime": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.PeriodProperties": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.accessors.Properties": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.core.accessor.PandasDelegate",
   "pandas.core.base.NoNewAttributesMixin",
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.indexes.accessors.Properties.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_method": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_property_get": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.Series",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.accessors.Properties._delegate_property_set": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties.components": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties.freq": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.TimedeltaProperties.to_pytimedelta": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.is_datetimelike": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.accessors.maybe_to_datetimelike": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_datetime_arraylike",
   "pandas.core.dtypes.common.is_period_arraylike",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.api._all_indexes_same": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.api._get_combined_index": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.core.common._get_distinct_objs",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api._get_consensus_names": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api._get_objs_combined_axis": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.api._sanitize_and_check": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.core.common._try_sort",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes._unique_indices": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas._libs.lib.fast_unique_multiple_list",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.api._union_indexes._unique_indices.conv": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "module"
 },
 "pandas.core.indexes.base.Index": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.algos.arrmap_object",
   "pandas._libs.index.ObjectEngine",
   "pandas._libs.join.inner_join_indexer_object",
   "pandas._libs.join.left_join_indexer_object",
   "pandas._libs.join.left_join_indexer_unique_object",
   "pandas._libs.join.outer_join_indexer_object",
   "pandas.core.accessor.AccessorProperty",
   "pandas.core.base.IndexOpsMixin",
   "pandas.core.base.PandasObject",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.strings.StringMethods"
  ],
  "type": "class"
 },
 "pandas.core.indexes.base.Index.__add__": {
  "lineno": 2153,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__and__": {
  "lineno": 2165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__array__": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__array_wrap__": {
  "lineno": 567,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__contains__": {
  "lineno": 1692,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__copy__": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__deepcopy__": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__getitem__": {
  "lineno": 1726,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.common._values_from_object",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__hash__": {
  "lineno": 1720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__len__": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__new__": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.bool",
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype",
   "pandas._libs.lib.is_datetime_with_singletz_array",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas.compat.PY3",
   "pandas.compat.range",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.is_signed_integer_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.common.is_unsigned_integer_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__nonzero__": {
  "lineno": 1673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__or__": {
  "lineno": 2168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__radd__": {
  "lineno": 2156,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__reduce__": {
  "lineno": 1641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__setitem__": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__setstate__": {
  "lineno": 1646,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray.__setstate__",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__sub__": {
  "lineno": 2161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__unicode__": {
  "lineno": 828,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.__xor__": {
  "lineno": 2171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_comparison_methods": {
  "lineno": 3822,
  "symbols_in_volume": [
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_comparison_methods._make_compare": {
  "lineno": 3826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_comparison_methods._make_compare._evaluate_compare": {
  "lineno": 3827,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.ops._comp_method_OBJECT_ARRAY"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods": {
  "lineno": 4055,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods._make_logical_function": {
  "lineno": 4072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods._make_logical_function.logical_func": {
  "lineno": 4073,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods_disabled": {
  "lineno": 4094,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods_disabled._make_invalid_op": {
  "lineno": 4098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_logical_methods_disabled._make_invalid_op.invalid_op": {
  "lineno": 4099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods": {
  "lineno": 4050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_add_sub_disabled": {
  "lineno": 3866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_add_sub_disabled._make_invalid_op": {
  "lineno": 3870,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_add_sub_disabled._make_invalid_op.invalid_op": {
  "lineno": 3871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_binary": {
  "lineno": 3965,
  "symbols_in_volume": [
   "operator.add",
   "operator.div",
   "operator.floordiv",
   "operator.mod",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_binary._make_evaluate_binop": {
  "lineno": 3969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_binary._make_evaluate_binop._evaluate_numeric_binop": {
  "lineno": 3970,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.errstate",
   "numpy.timedelta64",
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.dtypes.generic.ABCDateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_disabled": {
  "lineno": 3881,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_disabled._make_invalid_op": {
  "lineno": 3885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_disabled._make_invalid_op.invalid_op": {
  "lineno": 3886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_unary": {
  "lineno": 4030,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_unary._make_evaluate_unary": {
  "lineno": 4034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._add_numeric_methods_unary._make_evaluate_unary._evaluate_numeric_unary": {
  "lineno": 4036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._assert_can_do_op": {
  "lineno": 1102,
  "symbols_in_volume": [
   "pandas._libs.lib.isscalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._assert_can_do_setop": {
  "lineno": 1085,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._assert_take_fillable": {
  "lineno": 1843,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._can_reindex": {
  "lineno": 2927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._cleanup": {
  "lineno": 1587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._coerce_scalar_to_index": {
  "lineno": 749,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._coerce_to_ndarray": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._concat": {
  "lineno": 1789,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_index_asobject",
   "pandas.core.dtypes.concat.get_dtype_kinds"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._concat_same_dtype": {
  "lineno": 1797,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_index_asobject"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._constructor": {
  "lineno": 1590,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_arr_indexer": {
  "lineno": 1510,
  "symbols_in_volume": [
   "pandas.core.common._asarray_tuplesafe",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_can_do_setop": {
  "lineno": 1090,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_for_op": {
  "lineno": 1098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_index_indexer": {
  "lineno": 1528,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_list_indexer": {
  "lineno": 1546,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.indexing.maybe_convert_indices",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_listlike_indexer": {
  "lineno": 1476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_scalar_indexer": {
  "lineno": 1360,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.generic.ABCMultiIndex",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_slice_indexer": {
  "lineno": 1408,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_slice_indexer.is_int": {
  "lineno": 1426,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._convert_tolerance": {
  "lineno": 2706,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._deepcopy_if_needed": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._engine": {
  "lineno": 1594,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._evaluate_compare": {
  "lineno": 3819,
  "symbols_in_volume": [
   "pandas.core.base.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._evaluate_with_datetime_like": {
  "lineno": 3816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._evaluate_with_timedelta_like": {
  "lineno": 3813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._filter_indexer_tolerance": {
  "lineno": 2778,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_attrs": {
  "lineno": 979,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_data": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.config.get_option",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.io.formats.console.get_console_size",
   "pandas.io.formats.format._get_adjustment"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_data._extend_line": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_data.best_len": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_native_types": {
  "lineno": 2010,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_space": {
  "lineno": 851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._format_with_header": {
  "lineno": 1959,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.io.formats.format.format_array",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._formatter_func": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_attributes_dict": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_consensus_name": {
  "lineno": 2174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_fill_indexer": {
  "lineno": 2714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_fill_indexer_searchsorted": {
  "lineno": 2727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_grouper_for_level": {
  "lineno": 521,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_level_number": {
  "lineno": 1619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_level_values": {
  "lineno": 2591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_loc_only_exact_matches": {
  "lineno": 3552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_names": {
  "lineno": 1112,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenList"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_nearest_indexer": {
  "lineno": 2757,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.where",
   "operator.le",
   "operator.lt"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_string_slice": {
  "lineno": 3429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._get_unique_index": {
  "lineno": 2443,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._has_complex_internals": {
  "lineno": 1209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._invalid_indexer": {
  "lineno": 1571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._is_memory_usage_qualified": {
  "lineno": 1628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._is_strictly_monotonic_decreasing": {
  "lineno": 1296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._is_strictly_monotonic_increasing": {
  "lineno": 1280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._isnan": {
  "lineno": 1862,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.empty",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._join_level": {
  "lineno": 3250,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas._libs.algos.groupsort_indexer",
   "pandas._libs.lib.get_reverse_indexer",
   "pandas.core.algorithms.take_nd",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._join_level._get_leaf_sorter": {
  "lineno": 3261,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.hstack",
   "pandas._libs.algos.groupsort_indexer",
   "pandas._libs.lib.get_level_sorter",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._join_monotonic": {
  "lineno": 3380,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._join_multi": {
  "lineno": 3186,
  "symbols_in_volume": [
   "pandas.core.common._not_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._join_non_unique": {
  "lineno": 3229,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.putmask",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.reshape.merge._get_join_indexers"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._maybe_cast_indexer": {
  "lineno": 3467,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._maybe_cast_slice_bound": {
  "lineno": 3519,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._maybe_promote": {
  "lineno": 2829,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._maybe_update_attributes": {
  "lineno": 3904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._mpl_repr": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._nan_idxs": {
  "lineno": 1873,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._reindex_non_unique": {
  "lineno": 3003,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.missing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._reset_identity": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._scalar_data_error": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._searchsorted_monotonic": {
  "lineno": 3539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._set_names": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._shallow_copy": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._shallow_copy_with_infer": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._simple_new": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._sort_levels_monotonic": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._string_data_error": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._to_embed": {
  "lineno": 1030,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._to_safe_for_reshape": {
  "lineno": 1062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._try_convert_to_int_index": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._update_inplace": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._validate_for_numeric_binop": {
  "lineno": 3918,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.ndarray",
   "numpy.timedelta64",
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.generic.ABCDateOffset",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._validate_for_numeric_unaryop": {
  "lineno": 3908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._validate_index_level": {
  "lineno": 1599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._validate_indexer": {
  "lineno": 3482,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._validate_names": {
  "lineno": 809,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._wrap_joined_index": {
  "lineno": 3425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index._wrap_union_result": {
  "lineno": 2272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.append": {
  "lineno": 1760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.argsort": {
  "lineno": 2135,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.asof": {
  "lineno": 2050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.asof_locs": {
  "lineno": 2068,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.astype": {
  "lineno": 1057,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.contains": {
  "lineno": 1712,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.copy": {
  "lineno": 786,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.delete": {
  "lineno": 3695,
  "symbols_in_volume": [
   "numpy.delete"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.difference": {
  "lineno": 2332,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.setdiff1d",
   "pandas.core.sorting.safe_sort"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.drop": {
  "lineno": 3724,
  "symbols_in_volume": [
   "pandas.core.common._index_labels_to_array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.drop_duplicates": {
  "lineno": 3753,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.dropna": {
  "lineno": 3804,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.dtype": {
  "lineno": 578,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.dtype_str": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.duplicated": {
  "lineno": 3757,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.equals": {
  "lineno": 2021,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.fillna": {
  "lineno": 3779,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.format": {
  "lineno": 1944,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_duplicates": {
  "lineno": 1578,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_indexer": {
  "lineno": 2662,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.missing.clean_reindex_fill_method",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_indexer_for": {
  "lineno": 2819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_indexer_non_unique": {
  "lineno": 2803,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.missing",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_loc": {
  "lineno": 2518,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_slice_bound": {
  "lineno": 3559,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.maybe_booleans_to_slice",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_value": {
  "lineno": 2537,
  "symbols_in_volume": [
   "pandas._libs.tslib.get_value_box",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.get_values": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.groupby": {
  "lineno": 2839,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common._ensure_categorical"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.has_duplicates": {
  "lineno": 1320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.hasnans": {
  "lineno": 1881,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.holds_integer": {
  "lineno": 1348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.identical": {
  "lineno": 2041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.inferred_type": {
  "lineno": 1623,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.insert": {
  "lineno": 3705,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.intersection": {
  "lineno": 2276,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique1d",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_all_dates": {
  "lineno": 1635,
  "symbols_in_volume": [
   "pandas._libs.lib.is_datetime_array",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_boolean": {
  "lineno": 1324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_categorical": {
  "lineno": 1339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_floating": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_integer": {
  "lineno": 1327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_interval": {
  "lineno": 1342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_lexsorted_for_tuple": {
  "lineno": 1312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_mixed": {
  "lineno": 1345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_monotonic": {
  "lineno": 1241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_monotonic_decreasing": {
  "lineno": 1263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_monotonic_increasing": {
  "lineno": 1246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_numeric": {
  "lineno": 1333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_object": {
  "lineno": 1336,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_type_compatible": {
  "lineno": 1632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.is_unique": {
  "lineno": 1315,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.isin": {
  "lineno": 2893,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.isin"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.isna": {
  "lineno": 1889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.join": {
  "lineno": 3087,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.map": {
  "lineno": 2867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.memory_usage": {
  "lineno": 597,
  "symbols_in_volume": [
   "pandas.core.base.IndexOpsMixin.memory_usage.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.nlevels": {
  "lineno": 1108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.notna": {
  "lineno": 1907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.putmask": {
  "lineno": 1925,
  "symbols_in_volume": [
   "numpy.putmask",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.ravel": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.reindex": {
  "lineno": 2946,
  "symbols_in_volume": [
   "pandas.core.missing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.rename": {
  "lineno": 1182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.repeat": {
  "lineno": 606,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_repeat",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.reshape": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.set_names": {
  "lineno": 1123,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.set_value": {
  "lineno": 2583,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.shift": {
  "lineno": 2123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.slice_indexer": {
  "lineno": 3434,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.slice_locs": {
  "lineno": 3618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.sort": {
  "lineno": 2099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.sort_values": {
  "lineno": 2084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.sortlevel": {
  "lineno": 2103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.summary": {
  "lineno": 1214,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.symmetric_difference": {
  "lineno": 2379,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.setdiff1d",
   "pandas.core.dtypes.concat._concat_compat",
   "pandas.core.sorting.safe_sort"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.take": {
  "lineno": 1825,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.to_datetime": {
  "lineno": 1066,
  "symbols_in_volume": [
   "dateutil.parser.parse",
   "pandas._libs.tslibs.parsing.try_parse_dates",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.to_frame": {
  "lineno": 1007,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.to_native_types": {
  "lineno": 1984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.to_series": {
  "lineno": 992,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.union": {
  "lineno": 2189,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.core.algorithms.take_nd",
   "pandas.core.dtypes.common.is_dtype_union_equal",
   "pandas.core.dtypes.concat._concat_compat",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.unique": {
  "lineno": 3748,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.values": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.view": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base.Index.where": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.where",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base.InvalidIndexError": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.base._ensure_has_len": {
  "lineno": 4222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base._ensure_index": {
  "lineno": 4155,
  "symbols_in_volume": [
   "copy.copy",
   "pandas._libs.lib.clean_index_list"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base._ensure_index_from_sequences": {
  "lineno": 4115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base._get_na_value": {
  "lineno": 4215,
  "symbols_in_volume": [
   "numpy.datetime64.get",
   "numpy.nan",
   "numpy.timedelta64.get",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.NaT.get",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base._new_Index": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.indexes.period._new_PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base._trim_front": {
  "lineno": 4232,
  "symbols_in_volume": [
   "pandas.core.strings"
  ],
  "type": "function"
 },
 "pandas.core.indexes.base._try_get_item": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.base._validate_join_method": {
  "lineno": 4242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_doc_kwargs"
  ],
  "type": "module"
 },
 "pandas.core.indexes.category.CategoricalIndex": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas._libs.index.Int64Engine",
   "pandas.core.accessor.PandasDelegate",
   "pandas.core.indexes.base.Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.category.CategoricalIndex.__array__": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.__contains__": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.__new__": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCCategorical"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_accessors": {
  "lineno": 749,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods._make_compare": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._add_comparison_methods._make_compare._evaluate_compare": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCCategorical",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._can_reindex": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._codes_for_groupby": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._concat": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._concat_same_dtype": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_arr_indexer": {
  "lineno": 596,
  "symbols_in_volume": [
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_index_indexer": {
  "lineno": 605,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_list_indexer": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._convert_scalar_indexer": {
  "lineno": 570,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._create_categorical": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.generic.ABCCategorical",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._create_from_codes": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical.from_codes"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._delegate_method": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._engine": {
  "lineno": 344,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._format_attrs": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.core.indexes.base.default_pprint"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._formatter_func": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._is_dtype_compat": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._isnan": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._reindex_non_unique": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._reverse_indexer": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._shallow_copy": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._simple_new": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex._to_safe_for_reshape": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.argsort": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.astype": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_intervals",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.categories": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.codes": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.contains": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.delete": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.delete"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.duplicated": {
  "lineno": 371,
  "symbols_in_volume": [
   "pandas._libs.hashtable.duplicated_int64",
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.equals": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.array_equivalent",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.fillna": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_indexer": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.core.missing.clean_reindex_fill_method",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_indexer_non_unique": {
  "lineno": 559,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.core.missing",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_loc": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_value": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.get_values": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.inferred_type": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.insert": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_dtype_equal": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_monotonic_decreasing": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_monotonic_increasing": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.is_unique": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.map": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.ordered": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.reindex": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.missing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.take": {
  "lineno": 609,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.tolist": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.unique": {
  "lineno": 363,
  "symbols_in_volume": [
   "pandas.core.base.IndexOpsMixin.unique",
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.values": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.category.CategoricalIndex.where": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.categorical.Categorical",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_doc_kwargs"
  ],
  "type": "module"
 },
 "pandas.core.indexes.datetimelike.DatelikeOps": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.datetimelike.DatelikeOps.strftime": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas._libs.NaT"
  ],
  "type": "class"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.__contains__": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.__getitem__": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.uint8",
   "pandas._libs.lib.maybe_booleans_to_slice",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.__iter__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_datelike": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_datetimelike_methods": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_datetimelike_methods.__add__": {
  "lineno": 640,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_datetimelike_methods.__rsub__": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_datetimelike_methods.__sub__": {
  "lineno": 662,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas._libs.period.Period",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_delta": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_delta_td": {
  "lineno": 702,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas._libs.tslib._delta_to_nanoseconds",
   "pandas.core.algorithms.checked_add_with_arr"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._add_delta_tdi": {
  "lineno": 713,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas.core.algorithms.checked_add_with_arr"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._box_func": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._box_values": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas._libs.lib.map_infer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._concat_same_dtype": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.core.dtypes.concat._concat_datetimetz",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._convert_scalar_indexer": {
  "lineno": 596,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._convert_tolerance": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._ensure_localized": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCIndexClass"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._evaluate_compare": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas._libs.lib.item_from_zerodim",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._format_attrs": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._format_with_header": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._formatter_func": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._isnan": {
  "lineno": 419,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._join_i8_wrapper": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._join_i8_wrapper.wrapper": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._maybe_mask_results": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._nat_new": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.zeros",
   "pandas._libs.iNaT",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._resolution": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.Resolution.get_reso_from_freq",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._sub_datelike": {
  "lineno": 627,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._sub_period": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.argmax": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_argmax"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.argmin": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pandas.compat.numpy.function.validate_argmin"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.asobject": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.equals": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array_equal",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.freqstr": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.get_duplicates": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.get_duplicates"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.inferred_freq": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.isin": {
  "lineno": 731,
  "symbols_in_volume": [
   "pandas.core.algorithms.isin"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.map": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.max": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas.compat.numpy.function.validate_max"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.min": {
  "lineno": 472,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas.compat.numpy.function.validate_min"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.repeat": {
  "lineno": 791,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_repeat",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.resolution": {
  "lineno": 589,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.Resolution.get_str",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.shift": {
  "lineno": 752,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.sort_values": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.core.dtypes.generic.ABCPeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.summary": {
  "lineno": 813,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.take": {
  "lineno": 391,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.tolist": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin.where": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.TimelikeOps": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexes.datetimelike.TimelikeOps._round": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas._libs.NaT",
   "pandas.tseries.frequencies.to_offset",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.TimelikeOps.ceil": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.ceil",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.TimelikeOps.floor": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.floor",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike.TimelikeOps.round": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimelike._ensure_datetimelike_to_i8": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.iNaT",
   "pandas._libs.lib.isscalar",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "pandas._libs.Timestamp"
  ],
  "type": "module"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas._libs.index.DatetimeEngine",
   "pandas._libs.join.inner_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_unique_int64",
   "pandas._libs.join.outer_join_indexer_int64",
   "pandas.core.indexes.datetimelike.DatelikeOps",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.core.indexes.datetimelike.TimelikeOps",
   "pandas.core.indexes.numeric.Int64Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.__iter__": {
  "lineno": 1170,
  "symbols_in_volume": [
   "pandas._libs.tslib.ints_to_pydatetime"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.__new__": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.int64",
   "numpy.ndarray",
   "pandas._libs.tslib.cast_to_nanoseconds",
   "pandas._libs.tslib.tz_localize_to_utc",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.core.dtypes.common._INT64_DTYPE",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.numeric.Int64Index",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.DateOffset",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.__reduce__": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.__setstate__": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray.__reduce__",
   "numpy.ndarray.__setstate__"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._add_datelike": {
  "lineno": 749,
  "symbols_in_volume": [
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._add_delta": {
  "lineno": 806,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.TimedeltaIndex",
   "pandas.core.common._maybe_match_name",
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.Tick",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._add_offset": {
  "lineno": 827,
  "symbols_in_volume": [
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._box_func": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas._libs.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._cached_range": {
  "lineno": 627,
  "symbols_in_volume": [
   "pandas._libs.Timestamp",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._can_fast_union": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._convert_for_op": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._fast_union": {
  "lineno": 1140,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_compat"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._format_native_types": {
  "lineno": 843,
  "symbols_in_volume": [
   "pandas._libs.tslib.format_array_from_datetime",
   "pandas.io.formats.format._get_format_datetime64_from_values"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._formatter_func": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.io.formats.format._get_format_datetime64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._generate": {
  "lineno": 417,
  "symbols_in_volume": [
   "pandas._libs.Timestamp",
   "pandas._libs.index",
   "pandas._libs.index.view",
   "pandas._libs.tslib.tz_localize_to_utc",
   "pandas._libs.tslibs.timezones.get_timezone",
   "pandas._libs.tslibs.timezones.infer_tzinfo",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.core.common._count_not_none",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.tools.datetimes.normalize_date",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._get_freq": {
  "lineno": 1555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._get_string_slice": {
  "lineno": 1494,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._get_time_micros": {
  "lineno": 875,
  "symbols_in_volume": [
   "pandas._libs.tslib.get_time_micros",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._has_same_tz": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas._libs.Timestamp",
   "pandas._libs.tslibs.timezones.get_timezone"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._is_dates_only": {
  "lineno": 696,
  "symbols_in_volume": [
   "pandas.io.formats.format._is_dates_only",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._join_i8_wrapper": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._join_i8_wrapper"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._local_timestamps": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int_",
   "pandas._libs.tslib.tz_convert",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._maybe_cast_slice_bound": {
  "lineno": 1453,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._maybe_promote": {
  "lineno": 1361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._maybe_update_attributes": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._maybe_utc_convert": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._mpl_repr": {
  "lineno": 692,
  "symbols_in_volume": [
   "pandas._libs.tslib.ints_to_pydatetime"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._parsed_string_to_bounds": {
  "lineno": 1255,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.Timestamp",
   "pandas._libs.tslib.monthrange",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Second"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._partial_date_slice": {
  "lineno": 1320,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.Resolution.get_reso"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._resolution": {
  "lineno": 1690,
  "symbols_in_volume": [
   "pandas._libs.period.resolution",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._set_freq": {
  "lineno": 1558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._simple_new": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._sub_datelike": {
  "lineno": 757,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.TimedeltaIndex",
   "pandas._libs.Timestamp",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.iNaT",
   "pandas.core.algorithms.checked_add_with_arr"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._sub_datelike_dti": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._timezone": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones.get_timezone",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._to_embed": {
  "lineno": 913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._wrap_joined_index": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex._wrap_union_result": {
  "lineno": 1193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.astype": {
  "lineno": 855,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.is_string_dtype",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.date": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas._libs.algos.arrmap_object"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.delete": {
  "lineno": 1741,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.delete",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas._libs.tslib.tz_convert",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.dtype": {
  "lineno": 1673,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.get_loc": {
  "lineno": 1409,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "numpy.asarray",
   "pandas._libs.Timestamp",
   "pandas.core.indexes.base.Index.get_loc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.get_value": {
  "lineno": 1366,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "pandas._libs.Timestamp",
   "pandas.core.common._maybe_box",
   "pandas.core.indexes.base.Index.get_value"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.get_value_maybe_box": {
  "lineno": 1399,
  "symbols_in_volume": [
   "pandas._libs.Timestamp",
   "pandas.core.common._maybe_box",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.indexer_at_time": {
  "lineno": 1862,
  "symbols_in_volume": [
   "datetime.time",
   "datetime.time.tzinfo",
   "dateutil.parser.parse",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.indexer_between_time": {
  "lineno": 1891,
  "symbols_in_volume": [
   "operator.and_",
   "operator.le",
   "operator.lt",
   "operator.or_",
   "pandas.core.tools.datetimes.to_time"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.inferred_type": {
  "lineno": 1667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.insert": {
  "lineno": 1694,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.concatenate",
   "numpy.datetime64",
   "numpy.int64",
   "pandas._libs.tslib.tz_convert",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.intersection": {
  "lineno": 1199,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.intersection",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.is_all_dates": {
  "lineno": 1679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.is_normalized": {
  "lineno": 1683,
  "symbols_in_volume": [
   "pandas._libs.tslib.dates_normalized",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.is_type_compatible": {
  "lineno": 1664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.join": {
  "lineno": 1062,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.join"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.normalize": {
  "lineno": 1641,
  "symbols_in_volume": [
   "pandas._libs.tslib.date_normalize"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.searchsorted": {
  "lineno": 1653,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pandas.core.base._shared_docs",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.indexes.base.Index",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.slice_indexer": {
  "lineno": 1502,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.compat.string_types",
   "pandas.core.indexes.base.Index.slice_indexer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.snap": {
  "lineno": 954,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.time": {
  "lineno": 1623,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.algos.arrmap_object",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_datetime": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_julian_date": {
  "lineno": 1940,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.fix",
   "numpy.floor",
   "pandas.core.indexes.numeric.Float64Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_period": {
  "lineno": 936,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.frequencies.get_period_alias"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_perioddelta": {
  "lineno": 1012,
  "symbols_in_volume": [
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_pydatetime": {
  "lineno": 926,
  "symbols_in_volume": [
   "pandas._libs.tslib.ints_to_pydatetime"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.to_series": {
  "lineno": 881,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.tz_convert": {
  "lineno": 1772,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones.maybe_get_tz"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.tz_localize": {
  "lineno": 1803,
  "symbols_in_volume": [
   "pandas._libs.tslib.tz_convert",
   "pandas._libs.tslib.tz_localize_to_utc",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.tzinfo": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.union": {
  "lineno": 978,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.union",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.DatetimeIndex.union_many": {
  "lineno": 1031,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.union",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._dt_index_cmp": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._dt_index_cmp.wrapper": {
  "lineno": 107,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.asarray",
   "numpy.ndarray",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.string_types",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._ensure_datetime64": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._field_accessor": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._field_accessor.f": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas._libs.tslib.get_date_field",
   "pandas._libs.tslib.get_date_name_field",
   "pandas._libs.tslib.get_start_end_field",
   "pandas.core.indexes.base.Index",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._generate_regular_range": {
  "lineno": 1974,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas._libs.Timestamp",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.tseries.offsets.Tick",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._in_range": {
  "lineno": 2217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._naive_in_cache_range": {
  "lineno": 2208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._new_DatetimeIndex": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._time_to_micros": {
  "lineno": 2227,
  "symbols_in_volume": [
   "datetime.time.hour",
   "datetime.time.microsecond",
   "datetime.time.minute",
   "datetime.time.second"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._to_m8": {
  "lineno": 2191,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.Timestamp",
   "pandas._libs.tslib.pydt_to_i8",
   "pandas.core.dtypes.common._NS_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes._use_cached_range": {
  "lineno": 2221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.bdate_range": {
  "lineno": 2060,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_string_like",
   "pandas.tseries.offsets.prefix_mapping"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.cdate_range": {
  "lineno": 2132,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.datetimes.date_range": {
  "lineno": 2016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.frozen.FrozenList": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.indexes.frozen.FrozenList.__add__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__eq__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__getitem__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__getslice__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__hash__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__mul__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__radd__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__reduce__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__repr__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList.__unicode__": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenList._disabled": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.__new__": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.__unicode__": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray._disabled": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray._shallow_copy": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.searchsorted": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.frozen.FrozenNDArray.values": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.frozen._ensure_frozen": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.coerce_indexer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_doc_kwargs"
  ],
  "type": "module"
 },
 "pandas.core.indexes.interval.IntervalIndex": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas._libs.interval.IntervalMixin",
   "pandas.core.indexes.base.Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.interval.IntervalIndex.__array__": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__array_wrap__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__contains__": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas._libs.interval.Interval"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__getitem__": {
  "lineno": 1032,
  "symbols_in_volume": [
   "pandas._libs.interval.Interval",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__len__": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__new__": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.__reduce__": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._array_values": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._as_like_interval_index": {
  "lineno": 982,
  "symbols_in_volume": [
   "pandas.core.indexes.base._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._check_method": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._concat_same_dtype": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._constructor": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._convert_list_indexer": {
  "lineno": 657,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._convert_scalar_indexer": {
  "lineno": 647,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._engine": {
  "lineno": 283,
  "symbols_in_volume": [
   "pandas._libs.interval.IntervalTree",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._find_non_overlapping_monotonic_bounds": {
  "lineno": 735,
  "symbols_in_volume": [
   "pandas._libs.interval.IntervalMixin"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_attrs": {
  "lineno": 1092,
  "symbols_in_volume": [
   "pandas.core.indexes.base.default_pprint"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_data": {
  "lineno": 1058,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_native_types": {
  "lineno": 1051,
  "symbols_in_volume": [
   "pandas.io.formats.format.IntervalArrayFormatter"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_space": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._format_with_header": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._get_loc_only_exact_matches": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas._libs.interval.Interval",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._get_reindexer": {
  "lineno": 883,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._isnan": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._maybe_cast_indexed": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._maybe_cast_slice_bound": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._multiindex": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas.core.indexes.multi.MultiIndex.from_arrays",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._searchsorted_monotonic": {
  "lineno": 702,
  "symbols_in_volume": [
   "pandas._libs.interval.IntervalMixin"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._setop": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._setop.func": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._shallow_copy": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._simple_new": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas._libs.interval.IntervalMixin.__new__",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.indexes.base._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex._validate": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.argsort": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.lexsort"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.astype": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.closed": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.contains": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.copy": {
  "lineno": 567,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.delete": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.dtype": {
  "lineno": 588,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.equals": {
  "lineno": 1105,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_arrays": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_breaks": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_intervals": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.interval.intervals_to_interval_bounds"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.from_tuples": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_indexer": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.where",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_indexer_non_unique": {
  "lineno": 954,
  "symbols_in_volume": [
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_loc": {
  "lineno": 761,
  "symbols_in_volume": [
   "pandas._libs.interval.Interval"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.get_value": {
  "lineno": 829,
  "symbols_in_volume": [
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.hasnans": {
  "lineno": 271,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.inferred_type": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.insert": {
  "lineno": 971,
  "symbols_in_volume": [
   "pandas._libs.interval.Interval"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic_decreasing": {
  "lineno": 622,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_monotonic_increasing": {
  "lineno": 618,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_non_overlapping_monotonic": {
  "lineno": 630,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.is_unique": {
  "lineno": 626,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.left": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.memory_usage": {
  "lineno": 596,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.memory_usage.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.mid": {
  "lineno": 603,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.right": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.take": {
  "lineno": 1001,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.to_tuples": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.values": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas._libs.interval.Interval",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval.IntervalIndex.where": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval._get_interval_closed_bounds": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval._get_next_label": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.infty",
   "numpy.nextafter",
   "numpy.timedelta64",
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval._get_prev_label": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.infty",
   "numpy.nextafter",
   "numpy.timedelta64",
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval._is_type_compatible": {
  "lineno": 1151,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.common._any_none",
   "pandas.core.dtypes.common.is_number",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval._is_valid_endpoint": {
  "lineno": 1143,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas._libs.Timestamp",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.core.indexes.interval._new_IntervalIndex": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.interval.interval_range": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas._libs.Timestamp",
   "pandas.core.common._count_not_none",
   "pandas.core.common._maybe_box_datetimelike",
   "pandas.core.common._not_none",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_number",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_doc_kwargs"
  ],
  "type": "module"
 },
 "pandas.core.indexes.multi.MultiIndex": {
  "lineno": 53,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base.Index.set_names",
   "pandas.core.indexes.frozen.FrozenList",
   "pandas.util._decorators.deprecate"
  ],
  "type": "class"
 },
 "pandas.core.indexes.multi.MultiIndex.__array__": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__contains__": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__getitem__": {
  "lineno": 1413,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "pandas.compat.zip",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__getslice__": {
  "lineno": 1688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__len__": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__new__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__reduce__": {
  "lineno": 1385,
  "symbols_in_volume": [
   "pandas.core.indexes.base._new_Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.__setstate__": {
  "lineno": 1392,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._assert_take_fillable": {
  "lineno": 1452,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenNDArray"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._bounds": {
  "lineno": 2750,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._constructor": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._convert_can_do_setop": {
  "lineno": 2676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._convert_listlike_indexer": {
  "lineno": 1778,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._drop_from_level": {
  "lineno": 1580,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas._libs.index.get_indexer",
   "pandas.core.algorithms.isin",
   "pandas.core.common._index_labels_to_array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._engine": {
  "lineno": 674,
  "symbols_in_volume": [
   "pandas._libs.index.MultiIndexHashEngine",
   "pandas._libs.index.MultiIndexObjectEngine",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_attrs": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none",
   "pandas.core.indexes.base.default_pprint"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_data": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_native_types": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.append",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._format_space": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._from_elements": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_grouper_for_level": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.core.algorithms.factorize",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels_for_sorting": {
  "lineno": 1691,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical.from_codes"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_labels_for_sorting.cats": {
  "lineno": 1701,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_indexer": {
  "lineno": 2285,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_indexer.convert_indexer": {
  "lineno": 2293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.in1d",
   "numpy.zeros",
   "pandas.Series",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_number": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_level_values": {
  "lineno": 901,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_levels": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._get_names": {
  "lineno": 540,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenList"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._has_complex_internals": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_indexing_key": {
  "lineno": 778,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.util.hashing.hash_tuple",
   "pandas.core.util.hashing.hash_tuples"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_indexing_key.f": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._hashed_values": {
  "lineno": 772,
  "symbols_in_volume": [
   "pandas.core.util.hashing.hash_tuples",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._have_mixed_levels": {
  "lineno": 762,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._inferred_type_levels": {
  "lineno": 767,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_memory_usage_qualified": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_memory_usage_qualified.f": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_v1": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._is_v2": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._nbytes": {
  "lineno": 492,
  "symbols_in_volume": [
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._partial_tup_index": {
  "lineno": 1983,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.zip",
   "pandas.errors.UnsortedIndexError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._reference_duplicate_name": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_labels": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.indexes.frozen.FrozenList",
   "pandas.core.indexes.frozen._ensure_frozen"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_levels": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.frozen.FrozenList"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._set_names": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._shallow_copy": {
  "lineno": 460,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._shallow_copy_with_infer": {
  "lineno": 440,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._sort_levels_monotonic": {
  "lineno": 1244,
  "symbols_in_volume": [
   "pandas._libs.lib.get_reverse_indexer",
   "pandas.compat.zip",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._to_safe_for_reshape": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._verify_integrity": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex._wrap_joined_index": {
  "lineno": 2762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.append": {
  "lineno": 1474,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.compat.range",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.argsort": {
  "lineno": 1507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.astype": {
  "lineno": 2667,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.copy": {
  "lineno": 389,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.delete": {
  "lineno": 2734,
  "symbols_in_volume": [
   "numpy.delete"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.difference": {
  "lineno": 2638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.drop": {
  "lineno": 1522,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.lrange",
   "pandas.core.common._index_labels_to_array",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.indexes.base.Index",
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.droplevel": {
  "lineno": 1590,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.dropna": {
  "lineno": 829,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.dtype": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.duplicated": {
  "lineno": 813,
  "symbols_in_volume": [
   "pandas._libs.hashtable.duplicated_int64",
   "pandas.compat.map",
   "pandas.core.base._shared_docs",
   "pandas.core.sorting.get_group_index",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.equal_levels": {
  "lineno": 2572,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.equals": {
  "lineno": 2523,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.compat.range",
   "pandas.core.algorithms.take_nd",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.missing.array_equivalent",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.fillna": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.format": {
  "lineno": 960,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.zip",
   "pandas.core.algorithms.take_1d",
   "pandas.core.config.get_option",
   "pandas.core.dtypes.missing.isna",
   "pandas.io.formats.format._get_adjustment",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_arrays": {
  "lineno": 1113,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.categorical._factorize_from_iterables"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_product": {
  "lineno": 1203,
  "symbols_in_volume": [
   "pandas.core.categorical._factorize_from_iterables",
   "pandas.core.reshape.util.cartesian_product"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.from_tuples": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.to_object_array_tuples",
   "pandas._libs.lib.tuples_to_object_array",
   "pandas.compat.lzip",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_indexer": {
  "lineno": 1811,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.core.missing.clean_reindex_fill_method",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_indexer_non_unique": {
  "lineno": 1854,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_level_values": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc": {
  "lineno": 2013,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.compat.map",
   "pandas.core.common._values_from_object",
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_str_to_time_stamp": {
  "lineno": 2082,
  "symbols_in_volume": [
   "pandas._libs.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc._maybe_to_slice": {
  "lineno": 2057,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray",
   "pandas._libs.lib.maybe_indices_to_slice"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level": {
  "lineno": 2124,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.common._values_from_object",
   "pandas.core.indexing.maybe_droplevels"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level.maybe_droplevels": {
  "lineno": 2165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_loc_level.partial_selection": {
  "lineno": 2216,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.indexing.maybe_droplevels"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.common.is_null_slice",
   "pandas.core.common.is_true_slices",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.errors.UnsortedIndexError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs._convert_to_indexer": {
  "lineno": 2419,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.core.common.is_bool_indexer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_locs._update_indexer": {
  "lineno": 2434,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_slice_bound": {
  "lineno": 1921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_value": {
  "lineno": 842,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.Timestamp",
   "pandas._libs.index.get_value_at",
   "pandas.compat.PY3",
   "pandas.compat.string_types",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.indexes.base.InvalidIndexError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.get_value._try_mi": {
  "lineno": 850,
  "symbols_in_volume": [
   "pandas.core.indexing.maybe_droplevels"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.inferred_type": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.insert": {
  "lineno": 2694,
  "symbols_in_volume": [
   "numpy.insert",
   "pandas.compat.zip",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.intersection": {
  "lineno": 2609,
  "symbols_in_volume": [
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_all_dates": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_lexsorted": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic_decreasing": {
  "lineno": 749,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_monotonic_increasing": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.lexsort",
   "pandas.compat.range",
   "pandas.core.indexes.base.Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.is_unique": {
  "lineno": 758,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.isin": {
  "lineno": 2766,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.lib.arraysetops.in1d",
   "numpy.zeros",
   "pandas.core.algorithms.isin",
   "pandas.core.indexes.base.Index.isin.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.levshape": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.lexsort_depth": {
  "lineno": 1098,
  "symbols_in_volume": [
   "pandas._libs.lib.is_lexsorted",
   "pandas.compat.range",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.memory_usage": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.memory_usage.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.nbytes": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.nlevels": {
  "lineno": 1377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.reindex": {
  "lineno": 1858,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._ensure_has_len",
   "pandas.core.indexes.base._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.remove_unused_levels": {
  "lineno": 1306,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.compat.zip",
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.reorder_levels": {
  "lineno": 1669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.repeat": {
  "lineno": 1510,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.numpy.function.validate_repeat",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.set_labels": {
  "lineno": 319,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.set_levels": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.slice_locs": {
  "lineno": 1927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.sortlevel": {
  "lineno": 1708,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.sorting.indexer_from_factorized",
   "pandas.core.sorting.lexsort_indexer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.swaplevel": {
  "lineno": 1636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.take": {
  "lineno": 1440,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.to_frame": {
  "lineno": 1024,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.index",
   "pandas.compat.range",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.to_hierarchical": {
  "lineno": 1050,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.truncate": {
  "lineno": 2493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.union": {
  "lineno": 2585,
  "symbols_in_volume": [
   "pandas._libs.lib.fast_unique_multiple",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.values": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.lib.fast_zip",
   "pandas.compat.zip",
   "pandas.core.algorithms.take_1d",
   "pandas.core.indexes.base._get_na_value"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.view": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi.MultiIndex.where": {
  "lineno": 1518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.multi._get_na_rep": {
  "lineno": 2817,
  "symbols_in_volume": [
   "numpy.datetime64.get",
   "numpy.timedelta64.get"
  ],
  "type": "function"
 },
 "pandas.core.indexes.multi._sparsify": {
  "lineno": 2789,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.numeric.Float64Index": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas._libs.algos.arrmap_float64",
   "pandas._libs.index.Float64Engine",
   "pandas._libs.join.inner_join_indexer_float64",
   "pandas._libs.join.left_join_indexer_float64",
   "pandas._libs.join.left_join_indexer_unique_float64",
   "pandas._libs.join.outer_join_indexer_float64"
  ],
  "type": "class"
 },
 "pandas.core.indexes.numeric.Float64Index.__contains__": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.core.indexes.base._try_get_item"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._convert_scalar_indexer": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._convert_slice_indexer": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index._format_native_types": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.io.formats.format.FloatArrayFormatter"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.astype": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.equals": {
  "lineno": 350,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.get_loc": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.get_value": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.indexes.base.InvalidIndexError"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.inferred_type": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.is_unique": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Float64Index.isin": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.isin",
   "pandas.core.indexes.base.Index.isin.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.algos.arrmap_int64",
   "pandas._libs.index.Int64Engine",
   "pandas._libs.join.inner_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_unique_int64",
   "pandas._libs.join.outer_join_indexer_int64"
  ],
  "type": "class"
 },
 "pandas.core.indexes.numeric.Int64Index._assert_safe_casting": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index._convert_scalar_indexer": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index._wrap_joined_index": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index.asi8": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.Int64Index.inferred_type": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.numeric.NumericIndex.__new__": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._assert_safe_casting": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._convert_for_op": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._convert_tolerance": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.issubdtype",
   "numpy.number"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex._maybe_cast_slice_bound": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.NumericIndex.is_all_dates": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.uint64",
   "pandas._libs.algos.arrmap_uint64",
   "pandas._libs.index.UInt64Engine",
   "pandas._libs.join.inner_join_indexer_uint64",
   "pandas._libs.join.left_join_indexer_uint64",
   "pandas._libs.join.left_join_indexer_unique_uint64",
   "pandas._libs.join.outer_join_indexer_uint64"
  ],
  "type": "class"
 },
 "pandas.core.indexes.numeric.UInt64Index._assert_safe_casting": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.unsignedinteger"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_arr_indexer": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.uint64",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_index_indexer": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.uint64",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._convert_scalar_indexer": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index._wrap_joined_index": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index.asi8": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.numeric.UInt64Index.inferred_type": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.period._DIFFERENT_FREQ_INDEX",
   "pandas.core.indexes.base._index_doc_kwargs"
  ],
  "type": "module"
 },
 "pandas.core.indexes.period.PeriodIndex": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimelike.DatelikeOps",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.core.indexes.datetimes.Int64Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.period.PeriodIndex.__array__": {
  "lineno": 384,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__array_wrap__": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.subtract",
   "numpy.ufunc",
   "pandas._libs.period.Period",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.indexes.datetimes.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__contains__": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas._libs.period.Period",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__new__": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas._libs.period.Period",
   "pandas._libs.period.Period._maybe_convert_freq",
   "pandas._libs.period.extract_freq",
   "pandas._libs.period.extract_ordinals",
   "pandas._libs.period.period_asfreq_arr",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes.Int64Index",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.__setstate__": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray.__setstate__",
   "pandas._libs.period.Period._maybe_convert_freq"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._add_delta": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._apply_meta": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._assert_can_do_setop": {
  "lineno": 949,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._box_func": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas._libs.period.Period._from_ordinal"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._coerce_scalar_to_index": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._convert_tolerance": {
  "lineno": 917,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._convert_tolerance"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._format_native_types": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._formatter_func": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._from_ordinals": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.period.Period._maybe_convert_freq"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._generate_range": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas._libs.period.Period._maybe_convert_freq",
   "pandas.core.common._count_not_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._get_string_slice": {
  "lineno": 902,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.tseries.frequencies.Resolution.get_freq_group",
   "pandas.tseries.frequencies.get_freq_group"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._get_unique_index": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._int64index": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.Int64Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._maybe_cast_slice_bound": {
  "lineno": 840,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.period.Period",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._maybe_convert_timedelta": {
  "lineno": 643,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.all",
   "numpy.ndarray",
   "numpy.timedelta64",
   "numpy.vectorize",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas._libs.tslib._delta_to_nanoseconds",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.tseries.frequencies.get_base_alias",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.Tick"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._mpl_repr": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._parsed_string_to_bounds": {
  "lineno": 876,
  "symbols_in_volume": [
   "pandas._libs.period.Period"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._shallow_copy": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._shallow_copy_with_infer": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._simple_new": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._sub_datelike": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int64",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.iNaT",
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._sub_period": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.core.indexes.datetimes.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._to_embed": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._values": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex._wrap_union_result": {
  "lineno": 959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asfreq": {
  "lineno": 506,
  "symbols_in_volume": [
   "pandas._libs.period.Period._maybe_convert_freq",
   "pandas._libs.period._validate_end_alias",
   "pandas._libs.period.period_asfreq_arr",
   "pandas._libs.tslib.iNaT",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asi8": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.asof_locs": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.where",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.astype": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.dtype": {
  "lineno": 725,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.end_time": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_indexer": {
  "lineno": 778,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.core.indexes.base._ensure_index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.core.indexes.datetimes.Index.get_indexer",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_loc": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.period.Period",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.get_value": {
  "lineno": 735,
  "symbols_in_volume": [
   "numpy.searchsorted",
   "pandas._libs.period.Period",
   "pandas.core.common._maybe_box",
   "pandas.core.common._values_from_object",
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.tseries.frequencies.Resolution.get_freq_group",
   "pandas.tseries.frequencies.get_freq_group"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.inferred_type": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.insert": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "pandas._libs.period.Period"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_all_dates": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_full": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.is_leap_year": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.tslibs.fields.isleapyear_arr"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.join": {
  "lineno": 933,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.Int64Index.join"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.searchsorted": {
  "lineno": 476,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pandas._libs.period.Period",
   "pandas.compat.string_types",
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.shift": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.start_time": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.to_datetime": {
  "lineno": 567,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.to_timestamp": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas._libs.period.Period._maybe_convert_freq",
   "pandas._libs.period._validate_end_alias",
   "pandas._libs.period.periodarr_to_dt64arr",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.frequencies.get_freq_code",
   "pandas.tseries.frequencies.get_to_timestamp_base"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.tz_convert": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.tz_localize": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period.PeriodIndex.values": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period._field_accessor": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period._field_accessor.f": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas._libs.period.get_period_field_arr",
   "pandas.core.indexes.datetimes.Index",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period._get_ordinal_range": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas._libs.period.Period",
   "pandas._libs.tslib.NaT",
   "pandas.core.common._count_not_none",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period._make_field_arrays": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.repeat",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period._new_PeriodIndex": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period._period_index_cmp": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.period._period_index_cmp.wrapper": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas._libs.period.Period",
   "pandas._libs.tslib.NaT",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period._range_from_fields": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.period._quarter_to_myear",
   "pandas._libs.period.period_ordinal",
   "pandas.compat.zip",
   "pandas.tseries.frequencies.FreqGroup.FR_QTR",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.dt64arr_to_periodarr": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas._libs.period.Period._maybe_convert_freq",
   "pandas._libs.period.dt64arr_to_periodarr",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.period_range": {
  "lineno": 1177,
  "symbols_in_volume": [
   "pandas.core.common._count_not_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.period.pnow": {
  "lineno": 1167,
  "symbols_in_volume": [
   "pandas._libs.period.Period.now",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.range.RangeIndex": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas._libs.index.Int64Engine",
   "pandas.core.indexes.numeric.Int64Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.range.RangeIndex.__floordiv__": {
  "lineno": 546,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__getitem__": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__len__": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__new__": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.core.common._all_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__new__._ensure_int": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.__reduce__": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.core.indexes.base._new_Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary": {
  "lineno": 562,
  "symbols_in_volume": [
   "operator.add",
   "operator.div",
   "operator.mul",
   "operator.sub",
   "operator.truediv",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop._evaluate_numeric_binop": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._concat_same_dtype": {
  "lineno": 466,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_rangeindex_same_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._constructor": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.core.indexes.numeric.Int64Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._data": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._extended_gcd": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._format_attrs": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.core.indexes.base.default_pprint"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._format_data": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._get_data_as_items": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._int64index": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.core.indexes.numeric.Int64Index",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._max_fitting_element": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._min_fitting_element": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._minmax": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._shallow_copy": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._simple_new": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex._validate_dtype": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_int64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.argsort": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.compat.numpy.function.validate_argsort"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.copy": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.dtype": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.equals": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.from_range": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.compat.get_range_parameters",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.has_duplicates": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.intersection": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_monotonic_decreasing": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_monotonic_increasing": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.is_unique": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.join": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.max": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.memory_usage": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.min": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.nbytes": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.size": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.tolist": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.core.indexes.range.RangeIndex.union": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas._libs.index.TimedeltaEngine",
   "pandas._libs.join.inner_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_int64",
   "pandas._libs.join.left_join_indexer_unique_int64",
   "pandas._libs.join.outer_join_indexer_int64",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.core.indexes.datetimelike.TimelikeOps",
   "pandas.core.indexes.numeric.Int64Index"
  ],
  "type": "class"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.__new__": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.ndarray",
   "pandas._libs.index",
   "pandas._libs.index.asi8",
   "pandas._libs.index.freq",
   "pandas._libs.index.inferred_freq",
   "pandas.core.dtypes.common._TD_DTYPE",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.indexes.base.Index",
   "pandas.core.tools.timedeltas.to_timedelta",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.__setstate__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._add_datelike": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas._libs.NaT",
   "pandas._libs.iNaT",
   "pandas.core.algorithms.checked_add_with_arr"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._add_delta": {
  "lineno": 341,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.core.common._maybe_match_name",
   "pandas.tseries.offsets.Tick"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._box_func": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._can_fast_union": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._evaluate_with_timedelta_like": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._fast_union": {
  "lineno": 570,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_compat"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._format_native_types": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.format.Timedelta64Formatter"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._formatter_func": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.io.formats.format._get_format_timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._generate": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas._libs.index",
   "pandas.core.common._count_not_none"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._get_string_slice": {
  "lineno": 745,
  "symbols_in_volume": [
   "pandas._libs.NaT",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._join_i8_wrapper": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin._join_i8_wrapper"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._maybe_cast_slice_bound": {
  "lineno": 714,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._maybe_promote": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._maybe_update_attributes": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._partial_td_slice": {
  "lineno": 754,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._simple_new": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas._libs.tslib.array_to_timedelta64",
   "pandas.core.dtypes.common._TD_DTYPE",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._sub_datelike": {
  "lineno": 389,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas._libs.NaT"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._wrap_joined_index": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex._wrap_union_result": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.astype": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_ns_dtype",
   "pandas.core.indexes.base.Index",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.components": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.components.f": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.delete": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.delete",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.dtype": {
  "lineno": 817,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._TD_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.get_loc": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.NaT",
   "pandas._libs.Timedelta",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.base.Index.get_loc"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.get_value": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas.core.common._maybe_box",
   "pandas.core.indexes.base.Index.get_value"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.get_value_maybe_box": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas.core.common._maybe_box",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.inferred_type": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.insert": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.int64",
   "pandas._libs.NaT",
   "pandas._libs.Timedelta",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.intersection": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.intersection"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.is_all_dates": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.is_type_compatible": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.join": {
  "lineno": 519,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.join"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.searchsorted": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pandas.core.base._shared_docs",
   "pandas.core.dtypes.common._TD_DTYPE",
   "pandas.core.indexes.base.Index",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.to_pytimedelta": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas._libs.tslib.ints_to_pytimedelta"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.total_seconds": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.TimedeltaIndex.union": {
  "lineno": 488,
  "symbols_in_volume": [
   "pandas.core.indexes.base.Index.union",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._field_accessor": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._field_accessor.f": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.nan",
   "pandas._libs.Timedelta",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._generate_regular_range": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas._libs.Timedelta"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._is_convertible_to_index": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._is_convertible_to_td": {
  "lineno": 921,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas._libs.Timedelta",
   "pandas.compat.string_types",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._td_index_cmp": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._td_index_cmp.wrapper": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas._libs.NaT",
   "pandas._libs.iNaT",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.base.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas._to_m8": {
  "lineno": 926,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.Timedelta",
   "pandas.core.dtypes.common._TD_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.indexes.timedeltas.timedelta_range": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.indexing.IndexingError": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._AtIndexer": {
  "lineno": 1889,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._AtIndexer._convert_key": {
  "lineno": 1899,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._IXIndexer": {
  "lineno": 1303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._IXIndexer.__init__": {
  "lineno": 1324,
  "symbols_in_volume": [
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexing._IXIndexer._has_valid_type": {
  "lineno": 1338,
  "symbols_in_volume": [
   "pandas.core.common.is_bool_indexer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._IndexSlice": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._IndexSlice.__getitem__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer": {
  "lineno": 1414,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._LocIndexer._get_partial_string_timestamp_match_key": {
  "lineno": 1548,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer._getitem_axis": {
  "lineno": 1572,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer._getitem_scalar": {
  "lineno": 1542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer._has_valid_type": {
  "lineno": 1443,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common._is_unorderable_exception",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.index.MultiIndex",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer._has_valid_type.error": {
  "lineno": 1495,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocIndexer._is_scalar_access": {
  "lineno": 1518,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer": {
  "lineno": 1355,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._LocationIndexer.__getitem__": {
  "lineno": 1358,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable"
  ],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer._get_slice_axis": {
  "lineno": 1395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer._getbool_axis": {
  "lineno": 1384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer._getitem_axis": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer._getitem_scalar": {
  "lineno": 1378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._LocationIndexer._is_scalar_access": {
  "lineno": 1375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._NDFrameIndexer.__call__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer.__getitem__": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer.__init__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer.__iter__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer.__setitem__": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._align_frame": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.is_sequence",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._align_panel": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._align_series": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.tile",
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.is_sequence",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_for_reindex": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_range": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_scalar_indexer": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_slice_indexer": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_to_indexer": {
  "lineno": 1167,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pandas.core.common._values_from_object",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._convert_tuple": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._get_label": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._get_loc": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._get_setitem_indexer": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._get_slice_axis": {
  "lineno": 1287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._getitem_axis": {
  "lineno": 1072,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._getitem_iterable": {
  "lineno": 1110,
  "symbols_in_volume": [
   "pandas.core.common.is_bool_indexer",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._getitem_lowerdim": {
  "lineno": 963,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._getitem_nested_tuple": {
  "lineno": 1024,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._getitem_tuple": {
  "lineno": 856,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._handle_lowerdim_multi_index_axis0": {
  "lineno": 943,
  "symbols_in_volume": [
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._has_valid_positional_setitem_indexer": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._has_valid_setitem_indexer": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._has_valid_tuple": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._has_valid_type": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._is_nested_tuple_indexer": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._multi_take": {
  "lineno": 903,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._multi_take_opportunity": {
  "lineno": 882,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.generic.NDFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._setitem_with_indexer": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.iterable",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.core.common.is_null_slice",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCPanel",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing._infer_fill_value",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._setitem_with_indexer.can_do_equal_len": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.iterable"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._setitem_with_indexer.setter": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.core.common.is_full_slice",
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._should_validate_iterable": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._slice": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._NDFrameIndexer._tuplify": {
  "lineno": 1282,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.indexing._ScalarAccessIndexer": {
  "lineno": 1853,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._ScalarAccessIndexer.__getitem__": {
  "lineno": 1859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._ScalarAccessIndexer.__setitem__": {
  "lineno": 1871,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable"
  ],
  "type": "function"
 },
 "pandas.core.indexing._ScalarAccessIndexer._convert_key": {
  "lineno": 1856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iAtIndexer": {
  "lineno": 1921,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._iAtIndexer._convert_key": {
  "lineno": 1934,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iAtIndexer._has_valid_setitem_indexer": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.indexing._iLocIndexer._convert_to_indexer": {
  "lineno": 1834,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._get_list_axis": {
  "lineno": 1778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._get_slice_axis": {
  "lineno": 1764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._getitem_axis": {
  "lineno": 1799,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._getitem_scalar": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._getitem_tuple": {
  "lineno": 1735,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._has_valid_setitem_indexer": {
  "lineno": 1677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._has_valid_type": {
  "lineno": 1658,
  "symbols_in_volume": [
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._is_scalar_access": {
  "lineno": 1680,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._is_valid_integer": {
  "lineno": 1707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing._iLocIndexer._is_valid_list_like": {
  "lineno": 1716,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.indexing._maybe_numeric_slice": {
  "lineno": 2202,
  "symbols_in_volume": [
   "numpy.number"
  ],
  "type": "function"
 },
 "pandas.core.indexing._non_reducing_slice": {
  "lineno": 2172,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing._non_reducing_slice.pred": {
  "lineno": 2186,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexing.check_bool_indexer": {
  "lineno": 2012,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.indexing.convert_from_missing_indexer_tuple": {
  "lineno": 2055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.convert_from_missing_indexer_tuple.get_indexer": {
  "lineno": 2058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.convert_missing_indexer": {
  "lineno": 2038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.convert_to_index_sliceable": {
  "lineno": 1975,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.indexing.get_indexers_list": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.is_index_slice": {
  "lineno": 1999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.is_index_slice._crit": {
  "lineno": 2004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.is_index_slice._is_valid_index": {
  "lineno": 2000,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.indexing.is_label_like": {
  "lineno": 2143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.is_list_like_indexer": {
  "lineno": 2137,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.indexing.is_nested_tuple": {
  "lineno": 2123,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.indexing.length_of_indexer": {
  "lineno": 1947,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing.maybe_convert_indices": {
  "lineno": 2065,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.int_"
  ],
  "type": "function"
 },
 "pandas.core.indexing.maybe_convert_ix": {
  "lineno": 2107,
  "symbols_in_volume": [
   "numpy.ix_",
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.indexing.maybe_droplevels": {
  "lineno": 2153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.indexing.need_slice": {
  "lineno": 2148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.internals.Block": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.core.base.PandasObject",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_sparse"
  ],
  "type": "class"
 },
 "pandas.core.internals.Block.__getstate__": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.__len__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.__setstate__": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas._libs.lib.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.__unicode__": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._astype": {
  "lineno": 546,
  "symbols_in_volume": [
   "copy",
   "inspect.isclass",
   "numpy.dtype",
   "numpy.object_",
   "pandas.compat.string_types",
   "pandas.compat.text_type",
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.cast.astype_nansafe",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.ExtensionDtype",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._can_hold_element": {
  "lineno": 652,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_infer_dtype_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._consolidate_key": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._interpolate": {
  "lineno": 1159,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.float64",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._interpolate.func": {
  "lineno": 1183,
  "symbols_in_volume": [
   "pandas.core.missing.interpolate_1d"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._interpolate_with_fill": {
  "lineno": 1133,
  "symbols_in_volume": [
   "pandas.core.missing.interpolate_2d",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._is_single_block": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._maybe_downcast": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._na_value": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._replace_single": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._slice": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._try_cast_result": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.object_",
   "pandas.compat.string_types",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._try_coerce_and_cast_result": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._try_coerce_args": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block._try_coerce_result": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block._unstack": {
  "lineno": 1524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.apply": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.array_dtype": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.astype": {
  "lineno": 542,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.coerce_to_target_dtype": {
  "lineno": 1023,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.infer_dtype_from",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.concat_same_type": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.convert": {
  "lineno": 644,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.copy": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.delete": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.delete"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.diff": {
  "lineno": 1238,
  "symbols_in_volume": [
   "pandas.core.algorithms.diff"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.downcast": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.downcast.f": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.dtype": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.equals": {
  "lineno": 1519,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.eval": {
  "lineno": 1273,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.eval.get_result": {
  "lineno": 1326,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_numeric_v_string_like"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.eval.handle_error": {
  "lineno": 1362,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.external_values": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.fill_value": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.fillna": {
  "lineno": 373,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.fillna.f": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.formatting_values": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.ftype": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.get_values": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.getitem_block": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.iget": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.internal_values": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.interpolate": {
  "lineno": 1084,
  "symbols_in_volume": [
   "pandas.core.missing.clean_fill_method",
   "pandas.core.missing.clean_interp_method",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.interpolate.check_int_bool": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.is_categorical_astype": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.is_datelike": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.is_view": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.itemsize": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.make_block": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.make_block_same_class": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.make_block_scalar": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.merge": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.mgr_locs": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas._libs.lib.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.putmask": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.ndarray",
   "numpy.putmask",
   "numpy.repeat",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.putmask.f": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.squeeze",
   "pandas.core.dtypes.cast.maybe_promote"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.quantile": {
  "lineno": 1553,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.repeat",
   "pandas.Float64Index",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.quantile._nanpercentile": {
  "lineno": 1584,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.quantile._nanpercentile1D": {
  "lineno": 1572,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.reindex_axis": {
  "lineno": 327,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_nd"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.replace": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas.core.missing.mask_missing",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.reshape_nd": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.set": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.setitem": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.prod",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexing.length_of_indexer"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.setitem._is_empty_indexer": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.setitem._is_scalar_indexer": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.shape": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.shift": {
  "lineno": 1243,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.roll",
   "pandas.core.dtypes.cast.maybe_upcast",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.split_and_operate": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.split_and_operate.make_a_block": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.take_nd": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pandas._libs.lib.indexer_as_slice",
   "pandas.core.algorithms.take_nd",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.to_dense": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.Block.to_native_types": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.where": {
  "lineno": 1410,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.internals.Block.where.func": {
  "lineno": 1457,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.core.computation.expressions.where"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager": {
  "lineno": 2962,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.internals.BlockManager.__contains__": {
  "lineno": 3632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__getstate__": {
  "lineno": 3163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__init__": {
  "lineno": 3017,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__len__": {
  "lineno": 3224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__nonzero__": {
  "lineno": 3052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__setstate__": {
  "lineno": 3180,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__setstate__.unpickle_block": {
  "lineno": 3181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.__unicode__": {
  "lineno": 3227,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._consolidate_check": {
  "lineno": 3532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._consolidate_inplace": {
  "lineno": 3829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._get_counts": {
  "lineno": 3140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._get_items": {
  "lineno": 3135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._interleave": {
  "lineno": 3680,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._is_indexed_like": {
  "lineno": 4287,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._is_single_block": {
  "lineno": 3102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._make_na_block": {
  "lineno": 4230,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._post_setstate": {
  "lineno": 3219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._rebuild_blknos_and_blklocs": {
  "lineno": 3114,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._slice_take_blocks_ax0": {
  "lineno": 4156,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.cast.maybe_promote"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager._verify_integrity": {
  "lineno": 3239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.add_prefix": {
  "lineno": 3094,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.add_suffix": {
  "lineno": 3098,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.apply": {
  "lineno": 3251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.as_matrix": {
  "lineno": 3666,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.astype": {
  "lineno": 3461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.combine": {
  "lineno": 3590,
  "symbols_in_volume": [
   "copy",
   "numpy.concatenate",
   "numpy.sort",
   "pandas._libs.lib.get_reverse_indexer",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.consolidate": {
  "lineno": 3813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.convert": {
  "lineno": 3464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.copy": {
  "lineno": 3639,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.delete": {
  "lineno": 3898,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.diff": {
  "lineno": 3446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.downcast": {
  "lineno": 3458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.equals": {
  "lineno": 4299,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.equals.canonicalize": {
  "lineno": 4314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.eval": {
  "lineno": 3434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.fast_xs": {
  "lineno": 3781,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.fillna": {
  "lineno": 3455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get": {
  "lineno": 3836,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_bool_data": {
  "lineno": 3570,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_dtype_counts": {
  "lineno": 3149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_dtypes": {
  "lineno": 3155,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_ftype_counts": {
  "lineno": 3152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_ftypes": {
  "lineno": 3159,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_numeric_data": {
  "lineno": 3580,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_scalar": {
  "lineno": 3883,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.get_slice": {
  "lineno": 3612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.iget": {
  "lineno": 3865,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.insert": {
  "lineno": 4048,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.insert"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.interpolate": {
  "lineno": 3449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.is_consolidated": {
  "lineno": 3524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.is_datelike_mixed_type": {
  "lineno": 3549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.is_mixed_type": {
  "lineno": 3537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.is_numeric_mixed_type": {
  "lineno": 3543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.is_view": {
  "lineno": 3555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.isna": {
  "lineno": 3428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.make_empty": {
  "lineno": 3039,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.merge": {
  "lineno": 4266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.nblocks": {
  "lineno": 3635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.ndim": {
  "lineno": 3062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.putmask": {
  "lineno": 3443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.quantile": {
  "lineno": 3437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.reduction": {
  "lineno": 3339,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.intp",
   "pandas.compat.zip",
   "pandas.core.dtypes.concat._concat_compat",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.reindex_axis": {
  "lineno": 4101,
  "symbols_in_volume": [
   "copy",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.reindex_indexer": {
  "lineno": 4113,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.rename_axis": {
  "lineno": 3078,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.replace": {
  "lineno": 3467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.replace_list": {
  "lineno": 3470,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.compat.zip",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.replace_list.comp": {
  "lineno": 3482,
  "symbols_in_volume": [
   "operator.eq",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.reshape_nd": {
  "lineno": 3520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.set": {
  "lineno": 3936,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.int64",
   "numpy.zeros",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_extension_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.set.value_getitem": {
  "lineno": 3960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.set_axis": {
  "lineno": 3066,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.setitem": {
  "lineno": 3440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.shape": {
  "lineno": 3058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.shift": {
  "lineno": 3452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.take": {
  "lineno": 4243,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asanyarray",
   "pandas.core.indexing.maybe_convert_indices"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.to_dict": {
  "lineno": 3713,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.unstack": {
  "lineno": 4322,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.where": {
  "lineno": 3431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.BlockManager.xs": {
  "lineno": 3738,
  "symbols_in_volume": [
   "copy",
   "numpy.ndarray",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.internals.BoolBlock": {
  "lineno": 2045,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.BoolBlock._can_hold_element": {
  "lineno": 2050,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.BoolBlock.replace": {
  "lineno": 2059,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.can_cast",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.BoolBlock.should_store": {
  "lineno": 2056,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock": {
  "lineno": 2321,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.concat._concat_categorical"
  ],
  "type": "class"
 },
 "pandas.core.internals.CategoricalBlock.__init__": {
  "lineno": 2329,
  "symbols_in_volume": [
   "pandas.core.categorical._maybe_to_categorical"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock._astype": {
  "lineno": 2420,
  "symbols_in_volume": [
   "copy",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock._slice": {
  "lineno": 2354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock._try_coerce_result": {
  "lineno": 2361,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.array_dtype": {
  "lineno": 2347,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.concat_same_type": {
  "lineno": 2451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.convert": {
  "lineno": 2344,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.fillna": {
  "lineno": 2372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.interpolate": {
  "lineno": 2384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.is_view": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.shift": {
  "lineno": 2393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.take_nd": {
  "lineno": 2397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.to_dense": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.CategoricalBlock.to_native_types": {
  "lineno": 2437,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.ComplexBlock": {
  "lineno": 1882,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.ComplexBlock._can_hold_element": {
  "lineno": 1886,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complexfloating",
   "numpy.float_",
   "numpy.floating",
   "numpy.int_",
   "numpy.integer",
   "pandas.compat.long",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.ComplexBlock.should_store": {
  "lineno": 1897,
  "symbols_in_volume": [
   "numpy.complexfloating"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock": {
  "lineno": 2463,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.DatetimeBlock.__init__": {
  "lineno": 2468,
  "symbols_in_volume": [
   "pandas._libs.tslib.cast_to_nanoseconds",
   "pandas.core.dtypes.common._NS_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock._astype": {
  "lineno": 2475,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock._box_func": {
  "lineno": 2558,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock._can_hold_element": {
  "lineno": 2494,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.int64",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock._try_coerce_args": {
  "lineno": 2503,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.missing.is_null_datelike_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock._try_coerce_result": {
  "lineno": 2546,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.float",
   "numpy.integer",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock.set": {
  "lineno": 2582,
  "symbols_in_volume": [
   "pandas._libs.tslib.cast_to_nanoseconds",
   "pandas.core.dtypes.common._NS_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock.should_store": {
  "lineno": 2578,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.core.dtypes.common.is_datetimetz"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeBlock.to_native_types": {
  "lineno": 2562,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas._libs.tslib.format_array_from_datetime",
   "pandas.io.formats.format._get_format_datetime64_from_values"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeLikeBlockMixin": {
  "lineno": 1919,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.DatetimeLikeBlockMixin._na_value": {
  "lineno": 1921,
  "symbols_in_volume": [
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeLikeBlockMixin.fill_value": {
  "lineno": 1925,
  "symbols_in_volume": [
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeLikeBlockMixin.get_values": {
  "lineno": 1929,
  "symbols_in_volume": [
   "pandas._libs.lib.map_infer",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock": {
  "lineno": 2597,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.concat._concat_datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "class"
 },
 "pandas.core.internals.DatetimeTZBlock.__init__": {
  "lineno": 2604,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock._box_func": {
  "lineno": 2714,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock._slice": {
  "lineno": 2643,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock._try_coerce_args": {
  "lineno": 2652,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.lib.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.is_null_datelike_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock._try_coerce_result": {
  "lineno": 2699,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.float",
   "numpy.integer",
   "numpy.ndarray",
   "numpy.prod",
   "pandas._libs.lib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock.concat_same_type": {
  "lineno": 2742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock.copy": {
  "lineno": 2622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock.external_values": {
  "lineno": 2629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock.get_values": {
  "lineno": 2635,
  "symbols_in_volume": [
   "pandas._libs.lib.Timestamp",
   "pandas._libs.lib.map_infer",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.DatetimeTZBlock.shift": {
  "lineno": 2718,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.internals.FloatBlock": {
  "lineno": 1830,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.FloatBlock._can_hold_element": {
  "lineno": 1835,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.int_",
   "numpy.integer",
   "numpy.timedelta64",
   "pandas.compat.long",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.FloatBlock.should_store": {
  "lineno": 1875,
  "symbols_in_volume": [
   "numpy.floating"
  ],
  "type": "function"
 },
 "pandas.core.internals.FloatBlock.to_native_types": {
  "lineno": 1846,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.isna",
   "pandas.io.formats.format.FloatArrayFormatter"
  ],
  "type": "function"
 },
 "pandas.core.internals.FloatOrComplexBlock": {
  "lineno": 1820,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.FloatOrComplexBlock.equals": {
  "lineno": 1823,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.core.internals.IntBlock": {
  "lineno": 1901,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "class"
 },
 "pandas.core.internals.IntBlock._can_hold_element": {
  "lineno": 1906,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.integer",
   "numpy.timedelta64",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.internals.IntBlock.should_store": {
  "lineno": 1915,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit": {
  "lineno": 5516,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.JoinUnit.__init__": {
  "lineno": 5518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit.__repr__": {
  "lineno": 5526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit.dtype": {
  "lineno": 5539,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common._get_dtype",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit.get_reindexed_values": {
  "lineno": 5579,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object_",
   "pandas.core.algorithms.take_nd"
  ],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit.is_na": {
  "lineno": 5550,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.internals.JoinUnit.needs_filling": {
  "lineno": 5530,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn": {
  "lineno": 1680,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.NonConsolidatableMixIn.__init__": {
  "lineno": 1687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn._slice": {
  "lineno": 1774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn._try_cast_result": {
  "lineno": 1778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn._unstack": {
  "lineno": 1781,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.get_values": {
  "lineno": 1713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.iget": {
  "lineno": 1720,
  "symbols_in_volume": [
   "pandas.core.common.is_null_slice"
  ],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.putmask": {
  "lineno": 1739,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.set": {
  "lineno": 1735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.shape": {
  "lineno": 1707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NonConsolidatableMixIn.should_store": {
  "lineno": 1732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.NumericBlock": {
  "lineno": 1814,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.ObjectBlock": {
  "lineno": 2071,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.ObjectBlock.__init__": {
  "lineno": 2076,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock._can_hold_element": {
  "lineno": 2180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock._maybe_downcast": {
  "lineno": 2171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock._replace_single": {
  "lineno": 2243,
  "symbols_in_volume": [
   "numpy.vectorize",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_re_compilable",
   "pandas.core.dtypes.missing.isna",
   "pandas.util._validators.validate_bool_kwarg",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock._replace_single.re_replacer": {
  "lineno": 2298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock._try_coerce_args": {
  "lineno": 2183,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.convert": {
  "lineno": 2092,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_convert_objects",
   "pandas.core.dtypes.cast.soft_convert_objects"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.convert.f": {
  "lineno": 2123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.is_bool": {
  "lineno": 2084,
  "symbols_in_volume": [
   "pandas._libs.lib.is_bool_array"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.replace": {
  "lineno": 2198,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_re"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.set": {
  "lineno": 2143,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.internals.ObjectBlock.should_store": {
  "lineno": 2192,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complexfloating",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.integer",
   "pandas.core.dtypes.common.is_extension_type"
  ],
  "type": "function"
 },
 "pandas.core.internals.ScalarBlock": {
  "lineno": 1657,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.ScalarBlock.__init__": {
  "lineno": 1663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ScalarBlock.__len__": {
  "lineno": 1676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ScalarBlock.dtype": {
  "lineno": 1668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.ScalarBlock.shape": {
  "lineno": 1672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager": {
  "lineno": 4355,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.SingleBlockManager.__init__": {
  "lineno": 4363,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._blklocs": {
  "lineno": 4422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._blknos": {
  "lineno": 4417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._block": {
  "lineno": 4409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._can_hold_na": {
  "lineno": 4529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._consolidate_check": {
  "lineno": 4536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._consolidate_inplace": {
  "lineno": 4539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._post_setstate": {
  "lineno": 4406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager._values": {
  "lineno": 4413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.array_dtype": {
  "lineno": 4483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.asobject": {
  "lineno": 4517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.concat": {
  "lineno": 4559,
  "symbols_in_volume": [
   "pandas.core.dtypes.concat._concat_compat"
  ],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.convert": {
  "lineno": 4474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.delete": {
  "lineno": 4542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.dtype": {
  "lineno": 4479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.external_values": {
  "lineno": 4503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.fast_xs": {
  "lineno": 4552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.formatting_values": {
  "lineno": 4509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.ftype": {
  "lineno": 4487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_dtype_counts": {
  "lineno": 4491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_dtypes": {
  "lineno": 4497,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_ftype_counts": {
  "lineno": 4494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_ftypes": {
  "lineno": 4500,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_slice": {
  "lineno": 4463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.get_values": {
  "lineno": 4513,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.index": {
  "lineno": 4470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.internal_values": {
  "lineno": 4506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.is_consolidated": {
  "lineno": 4533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.itemsize": {
  "lineno": 4525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SingleBlockManager.reindex": {
  "lineno": 4427,
  "symbols_in_volume": [
   "copy",
   "numpy.nan",
   "pandas.core.algorithms.take_1d",
   "pandas.core.missing.interpolate_2d"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock": {
  "lineno": 2753,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.dtypes.concat._concat_sparse",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "class"
 },
 "pandas.core.internals.SparseBlock.__len__": {
  "lineno": 2812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock._astype": {
  "lineno": 2804,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.copy": {
  "lineno": 2818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.fill_value": {
  "lineno": 2777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.fillna": {
  "lineno": 2866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.interpolate": {
  "lineno": 2858,
  "symbols_in_volume": [
   "pandas.core.missing.interpolate_2d"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.itemsize": {
  "lineno": 2768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.kind": {
  "lineno": 2800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.make_block_same_class": {
  "lineno": 2824,
  "symbols_in_volume": [
   "copy",
   "numpy.empty",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.reindex_axis": {
  "lineno": 2896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.shape": {
  "lineno": 2764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.shift": {
  "lineno": 2877,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.core.dtypes.cast.maybe_upcast"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.sp_index": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.sp_values": {
  "lineno": 2788,
  "symbols_in_volume": [
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.sparse_reindex": {
  "lineno": 2911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.SparseBlock.to_dense": {
  "lineno": 2781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock": {
  "lineno": 1939,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.internals.TimeDeltaBlock._box_func": {
  "lineno": 1945,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timedelta"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock._can_hold_element": {
  "lineno": 1949,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.core.dtypes.cast.maybe_infer_dtype_type",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock._try_coerce_args": {
  "lineno": 1964,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.missing.is_null_datelike_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock._try_coerce_result": {
  "lineno": 2006,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.integer",
   "numpy.ndarray",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock.fillna": {
  "lineno": 1956,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas._libs.tslib.Timedelta",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock.should_store": {
  "lineno": 2017,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.internals.TimeDeltaBlock.to_native_types": {
  "lineno": 2020,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas._libs.tslib.Timedelta",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.internals._block2d_to_blocknd": {
  "lineno": 4955,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.prod",
   "numpy.zeros",
   "pandas.compat.range",
   "pandas.core.dtypes.cast.maybe_promote"
  ],
  "type": "function"
 },
 "pandas.core.internals._block_shape": {
  "lineno": 4902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals._concat_indexes": {
  "lineno": 4951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals._consolidate": {
  "lineno": 4841,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "pandas.core.internals._extend_blocks": {
  "lineno": 4885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals._factor_indexer": {
  "lineno": 4980,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.sum",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.internals._fast_count_smallints": {
  "lineno": 5637,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.c_",
   "numpy.empty",
   "numpy.int_"
  ],
  "type": "function"
 },
 "pandas.core.internals._get_blkno_placements": {
  "lineno": 4990,
  "symbols_in_volume": [
   "pandas._libs.lib.BlockPlacement",
   "pandas._libs.lib.get_blkno_indexers",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.internals._interleaved_dtype": {
  "lineno": 4828,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.dtypes.ExtensionDtype"
  ],
  "type": "function"
 },
 "pandas.core.internals._maybe_compare": {
  "lineno": 4922,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_datetimelike_v_numeric",
   "pandas.core.dtypes.common.is_numeric_v_string_like",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.internals._merge_blocks": {
  "lineno": 4858,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.core.internals._multi_blockify": {
  "lineno": 4769,
  "symbols_in_volume": [
   "itertools.groupby"
  ],
  "type": "function"
 },
 "pandas.core.internals._preprocess_slice_or_indexer": {
  "lineno": 5648,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.bool_",
   "numpy.int64",
   "numpy.ndarray",
   "pandas._libs.lib.slice_len",
   "pandas.core.indexing.maybe_convert_indices"
  ],
  "type": "function"
 },
 "pandas.core.internals._putmask_smart": {
  "lineno": 5084,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.repeat",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common.is_extension_type",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_numeric_v_string_like",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.missing._isna_compat",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.core.internals._putmask_smart._putmask_preserve": {
  "lineno": 5148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals._safe_reshape": {
  "lineno": 5042,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.internals._simple_blockify": {
  "lineno": 4755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals._sparse_blockify": {
  "lineno": 4786,
  "symbols_in_volume": [
   "pandas.core.sparse.array._maybe_to_sparse"
  ],
  "type": "function"
 },
 "pandas.core.internals._stack_arrays": {
  "lineno": 4801,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals._stack_arrays._asarray_compat": {
  "lineno": 4804,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.internals._stack_arrays._shape_compat": {
  "lineno": 4810,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.internals._transform_index": {
  "lineno": 5064,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.core.internals._vstack": {
  "lineno": 4911,
  "symbols_in_volume": [
   "numpy.vstack",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common._TD_DTYPE"
  ],
  "type": "function"
 },
 "pandas.core.internals.combine_concat_plans": {
  "lineno": 5424,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.internals.combine_concat_plans._next_or_none": {
  "lineno": 5449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.concatenate_block_managers": {
  "lineno": 5170,
  "symbols_in_volume": [
   "copy"
  ],
  "type": "function"
 },
 "pandas.core.internals.concatenate_join_units": {
  "lineno": 5320,
  "symbols_in_volume": [
   "copy",
   "pandas.core.dtypes.concat._concat_compat"
  ],
  "type": "function"
 },
 "pandas.core.internals.construction_error": {
  "lineno": 4599,
  "symbols_in_volume": [
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.core.internals.create_block_manager_from_arrays": {
  "lineno": 4634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.create_block_manager_from_blocks": {
  "lineno": 4611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.form_blocks": {
  "lineno": 4645,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.complexfloating",
   "numpy.datetime64",
   "numpy.empty",
   "numpy.floating",
   "numpy.integer",
   "numpy.nan",
   "numpy.object_",
   "pandas._libs.tslib.cast_to_nanoseconds",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.internals.get_empty_dtype_and_na": {
  "lineno": 5230,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.find_common_type",
   "numpy.float64",
   "numpy.nan",
   "numpy.object_",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.internals.get_mgr_concatenation_plan": {
  "lineno": 5345,
  "symbols_in_volume": [
   "numpy.diff",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.internals.is_uniform_join_units": {
  "lineno": 5210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.items_overlap_with_suffix": {
  "lineno": 5013,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.items_overlap_with_suffix.lrenamer": {
  "lineno": 5028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.items_overlap_with_suffix.rrenamer": {
  "lineno": 5033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.internals.make_block": {
  "lineno": 2921,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complexfloating",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.integer",
   "numpy.timedelta64",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.internals.trim_join_unit": {
  "lineno": 5487,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandas.core.missing": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.algos.backfill_2d_inplace_int64",
   "pandas._libs.algos.backfill_inplace_int64",
   "pandas._libs.algos.pad_2d_inplace_int64",
   "pandas._libs.algos.pad_inplace_int64"
  ],
  "type": "module"
 },
 "pandas.core.missing._akima_interpolate": {
  "lineno": 366,
  "symbols_in_volume": [
   "scipy.interpolate.Akima1DInterpolator",
   "scipy.interpolate._isscalar"
  ],
  "type": "function"
 },
 "pandas.core.missing._from_derivatives": {
  "lineno": 312,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "scipy.__version__",
   "scipy.interpolate.BPoly.from_derivatives",
   "scipy.interpolate.piecewise_polynomial_interpolate"
  ],
  "type": "function"
 },
 "pandas.core.missing._interp_limit": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.core.missing._interp_limit.inner": {
  "lineno": 664,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper.wrapper": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing._interpolate_scipy_wrapper": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.interpolate.UnivariateSpline",
   "scipy.interpolate.barycentric_interpolate",
   "scipy.interpolate.interp1d",
   "scipy.interpolate.krogh_interpolate",
   "scipy.interpolate.pchip_interpolate"
  ],
  "type": "function"
 },
 "pandas.core.missing._rolling_window": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "pandas.core.missing.backfill_1d": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.uint8",
   "pandas._libs.algos",
   "pandas._libs.algos.backfill_inplace_float64",
   "pandas._libs.algos.backfill_inplace_object",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.missing.backfill_2d": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.object_",
   "numpy.uint8",
   "pandas._libs.algos",
   "pandas._libs.algos.backfill_2d_inplace_float64",
   "pandas._libs.algos.backfill_2d_inplace_object",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.missing.clean_fill_method": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.missing.clean_interp_method": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing.clean_reindex_fill_method": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing.fill_zeros": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.putmask",
   "numpy.sign",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.missing.get_fill_func": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing.interpolate_1d": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.empty_like",
   "numpy.float64",
   "numpy.int64",
   "numpy.interp",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.compat.range",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.missing.interpolate_2d": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.missing.mask_missing": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "pandas.core.dtypes.cast.infer_dtype_from_array",
   "pandas.core.dtypes.common.is_numeric_v_string_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.missing.pad_1d": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.object_",
   "numpy.uint8",
   "pandas._libs.algos",
   "pandas._libs.algos.pad_inplace_float64",
   "pandas._libs.algos.pad_inplace_object",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.missing.pad_2d": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.object_",
   "numpy.uint8",
   "pandas._libs.algos",
   "pandas._libs.algos.pad_2d_inplace_float64",
   "pandas._libs.algos.pad_2d_inplace_object",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops": {
  "lineno": null,
  "symbols_in_volume": [
   "bottleneck.__version__",
   "distutils.version.LooseVersion",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas.core.config.get_option",
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.core.nanops._bn_ok_dtype": {
  "lineno": 154,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._ensure_numeric": {
  "lineno": 782,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.complex128",
   "numpy.float64",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_complex",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._get_counts": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common._get_dtype",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.nanops._get_counts_nanvar": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.putmask",
   "pandas.core.dtypes.common._get_dtype",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.nanops._get_fill_value": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.cast._int64_max"
  ],
  "type": "function"
 },
 "pandas.core.nanops._get_values": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.putmask",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops._has_infs": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.ndarray",
   "pandas._libs.lib.has_infs_f4",
   "pandas._libs.lib.has_infs_f8"
  ],
  "type": "function"
 },
 "pandas.core.nanops._isfinite": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.isfinite",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_complex_dtype",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops._maybe_arg_null_out": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops._maybe_null_out": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.iscomplexobj",
   "numpy.nan",
   "pandas._libs.tslib.NaT",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._na_ok_dtype": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_int_or_datetime_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._nanminmax": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops._nanminmax.reduction": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.nanops._view_if_needed": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._wrap_results": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.fabs",
   "numpy.ndarray",
   "pandas._libs.lib.Timedelta",
   "pandas._libs.lib.Timestamp",
   "pandas.core.dtypes.cast._int64_max",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops._zero_out_fperr": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.errstate",
   "numpy.ndarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.core.nanops.bottleneck_switch": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.nanops.bottleneck_switch.__call__": {
  "lineno": 95,
  "symbols_in_volume": [
   "bottleneck"
  ],
  "type": "function"
 },
 "pandas.core.nanops.bottleneck_switch.__call__.f": {
  "lineno": 103,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.empty",
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.missing.na_value_for_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.bottleneck_switch.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.disallow": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.nanops.disallow.__call__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.disallow.__call__._f": {
  "lineno": 69,
  "symbols_in_volume": [
   "functools.wraps",
   "itertools.chain",
   "numpy.errstate",
   "pandas.compat.itervalues",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.disallow.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.disallow.check": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.get_corr_func": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.get_corr_func._kendall": {
  "lineno": 746,
  "symbols_in_volume": [
   "scipy.stats.kendalltau"
  ],
  "type": "function"
 },
 "pandas.core.nanops.get_corr_func._pearson": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.corrcoef"
  ],
  "type": "function"
 },
 "pandas.core.nanops.get_corr_func._spearman": {
  "lineno": 752,
  "symbols_in_volume": [
   "scipy.stats.spearmanr"
  ],
  "type": "function"
 },
 "pandas.core.nanops.make_nancomp": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.make_nancomp.f": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.putmask",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanall": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.nanany": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.nanargmax": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.nanargmin": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.nanops.nancorr": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nancov": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.nan",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nankurt": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.expand_dims",
   "numpy.float64",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.putmask",
   "numpy.where",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanmean": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanmedian": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.nan",
   "pandas.core.dtypes.common.is_float_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanmedian.get_median": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.algos.median",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanprod": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_any_int_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nansem": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanskew": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.expand_dims",
   "numpy.float64",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.putmask",
   "numpy.where",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanstd": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nansum": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.nanops.nanvar": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.float64",
   "numpy.nan",
   "numpy.putmask",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_any_int_dtype",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.nanops.set_use_bottleneck": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.ops._Op": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "class"
 },
 "pandas.core.ops._Op.__init__": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._Op.get_op": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp": {
  "lineno": 352,
  "symbols_in_volume": [
   "pandas._libs.iNaT"
  ],
  "type": "class"
 },
 "pandas.core.ops._TimeOp.__init__": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime._offset": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime.f": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.putmask"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_to_array": {
  "lineno": 459,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.empty",
   "numpy.ndarray",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._libs.iNaT",
   "pandas._libs.lib.infer_dtype",
   "pandas._libs.tslib.array_to_datetime",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._is_offset": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.generic.ABCDateOffset"
  ],
  "type": "function"
 },
 "pandas.core.ops._TimeOp._validate": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._align_method_FRAME": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._align_method_FRAME.to_series": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._align_method_SERIES": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.f": {
  "lineno": 1254,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.na_op": {
  "lineno": 1198,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.errstate",
   "numpy.find_common_type",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.prod",
   "pandas.core.computation.expressions.evaluate",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.missing.fill_zeros"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL": {
  "lineno": 1351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.f": {
  "lineno": 1372,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.na_op": {
  "lineno": 1355,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.core.computation.expressions.evaluate",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.missing.fill_zeros"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.na_op": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.Index",
   "pandas.core.common._values_from_object",
   "pandas.core.computation.expressions.evaluate",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.cast.maybe_upcast_putmask",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.missing.fill_zeros"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.safe_na_op": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas._libs.algos.arrmap_object",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.wrapper": {
  "lineno": 713,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.core.common._maybe_match_name",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.na_op": {
  "lineno": 899,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.list_to_object_array",
   "pandas._libs.lib.scalar_binop",
   "pandas._libs.lib.vec_binop",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.wrapper": {
  "lineno": 928,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.common._maybe_match_name",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME": {
  "lineno": 1322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME.f": {
  "lineno": 1323,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_OBJECT_ARRAY": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.object_",
   "pandas._libs.lib.list_to_object_array",
   "pandas._libs.lib.scalar_compare",
   "pandas._libs.lib.vec_compare",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.generic.ABCIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL": {
  "lineno": 1384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.f": {
  "lineno": 1410,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.na_op": {
  "lineno": 1385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.putmask",
   "operator.ne",
   "pandas.core.computation.expressions.evaluate",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.na_op": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ones",
   "numpy.zeros",
   "pandas._libs.index.convert_scalar",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetimelike_v_numeric",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.wrapper": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate",
   "numpy.ndarray",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas._libs.lib.item_from_zerodim",
   "pandas.core.common._maybe_match_name",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.ops._construct_divmod_result": {
  "lineno": 656,
  "symbols_in_volume": [
   "pandas._libs.index"
  ],
  "type": "function"
 },
 "pandas.core.ops._construct_result": {
  "lineno": 652,
  "symbols_in_volume": [
   "pandas._libs.index"
  ],
  "type": "function"
 },
 "pandas.core.ops._create_methods": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "operator.add",
   "operator.and_",
   "operator.eq",
   "operator.floordiv",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.mod",
   "operator.mul",
   "operator.ne",
   "operator.or_",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "operator.xor"
  ],
  "type": "function"
 },
 "pandas.core.ops._create_methods.names": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.f": {
  "lineno": 1301,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.na_op": {
  "lineno": 1277,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.errstate",
   "numpy.ndarray",
   "numpy.putmask",
   "operator.ne",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.ops._flex_method_SERIES": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops._flex_method_SERIES.flex_wrapper": {
  "lineno": 1064,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.ops.add_flex_arithmetic_methods": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops.add_methods": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.compat.bind_method"
  ],
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method.f": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_special_arithmetic_methods",
   "pandas.core.ops.panel_special_funcs"
  ],
  "type": "module"
 },
 "pandas.core.panel.LongPanel": {
  "lineno": 1626,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "class"
 },
 "pandas.core.panel.LongPanel.__init__": {
  "lineno": 1628,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.generic.NDFrame",
   "pandas.util._decorators.deprecate"
  ],
  "type": "class"
 },
 "pandas.core.panel.Panel.__getitem__": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.__setitem__": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.compat.map",
   "pandas.core.common._apply_if_callable",
   "pandas.core.dtypes.cast.cast_scalar_to_array",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.generic.NDFrame._set_item"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__.axis_pretty": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations": {
  "lineno": 1524,
  "symbols_in_volume": [
   "pandas.core.ops._comp_method_PANEL",
   "pandas.core.ops.add_flex_arithmetic_methods"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method": {
  "lineno": 1542,
  "symbols_in_volume": [
   "pandas.core.ops._op_descriptions"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.f": {
  "lineno": 1591,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.na_op": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.evaluate",
   "pandas.core.missing.fill_zeros"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_1d": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.prod",
   "numpy.vstack",
   "numpy.zeros",
   "pandas.compat.range",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_2d": {
  "lineno": 1116,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._box_item_values": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._combine": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_const": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_frame": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_panel": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._compare_constructor": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._construct_return_type": {
  "lineno": 1160,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._constructor": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes_for_slice": {
  "lineno": 1415,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axis": {
  "lineno": 1485,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.index._get_objs_combined_axis"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._get_join_index": {
  "lineno": 1395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes_index": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._get_value": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._getitem_multilevel": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.range",
   "pandas.core.indexing.maybe_droplevels"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._homogenize_dict": {
  "lineno": 1440,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._init_arrays": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.core.internals.create_block_manager_from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._init_data": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.zip",
   "pandas.core.common._all_not_none",
   "pandas.core.common._any_not_none",
   "pandas.core.dtypes.cast.cast_scalar_to_array",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._init_dict": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems",
   "pandas.core.common._try_sort",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._init_matrix": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.core.common._default_index",
   "pandas.core.index._ensure_index",
   "pandas.core.internals.create_block_manager_from_blocks"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._ixs": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._needs_reindex_multi": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel._prep_ndarray": {
  "lineno": 1423,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._reduce": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._set_value": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.array_equal",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar",
   "pandas.core.dtypes.cast.maybe_cast_item"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._unpickle_panel_compat": {
  "lineno": 618,
  "symbols_in_volume": [
   "pandas.io.pickle._unpickle_array"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel._wrap_result": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.align": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.apply": {
  "lineno": 993,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.errstate",
   "numpy.ufunc"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.as_matrix": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.conform": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.count": {
  "lineno": 1268,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.dropna": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.prod",
   "pandas.compat.range",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.fillna": {
  "lineno": 1261,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.from_dict": {
  "lineno": 239,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.compat.OrderedDict",
   "pandas.compat.iteritems",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.get_value": {
  "lineno": 471,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.groupby": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.compat.numpy.function",
   "pandas.core.groupby.PanelGroupBy"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.head": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.join": {
  "lineno": 1314,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.major_xs": {
  "lineno": 785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.minor_xs": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex": {
  "lineno": 1202,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_axis_style_args"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex_axis": {
  "lineno": 1235,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.rename": {
  "lineno": 1226,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.round": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.round",
   "pandas.compat.numpy.function.validate_round",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.set_value": {
  "lineno": 519,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.shift": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.tail": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.to_excel": {
  "lineno": 413,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.excel.ExcelWriter"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame": {
  "lineno": 917,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_index_parts": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_multi_parts": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.to_sparse": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.transpose": {
  "lineno": 1243,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_string_like",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.panel.Panel.tshift": {
  "lineno": 1311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.update": {
  "lineno": 1363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.Panel.xs": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panel.WidePanel": {
  "lineno": 1616,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.panel.WidePanel.__init__": {
  "lineno": 1618,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel._ensure_like_indices": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.tile",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandas.core.panel.panel_index": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.panel4d": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.core.panelnd.create_nd_panel_factory"
  ],
  "type": "module"
 },
 "pandas.core.panel4d.panel4d_init": {
  "lineno": 46,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panel4d.panel4d_reindex": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame.reindex",
   "pandas.util._validators.validate_axis_style_args"
  ],
  "type": "function"
 },
 "pandas.core.panelnd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.panelnd.create_nd_panel_factory": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine_with_constructor": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._get_plane_axes_index": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.func": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.groupby.GroupBy",
   "pandas.core.groupby.SeriesGroupBy"
  ],
  "type": "module"
 },
 "pandas.core.resample.DatetimeIndexResampler": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.DatetimeIndexResampler._adjust_binner_for_upsample": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResampler._downsample": {
  "lineno": 731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResampler._get_binner_for_time": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResampler._resampler_for_grouping": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResampler._upsample": {
  "lineno": 775,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResampler._wrap_result": {
  "lineno": 813,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.resample.DatetimeIndexResamplerGroupby": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.DatetimeIndexResamplerGroupby._constructor": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResampler": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.PeriodIndexResampler._convert_obj": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResampler._downsample": {
  "lineno": 867,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.tseries.frequencies.is_subperiod",
   "pandas.tseries.frequencies.is_superperiod"
  ],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResampler._get_binner_for_time": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResampler._resampler_for_grouping": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResampler._upsample": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.PeriodIndexResamplerGroupby": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.PeriodIndexResamplerGroupby._constructor": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.compat.PY3",
   "pandas.core.groupby._GroupBy",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.resample.Resampler.__array__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__getattr__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__getitem__": {
  "lineno": 204,
  "symbols_in_volume": [
   "pandas.core.common.ABCSeries",
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__setattr__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__setitem__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.__unicode__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._apply_loffset": {
  "lineno": 412,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._assure_grouper": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._convert_obj": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._deprecated": {
  "lineno": 125,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._downsample": {
  "lineno": 350,
  "symbols_in_volume": [
   "pandas.core.base.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._from_selection": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._get_binner": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.core.groupby.BinGrouper"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._get_binner_for_time": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.core.base.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._get_resampler_for_grouping": {
  "lineno": 437,
  "symbols_in_volume": [
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._gotitem": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._groupby_and_aggregate": {
  "lineno": 381,
  "symbols_in_volume": [
   "pandas.compat.callable",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.groupby.PanelGroupBy",
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._make_deprecated_binop": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._make_deprecated_binop._evaluate_numeric_binop": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._make_deprecated_unary": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._make_deprecated_unary._evaluate_numeric_unary": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._set_binner": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler._typ": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._upsample": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandas.core.base.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler._wrap_result": {
  "lineno": 441,
  "symbols_in_volume": [
   "pandas.core.common.ABCSeries",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.aggregate": {
  "lineno": 310,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.asfreq": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.ax": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.backfill": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.fillna": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.interpolate": {
  "lineno": 534,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.nearest": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.obj": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.pad": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.plot": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.size": {
  "lineno": 592,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.groupby.GroupBy.size.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.std": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_resampler_func"
  ],
  "type": "function"
 },
 "pandas.core.resample.Resampler.transform": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.Resampler.var": {
  "lineno": 580,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_resampler_func"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper": {
  "lineno": 1010,
  "symbols_in_volume": [
   "pandas.core.groupby.Grouper",
   "pandas.core.groupby.Grouper._attributes"
  ],
  "type": "class"
 },
 "pandas.core.resample.TimeGrouper.__init__": {
  "lineno": 1026,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._adjust_bin_edges": {
  "lineno": 1188,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.tseries.frequencies.is_superperiod",
   "pandas.tseries.offsets._delta_to_nanoseconds"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_grouper": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_period_bins": {
  "lineno": 1253,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.insert",
   "numpy.sum",
   "pandas._libs.tslib.NaT",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_resampler": {
  "lineno": 1066,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_time_bins": {
  "lineno": 1113,
  "symbols_in_volume": [
   "pandas._libs.lib.generate_bins_dt64",
   "pandas._libs.tslib.NaT",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_time_delta_bins": {
  "lineno": 1205,
  "symbols_in_volume": [
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimeGrouper._get_time_period_bins": {
  "lineno": 1231,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimedeltaIndexResampler": {
  "lineno": 949,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.TimedeltaIndexResampler._adjust_binner_for_upsample": {
  "lineno": 958,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.is_subperiod"
  ],
  "type": "function"
 },
 "pandas.core.resample.TimedeltaIndexResampler._get_binner_for_time": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.TimedeltaIndexResampler._resampler_for_grouping": {
  "lineno": 951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.TimedeltaIndexResamplerGroupby": {
  "lineno": 973,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.resample.TimedeltaIndexResamplerGroupby._constructor": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample._GroupByMixin": {
  "lineno": 675,
  "symbols_in_volume": [
   "pandas.core.base.GroupByMixin"
  ],
  "type": "class"
 },
 "pandas.core.resample._GroupByMixin.__init__": {
  "lineno": 678,
  "symbols_in_volume": [
   "copy.copy",
   "pandas.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas.core.resample._GroupByMixin._apply": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample._GroupByMixin._apply.func": {
  "lineno": 702,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.resample._adjust_dates_anchored": {
  "lineno": 1342,
  "symbols_in_volume": [
   "pandas._libs.lib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.core.resample._get_range_edges": {
  "lineno": 1314,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Tick",
   "pandas.tseries.offsets._delta_to_nanoseconds"
  ],
  "type": "function"
 },
 "pandas.core.resample._maybe_process_deprecations": {
  "lineno": 629,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.resample._take_new_index": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d",
   "pandas.core.api.DataFrame",
   "pandas.core.api.Series"
  ],
  "type": "function"
 },
 "pandas.core.resample.asfreq": {
  "lineno": 1399,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.resample.f": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.resample.get_resampler_for_grouping": {
  "lineno": 994,
  "symbols_in_volume": [
   "pandas.core.groupby.groupby",
   "pandas.core.groupby.groupby.obj"
  ],
  "type": "function"
 },
 "pandas.core.resample.resample": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.concat._Concatenator": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.reshape.concat._Concatenator.__init__": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.core.common._not_none",
   "pandas.core.generic.NDFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_comb_axis": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandas.core.index._get_objs_combined_axis"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_concat_axis": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.core.common._default_index",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_new_axes": {
  "lineno": 422,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._get_result_dim": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator._maybe_check_integrity": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.concat._Concatenator.get_result": {
  "lineno": 365,
  "symbols_in_volume": [
   "pandas.core.common._consensus_name_attr",
   "pandas.core.dtypes.concat._get_frame_result_type",
   "pandas.core.dtypes.concat._get_series_result_type",
   "pandas.core.internals.concatenate_block_managers"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat._concat_indexes": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.concat._make_concat_multiindex": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.repeat",
   "numpy.tile",
   "pandas.MultiIndex",
   "pandas.compat.lzip",
   "pandas.core.categorical._factorize_from_iterable",
   "pandas.core.categorical._factorize_from_iterables",
   "pandas.core.index._all_indexes_same",
   "pandas.core.index._ensure_index",
   "pandas.core.index._get_consensus_names"
  ],
  "type": "function"
 },
 "pandas.core.reshape.concat.concat": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.join.full_outer_join",
   "pandas._libs.join.inner_join",
   "pandas._libs.join.left_outer_join",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.frame._merge_doc"
  ],
  "type": "module"
 },
 "pandas.core.reshape.merge._AsOfMerge": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.reshape.merge._AsOfMerge.__init__": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge._AsOfMerge._asof_key": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge._AsOfMerge._get_join_indexers": {
  "lineno": 1298,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._AsOfMerge._get_join_indexers.flip": {
  "lineno": 1301,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.lzip",
   "pandas.compat.zip",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._AsOfMerge._get_merge_keys": {
  "lineno": 1248,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_int64_dtype",
   "pandas.core.dtypes.common.is_integer",
   "pandas.errors.MergeError"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._AsOfMerge._validate_specification": {
  "lineno": 1197,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.errors.MergeError"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.reshape.merge._MergeOperation.__init__": {
  "lineno": 505,
  "symbols_in_volume": [
   "copy",
   "pandas.DataFrame",
   "pandas.compat.string_types",
   "pandas.core.common._maybe_make_list",
   "pandas.core.dtypes.common.is_bool",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._get_join_indexers": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._get_join_info": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._get_merge_keys": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._indicator_post_merge": {
  "lineno": 632,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._indicator_pre_merge": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._maybe_add_join_keys": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.compat.zip",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.missing.na_value_for_dtype"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._maybe_coerce_merge_keys": {
  "lineno": 880,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._validate": {
  "lineno": 980,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.errors.MergeError"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation._validate_specification": {
  "lineno": 936,
  "symbols_in_volume": [
   "pandas.errors.MergeError"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._MergeOperation.get_result": {
  "lineno": 577,
  "symbols_in_volume": [
   "pandas.core.internals.concatenate_block_managers",
   "pandas.core.internals.items_overlap_with_suffix"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._OrderedMerge": {
  "lineno": 1069,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.reshape.merge._OrderedMerge.__init__": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge._OrderedMerge.get_result": {
  "lineno": 1086,
  "symbols_in_volume": [
   "pandas._libs.join.ffill_indexer",
   "pandas.core.internals.concatenate_block_managers",
   "pandas.core.internals.items_overlap_with_suffix"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._any": {
  "lineno": 1557,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._asof_by_function": {
  "lineno": 1126,
  "symbols_in_volume": [
   "pandas._libs.join"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._asof_function": {
  "lineno": 1121,
  "symbols_in_volume": [
   "pandas._libs.join"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._factorize_keys": {
  "lineno": 1457,
  "symbols_in_volume": [
   "numpy.putmask",
   "pandas._libs.hashtable.Factorizer",
   "pandas._libs.hashtable.Int64Factorizer",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_int_or_datetime_dtype"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_cython_type": {
  "lineno": 1153,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._get_dtype",
   "pandas.errors.MergeError"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_cython_type_upcast": {
  "lineno": 1162,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_join_indexers": {
  "lineno": 1024,
  "symbols_in_volume": [
   "copy.copy",
   "functools.partial",
   "pandas.compat.map",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_join_keys": {
  "lineno": 1520,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.prod",
   "pandas.compat.filter",
   "pandas.compat.range",
   "pandas.core.sorting.is_int64_overflow_possible"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_multiindex_indexer": {
  "lineno": 1372,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.take",
   "pandas._libs.join.left_outer_join",
   "pandas.compat.map",
   "pandas.compat.range",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._get_single_indexer": {
  "lineno": 1407,
  "symbols_in_volume": [
   "pandas._libs.join.left_outer_join",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._groupby_and_merge": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._left_join_on_index": {
  "lineno": 1418,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._right_outer_join": {
  "lineno": 1444,
  "symbols_in_volume": [
   "pandas._libs.join.left_outer_join"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._should_fill": {
  "lineno": 1550,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge._sort_labels": {
  "lineno": 1505,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ndarray",
   "pandas.Index",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.sorting.safe_sort"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge.merge": {
  "lineno": 47,
  "symbols_in_volume": [
   "copy",
   "pandas.core.frame._merge_doc",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.reshape.merge.merge_asof": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge.merge_ordered": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge.merge_ordered._merger": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.merge.ordered_merge": {
  "lineno": 142,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.pivot._add_margins": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.string_types",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._compute_grand_margin": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._convert_by": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.groupby.Grouper",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.lrange",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results._all_key": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results_without_values": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._generate_marginal_results_without_values._all_key": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.pivot._get_names": {
  "lineno": 549,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot._normalize": {
  "lineno": 476,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot.crosstab": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.common._maybe_make_list",
   "pandas.core.index._get_objs_combined_axis"
  ],
  "type": "function"
 },
 "pandas.core.reshape.pivot.pivot_table": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.range",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.frame._shared_docs",
   "pandas.core.groupby.Grouper",
   "pandas.core.reshape.concat.concat",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.reshape._Unstacker": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.reshape.reshape._Unstacker.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_sparse",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker._make_selectors": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.prod",
   "numpy.zeros",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.sorting.get_compressed_ids"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker._make_sorted_values_labels": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas._libs.algos.groupsort_indexer",
   "pandas._libs.algos.take_nd",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.sorting.get_compressed_ids"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_columns": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "numpy.tile",
   "pandas.core.index.MultiIndex",
   "pandas.core.index._get_na_value"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_index": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.core.index._get_na_value"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_new_values": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros",
   "pandas._libs.reshape",
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._Unstacker.get_result": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas._libs.algos.take_nd",
   "pandas.compat.range",
   "pandas.core.categorical.Categorical",
   "pandas.core.frame.DataFrame",
   "pandas.core.sorting.compress_group_index",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._get_dummies_1d": {
  "lineno": 1219,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.eye",
   "numpy.nan",
   "numpy.ones",
   "numpy.uint8",
   "pandas._libs.sparse.IntIndex",
   "pandas.compat.range",
   "pandas.compat.text_type",
   "pandas.compat.zip",
   "pandas.core.categorical._factorize_from_iterable",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._get_dummies_1d.get_empty_Frame": {
  "lineno": 1224,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._slow_pivot": {
  "lineno": 432,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._stack_multi_columns": {
  "lineno": 589,
  "symbols_in_volume": [
   "itertools.groupby",
   "numpy.arange",
   "numpy.tile",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._stack_multi_columns._convert_level_number": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.reshape._unstack_frame": {
  "lineno": 478,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape._unstack_multiple": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.series.Series",
   "pandas.core.sorting.compress_group_index",
   "pandas.core.sorting.decons_obs_group_ids",
   "pandas.core.sorting.get_group_index"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.get_dummies": {
  "lineno": 1072,
  "symbols_in_volume": [
   "itertools.cycle",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.frame.DataFrame",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.get_dummies.check_len": {
  "lineno": 1175,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.lreshape": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.tile",
   "pandas.compat.iteritems",
   "pandas.compat.zip",
   "pandas.core.dtypes.concat._concat_compat",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.make_axis_dummies": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.eye",
   "pandas.core.categorical._factorize_from_iterable",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.melt": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.tile",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame._shared_docs",
   "pandas.core.index.MultiIndex",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.pivot": {
  "lineno": 373,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.pivot_simple": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.stack": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.tile",
   "pandas.compat.zip",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.stack.factorize": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.categorical._factorize_from_iterable"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.stack_multiple": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.unstack": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long.get_var_names": {
  "lineno": 1023,
  "symbols_in_volume": [
   "re.escape"
  ],
  "type": "function"
 },
 "pandas.core.reshape.reshape.wide_to_long.melt_stub": {
  "lineno": 1028,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical",
   "re.escape"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.tile._bins_to_cuts": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "numpy.putmask",
   "pandas.Categorical",
   "pandas.IntervalIndex",
   "pandas.core.algorithms.take_nd",
   "pandas.core.algorithms.unique",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._coerce_to_type": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.int64",
   "numpy.timedelta64",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._convert_bin_to_numeric_type": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._format_labels": {
  "lineno": 326,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_intervals",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._infer_precision": {
  "lineno": 408,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._postprocess_for_cut": {
  "lineno": 377,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._preprocess_for_cut": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._round_frac": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.floor",
   "numpy.isfinite",
   "numpy.log10",
   "numpy.modf"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile._trim_zeros": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.tile.cut": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.diff",
   "numpy.iterable",
   "numpy.linspace",
   "pandas.IntervalIndex",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.nanops.nanmax",
   "pandas.core.nanops.nanmin"
  ],
  "type": "function"
 },
 "pandas.core.reshape.tile.qcut": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.core.algorithms.quantile",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.reshape.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.reshape.util._compose2": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.reshape.util.cartesian_product": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.cumproduct",
   "numpy.fromiter",
   "numpy.intp",
   "numpy.product",
   "numpy.repeat",
   "numpy.roll",
   "numpy.tile",
   "numpy.zeros_like",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.reshape.util.compose": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.core.reshape.util.match": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_flex_arithmetic_methods",
   "pandas.core.ops.add_special_arithmetic_methods",
   "pandas.core.ops.series_flex_funcs",
   "pandas.core.ops.series_special_funcs"
  ],
  "type": "module"
 },
 "pandas.core.series.Series": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.core.accessor.AccessorProperty",
   "pandas.core.base.IndexOpsMixin",
   "pandas.core.categorical.CategoricalAccessor",
   "pandas.core.generic.NDFrame",
   "pandas.core.generic.NDFrame._deprecations",
   "pandas.core.indexes.accessors.CombinedDatetimelikeProperties",
   "pandas.core.strings.StringMethods",
   "pandas.plotting._core.SeriesPlotMethods",
   "pandas.plotting._core.hist_series",
   "pandas.util._decorators.deprecate",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.series.Series.__array__": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.__array_prepare__": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.__array_wrap__": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.__getitem__": {
  "lineno": 620,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.index.InvalidIndexError",
   "pandas.core.index.MultiIndex",
   "pandas.core.indexing.check_bool_indexer"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.__init__": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ndarray",
   "pandas._libs.index",
   "pandas._libs.index.asobject.values",
   "pandas._libs.index.values",
   "pandas._libs.lib.fast_multiget",
   "pandas.compat.OrderedDict",
   "pandas.compat.PY3",
   "pandas.core.categorical.Categorical",
   "pandas.core.common._default_index",
   "pandas.core.common._dict_compat",
   "pandas.core.common._try_sort",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCSparseArray",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.index._ensure_index",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.core.internals.SingleBlockManager",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.__len__": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.__setitem__": {
  "lineno": 736,
  "symbols_in_volume": [
   "pandas.core.common._apply_if_callable"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.__setitem__.setitem": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas._libs.iNaT",
   "pandas.core.common.SettingWithCopyError",
   "pandas.core.common.is_bool_indexer",
   "pandas.core.dtypes.common._is_unorderable_exception",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.InvalidIndexError",
   "pandas.core.index.MultiIndex",
   "pandas.core.indexing.check_bool_indexer"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.__unicode__": {
  "lineno": 1052,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "pandas.io.formats.terminal.get_terminal_size"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._binop": {
  "lineno": 1682,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.core.common._maybe_match_name",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._can_hold_na": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._constructor": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._constructor_expanddim": {
  "lineno": 288,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._formatting_values": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._get_value": {
  "lineno": 926,
  "symbols_in_volume": [
   "pandas.core.common._maybe_box_datetimelike"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._get_values": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._get_values_tuple": {
  "lineno": 716,
  "symbols_in_volume": [
   "pandas.core.common._any_none",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._get_with": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._gotitem": {
  "lineno": 2359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._is_mixed_type": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._ixs": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.index.get_value_at",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._needs_reindex_multi": {
  "lineno": 2593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._reduce": {
  "lineno": 2560,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._reindex_indexer": {
  "lineno": 2583,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._set_axis": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas.core.index._ensure_index",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._set_labels": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._set_name": {
  "lineno": 1214,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._set_subtyp": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._set_value": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._set_values": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._set_with": {
  "lineno": 806,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ndarray",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._set_with_engine": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._slice": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series._take": {
  "lineno": 2734,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.generic._shared_docs",
   "pandas.core.indexing.maybe_convert_indices",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._unpickle_series_compat": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray.__setstate__",
   "pandas._libs.index",
   "pandas.core.internals.SingleBlockManager"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._update_inplace": {
  "lineno": 332,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame._update_inplace"
  ],
  "type": "function"
 },
 "pandas.core.series.Series._values": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.aggregate": {
  "lineno": 2395,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.align": {
  "lineno": 2599,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.append": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.apply": {
  "lineno": 2426,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.ufunc",
   "pandas._libs.lib.map_infer",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_extension_type",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.argsort": {
  "lineno": 1982,
  "symbols_in_volume": [
   "numpy.argsort",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.asobject": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.autocorr": {
  "lineno": 1530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.axes": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.between": {
  "lineno": 2806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.combine": {
  "lineno": 1736,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.errstate",
   "numpy.nan",
   "pandas.core.common._maybe_match_name"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.combine_first": {
  "lineno": 1783,
  "symbols_in_volume": [
   "pandas.core.common._maybe_match_name",
   "pandas.core.common._where_compat",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.compress": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_compress"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.corr": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.nanops.nancorr"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.count": {
  "lineno": 1234,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "pandas.compat.string_types",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.index._get_na_value"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.cov": {
  "lineno": 1492,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.nanops.nancov"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.diff": {
  "lineno": 1514,
  "symbols_in_volume": [
   "pandas.core.algorithms.diff",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.dot": {
  "lineno": 1545,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.ndarray",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.drop_duplicates": {
  "lineno": 1294,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.dropna": {
  "lineno": 2972,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.remove_na_arraylike",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.dtype": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.dtypes": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.duplicated": {
  "lineno": 1298,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.fillna": {
  "lineno": 2683,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.first_valid_index": {
  "lineno": 3006,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.from_array": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.core.dtypes.generic.ABCSparseArray",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.from_csv": {
  "lineno": 2831,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame.from_csv"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.ftype": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.ftypes": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.get_value": {
  "lineno": 903,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.get_values": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.idxmax": {
  "lineno": 1338,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.numpy.function.validate_argmax_with_skipna",
   "pandas.core.common._values_from_object",
   "pandas.core.nanops.nanargmax"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.idxmin": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.numpy.function.validate_argmin_with_skipna",
   "pandas.core.common._values_from_object",
   "pandas.core.nanops.nanargmin"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.imag": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.isin": {
  "lineno": 2753,
  "symbols_in_volume": [
   "pandas.core.algorithms.isin",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.isna": {
  "lineno": 2956,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.isnull": {
  "lineno": 2960,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.iteritems": {
  "lineno": 1127,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.keys": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.last_valid_index": {
  "lineno": 3019,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.map": {
  "lineno": 2229,
  "symbols_in_volume": [
   "pandas._libs.lib.map_infer",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_extension_type"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.map.map_f": {
  "lineno": 2331,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas._libs.lib.map_infer_mask",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.memory_usage": {
  "lineno": 2705,
  "symbols_in_volume": [
   "pandas._libs.index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.mode": {
  "lineno": 1269,
  "symbols_in_volume": [
   "pandas.core.algorithms.mode"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.name": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_hashable"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.nlargest": {
  "lineno": 2018,
  "symbols_in_volume": [
   "pandas.core.algorithms.SelectNSeries"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.nonzero": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.notna": {
  "lineno": 2964,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.notnull": {
  "lineno": 2968,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.nsmallest": {
  "lineno": 2065,
  "symbols_in_volume": [
   "pandas.core.algorithms.SelectNSeries"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.put": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.quantile": {
  "lineno": 1415,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.Float64Index"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.ravel": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.real": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.reindex": {
  "lineno": 2679,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.reindex_axis": {
  "lineno": 2695,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.rename": {
  "lineno": 2609,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.core.dtypes.common.is_dict_like",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.reorder_levels": {
  "lineno": 2162,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.repeat": {
  "lineno": 856,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_repeat",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.reset_index": {
  "lineno": 976,
  "symbols_in_volume": [
   "pandas.core.common._default_index",
   "pandas.core.index.MultiIndex",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.reshape": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_reshape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.round": {
  "lineno": 1388,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_round",
   "pandas.core.common._values_from_object"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.searchsorted": {
  "lineno": 1587,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.set_value": {
  "lineno": 932,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.shift": {
  "lineno": 2691,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.sort_index": {
  "lineno": 1936,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas._libs.index._sort_levels_monotonic",
   "pandas._libs.index.is_monotonic_decreasing",
   "pandas._libs.index.is_monotonic_increasing",
   "pandas._libs.index.sortlevel",
   "pandas._libs.index.take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.generic._shared_docs",
   "pandas.core.index.MultiIndex",
   "pandas.core.sorting.lexsort_indexer",
   "pandas.core.sorting.nargsort",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.sort_values": {
  "lineno": 1874,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int32",
   "pandas.core.common._default_index",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.sort_values._try_kind_sort": {
  "lineno": 1886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.sortlevel": {
  "lineno": 2112,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.swaplevel": {
  "lineno": 2139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.to_csv": {
  "lineno": 2897,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.to_dict": {
  "lineno": 1142,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.common.standardize_mapping"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.to_excel": {
  "lineno": 2943,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.to_frame": {
  "lineno": 1176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.to_period": {
  "lineno": 3059,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.to_sparse": {
  "lineno": 1197,
  "symbols_in_volume": [
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.to_string": {
  "lineno": 1071,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas.compat.text_type",
   "pandas.io.formats.format.SeriesFormatter"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.to_timestamp": {
  "lineno": 3035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.unique": {
  "lineno": 1281,
  "symbols_in_volume": [
   "pandas.core.base._shared_docs",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.unstack": {
  "lineno": 2184,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.unstack"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.update": {
  "lineno": 1818,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.series.Series.values": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series.Series.view": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series._coerce_method": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series._coerce_method.wrapper": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.series._sanitize_array": {
  "lineno": 3136,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ma.MaskedArray",
   "numpy.ma.getmaskarray",
   "numpy.ndarray",
   "pandas._libs.index",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.compat.get_range_parameters",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.core.categorical.Categorical",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar",
   "pandas.core.dtypes.cast.maybe_cast_to_datetime",
   "pandas.core.dtypes.cast.maybe_convert_platform",
   "pandas.core.dtypes.cast.maybe_upcast",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.series._sanitize_array._try_cast": {
  "lineno": 3153,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.cast.maybe_cast_to_datetime",
   "pandas.core.dtypes.cast.maybe_castable",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_extension_type"
  ],
  "type": "function"
 },
 "pandas.core.series._sanitize_array.create_from_value": {
  "lineno": 3230,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "pandas._libs.index",
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.core.series._sanitize_index": {
  "lineno": 3112,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas._libs.index",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.core.series.remove_na": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.remove_na_arraylike",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sorting": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64"
  ],
  "type": "module"
 },
 "pandas.core.sorting._KeyMapper": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.sorting._KeyMapper.__init__": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.hashtable.Int64HashTable"
  ],
  "type": "function"
 },
 "pandas.core.sorting._KeyMapper._populate_tables": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.core.sorting._KeyMapper.get_key": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sorting._reorder_by_uniques": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int64",
   "numpy.putmask",
   "pandas.core.algorithms.take_nd"
  ],
  "type": "function"
 },
 "pandas.core.sorting.compress_group_index": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas._libs.hashtable.Int64HashTable",
   "pandas._libs.hashtable._SIZE_HINT_LIMIT",
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.sorting.decons_group_index": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.putmask"
  ],
  "type": "function"
 },
 "pandas.core.sorting.decons_obs_group_ids": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.fromiter",
   "pandas._libs.hashtable.unique_label_indices"
  ],
  "type": "function"
 },
 "pandas.core.sorting.get_compressed_ids": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sorting.get_flattened_iterator": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sorting.get_group_index": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_int64"
  ],
  "type": "function"
 },
 "pandas.core.sorting.get_group_index._int64_cut_off": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.core.sorting.get_group_index.loop": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.core.sorting.get_group_index.maybe_lift": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sorting.get_group_index_sorter": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.log",
   "pandas._libs.algos.groupsort_indexer",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.sorting.get_indexer_dict": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.prod",
   "pandas._libs.lib.indices_fast"
  ],
  "type": "function"
 },
 "pandas.core.sorting.indexer_from_factorized": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sorting.is_int64_overflow_possible": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.core.sorting.lexsort_indexer": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.core.categorical.Categorical",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.sorting.nargsort": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asanyarray",
   "numpy.concatenate",
   "numpy.nonzero",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.sorting.safe_sort": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.empty",
   "numpy.int_",
   "numpy.ndarray",
   "numpy.putmask",
   "pandas.Index",
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.PY3",
   "pandas.core.algorithms._get_data_algo",
   "pandas.core.algorithms._hashtables",
   "pandas.core.dtypes.cast.infer_dtype_from_array",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.sorting.safe_sort.sort_mixed": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.sort",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.sparse.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.sparse.array": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_special_arithmetic_methods"
  ],
  "type": "module"
 },
 "pandas.core.sparse.array.SparseArray": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.PY3",
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.sparse.array.SparseArray.__array_finalize__": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__array_wrap__": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__getitem__": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__getslice__": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__iter__": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "numpy.issubdtype",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__len__": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__new__": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.dtype",
   "numpy.empty",
   "numpy.nan",
   "pandas._libs.index",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__reduce__": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.ndarray.__reduce__"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__setitem__": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__setslice__": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__setstate__": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.ndarray.__setstate__"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.__unicode__": {
  "lineno": 334,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray._constructor": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray._get_val_at": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas._libs.index.get_value_at"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray._null_fill_value": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray._simple_new": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.sparse.SparseIndex",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.na_value_for_dtype"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray._valid_sp_values": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.all": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.compat.numpy.function.validate_all"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.any": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.compat.numpy.function.validate_any"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.astype": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.cast.astype_nansafe",
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.copy": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.count": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.cumsum": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_cumsum"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.disable": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.fill_value": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.core.dtypes.cast.maybe_promote",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.fillna": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.where",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.get_values": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.kind": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.mean": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_mean"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.sp_values": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.sum": {
  "lineno": 660,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_sum"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.take": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int32",
   "pandas.compat.numpy.function.validate_take",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.indexes.base._index_shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.to_dense": {
  "lineno": 390,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.value_counts": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.insert",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.algorithms._value_counts_arraylike",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.SparseArray.values": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._arith_method": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array._arith_method.wrapper": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCSparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._get_fill": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._make_index": {
  "lineno": 855,
  "symbols_in_volume": [
   "pandas._libs.index",
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex",
   "pandas._libs.sparse.get_blocks"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._maybe_to_dense": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.array._maybe_to_sparse": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCSparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._sanitize_values": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.core.dtypes.cast.maybe_convert_platform",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._sparse_array_op": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.errstate",
   "numpy.float64",
   "numpy.uint8",
   "pandas._libs.index",
   "pandas._libs.sparse",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array._wrap_result": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.bool",
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.core.sparse.array.make_sparse": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas._libs.index",
   "pandas._libs.sparse.make_mask_object_ndarray",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.is_string_dtype",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.na_value_for_dtype",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_flex_arithmetic_methods",
   "pandas.core.ops.add_special_arithmetic_methods",
   "pandas.core.ops.frame_flex_funcs",
   "pandas.core.ops.frame_special_funcs"
  ],
  "type": "module"
 },
 "pandas.core.sparse.frame.SparseDataFrame": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.frame.DataFrame",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "class"
 },
 "pandas.core.sparse.frame.SparseDataFrame.__array_wrap__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.__getitem__": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.__getstate__": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_scipy_sparse",
   "pandas.core.frame.DataFrame",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.internals.BlockManager",
   "pandas.core.sparse.series.SparseArray",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._apply_columns": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._combine_const": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._combine_frame": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._combine_match_columns": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._combine_match_index": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.compat.iteritems",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._constructor": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._get_value": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._init_dict": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.compat.iteritems",
   "pandas.core.common._try_sort",
   "pandas.core.frame.extract_index",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index",
   "pandas.core.series.Series",
   "pandas.core.sparse.series.SparseArray",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._init_matrix": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.core.frame._prep_ndarray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._init_spmatrix": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.get_blocks",
   "pandas.core.series.Series",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._join_compat": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._join_index": {
  "lineno": 742,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._maybe_rename_join": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._maybe_rename_join.lrenamer": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._maybe_rename_join.rrenamer": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._prep_index": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.core.frame._default_index"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._reindex_columns": {
  "lineno": 685,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._reindex_index": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.putmask",
   "pandas.core.dtypes.cast.maybe_upcast",
   "pandas.core.dtypes.common._ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._reindex_with_indexers": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._sanitize_column": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pandas.core.sparse.series.SparseArray",
   "pandas.core.sparse.series.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._set_value": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._slice": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame._unpickle_sparse_frame_compat": {
  "lineno": 277,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.Index",
   "pandas.core.sparse.series.SparseSeries",
   "pandas.io.pickle._unpickle_array"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.apply": {
  "lineno": 834,
  "symbols_in_volume": [
   "numpy.ufunc",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.applymap": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.astype": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.copy": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.count": {
  "lineno": 797,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame.count.__doc__",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.cumsum": {
  "lineno": 804,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_cumsum"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.default_fill_value": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.default_kind": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.density": {
  "lineno": 344,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.fillna": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.get_value": {
  "lineno": 434,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.isna": {
  "lineno": 824,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.notna": {
  "lineno": 829,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.set_value": {
  "lineno": 467,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.to_coo": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.repeat",
   "pandas.core.dtypes.cast.find_common_type",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.to_dense": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.transpose": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_transpose"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.SparseDataFrame.xs": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.homogenize": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.stack_sparse_frame": {
  "lineno": 901,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.isnan",
   "numpy.repeat",
   "pandas.compat.iteritems",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.sparse.frame.to_manager": {
  "lineno": 889,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index",
   "pandas.core.internals.create_block_manager_from_arrays"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.sparse.list.SparseList": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.core.sparse.list.SparseList.__getitem__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.nan",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__len__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__setitem__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.__unicode__": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList._consolidate_inplace": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.append": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.consolidate": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg"
  ],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.copy": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.is_consolidated": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.nchunks": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list.SparseList.to_array": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.list._concat_sparse_indexes": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas._libs.sparse.IntIndex"
  ],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.sparse.scipy_sparse._check_is_partition": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._coo_to_sparse_series": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.core.index.MultiIndex.from_product",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._sparse_series_to_coo": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict.robust_get_level_values": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.scipy_sparse._to_ijv.get_indexers._get_label_to_i_dict": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.compat.lmap",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.ops.add_flex_arithmetic_methods",
   "pandas.core.ops.add_special_arithmetic_methods",
   "pandas.core.ops.series_flex_funcs",
   "pandas.core.ops.series_special_funcs"
  ],
  "type": "module"
 },
 "pandas.core.sparse.series.SparseSeries": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.series.Series"
  ],
  "type": "class"
 },
 "pandas.core.sparse.series.SparseSeries.__array__": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__array_finalize__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__array_wrap__": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__getitem__": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.integer",
   "pandas.core.common._values_from_object",
   "pandas.core.index.InvalidIndexError"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__getstate__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__init__": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.ndarray",
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex",
   "pandas.core.common._default_index",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.index._ensure_index",
   "pandas.core.internals.SingleBlockManager",
   "pandas.core.series.Series",
   "pandas.core.sparse.array.SparseArray",
   "pandas.core.sparse.array.make_sparse"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__iter__": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__len__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.__unicode__": {
  "lineno": 297,
  "symbols_in_volume": [
   "pandas.core.series.Series.__unicode__"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._constructor": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._constructor_expanddim": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._get_val_at": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._get_value": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._get_values": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._ixs": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._reduce": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_subtyp": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_value": {
  "lineno": 528,
  "symbols_in_volume": [
   "pandas.core.internals.SingleBlockManager",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_values": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas._libs.index.convert_scalar",
   "pandas.core.internals.SingleBlockManager",
   "pandas.core.series.Series",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._set_with_engine": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries._unpickle_series_compat": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ndarray.__setstate__",
   "pandas.core.generic.NDFrame.__init__",
   "pandas.core.internals.SingleBlockManager",
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.abs": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.as_sparse_array": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.core.sparse.array.SparseArray"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.block": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.combine_first": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.copy": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.cumsum": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_cumsum"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.density": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.dropna": {
  "lineno": 688,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.fill_value": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.from_array": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.from_coo": {
  "lineno": 806,
  "symbols_in_volume": [
   "pandas.core.sparse.scipy_sparse._coo_to_sparse_series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get_value": {
  "lineno": 466,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.get_values": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.isna": {
  "lineno": 672,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic._shared_docs",
   "pandas.core.sparse.array.SparseArray",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.kind": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.notna": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna",
   "pandas.core.generic._shared_docs",
   "pandas.core.sparse.array.SparseArray",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.npoints": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.reindex": {
  "lineno": 602,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.set_value": {
  "lineno": 495,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.shape": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.shift": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.generic._shared_docs",
   "pandas.core.sparse.array._make_index",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sp_index": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sp_values": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.sparse_reindex": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas._libs.sparse.SparseIndex",
   "pandas.core.internals.SingleBlockManager"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.take": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_take_with_convert",
   "pandas.core.generic._shared_docs",
   "pandas.core.sparse.array.SparseArray.take",
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.to_coo": {
  "lineno": 752,
  "symbols_in_volume": [
   "pandas.core.sparse.scipy_sparse._sparse_series_to_coo"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.to_dense": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series.SparseSeries.values": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series._arith_method": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.sparse.series._arith_method.wrapper": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.sparse.series._sparse_series_op": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.core.common._maybe_match_name",
   "pandas.core.sparse.array._sparse_array_op"
  ],
  "type": "function"
 },
 "pandas.core.strings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.strings.StringMethods": {
  "lineno": 1361,
  "symbols_in_volume": [
   "pandas.compat.u_safe",
   "pandas.core.base.NoNewAttributesMixin"
  ],
  "type": "class"
 },
 "pandas.core.strings.StringMethods.__getitem__": {
  "lineno": 1380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__init__": {
  "lineno": 1373,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__iter__": {
  "lineno": 1386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods._make_accessor": {
  "lineno": 1897,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result": {
  "lineno": 1394,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.algorithms.take_1d",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result.cons_row": {
  "lineno": 1419,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.cat": {
  "lineno": 1472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.center": {
  "lineno": 1609,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.contains": {
  "lineno": 1564,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.decode": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.encode": {
  "lineno": 1655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extract": {
  "lineno": 1711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extractall": {
  "lineno": 1715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.find": {
  "lineno": 1742,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get": {
  "lineno": 1554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get_dummies": {
  "lineno": 1692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.index": {
  "lineno": 1799,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.join": {
  "lineno": 1559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.ljust": {
  "lineno": 1614,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.lstrip": {
  "lineno": 1675,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.match": {
  "lineno": 1570,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.normalize": {
  "lineno": 1756,
  "symbols_in_volume": [
   "pandas.compat.u_safe",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.pad": {
  "lineno": 1587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.partition": {
  "lineno": 1532,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.repeat": {
  "lineno": 1582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.replace": {
  "lineno": 1576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rfind": {
  "lineno": 1749,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rindex": {
  "lineno": 1806,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rjust": {
  "lineno": 1618,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rpartition": {
  "lineno": 1543,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rsplit": {
  "lineno": 1483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rstrip": {
  "lineno": 1681,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice": {
  "lineno": 1640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice_replace": {
  "lineno": 1645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.split": {
  "lineno": 1478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.strip": {
  "lineno": 1669,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.translate": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.wrap": {
  "lineno": 1687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.StringMethods.zfill": {
  "lineno": 1622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._get_array_list": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.core.common._values_from_object",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.strings._get_single_group_name": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun.f": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.strings._length_check": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._map": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.putmask",
   "numpy.uint8",
   "pandas._libs.lib.map_infer",
   "pandas._libs.lib.map_infer_mask",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.compat.PY2",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.missing.isna",
   "re.search"
  ],
  "type": "function"
 },
 "pandas.core.strings._map.g": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._na_map": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper.wrapper": {
  "lineno": 1315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper1": {
  "lineno": 1329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper2": {
  "lineno": 1333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper3": {
  "lineno": 1337,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings._str_extract_frame": {
  "lineno": 573,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.zip",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings._str_extract_noexpand": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.zip",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.copy": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.copy.do_copy": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_cat": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.logical_or.reduce",
   "numpy.nan",
   "numpy.putmask",
   "numpy.where",
   "pandas.compat.zip",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_contains": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.nan",
   "re.IGNORECASE",
   "re.compile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_count": {
  "lineno": 200,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_decode": {
  "lineno": 1267,
  "symbols_in_volume": [
   "codecs.getdecoder"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_encode": {
  "lineno": 1291,
  "symbols_in_volume": [
   "codecs.getencoder"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_endswith": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_extract": {
  "lineno": 600,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_extractall": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.dtypes.generic.ABCIndex",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_find": {
  "lineno": 900,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_findall": {
  "lineno": 876,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_get": {
  "lineno": 1249,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_get_dummies": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int64",
   "pandas._libs.lib.map_infer"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_index": {
  "lineno": 940,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_join": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_match": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.nan",
   "re.IGNORECASE",
   "re.compile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_pad": {
  "lineno": 960,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_repeat": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.lib.vec_binop",
   "pandas.core.common._values_from_object",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_repeat.rep": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.compat.binary_type.__mul__",
   "pandas.compat.text_type.__mul__"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_replace": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_re",
   "pandas.core.dtypes.common.is_string_like",
   "re.IGNORECASE",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_rsplit": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_slice": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace.f": {
  "lineno": 1106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_split": {
  "lineno": 1002,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_startswith": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_strip": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.strings.str_translate": {
  "lineno": 1210,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.core.strings.str_wrap": {
  "lineno": 1147,
  "symbols_in_volume": [
   "textwrap.TextWrapper"
  ],
  "type": "function"
 },
 "pandas.core.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.tools.datetimes": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.normalize_date"
  ],
  "type": "module"
 },
 "pandas.core.tools.datetimes._assemble_from_unit_mappings": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._assemble_from_unit_mappings.coerce": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._assemble_from_unit_mappings.f": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.tools.datetimes._attempt_YYYYMMDD": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas._libs.tslib._nat_strings",
   "pandas.core.algorithms.isin",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._attempt_YYYYMMDD.calc": {
  "lineno": 507,
  "symbols_in_volume": [
   "pandas._libs.tslib.array_to_datetime",
   "pandas._libs.tslibs.parsing.try_parse_year_month_day"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._attempt_YYYYMMDD.calc_with_mask": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.int64",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._guess_datetime_format_for_array": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing._guess_datetime_format",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes._guess_time_format_for_array": {
  "lineno": 553,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes.format": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.tools.datetimes.ole2datetime": {
  "lineno": 679,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes.to_datetime": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.MutableMapping",
   "numpy.any",
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray",
   "pandas.Series",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslib.Timestamp",
   "pandas._libs.tslib.Timestamp.max.to_julian_date",
   "pandas._libs.tslib.Timestamp.min.to_julian_date",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes.to_datetime._convert_listlike": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas._libs.tslib.array_to_datetime",
   "pandas._libs.tslib.array_with_unit_to_datetime",
   "pandas._libs.tslib.datetime_to_datetime64",
   "pandas._libs.tslibs.parsing._format_is_iso",
   "pandas._libs.tslibs.strptime.array_strptime",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes.DatetimeIndex._simple_new"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes.to_time": {
  "lineno": 568,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.core.tools.datetimes.to_time._convert_listlike": {
  "lineno": 597,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.array",
   "pandas.core.dtypes.common._ensure_object"
  ],
  "type": "function"
 },
 "pandas.core.tools.numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.tools.numeric.to_numeric": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int64",
   "numpy.min",
   "numpy.typecodes",
   "pandas.Index",
   "pandas.Series",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype",
   "pandas.core.dtypes.common.is_decimal",
   "pandas.core.dtypes.common.is_number",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.tools.timedeltas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslib.convert_to_timedelta64"
  ],
  "type": "function"
 },
 "pandas.core.tools.timedeltas._convert_listlike": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.TimedeltaIndex",
   "pandas._libs.tslib.array_to_timedelta64",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.core.tools.timedeltas._validate_timedelta_unit": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.tools.timedeltas.to_timedelta": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.util.hashing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.core.util.hashing._combine_hash_arrays": {
  "lineno": 23,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.array",
   "numpy.uint64",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pandas.core.util.hashing._hash_categorical": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.uint64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.core.util.hashing._hash_scalar": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.uint64",
   "pandas._libs.tslib.Timestamp",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.core.util.hashing.hash_array": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.issubdtype",
   "numpy.number",
   "numpy.timedelta64",
   "numpy.uint64",
   "pandas.Categorical",
   "pandas.Index",
   "pandas._libs.hashing.hash_object_array",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.factorize"
  ],
  "type": "function"
 },
 "pandas.core.util.hashing.hash_pandas_object": {
  "lineno": 51,
  "symbols_in_volume": [
   "itertools.chain",
   "pandas.Series",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCMultiIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.util.hashing.hash_tuple": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.util.hashing.hash_tuples": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.generic.ABCMultiIndex"
  ],
  "type": "function"
 },
 "pandas.core.window": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs"
  ],
  "type": "module"
 },
 "pandas.core.window.EWM": {
  "lineno": 1588,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window.EWM.__init__": {
  "lineno": 1680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.EWM._apply": {
  "lineno": 1742,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "pandas._libs.window",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM._apply.func": {
  "lineno": 1778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.EWM._constructor": {
  "lineno": 1692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.EWM.aggregate": {
  "lineno": 1733,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.corr": {
  "lineno": 1839,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.corr._get_corr": {
  "lineno": 1850,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.corr._get_corr._cov": {
  "lineno": 1854,
  "symbols_in_volume": [
   "pandas._libs.window.ewmcov"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.cov": {
  "lineno": 1817,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.cov._get_cov": {
  "lineno": 1828,
  "symbols_in_volume": [
   "pandas._libs.window.ewmcov"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.mean": {
  "lineno": 1786,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.std": {
  "lineno": 1793,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.var": {
  "lineno": 1803,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.EWM.var.f": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pandas._libs.window.ewmcov"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding": {
  "lineno": 1338,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window.Expanding.__init__": {
  "lineno": 1392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Expanding._constructor": {
  "lineno": 1397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Expanding._get_window": {
  "lineno": 1401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Expanding.aggregate": {
  "lineno": 1448,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.apply": {
  "lineno": 1463,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.corr": {
  "lineno": 1542,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.count": {
  "lineno": 1457,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.cov": {
  "lineno": 1535,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.kurt": {
  "lineno": 1523,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.max": {
  "lineno": 1476,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.mean": {
  "lineno": 1490,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.median": {
  "lineno": 1497,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.min": {
  "lineno": 1483,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.quantile": {
  "lineno": 1529,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.skew": {
  "lineno": 1517,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.std": {
  "lineno": 1503,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.sum": {
  "lineno": 1469,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Expanding.var": {
  "lineno": 1510,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_expanding_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.ExpandingGroupby": {
  "lineno": 1550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.window.ExpandingGroupby._constructor": {
  "lineno": 1557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Rolling": {
  "lineno": 1073,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window.Rolling._on": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling._validate_freq": {
  "lineno": 1138,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling._validate_monotonic": {
  "lineno": 1131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Rolling.aggregate": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.apply": {
  "lineno": 1220,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.corr": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.count": {
  "lineno": 1209,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.cov": {
  "lineno": 1292,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.is_datetimelike": {
  "lineno": 1075,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDatetimeIndex",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.dtypes.generic.ABCTimedeltaIndex",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.kurt": {
  "lineno": 1280,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.max": {
  "lineno": 1233,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.mean": {
  "lineno": 1247,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.median": {
  "lineno": 1254,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.min": {
  "lineno": 1240,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.quantile": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.skew": {
  "lineno": 1274,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.std": {
  "lineno": 1260,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.sum": {
  "lineno": 1226,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.validate": {
  "lineno": 1096,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.generic.ABCDateOffset"
  ],
  "type": "function"
 },
 "pandas.core.window.Rolling.var": {
  "lineno": 1267,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_rolling_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.RollingGroupby": {
  "lineno": 1307,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.window.RollingGroupby._constructor": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.RollingGroupby._gotitem": {
  "lineno": 1318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.RollingGroupby._validate_monotonic": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Window": {
  "lineno": 357,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window.Window._apply_window": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.apply_along_axis",
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.core.window.Window._apply_window.f": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas._libs.window.roll_window"
  ],
  "type": "function"
 },
 "pandas.core.window.Window._prep_window": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_integer",
   "scipy.signal.get_window"
  ],
  "type": "function"
 },
 "pandas.core.window.Window._prep_window._pop_args": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Window._prep_window._validate_win_type": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window.Window.aggregate": {
  "lineno": 659,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.core.window.Window.mean": {
  "lineno": 681,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Window.sum": {
  "lineno": 674,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.core.window.Window.validate": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_integer",
   "scipy.signal"
  ],
  "type": "function"
 },
 "pandas.core.window._GroupByMixin": {
  "lineno": 689,
  "symbols_in_volume": [
   "pandas.core.base.GroupByMixin",
   "pandas.core.base.GroupByMixin._dispatch"
  ],
  "type": "class"
 },
 "pandas.core.window._GroupByMixin.__init__": {
  "lineno": 692,
  "symbols_in_volume": [
   "pandas.core.base.GroupByMixin"
  ],
  "type": "function"
 },
 "pandas.core.window._GroupByMixin._apply": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._GroupByMixin._apply.f": {
  "lineno": 713,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.core.window._Rolling._apply": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.apply_along_axis",
   "numpy.array",
   "numpy.errstate",
   "pandas._libs.window",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling._apply.calc": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling._apply.func": {
  "lineno": 781,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._ensure_float64"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling._constructor": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding": {
  "lineno": 817,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window._Rolling_and_Expanding.apply": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.apply.f": {
  "lineno": 856,
  "symbols_in_volume": [
   "pandas._libs.window.roll_generic"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.corr": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.corr._get_corr": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.count": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.cov": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.cov._get_cov": {
  "lineno": 1023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.kurt": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.max": {
  "lineno": 877,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.mean": {
  "lineno": 898,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.median": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.min": {
  "lineno": 892,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.quantile": {
  "lineno": 973,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.quantile.f": {
  "lineno": 977,
  "symbols_in_volume": [
   "pandas._libs.window.roll_max",
   "pandas._libs.window.roll_min",
   "pandas._libs.window.roll_quantile"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.skew": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.std": {
  "lineno": 925,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.std.f": {
  "lineno": 930,
  "symbols_in_volume": [
   "pandas._libs.window.roll_var"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.sum": {
  "lineno": 864,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Rolling_and_Expanding.var": {
  "lineno": 947,
  "symbols_in_volume": [
   "pandas.compat.numpy.function.validate_window_func"
  ],
  "type": "function"
 },
 "pandas.core.window._Window": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject",
   "pandas.core.base.SelectionMixin",
   "pandas.core.generic._shared_docs",
   "textwrap.dedent"
  ],
  "type": "class"
 },
 "pandas.core.window._Window.__getattr__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.window._Window.__unicode__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._center_window": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.copy",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.window._Window._constructor": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._convert_freq": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.core.window._Window._create_blocks": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._dir_additions": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._get_index": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._get_window": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._gotitem": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.core.window._Window._on": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._prep_values": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isinf",
   "pandas.core.dtypes.common._ensure_float64",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.core.window._Window._window_type": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window._wrap_result": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.core.window._Window._wrap_results": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.core.window._Window.aggregate": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window.is_datetimelike": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window.is_freq_type": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._Window.validate": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.window._flex_binary_moment": {
  "lineno": 1875,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.Panel.from_dict",
   "pandas.concat",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.core.window._flex_binary_moment.dataframe_from_int_dict": {
  "lineno": 1890,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.core.window._get_center_of_mass": {
  "lineno": 1977,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "pandas.core.common._count_not_none"
  ],
  "type": "function"
 },
 "pandas.core.window._offset": {
  "lineno": 2006,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.core.window._prep_binary": {
  "lineno": 2048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._require_min_periods": {
  "lineno": 2016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._require_min_periods._check_func": {
  "lineno": 2017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._use_window": {
  "lineno": 2026,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.core.window._zsqrt": {
  "lineno": 2033,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.sqrt",
   "pandas.core.dtypes.generic.ABCDataFrame"
  ],
  "type": "function"
 },
 "pandas.core.window.ewm": {
  "lineno": 2085,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.window.expanding": {
  "lineno": 2075,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.core.window.rolling": {
  "lineno": 2062,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.errors.DtypeWarning": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.EmptyDataError": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.MergeError": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.ParserError": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.ParserWarning": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.PerformanceWarning": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.UnsortedIndexError": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.errors.UnsupportedFunctionCall": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.formats.style": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.api.Term": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.io.pytables.Term",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.clipboard": {
  "lineno": null,
  "symbols_in_volume": [
   "os.getenv",
   "platform.system"
  ],
  "type": "module"
 },
 "pandas.io.clipboard._executable_exists": {
  "lineno": 44,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.call"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard.copy_gtk": {
  "lineno": 30,
  "symbols_in_volume": [
   "gtk.Clipboard"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_gtk_clipboard.paste_gtk": {
  "lineno": 36,
  "symbols_in_volume": [
   "gtk.Clipboard"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard.copy_klipper": {
  "lineno": 96,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_klipper_clipboard.paste_klipper": {
  "lineno": 103,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__bool__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__call__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_no_clipboard.ClipboardUnavailable.__nonzero__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard.copy_osx": {
  "lineno": 13,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_osx_clipboard.paste_osx": {
  "lineno": 18,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard": {
  "lineno": 47,
  "symbols_in_volume": [
   "PyQt4.QtGui.QApplication",
   "PyQt4.QtGui.QApplication.instance"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard.copy_qt": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_qt_clipboard.paste_qt": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard.copy_xclip": {
  "lineno": 66,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xclip_clipboard.paste_xclip": {
  "lineno": 71,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard.copy_xsel": {
  "lineno": 81,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.clipboards.init_xsel_clipboard.paste_xsel": {
  "lineno": 86,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.determine_clipboard": {
  "lineno": 49,
  "symbols_in_volume": [
   "os.name",
   "platform.system"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.clipboard.exceptions.PyperclipException": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.clipboard.exceptions.PyperclipWindowsException": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.clipboard.exceptions.PyperclipWindowsException.__init__": {
  "lineno": 10,
  "symbols_in_volume": [
   "ctypes.WinError"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.set_clipboard": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.windows": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.clipboard.windows.CheckedCall": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.clipboard.windows.CheckedCall.__call__": {
  "lineno": 16,
  "symbols_in_volume": [
   "ctypes.get_errno"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.windows.CheckedCall.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.windows.CheckedCall.__setattr__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard": {
  "lineno": 26,
  "symbols_in_volume": [
   "ctypes.c_size_t",
   "ctypes.windll",
   "ctypes.wintypes.BOOL",
   "ctypes.wintypes.DWORD",
   "ctypes.wintypes.HANDLE",
   "ctypes.wintypes.HGLOBAL",
   "ctypes.wintypes.HINSTANCE",
   "ctypes.wintypes.HMENU",
   "ctypes.wintypes.HWND",
   "ctypes.wintypes.INT",
   "ctypes.wintypes.LPCSTR",
   "ctypes.wintypes.LPVOID",
   "ctypes.wintypes.UINT"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.clipboard": {
  "lineno": 90,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.copy_windows": {
  "lineno": 114,
  "symbols_in_volume": [
   "ctypes.c_wchar",
   "ctypes.c_wchar_p",
   "ctypes.memmove",
   "ctypes.sizeof"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.paste_windows": {
  "lineno": 142,
  "symbols_in_volume": [
   "ctypes.c_wchar_p"
  ],
  "type": "function"
 },
 "pandas.io.clipboard.windows.init_windows_clipboard.window": {
  "lineno": 76,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.io.clipboards": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.clipboards.read_clipboard": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.compat.bytes_to_str",
   "pandas.get_option",
   "pandas.io.clipboard.clipboard_get",
   "pandas.io.parsers.read_table"
  ],
  "type": "function"
 },
 "pandas.io.clipboards.to_clipboard": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY2",
   "pandas.compat.StringIO",
   "pandas.io.clipboard.clipboard_set",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.io.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.errors.ParserError",
   "urllib.request.urlopen",
   "urlparse.uses_netloc",
   "urlparse.uses_params",
   "urlparse.uses_relative"
  ],
  "type": "module"
 },
 "pandas.io.common.BaseIterator": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.common.BaseIterator.__iter__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.BaseIterator.__next__": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.common.MMapWrapper": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.common.MMapWrapper.__getattr__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__init__": {
  "lineno": 434,
  "symbols_in_volume": [
   "mmap.ACCESS_READ",
   "mmap.mmap"
  ],
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__iter__": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.MMapWrapper.__next__": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.bytes_to_str"
  ],
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.common.UTF8Recoder.__init__": {
  "lineno": 470,
  "symbols_in_volume": [
   "codecs.getreader"
  ],
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.next": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.read": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.readline": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.UnicodeReader": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.common.UnicodeReader.__init__": {
  "lineno": 501,
  "symbols_in_volume": [
   "csv.excel",
   "csv.reader"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeReader.__next__": {
  "lineno": 505,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.common.UnicodeWriter.__init__": {
  "lineno": 516,
  "symbols_in_volume": [
   "codecs.getincrementalencoder",
   "csv.excel",
   "csv.writer",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow": {
  "lineno": 524,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow._check_as_is": {
  "lineno": 525,
  "symbols_in_volume": [
   "csv.QUOTE_NONNUMERIC",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows._check_as_is": {
  "lineno": 544,
  "symbols_in_volume": [
   "csv.QUOTE_NONNUMERIC",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.io.common._expand_user": {
  "lineno": 102,
  "symbols_in_volume": [
   "os.path.expanduser",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.common._get_handle": {
  "lineno": 291,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "bz2.decompress",
   "gzip.GzipFile",
   "gzip.open",
   "io.TextIOWrapper",
   "pandas.compat.BytesIO",
   "pandas.compat.PY2",
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.compat.import_lzma",
   "pandas.compat.string_types",
   "s3fs.S3File",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pandas.io.common._infer_compression": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.common._is_s3_url": {
  "lineno": 94,
  "symbols_in_volume": [
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "pandas.io.common._is_url": {
  "lineno": 76,
  "symbols_in_volume": [
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "pandas.io.common._stringify_path": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pathlib.Path",
   "py.path.local"
  ],
  "type": "function"
 },
 "pandas.io.common._validate_header_arg": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.common.file_path_to_url": {
  "lineno": 216,
  "symbols_in_volume": [
   "urllib.pathname2url",
   "urlparse.urljoin"
  ],
  "type": "function"
 },
 "pandas.io.common.get_filepath_or_buffer": {
  "lineno": 171,
  "symbols_in_volume": [
   "mmap.mmap",
   "pandas.compat.BytesIO",
   "pandas.compat.binary_type",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_file_like",
   "pandas.io.s3.get_filepath_or_buffer",
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "pandas.io.common.urlopen": {
  "lineno": 50,
  "symbols_in_volume": [
   "contextlib.closing",
   "contextlib.contextmanager",
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "pandas.io.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.date_converters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.date_converters._check_columns": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.io.date_converters._maybe_cast": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.io.date_converters.generic_parser": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.date_converters.parse_all_fields": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing.try_parse_datetime_components"
  ],
  "type": "function"
 },
 "pandas.io.date_converters.parse_date_fields": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing.try_parse_year_month_day"
  ],
  "type": "function"
 },
 "pandas.io.date_converters.parse_date_time": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing.try_parse_date_and_time"
  ],
  "type": "function"
 },
 "pandas.io.excel": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.io.common._NA_VALUES",
   "textwrap.fill"
  ],
  "type": "module"
 },
 "pandas.io.excel.ExcelFile": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel.ExcelFile.__enter__": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__exit__": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__fspath__": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__init__": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.compat.string_types",
   "pandas.io.common._is_url",
   "pandas.io.common._stringify_path",
   "pandas.io.common._urlopen",
   "pandas.io.common.get_filepath_or_buffer",
   "xlrd.Book",
   "xlrd.__VERSION__",
   "xlrd.__VERSION__.split",
   "xlrd.open_workbook"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel": {
  "lineno": 362,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.compat.OrderedDict",
   "pandas.compat.OrderedDict.fromkeys",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.frame.DataFrame",
   "pandas.errors.EmptyDataError",
   "pandas.io.common._validate_header_arg",
   "pandas.io.parsers.TextParser",
   "warnings.warn",
   "xlrd.__VERSION__"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel._parse_cell": {
  "lineno": 390,
  "symbols_in_volume": [
   "datetime.MINYEAR",
   "datetime.datetime",
   "datetime.time",
   "numpy.nan",
   "xlrd.XL_CELL_BOOLEAN",
   "xlrd.XL_CELL_DATE",
   "xlrd.XL_CELL_ERROR",
   "xlrd.XL_CELL_NUMBER",
   "xlrd.xldate.XLDateTooLarge",
   "xlrd.xldate.xldate_as_datetime",
   "xlrd.xldate.xldate_as_tuple"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse": {
  "lineno": 329,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols._excel2num": {
  "lineno": 341,
  "symbols_in_volume": [
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.close": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.parse": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.sheet_names": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter": {
  "lineno": 660,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "pandas.compat.add_metaclass"
  ],
  "type": "class"
 },
 "pandas.io.excel.ExcelWriter.__enter__": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__exit__": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__fspath__": {
  "lineno": 794,
  "symbols_in_volume": [
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__init__": {
  "lineno": 771,
  "symbols_in_volume": [
   "os.path.splitext",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__new__": {
  "lineno": 706,
  "symbols_in_volume": [
   "os.path.splitext",
   "pandas.compat.string_types",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter._get_sheet_name": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.check_extension": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.close": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.engine": {
  "lineno": 740,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.save": {
  "lineno": 764,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.supported_extensions": {
  "lineno": 735,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.write_cells": {
  "lineno": 745,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._Openpyxl1Writer.__init__": {
  "lineno": 836,
  "symbols_in_volume": [
   "openpyxl.workbook.Workbook",
   "pandas.compat.openpyxl_compat.is_compat"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer._convert_to_style": {
  "lineno": 930,
  "symbols_in_volume": [
   "openpyxl.style.Style"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.save": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.write_cells": {
  "lineno": 864,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "openpyxl.cell.get_column_letter",
   "pandas.compat.range",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_alignment": {
  "lineno": 1307,
  "symbols_in_volume": [
   "openpyxl.styles.Alignment"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_border": {
  "lineno": 1264,
  "symbols_in_volume": [
   "openpyxl.styles.Border"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_color": {
  "lineno": 1072,
  "symbols_in_volume": [
   "openpyxl.styles.Color"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_fill": {
  "lineno": 1165,
  "symbols_in_volume": [
   "openpyxl.styles.GradientFill",
   "openpyxl.styles.PatternFill"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_font": {
  "lineno": 1100,
  "symbols_in_volume": [
   "openpyxl.styles.Font"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_number_format": {
  "lineno": 1330,
  "symbols_in_volume": [
   "openpyxl.styles.NumberFormat"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_protection": {
  "lineno": 1352,
  "symbols_in_volume": [
   "openpyxl.styles.Protection"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_side": {
  "lineno": 1229,
  "symbols_in_volume": [
   "openpyxl.styles.Side"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_stop": {
  "lineno": 1148,
  "symbols_in_volume": [
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer.write_cells": {
  "lineno": 969,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "openpyxl.cell.get_column_letter",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.excel._Openpyxl22Writer": {
  "lineno": 1374,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._Openpyxl22Writer.write_cells": {
  "lineno": 1381,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.excel._OpenpyxlWriter": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter": {
  "lineno": 1581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter.__init__": {
  "lineno": 1585,
  "symbols_in_volume": [
   "xlsxwriter.Workbook"
  ],
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter._convert_to_style": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.save": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.write_cells": {
  "lineno": 1604,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas._libs.json.dumps"
  ],
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter": {
  "lineno": 1449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.excel._XlwtWriter.__init__": {
  "lineno": 1453,
  "symbols_in_volume": [
   "xlwt.Workbook",
   "xlwt.easyxf"
  ],
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._convert_to_style": {
  "lineno": 1556,
  "symbols_in_volume": [
   "xlwt.XFStyle",
   "xlwt.easyxf"
  ],
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._style_to_xlwt": {
  "lineno": 1520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.save": {
  "lineno": 1465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.write_cells": {
  "lineno": 1471,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas._libs.json.dumps"
  ],
  "type": "function"
 },
 "pandas.io.excel._conv_value": {
  "lineno": 644,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.io.excel._fill_mi_header": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.excel._get_default_writer": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._pop_header_name": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.io.excel._trim_excel_header": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel._validate_freeze_panes": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.excel.get_writer": {
  "lineno": 187,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "openpyxl.__version__"
  ],
  "type": "function"
 },
 "pandas.io.excel.read_excel": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.deprecate_kwarg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.excel.register_writer": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandas.compat.callable",
   "pandas.core.config.register_option"
  ],
  "type": "function"
 },
 "pandas.io.feather_format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.feather_format._try_import": {
  "lineno": 9,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "feather",
   "feather.__version__"
  ],
  "type": "function"
 },
 "pandas.io.feather_format.read_feather": {
  "lineno": 86,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "feather",
   "feather.__version__",
   "feather.read_dataframe",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.feather_format.to_feather": {
  "lineno": 37,
  "symbols_in_volume": [
   "feather",
   "feather.write_dataframe",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.RangeIndex.from_range",
   "pandas.compat.range",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.common.get_level_lengths": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.console": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.console.detect_console_encoding": {
  "lineno": 14,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "sys.getdefaultencoding",
   "sys.stdin.encoding",
   "sys.stdout.encoding"
  ],
  "type": "function"
 },
 "pandas.io.formats.console.get_console_size": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.core.common.in_interactive_session",
   "pandas.core.common.in_ipython_frontend",
   "pandas.core.config.get_default_val",
   "pandas.get_option",
   "pandas.io.formats.terminal.get_terminal_size"
  ],
  "type": "function"
 },
 "pandas.io.formats.css": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.css.CSSResolver": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.css.CSSResolver.__call__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver._side_expander": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver._side_expander.expand": {
  "lineno": 215,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.atomize": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.parse": {
  "lineno": 234,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.size_to_pt": {
  "lineno": 154,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "pandas.io.formats.css.CSSResolver.size_to_pt._error": {
  "lineno": 155,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.formats.css.CSSWarning": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.excel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.excel.CSSToExcelConverter": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSResolver"
  ],
  "type": "class"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.__call__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter._border_style": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_alignment": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_border": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_fill": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_font": {
  "lineno": 209,
  "symbols_in_volume": [
   "re.findall",
   "re.search"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_xlstyle": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.build_xlstyle.remove_none": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.CSSToExcelConverter.color_to_excel": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelCell": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.excel.ExcelCell.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.excel.ExcelFormatter.__init__": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.Index",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_body": {
  "lineno": 481,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header": {
  "lineno": 465,
  "symbols_in_volume": [
   "itertools.chain",
   "pandas.MultiIndex",
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header_mi": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.io.formats.common.get_level_lengths",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_header_regular": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_hierarchical_rows": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.core.common._any_not_none",
   "pandas.io.formats.common.get_level_lengths"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_regular_rows": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._format_value": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas._libs.lib.checknull",
   "pandas._libs.lib.isneginf_scalar",
   "pandas._libs.lib.isposinf_scalar",
   "pandas.core.dtypes.common.is_float"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter._generate_body": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter.get_formatted_cells": {
  "lineno": 612,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pandas.io.formats.excel.ExcelFormatter.write": {
  "lineno": 618,
  "symbols_in_volume": [
   "pandas.io.common._stringify_path",
   "pandas.io.excel.ExcelWriter"
  ],
  "type": "function"
 },
 "pandas.io.formats.format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.format.CSVFormatter": {
  "lineno": 1524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.CSVFormatter.__init__": {
  "lineno": 1526,
  "symbols_in_volume": [
   "csv.QUOTE_MINIMAL",
   "csv.QUOTE_NONE",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.io.common._expand_user",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CSVFormatter._save": {
  "lineno": 1738,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CSVFormatter._save_chunk": {
  "lineno": 1756,
  "symbols_in_volume": [
   "pandas._libs.lib.write_csv_rows",
   "pandas.compat.range",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CSVFormatter._save_header": {
  "lineno": 1658,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.range",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CSVFormatter.save": {
  "lineno": 1621,
  "symbols_in_volume": [
   "csv.writer",
   "pandas.compat.PY2",
   "pandas.io.common.UnicodeWriter",
   "pandas.io.common._get_handle"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalArrayFormatter": {
  "lineno": 2093,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.CategoricalArrayFormatter.__init__": {
  "lineno": 2095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalArrayFormatter._format_strings": {
  "lineno": 2098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalFormatter": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.CategoricalFormatter.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalFormatter._get_footer": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalFormatter._get_formatted_values": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.CategoricalFormatter.to_string": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.DataFrameFormatter.__init__": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.core.config.get_option",
   "pandas.core.index._ensure_index",
   "pandas.io.common._expand_user",
   "pandas.io.common._stringify_path",
   "pandas.io.formats.printing.justify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._chk_truncate": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat",
   "pandas.io.formats.terminal.get_terminal_size"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._format_col": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._get_column_name_list": {
  "lineno": 825,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._get_formatted_column_labels": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.compat.map",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.index.MultiIndex",
   "pandas.core.index._sparsify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._get_formatted_column_labels.space_format": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._get_formatted_index": {
  "lineno": 791,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._join_multiline": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter._to_str_columns": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.max",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter.has_column_names": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter.has_index_names": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter.to_html": {
  "lineno": 710,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter.to_latex": {
  "lineno": 677,
  "symbols_in_volume": [
   "codecs.open",
   "pandas.compat.PY2",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.DataFrameFormatter.to_string": {
  "lineno": 581,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.Datetime64Formatter": {
  "lineno": 2041,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.Datetime64Formatter.__init__": {
  "lineno": 2043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.Datetime64Formatter._format_strings": {
  "lineno": 2048,
  "symbols_in_volume": [
   "pandas._libs.tslib.format_array_from_datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.Datetime64TZFormatter": {
  "lineno": 2225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.Datetime64TZFormatter._format_strings": {
  "lineno": 2227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.EastAsianTextAdjustment": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.EastAsianTextAdjustment.__init__": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.EastAsianTextAdjustment.justify": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.EastAsianTextAdjustment.justify._get_pad": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.EastAsianTextAdjustment.len": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.compat.east_asian_len"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.EngFormatter": {
  "lineno": 2368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.EngFormatter.__call__": {
  "lineno": 2400,
  "symbols_in_volume": [
   "decimal.Decimal",
   "decimal.Decimal.is_infinite",
   "decimal.Decimal.is_nan",
   "math.floor",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.EngFormatter.__init__": {
  "lineno": 2396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter": {
  "lineno": 1893,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.FloatArrayFormatter.__init__": {
  "lineno": 1898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter._format_strings": {
  "lineno": 2025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter._value_formatter": {
  "lineno": 1908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter._value_formatter.base_formatter": {
  "lineno": 1926,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter._value_formatter.decimal_formatter": {
  "lineno": 1930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter._value_formatter.formatter": {
  "lineno": 1938,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.notna"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter.get_result_as_array": {
  "lineno": 1949,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.abs",
   "numpy.array",
   "numpy.errstate",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.FloatArrayFormatter.get_result_as_array.format_values_with": {
  "lineno": 1964,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.GenericArrayFormatter": {
  "lineno": 1825,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.GenericArrayFormatter.__init__": {
  "lineno": 1827,
  "symbols_in_volume": [
   "pandas.io.formats.printing.justify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.GenericArrayFormatter._format_strings": {
  "lineno": 1845,
  "symbols_in_volume": [
   "pandas._libs.lib.map_infer",
   "pandas.core.config.get_option",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.generic.ABCSparseArray",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.index.Index",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.GenericArrayFormatter._format_strings._format": {
  "lineno": 1859,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas._libs.lib.checknull",
   "pandas.core.base.PandasObject"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.GenericArrayFormatter.get_result": {
  "lineno": 1841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.HTMLFormatter.__init__": {
  "lineno": 1072,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_body": {
  "lineno": 1366,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_cell": {
  "lineno": 1108,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_header": {
  "lineno": 1231,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.compat.zip",
   "pandas.core.common.sentinel_factory",
   "pandas.core.index.MultiIndex",
   "pandas.io.formats.common.get_level_lengths",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_header._column_header": {
  "lineno": 1238,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_hierarchical_rows": {
  "lineno": 1421,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.compat.u",
   "pandas.compat.zip",
   "pandas.core.common.sentinel_factory",
   "pandas.io.formats.common.get_level_lengths"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter._write_regular_rows": {
  "lineno": 1391,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write": {
  "lineno": 1093,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write_result": {
  "lineno": 1186,
  "symbols_in_volume": [
   "IPython.__version__",
   "distutils.version.LooseVersion",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.compat.unichr"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write_style": {
  "lineno": 1146,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.core.index.MultiIndex",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write_td": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write_th": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.HTMLFormatter.write_tr": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.IntArrayFormatter": {
  "lineno": 2033,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.IntArrayFormatter._format_strings": {
  "lineno": 2035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.IntervalArrayFormatter": {
  "lineno": 2067,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.IntervalArrayFormatter.__init__": {
  "lineno": 2069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.IntervalArrayFormatter._format_strings": {
  "lineno": 2072,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.LatexFormatter.__init__": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter._format_multicolumn": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter._format_multicolumn.append_col": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter._format_multirow": {
  "lineno": 1030,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter._print_cline": {
  "lineno": 1056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter.write_result": {
  "lineno": 865,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.compat.string_types",
   "pandas.compat.u",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.LatexFormatter.write_result.get_col_type": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.number"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.PeriodArrayFormatter": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.PeriodArrayFormatter._format_strings": {
  "lineno": 2080,
  "symbols_in_volume": [
   "pandas.core.index.Index",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.SeriesFormatter.__init__": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter._chk_truncate": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter._get_footer": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.compat.u",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter._get_formatted_index": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter._get_formatted_values": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.SeriesFormatter.to_string": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.TableFormatter": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.TableFormatter._get_formatter": {
  "lineno": 349,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.TableFormatter.should_show_dimensions": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.TextAdjustment": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.TextAdjustment.__init__": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.TextAdjustment.adjoin": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.io.formats.printing.adjoin"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.TextAdjustment.justify": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.io.formats.printing.justify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.TextAdjustment.len": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.compat.strlen"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.Timedelta64Formatter": {
  "lineno": 2240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.formats.format.Timedelta64Formatter.__init__": {
  "lineno": 2242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.Timedelta64Formatter._format_strings": {
  "lineno": 2247,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._binify": {
  "lineno": 2486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format._format_datetime64": {
  "lineno": 2185,
  "symbols_in_volume": [
   "pandas._libs.lib.checknull",
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._format_datetime64_dateonly": {
  "lineno": 2195,
  "symbols_in_volume": [
   "pandas._libs.lib.checknull",
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._get_adjustment": {
  "lineno": 332,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._get_format_datetime64": {
  "lineno": 2208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format._get_format_datetime64_from_values": {
  "lineno": 2217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format._get_format_timedelta64": {
  "lineno": 2255,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.int64",
   "numpy.logical_and",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._get_format_timedelta64._formatter": {
  "lineno": 2280,
  "symbols_in_volume": [
   "pandas._libs.lib.checknull",
   "pandas._libs.tslib.Timedelta"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._has_names": {
  "lineno": 2361,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._is_dates_only": {
  "lineno": 2169,
  "symbols_in_volume": [
   "numpy.logical_and",
   "pandas._libs.tslib.iNaT",
   "pandas.core.indexes.datetimes.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._make_fixed_width": {
  "lineno": 2294,
  "symbols_in_volume": [
   "numpy.max",
   "pandas.core.config.get_option",
   "pandas.io.formats.printing.justify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._make_fixed_width.just": {
  "lineno": 2311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format._put_lines": {
  "lineno": 2480,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.formats.format._trim_zeros": {
  "lineno": 2322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format._trim_zeros._cond": {
  "lineno": 2328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.format_array": {
  "lineno": 1787,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.common.is_period_arraylike",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.io.formats.printing.justify"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.format_percentiles": {
  "lineno": 2106,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.ediff1d",
   "numpy.empty_like",
   "numpy.errstate",
   "numpy.floor",
   "numpy.log10",
   "numpy.min",
   "numpy.unique",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.set_eng_float_format": {
  "lineno": 2467,
  "symbols_in_volume": [
   "pandas.core.config.set_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.format.single_column_table": {
  "lineno": 2340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.format.single_row_table": {
  "lineno": 2353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.printing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.printing._enable_data_resource_formatter": {
  "lineno": 240,
  "symbols_in_volume": [
   "IPython.get_ipython",
   "sys.modules"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing._enable_data_resource_formatter.TableSchemaFormatter": {
  "lineno": 258,
  "symbols_in_volume": [
   "IPython.core.formatters.BaseFormatter"
  ],
  "type": "class"
 },
 "pandas.io.formats.printing._join_unicode": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing._pprint_dict": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing._pprint_seq": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing.adjoin": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.printing.justify": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.printing.pprint_thing": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.string_types",
   "pandas.compat.text_type",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "pandas.core.dtypes.inference.is_sequence"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing.pprint_thing.as_escaped_unicode": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.formats.printing.pprint_thing_encoded": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.style.Styler": {
  "lineno": 50,
  "symbols_in_volume": [
   "jinja2.Environment",
   "jinja2.PackageLoader"
  ],
  "type": "class"
 },
 "pandas.io.formats.style.Styler.__copy__": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__deepcopy__": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.__init__.default_display_func": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._apply": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._applymap": {
  "lineno": 590,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.IndexSlice",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._background_gradient": {
  "lineno": 877,
  "symbols_in_volume": [
   "matplotlib.colors",
   "matplotlib.colors.Normalize",
   "matplotlib.colors.rgb2hex",
   "matplotlib.pyplot",
   "matplotlib.pyplot.cm.get_cmap"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_center_mid": {
  "lineno": 984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_center_zero": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._bar_left": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._compute": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._copy": {
  "lineno": 466,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_extrema": {
  "lineno": 1145,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_handler": {
  "lineno": 1138,
  "symbols_in_volume": [
   "pandas.core.indexing._maybe_numeric_slice",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._highlight_null": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._repr_html_": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._translate": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.common._any_not_none",
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._translate.format_attr": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler._update_ctx": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.apply": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.applymap": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.background_gradient": {
  "lineno": 840,
  "symbols_in_volume": [
   "pandas.core.indexing._maybe_numeric_slice",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.bar": {
  "lineno": 1030,
  "symbols_in_volume": [
   "pandas.api.types.is_list_like",
   "pandas.core.indexing._maybe_numeric_slice",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.clear": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.export": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.format": {
  "lineno": 330,
  "symbols_in_volume": [
   "collections.MutableMapping",
   "itertools.product",
   "pandas.compat.range",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.from_custom_template": {
  "lineno": 1163,
  "symbols_in_volume": [
   "jinja2.ChoiceLoader",
   "jinja2.FileSystemLoader"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.from_custom_template.MyStyler": {
  "lineno": 1186,
  "symbols_in_volume": [
   "jinja2.Environment"
  ],
  "type": "class"
 },
 "pandas.io.formats.style.Styler.highlight_max": {
  "lineno": 1094,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.highlight_min": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.highlight_null": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.render": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_caption": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_precision": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_properties": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_table_attributes": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_table_styles": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.set_uuid": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.to_excel": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.io.formats.excel.ExcelFormatter",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.use": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style.Styler.where": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style._get_level_lengths": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pandas.core.common.sentinel_factory",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.formats.style._is_visible": {
  "lineno": 1193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.formats.style._maybe_wrap_formatter": {
  "lineno": 1227,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_string_like"
  ],
  "type": "function"
 },
 "pandas.io.formats.style._mpl": {
  "lineno": 42,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "matplotlib.colors",
   "matplotlib.pyplot"
  ],
  "type": "function"
 },
 "pandas.io.formats.terminal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.formats.terminal._get_terminal_size_linux": {
  "lineno": 97,
  "symbols_in_volume": [
   "os.O_RDONLY",
   "os.close",
   "os.ctermid",
   "os.environ",
   "os.open"
  ],
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_linux.ioctl_GWINSZ": {
  "lineno": 98,
  "symbols_in_volume": [
   "fcntl.ioctl",
   "struct.unpack",
   "termios.TIOCGWINSZ"
  ],
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_tput": {
  "lineno": 76,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.io.formats.terminal._get_terminal_size_windows": {
  "lineno": 51,
  "symbols_in_volume": [
   "ctypes.create_string_buffer",
   "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
   "ctypes.windll.kernel32.GetStdHandle",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.formats.terminal.get_terminal_size": {
  "lineno": 23,
  "symbols_in_volume": [
   "platform.system",
   "shutil.get_terminal_size",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.io.gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.gbq._try_import": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas_gbq"
  ],
  "type": "function"
 },
 "pandas.io.gbq.read_gbq": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas_gbq",
   "pandas_gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas.io.gbq.to_gbq": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas_gbq",
   "pandas_gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas.io.html": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.binary_type",
   "pandas.compat.string_types",
   "re.compile"
  ],
  "type": "module"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser.__init__": {
  "lineno": 398,
  "symbols_in_volume": [
   "bs4.SoupStrainer"
  ],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._build_doc": {
  "lineno": 453,
  "symbols_in_volume": [
   "bs4.BeautifulSoup"
  ],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tables": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tbody": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_td": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tfoot": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_th": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_thead": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tr": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._setup_build_doc": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._text_getter": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.html._HtmlFrameParser.__init__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_doc": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_table": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_data": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tbody": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tfoot": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_thead": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tables": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tbody": {
  "lineno": 310,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_td": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tfoot": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_thead": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tr": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._text_getter": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser.parse_tables": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.html._LxmlFrameParser.__init__": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._build_doc": {
  "lineno": 536,
  "symbols_in_volume": [
   "lxml.etree.XMLSyntaxError",
   "lxml.html.HTMLParser",
   "lxml.html.fromstring",
   "lxml.html.parse",
   "pandas.io.common._is_url",
   "pandas.io.common.parse_url"
  ],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_tfoot": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_thead": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tables": {
  "lineno": 516,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tbody": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_td": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tfoot": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_thead": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tr": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._text_getter": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._build_xpath_expr": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.html._data_to_frame": {
  "lineno": 629,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.io.parsers.TextParser"
  ],
  "type": "function"
 },
 "pandas.io.html._expand_elements": {
  "lineno": 619,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.io.html._get_skiprows": {
  "lineno": 91,
  "symbols_in_volume": [
   "numbers.Integral",
   "pandas.compat.lrange",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.io.html._importers": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._parse": {
  "lineno": 732,
  "symbols_in_volume": [
   "pandas.compat.raise_with_traceback",
   "pandas.errors.EmptyDataError",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.io.html._parser_dispatch": {
  "lineno": 654,
  "symbols_in_volume": [
   "bs4.__version__",
   "distutils.version.LooseVersion"
  ],
  "type": "function"
 },
 "pandas.io.html._print_as_set": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.html._read": {
  "lineno": 119,
  "symbols_in_volume": [
   "os.path.isfile",
   "pandas.io.common._is_url",
   "pandas.io.common.urlopen"
  ],
  "type": "function"
 },
 "pandas.io.html._remove_whitespace": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.html._validate_flavor": {
  "lineno": 705,
  "symbols_in_volume": [
   "collections.Iterable",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.html.read_html": {
  "lineno": 760,
  "symbols_in_volume": [
   "numbers.Integral",
   "pandas.io.common._validate_header_arg"
  ],
  "type": "function"
 },
 "pandas.io.json": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.json.json": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.json.dumps",
   "pandas._libs.json.loads"
  ],
  "type": "module"
 },
 "pandas.io.json.json.FrameParser": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.FrameParser._parse_no_numpy": {
  "lineno": 786,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._parse_numpy": {
  "lineno": 761,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._process_converter": {
  "lineno": 808,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_dates": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_dates.is_ok": {
  "lineno": 850,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.json.json.FrameParser._try_convert_types": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.FrameWriter": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.FrameWriter._format_axes": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.JSONTableWriter": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.JSONTableWriter.__init__": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.core.dtypes.common.is_period_dtype"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JSONTableWriter.write": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.json.json.JsonReader.__init__": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy",
   "pandas.io.parsers._validate_integer"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader.__next__": {
  "lineno": 504,
  "symbols_in_volume": [
   "itertools.islice"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader._combine_lines": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader._get_data_from_filepath": {
  "lineno": 421,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.string_types",
   "pandas.io.common._get_handle"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader._get_object_parser": {
  "lineno": 471,
  "symbols_in_volume": [
   "pandas._libs.json"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader._preprocess_data": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader.close": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.JsonReader.read": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.compat.to_str",
   "pandas.core.reshape.concat.concat"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "class"
 },
 "pandas.io.json.json.Parser.__init__": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy",
   "pandas._libs.json"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser._convert_axes": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_data": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_dates": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_to_date": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.number",
   "pandas._libs.tslib.iNaT",
   "pandas.isna",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser._try_convert_types": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser.check_keys_split": {
  "lineno": 560,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Parser.parse": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "pandas.io.json.json.SeriesParser": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.SeriesParser._parse_no_numpy": {
  "lineno": 715,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.json",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.json.json.SeriesParser._parse_numpy": {
  "lineno": 730,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.json",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.json.json.SeriesParser._try_convert_types": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.SeriesWriter": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.SeriesWriter._format_axes": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.Writer": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.json.json.Writer.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.Writer._format_axes": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.json.json.Writer.write": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.json.read_json": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy",
   "pandas.io.common._infer_compression",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.json.json.to_json": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.io.common._get_handle",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.json.normalize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.json.normalize._convert_to_line_delimits": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas._libs.lib.convert_json_to_lines"
  ],
  "type": "function"
 },
 "pandas.io.json.normalize.json_normalize": {
  "lineno": 94,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.compat.itervalues",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.json.normalize.json_normalize._pull_field": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.normalize.json_normalize._recursive_extract": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.io.json.normalize.nested_to_record": {
  "lineno": 24,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.json.table_schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.json.table_schema.as_json_table_type": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_numeric_dtype",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.common.is_string_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "pandas.io.json.table_schema.build_table_schema": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.json.table_schema.make_field": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_period_dtype"
  ],
  "type": "function"
 },
 "pandas.io.json.table_schema.set_default_names": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.core.common._all_not_none"
  ],
  "type": "function"
 },
 "pandas.io.msgpack": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.io.msgpack._unpacker.unpack",
   "pandas.io.msgpack._unpacker.unpackb"
  ],
  "type": "module"
 },
 "pandas.io.msgpack.ExtType": {
  "lineno": 9,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pandas.io.msgpack.ExtType.__new__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.msgpack._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.msgpack.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.msgpack.exceptions.BufferFull": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.ExtraData": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.ExtraData.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.msgpack.exceptions.ExtraData.__str__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.msgpack.exceptions.OutOfData": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.PackException": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.PackValueError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.UnpackException": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.exceptions.UnpackValueError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.msgpack.pack": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.io.msgpack._packer.Packer"
  ],
  "type": "function"
 },
 "pandas.io.msgpack.packb": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.io.msgpack._packer.Packer"
  ],
  "type": "function"
 },
 "pandas.io.packers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy",
   "numpy.dtype",
   "numpy.float128",
   "numpy.float32",
   "numpy.float64",
   "pandas.compat.u",
   "textwrap.dedent"
  ],
  "type": "module"
 },
 "pandas.io.packers.Iterator": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.packers.Iterator.__init__": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.packers.Iterator.__iter__": {
  "lineno": 758,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.BytesIO",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.packers.Packer": {
  "lineno": 715,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer"
  ],
  "type": "class"
 },
 "pandas.io.packers.Packer.__init__": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer"
  ],
  "type": "function"
 },
 "pandas.io.packers.Unpacker": {
  "lineno": 731,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "class"
 },
 "pandas.io.packers.Unpacker.__init__": {
  "lineno": 733,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.io.packers._check_blosc": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.packers._check_zlib": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.packers.c2f": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.typeDict"
  ],
  "type": "function"
 },
 "pandas.io.packers.convert": {
  "lineno": 261,
  "symbols_in_volume": [
   "blosc.compress",
   "numpy.object_",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.io.msgpack.ExtType",
   "zlib.compress"
  ],
  "type": "function"
 },
 "pandas.io.packers.decode": {
  "lineno": 546,
  "symbols_in_volume": [
   "datetime.timedelta",
   "dateutil.parser.parse",
   "numpy.datetime64",
   "numpy.int64",
   "numpy.timedelta64",
   "numpy.typeDict",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.io.packers.decode.create_block": {
  "lineno": 613,
  "symbols_in_volume": [
   "pandas.core.internals",
   "pandas.core.internals._safe_reshape",
   "pandas.core.internals.make_block"
  ],
  "type": "function"
 },
 "pandas.io.packers.dtype_for": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.typeDict.get"
  ],
  "type": "function"
 },
 "pandas.io.packers.encode": {
  "lineno": 360,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "numpy.iscomplexobj",
   "numpy.ndarray",
   "numpy.number",
   "numpy.timedelta64",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.u",
   "pandas.compat.u_safe",
   "pandas.core.generic.NDFrame",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.io.packers.pack": {
  "lineno": 683,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer"
  ],
  "type": "function"
 },
 "pandas.io.packers.read_msgpack": {
  "lineno": 163,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.BytesIO",
   "pandas.compat.binary_type",
   "pandas.compat.callable",
   "pandas.compat.string_types",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.packers.read_msgpack.read": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.packers.to_msgpack": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.string_types",
   "pandas.compat.u",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.packers.to_msgpack.writer": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.packers.unconvert": {
  "lineno": 302,
  "symbols_in_volume": [
   "blosc.decompress",
   "numpy.array",
   "numpy.frombuffer",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.errors.PerformanceWarning",
   "pandas.io.msgpack.ExtType",
   "pandas.util._move.BadMove",
   "pandas.util._move.move_into_mutable_buffer",
   "warnings.warn",
   "zlib.decompress"
  ],
  "type": "function"
 },
 "pandas.io.packers.unpack": {
  "lineno": 697,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.io.parquet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.parquet.BaseImpl": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parquet.BaseImpl.read": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.parquet.BaseImpl.validate_dataframe": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parquet.BaseImpl.write": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.parquet.FastParquetImpl": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parquet.FastParquetImpl.__init__": {
  "lineno": 168,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "fastparquet",
   "fastparquet.__version__"
  ],
  "type": "function"
 },
 "pandas.io.parquet.FastParquetImpl.read": {
  "lineno": 202,
  "symbols_in_volume": [
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.parquet.FastParquetImpl.write": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.io.common.get_filepath_or_buffer",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.io.parquet.PyArrowImpl": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parquet.PyArrowImpl.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pyarrow",
   "pyarrow.__version__"
  ],
  "type": "function"
 },
 "pandas.io.parquet.PyArrowImpl._validate_write_lt_070": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.core.indexes.multi.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.io.parquet.PyArrowImpl.read": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.parquet.PyArrowImpl.write": {
  "lineno": 105,
  "symbols_in_volume": [
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.parquet.get_engine": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.get_option"
  ],
  "type": "function"
 },
 "pandas.io.parquet.read_parquet": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parquet.to_parquet": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers": {
  "lineno": null,
  "symbols_in_volume": [
   "csv.QUOTE_MINIMAL",
   "pandas.compat.u",
   "pandas.io.common._NA_VALUES",
   "pandas.util._decorators.Appender",
   "textwrap.fill"
  ],
  "type": "module"
 },
 "pandas.io.parsers.CParserWrapper": {
  "lineno": 1672,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parsers.CParserWrapper.__init__": {
  "lineno": 1677,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.io.common.UTF8Recoder"
  ],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper._filter_usecols": {
  "lineno": 1924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper._get_index_names": {
  "lineno": 1932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper._maybe_parse_dates": {
  "lineno": 1942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper._set_noconvert_columns": {
  "lineno": 1780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper._set_noconvert_columns._set": {
  "lineno": 1802,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper.close": {
  "lineno": 1770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper.read": {
  "lineno": 1837,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.core.index._ensure_index_from_sequences"
  ],
  "type": "function"
 },
 "pandas.io.parsers.CParserWrapper.set_error_bad_lines": {
  "lineno": 1834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthFieldParser": {
  "lineno": 3403,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parsers.FixedWidthFieldParser.__init__": {
  "lineno": 3409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthFieldParser._make_reader": {
  "lineno": 3414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthReader": {
  "lineno": 3305,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.parsers.FixedWidthReader.__init__": {
  "lineno": 3310,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthReader.__next__": {
  "lineno": 3389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthReader.detect_colspecs": {
  "lineno": 3369,
  "symbols_in_volume": [
   "numpy.roll",
   "numpy.where",
   "numpy.zeros",
   "pandas.compat.map",
   "pandas.compat.zip",
   "pandas.errors.EmptyDataError",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.io.parsers.FixedWidthReader.get_rows": {
  "lineno": 3332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parsers.ParserBase.__init__": {
  "lineno": 1221,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.map",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._agg_index": {
  "lineno": 1487,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index_from_sequences"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._cast_types": {
  "lineno": 1621,
  "symbols_in_volume": [
   "pandas.core.categorical.Categorical._from_inferred_categories",
   "pandas.core.dtypes.cast.astype_nansafe",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._convert_to_ndarrays": {
  "lineno": 1516,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.uint8",
   "pandas._libs.lib.downcast_int64",
   "pandas._libs.lib.map_infer",
   "pandas._libs.lib.map_infer_mask",
   "pandas._libs.parsers.na_values",
   "pandas.compat.iteritems",
   "pandas.core.algorithms.isin",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.is_string_dtype",
   "pandas.errors.ParserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._do_date_conversions": {
  "lineno": 1661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._extract_multi_indexer_columns": {
  "lineno": 1318,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.errors.ParserError"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._extract_multi_indexer_columns.extract": {
  "lineno": 1344,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._extract_multi_indexer_columns.tostr": {
  "lineno": 1350,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._get_complex_date_index": {
  "lineno": 1457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._get_complex_date_index._get_name": {
  "lineno": 1458,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._get_simple_index": {
  "lineno": 1434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._get_simple_index.ix": {
  "lineno": 1435,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._has_complex_date_col": {
  "lineno": 1294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._infer_types": {
  "lineno": 1574,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.float64",
   "numpy.nan",
   "numpy.number",
   "numpy.object_",
   "numpy.putmask",
   "pandas._libs.lib.maybe_convert_bool",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas._libs.lib.sanitize_objects",
   "pandas.core.algorithms.isin",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._make_index": {
  "lineno": 1406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._maybe_dedup_names": {
  "lineno": 1374,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._maybe_make_multi_index_columns": {
  "lineno": 1398,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase._should_parse_dates": {
  "lineno": 1301,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.io.parsers.ParserBase.close": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser": {
  "lineno": 2010,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.parsers.PythonParser.__init__": {
  "lineno": 2012,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.io.common._get_handle",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._alert_malformed": {
  "lineno": 2669,
  "symbols_in_volume": [
   "pandas.errors.ParserError",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._buffered_line": {
  "lineno": 2532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._check_comments": {
  "lineno": 2729,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._check_decimal": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._check_for_bom": {
  "lineno": 2541,
  "symbols_in_volume": [
   "pandas.compat.PY2",
   "pandas.compat.string_types",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._check_thousands": {
  "lineno": 2772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._clear_buffer": {
  "lineno": 2804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._convert_data": {
  "lineno": 2300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._convert_data._clean_mapping": {
  "lineno": 2302,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._exclude_implicit_index": {
  "lineno": 2277,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._get_index_name": {
  "lineno": 2809,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._get_lines": {
  "lineno": 2935,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._handle_usecols": {
  "lineno": 2505,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._infer_columns": {
  "lineno": 2353,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.ndarray",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.errors.EmptyDataError"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._is_line_empty": {
  "lineno": 2602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._make_reader": {
  "lineno": 2165,
  "symbols_in_volume": [
   "csv.Sniffer",
   "csv.reader",
   "pandas.compat.StringIO",
   "pandas.io.common.UnicodeReader"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._make_reader.MyDialect": {
  "lineno": 2173,
  "symbols_in_volume": [
   "csv.Dialect"
  ],
  "type": "class"
 },
 "pandas.io.parsers.PythonParser._make_reader._read": {
  "lineno": 2220,
  "symbols_in_volume": [
   "pandas.compat.PY2",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._next_iter_line": {
  "lineno": 2690,
  "symbols_in_volume": [
   "csv.Error"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._next_line": {
  "lineno": 2617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._remove_empty_lines": {
  "lineno": 2747,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._rows_to_cols": {
  "lineno": 2872,
  "symbols_in_volume": [
   "csv.QUOTE_NONE",
   "pandas._libs.lib.to_object_array"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._search_replace_num_columns": {
  "lineno": 2780,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._set_no_thousands_columns": {
  "lineno": 2129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._set_no_thousands_columns._set": {
  "lineno": 2134,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser._to_recarray": {
  "lineno": 2340,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.OrderedDict",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser.get_chunk": {
  "lineno": 2295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.PythonParser.read": {
  "lineno": 2234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader": {
  "lineno": 744,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.parsers.TextFileReader.__init__": {
  "lineno": 751,
  "symbols_in_volume": [
   "csv.get_dialect",
   "csv.list_dialects",
   "pandas.errors.ParserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader.__next__": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._check_file_or_buffer": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.io.common.is_file_like"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._clean_options": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.lrange",
   "pandas.compat.text_type",
   "pandas.core.dtypes.common.is_integer",
   "pandas.errors.ParserWarning",
   "pandas.io.common._validate_header_arg",
   "sys.getfilesystemencoding",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._create_index": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._failover_to_python": {
  "lineno": 1061,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._get_options_with_defaults": {
  "lineno": 823,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader._make_engine": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader.close": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader.get_chunk": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.TextFileReader.read": {
  "lineno": 1064,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.compat.next",
   "pandas.core.frame.DataFrame",
   "pandas.core.index.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.io.parsers.TextParser": {
  "lineno": 1948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._clean_index_names": {
  "lineno": 3161,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.parsers._clean_na_values": {
  "lineno": 3130,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.io.common._NA_VALUES"
  ],
  "type": "function"
 },
 "pandas.io.parsers._concat_date_cols": {
  "lineno": 3289,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.PY3",
   "pandas.compat.string_types",
   "pandas.compat.text_type",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.parsers._evaluate_usecols": {
  "lineno": 1113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._floatify_na_values": {
  "lineno": 3230,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.io.parsers._get_col_names": {
  "lineno": 3278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._get_empty_meta": {
  "lineno": 3194,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.object",
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index",
   "pandas.core.index._ensure_index_from_sequences",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.io.parsers._get_na_values": {
  "lineno": 3268,
  "symbols_in_volume": [
   "pandas.io.common._NA_VALUES"
  ],
  "type": "function"
 },
 "pandas.io.parsers._is_index_col": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._make_date_converter": {
  "lineno": 3009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._make_date_converter.converter": {
  "lineno": 3011,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslibs.parsing.try_parse_dates",
   "pandas.core.dtypes.common._ensure_object",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.io.date_converters.generic_parser"
  ],
  "type": "function"
 },
 "pandas.io.parsers._make_parser_function": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._make_parser_function.parser_f": {
  "lineno": 557,
  "symbols_in_volume": [
   "csv.QUOTE_MINIMAL",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.parsers._process_date_conversion": {
  "lineno": 3047,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.io.parsers._process_date_conversion._isindex": {
  "lineno": 3050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._read": {
  "lineno": 423,
  "symbols_in_volume": [
   "pandas.io.common._infer_compression",
   "pandas.io.common.get_filepath_or_buffer",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas.io.parsers._stringify_na_values": {
  "lineno": 3243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._try_convert_dates": {
  "lineno": 3111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers._validate_integer": {
  "lineno": 367,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers._validate_names": {
  "lineno": 397,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.parsers._validate_parse_dates_arg": {
  "lineno": 1198,
  "symbols_in_volume": [
   "pandas._libs.lib.is_bool",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.io.parsers._validate_skipfooter_arg": {
  "lineno": 1127,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.io.parsers._validate_usecols_arg": {
  "lineno": 1158,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.io.parsers.count_empty_vals": {
  "lineno": 2006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.parsers.read_fwf": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.io.pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.pickle._pickle_array": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.lib.format.write_array",
   "numpy.ndarray",
   "pandas.compat.BytesIO"
  ],
  "type": "function"
 },
 "pandas.io.pickle._unpickle_array": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.lib.format.read_array",
   "pandas.compat.BytesIO",
   "pandas.core.dtypes.common._NS_DTYPE",
   "pandas.core.dtypes.common.is_datetime64_dtype"
  ],
  "type": "function"
 },
 "pandas.io.pickle.read_pickle": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.io.common._infer_compression",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.pickle.read_pickle.read_wrapper": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.io.common._get_handle"
  ],
  "type": "function"
 },
 "pandas.io.pickle.read_pickle.try_read": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.compat.cPickle.load",
   "pandas.compat.pickle_compat.load"
  ],
  "type": "function"
 },
 "pandas.io.pickle.to_pickle": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.compat.cPickle.HIGHEST_PROTOCOL",
   "pandas.compat.cPickle.dump",
   "pandas.io.common._get_handle",
   "pandas.io.common._infer_compression",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.pytables": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Panel4D",
   "pandas.Series",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.compat.u_safe",
   "pandas.core.computation.pytables.Expr",
   "pandas.core.config.config_prefix",
   "pandas.core.config.is_bool",
   "pandas.core.config.is_one_of_factory",
   "pandas.core.config.register_option"
  ],
  "type": "module"
 },
 "pandas.io.pytables.AppendableFrameTable": {
  "lineno": 4121,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendableFrameTable.get_object": {
  "lineno": 4133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableFrameTable.is_transposed": {
  "lineno": 4129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableFrameTable.read": {
  "lineno": 4139,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals.make_block"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableMultiFrameTable": {
  "lineno": 4295,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u_safe",
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendableMultiFrameTable.read": {
  "lineno": 4319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableMultiFrameTable.table_type_short": {
  "lineno": 4303,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableMultiFrameTable.write": {
  "lineno": 4307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableMultiSeriesTable": {
  "lineno": 4231,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendableMultiSeriesTable.write": {
  "lineno": 4236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableNDimTable": {
  "lineno": 4350,
  "symbols_in_volume": [
   "pandas.Panel4D",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendablePanelTable": {
  "lineno": 4332,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendablePanelTable.get_object": {
  "lineno": 4339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendablePanelTable.is_transposed": {
  "lineno": 4345,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableSeriesTable": {
  "lineno": 4188,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendableSeriesTable.get_object": {
  "lineno": 4200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableSeriesTable.is_transposed": {
  "lineno": 4196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableSeriesTable.read": {
  "lineno": 4212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableSeriesTable.write": {
  "lineno": 4203,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableTable": {
  "lineno": 3891,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.AppendableTable.delete": {
  "lineno": 4060,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableTable.write": {
  "lineno": 3897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.AppendableTable.write_data": {
  "lineno": 3939,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.prod",
   "numpy.repeat",
   "numpy.roll",
   "numpy.tile",
   "pandas.compat.range",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AppendableTable.write_data_chunk": {
  "lineno": 4014,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.io.pytables.AttributeConflictWarning": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.BlockManagerFixed": {
  "lineno": 2850,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.BlockManagerFixed.read": {
  "lineno": 2885,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals.make_block"
  ],
  "type": "function"
 },
 "pandas.io.pytables.BlockManagerFixed.shape": {
  "lineno": 2854,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.pytables.BlockManagerFixed.write": {
  "lineno": 2911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.ClosedFileError": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.DataCol": {
  "lineno": 1764,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.DataCol.__eq__": {
  "lineno": 1825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.__init__": {
  "lineno": 1803,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.__unicode__": {
  "lineno": 1815,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.convert": {
  "lineno": 2092,
  "symbols_in_volume": [
   "datetime.date.fromordinal",
   "datetime.date.fromtimestamp",
   "datetime.datetime.fromtimestamp",
   "numpy.asarray",
   "numpy.float64",
   "pandas.Index",
   "pandas.compat.u_safe",
   "pandas.core.categorical.Categorical.from_codes",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.create_for_block": {
  "lineno": 1781,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.cvalues": {
  "lineno": 2072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_atom_coltype": {
  "lineno": 1981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_atom_data": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_atom_datetime64": {
  "lineno": 2032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_atom_string": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_atom_timedelta64": {
  "lineno": 2058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.get_attr": {
  "lineno": 2170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom": {
  "lineno": 1879,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_categorical": {
  "lineno": 2007,
  "symbols_in_volume": [
   "pandas.core.internals._block_shape"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_complex": {
  "lineno": 1995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_data": {
  "lineno": 2002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_datetime64": {
  "lineno": 2035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_datetime64tz": {
  "lineno": 2042,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_string": {
  "lineno": 1934,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_atom_timedelta64": {
  "lineno": 2061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_attr": {
  "lineno": 2177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_data": {
  "lineno": 1830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_kind": {
  "lineno": 1851,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.set_metadata": {
  "lineno": 1845,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.shape": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.take_data": {
  "lineno": 1840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataCol.validate_attr": {
  "lineno": 2077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataIndexableCol": {
  "lineno": 2185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.DataIndexableCol.get_atom_data": {
  "lineno": 2197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataIndexableCol.get_atom_datetime64": {
  "lineno": 2200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataIndexableCol.get_atom_string": {
  "lineno": 2194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataIndexableCol.get_atom_timedelta64": {
  "lineno": 2203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.DataIndexableCol.validate_names": {
  "lineno": 2190,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.DuplicateWarning": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.Fixed": {
  "lineno": 2215,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.io.pytables.Fixed.__init__": {
  "lineno": 2232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.__unicode__": {
  "lineno": 2263,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Fixed._complevel": {
  "lineno": 2303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed._complib": {
  "lineno": 2311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed._filters": {
  "lineno": 2299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed._fletcher32": {
  "lineno": 2307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed._handle": {
  "lineno": 2295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.attrs": {
  "lineno": 2315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.copy": {
  "lineno": 2279,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.delete": {
  "lineno": 2368,
  "symbols_in_volume": [
   "pandas.core.common._all_none"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.format_type": {
  "lineno": 2259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.get_attrs": {
  "lineno": 2323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.infer_axes": {
  "lineno": 2350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.is_exists": {
  "lineno": 2332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.is_old_version": {
  "lineno": 2238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.nrows": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.pandas_type": {
  "lineno": 2254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.pathname": {
  "lineno": 2291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.read": {
  "lineno": 2360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.set_attrs": {
  "lineno": 2319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.set_object_info": {
  "lineno": 2273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.set_version": {
  "lineno": 2243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.shape": {
  "lineno": 2287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.storable": {
  "lineno": 2327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.storage_obj_type": {
  "lineno": 2283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.validate": {
  "lineno": 2340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.validate_version": {
  "lineno": 2346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Fixed.write": {
  "lineno": 2364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.FrameFixed": {
  "lineno": 2934,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.GenericDataIndexableCol": {
  "lineno": 2207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.GenericDataIndexableCol.get_attr": {
  "lineno": 2211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed": {
  "lineno": 2380,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.compat.iteritems"
  ],
  "type": "class"
 },
 "pandas.io.pytables.GenericFixed._alias_to_class": {
  "lineno": 2392,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed._class_to_alias": {
  "lineno": 2389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed._get_index_factory": {
  "lineno": 2398,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed._get_index_factory.f": {
  "lineno": 2408,
  "symbols_in_volume": [
   "pandas.PeriodIndex._simple_new"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed._is_empty_array": {
  "lineno": 2636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.get_attrs": {
  "lineno": 2441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.is_exists": {
  "lineno": 2433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_array": {
  "lineno": 2450,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "pandas.compat.u_safe",
   "tables.VLArray"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_block_index": {
  "lineno": 2533,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_index": {
  "lineno": 2483,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_index_node": {
  "lineno": 2590,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_multi_index": {
  "lineno": 2570,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.read_sparse_intindex": {
  "lineno": 2543,
  "symbols_in_volume": [
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.set_attrs": {
  "lineno": 2437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.validate_read": {
  "lineno": 2414,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write": {
  "lineno": 2447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_array": {
  "lineno": 2640,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.errors.PerformanceWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_array_empty": {
  "lineno": 2627,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_block_index": {
  "lineno": 2528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_index": {
  "lineno": 2498,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_multi_index": {
  "lineno": 2548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericFixed.write_sparse_intindex": {
  "lineno": 2539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericIndexCol": {
  "lineno": 1743,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.GenericIndexCol.convert": {
  "lineno": 1751,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.GenericIndexCol.get_attr": {
  "lineno": 1757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericIndexCol.is_indexed": {
  "lineno": 1747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericIndexCol.set_attr": {
  "lineno": 1760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericTable": {
  "lineno": 4246,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.GenericTable.get_attrs": {
  "lineno": 4261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericTable.indexables": {
  "lineno": 4273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericTable.pandas_type": {
  "lineno": 4253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericTable.storable": {
  "lineno": 4257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.GenericTable.write": {
  "lineno": 4291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore": {
  "lineno": 395,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.io.pytables.HDFStore.__contains__": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__delitem__": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__enter__": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__exit__": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__fspath__": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__getattr__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__getitem__": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__init__": {
  "lineno": 442,
  "symbols_in_volume": [
   "pandas.io.common._stringify_path",
   "tables.filters.all_complibs",
   "tables.filters.default_complib"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__iter__": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__len__": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__setitem__": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.__unicode__": {
  "lineno": 514,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._check_if_open": {
  "lineno": 1188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._create_storer": {
  "lineno": 1205,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._create_storer.error": {
  "lineno": 1209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._read_group": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._validate_format": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore._write_to_group": {
  "lineno": 1291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.append": {
  "lineno": 918,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.append_to_multiple": {
  "lineno": 965,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.close": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.copy": {
  "lineno": 1103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.create_table_index": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.filename": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.flush": {
  "lineno": 632,
  "symbols_in_volume": [
   "os.fsync"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.get": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.get_node": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.get_storer": {
  "lineno": 1094,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.groups": {
  "lineno": 1070,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.info": {
  "lineno": 1154,
  "symbols_in_volume": [
   "pandas.io.formats.printing.adjoin",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.is_open": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.items": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.keys": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.open": {
  "lineno": 543,
  "symbols_in_volume": [
   "tables",
   "tables.__version__",
   "tables.get_hdf5_version",
   "tables.open_file"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.put": {
  "lineno": 838,
  "symbols_in_volume": [
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.remove": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.core.common._all_none"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.root": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select.func": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select_as_coordinates": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select_as_multiple": {
  "lineno": 755,
  "symbols_in_volume": [
   "itertools.chain",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select_as_multiple.func": {
  "lineno": 820,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.io.pytables.HDFStore.select_column": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IncompatibilityWarning": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.IndexCol": {
  "lineno": 1462,
  "symbols_in_volume": [
   "pandas.core.base.StringMixin"
  ],
  "type": "class"
 },
 "pandas.io.pytables.IndexCol.__eq__": {
  "lineno": 1540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.__init__": {
  "lineno": 1480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.__iter__": {
  "lineno": 1620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.__ne__": {
  "lineno": 1545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.__unicode__": {
  "lineno": 1530,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.attrs": {
  "lineno": 1602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.col": {
  "lineno": 1610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.convert": {
  "lineno": 1569,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.copy": {
  "lineno": 1556,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.cvalues": {
  "lineno": 1615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.description": {
  "lineno": 1606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.get_attr": {
  "lineno": 1715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.infer": {
  "lineno": 1560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.is_indexed": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.maybe_set_size": {
  "lineno": 1623,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.read_metadata": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_attr": {
  "lineno": 1719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_axis": {
  "lineno": 1513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_info": {
  "lineno": 1709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_name": {
  "lineno": 1504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_pos": {
  "lineno": 1519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.set_table": {
  "lineno": 1526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.take_data": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.update_info": {
  "lineno": 1677,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate": {
  "lineno": 1636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate_and_set": {
  "lineno": 1642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate_attr": {
  "lineno": 1669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate_col": {
  "lineno": 1650,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate_metadata": {
  "lineno": 1727,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.validate_names": {
  "lineno": 1639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.IndexCol.write_metadata": {
  "lineno": 1737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.LegacyFixed": {
  "lineno": 2728,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.LegacyFixed.read_index_legacy": {
  "lineno": 2730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.LegacyFrameFixed": {
  "lineno": 2746,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.LegacyFrameFixed.read": {
  "lineno": 2748,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.io.pytables.LegacyFrameTable": {
  "lineno": 3873,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.LegacyFrameTable.read": {
  "lineno": 3880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.LegacyPanelTable": {
  "lineno": 3884,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.LegacySeriesFixed": {
  "lineno": 2737,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.LegacySeriesFixed.read": {
  "lineno": 2739,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.io.pytables.LegacyTable": {
  "lineno": 3766,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.LegacyTable.read": {
  "lineno": 3785,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.prod",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas._libs.algos.groupsort_indexer",
   "pandas._libs.lib.fast_unique",
   "pandas.concat",
   "pandas.core.algorithms.match",
   "pandas.core.algorithms.unique",
   "pandas.core.categorical._factorize_from_iterables",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals._block2d_to_blocknd",
   "pandas.core.internals._factor_indexer",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.pytables.LegacyTable.write": {
  "lineno": 3782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.PanelFixed": {
  "lineno": 2939,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.PanelFixed.write": {
  "lineno": 2944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.PossibleDataLossError": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.Selection": {
  "lineno": 4649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.Selection.__init__": {
  "lineno": 4662,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.bool_",
   "numpy.integer",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Selection.generate": {
  "lineno": 4708,
  "symbols_in_volume": [
   "pandas.core.computation.pytables.Expr"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Selection.select": {
  "lineno": 4730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Selection.select_coords": {
  "lineno": 4742,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.io.pytables.SeriesFixed": {
  "lineno": 2756,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.SeriesFixed.read": {
  "lineno": 2767,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.io.pytables.SeriesFixed.shape": {
  "lineno": 2760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.SeriesFixed.write": {
  "lineno": 2773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.SparseFixed": {
  "lineno": 2780,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.SparseFixed.validate_read": {
  "lineno": 2782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.SparseFrameFixed": {
  "lineno": 2817,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.SparseFrameFixed.read": {
  "lineno": 2821,
  "symbols_in_volume": [
   "pandas.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.io.pytables.SparseFrameFixed.write": {
  "lineno": 2834,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.io.pytables.SparseSeriesFixed": {
  "lineno": 2793,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.SparseSeriesFixed.read": {
  "lineno": 2797,
  "symbols_in_volume": [
   "pandas.SparseSeries",
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.SparseSeriesFixed.write": {
  "lineno": 2807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table": {
  "lineno": 2949,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.Table.__getitem__": {
  "lineno": 3014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.__init__": {
  "lineno": 2980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.__unicode__": {
  "lineno": 2999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table._get_metadata_path": {
  "lineno": 3136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.axes": {
  "lineno": 3097,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.create_axes": {
  "lineno": 3387,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.array",
   "pandas.Index",
   "pandas.core.dtypes.missing.array_equivalent",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.create_axes.get_blk_items": {
  "lineno": 3494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.create_description": {
  "lineno": 3658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.create_index": {
  "lineno": 3258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.data_orientation": {
  "lineno": 3110,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.description": {
  "lineno": 3093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.dtype": {
  "lineno": 3089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.format_type": {
  "lineno": 2995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.get_attrs": {
  "lineno": 3178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.get_object": {
  "lineno": 3350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.index_cols": {
  "lineno": 3128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.indexables": {
  "lineno": 3229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.indexables.f": {
  "lineno": 3246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.is_exists": {
  "lineno": 3075,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.is_multi_index": {
  "lineno": 3048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.is_transposed": {
  "lineno": 3106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.ncols": {
  "lineno": 3101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.nrows_expected": {
  "lineno": 3070,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.process_axes": {
  "lineno": 3598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.process_axes.process_filter": {
  "lineno": 3619,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.queryables": {
  "lineno": 3116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.read_axes": {
  "lineno": 3327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.read_column": {
  "lineno": 3708,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.read_coordinates": {
  "lineno": 3683,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.read_metadata": {
  "lineno": 3155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.set_attrs": {
  "lineno": 3165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.set_info": {
  "lineno": 3161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.storable": {
  "lineno": 3080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.table": {
  "lineno": 3084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.table_type_short": {
  "lineno": 2991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate": {
  "lineno": 3021,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate_data_columns": {
  "lineno": 3354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate_metadata": {
  "lineno": 3053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate_min_itemsize": {
  "lineno": 3209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate_multiindex": {
  "lineno": 3058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.validate_version": {
  "lineno": 3200,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.pytables.Table.values_cols": {
  "lineno": 3132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.Table.write_metadata": {
  "lineno": 3141,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.io.pytables.TableIterator": {
  "lineno": 1365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.pytables.TableIterator.__init__": {
  "lineno": 1386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.TableIterator.__iter__": {
  "lineno": 1417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.TableIterator.close": {
  "lineno": 1433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.TableIterator.get_result": {
  "lineno": 1437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.WORMTable": {
  "lineno": 3745,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "class"
 },
 "pandas.io.pytables.WORMTable.read": {
  "lineno": 3753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables.WORMTable.write": {
  "lineno": 3758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables._convert_index": {
  "lineno": 4427,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Int64Index",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas._libs.lib.infer_dtype",
   "time.mktime"
  ],
  "type": "function"
 },
 "pandas.io.pytables._convert_string_array": {
  "lineno": 4552,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series",
   "pandas._libs.lib.max_len_string_array",
   "pandas.core.dtypes.common._ensure_object"
  ],
  "type": "function"
 },
 "pandas.io.pytables._ensure_decoded": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.bytes_"
  ],
  "type": "function"
 },
 "pandas.io.pytables._ensure_encoding": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.io.pytables._ensure_str": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.pytables._ensure_term": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.compat.filter",
   "pandas.core.computation.pytables.maybe_expression"
  ],
  "type": "function"
 },
 "pandas.io.pytables._get_converter": {
  "lineno": 4630,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.lib.convert_timestamps"
  ],
  "type": "function"
 },
 "pandas.io.pytables._get_info": {
  "lineno": 4379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables._get_tz": {
  "lineno": 4390,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones.get_timezone"
  ],
  "type": "function"
 },
 "pandas.io.pytables._is_metadata_of": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables._maybe_convert": {
  "lineno": 4622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.pytables._need_convert": {
  "lineno": 4642,
  "symbols_in_volume": [
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables._reindex_axis": {
  "lineno": 4358,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index"
  ],
  "type": "function"
 },
 "pandas.io.pytables._set_tz": {
  "lineno": 4398,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DatetimeIndex",
   "pandas._libs.tslibs.timezones.get_timezone"
  ],
  "type": "function"
 },
 "pandas.io.pytables._tables": {
  "lineno": 243,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "tables",
   "tables.__version__",
   "tables.file._FILE_OPEN_POLICY"
  ],
  "type": "function"
 },
 "pandas.io.pytables._unconvert_index": {
  "lineno": 4512,
  "symbols_in_volume": [
   "datetime.date.fromordinal",
   "datetime.date.fromtimestamp",
   "datetime.datetime.fromtimestamp",
   "numpy.asarray",
   "pandas.DatetimeIndex",
   "pandas.TimedeltaIndex",
   "pandas.compat.u_safe"
  ],
  "type": "function"
 },
 "pandas.io.pytables._unconvert_index_legacy": {
  "lineno": 4539,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.compat.u_safe",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.pytables._unconvert_string_array": {
  "lineno": 4581,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series",
   "pandas._libs.lib.max_len_string_array",
   "pandas._libs.lib.string_array_replace_from_nan_rep",
   "pandas.compat.PY3",
   "pandas.compat.binary_type",
   "pandas.core.dtypes.common._ensure_object"
  ],
  "type": "function"
 },
 "pandas.io.pytables.get_store": {
  "lineno": 1352,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.pytables.read_hdf": {
  "lineno": 286,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.compat.FileNotFoundError",
   "pandas.compat.string_types",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.pytables.timeit": {
  "lineno": 4769,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "pandas.io.pytables.to_hdf": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.io.s3": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "module"
 },
 "pandas.io.s3._strip_schema": {
  "lineno": 15,
  "symbols_in_volume": [
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "pandas.io.s3.get_filepath_or_buffer": {
  "lineno": 21,
  "symbols_in_volume": [
   "botocore.exceptions.NoCredentialsError",
   "s3fs.S3FileSystem"
  ],
  "type": "function"
 },
 "pandas.io.sas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sas.sas7bdat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.__next__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._chunk_to_dataframe": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.sas.sas_constants.sas_date_formats",
   "pandas.io.sas.sas_constants.sas_datetime_formats",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_properties": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.datetime",
   "pandas.io.sas.sas_constants.align_1_checker_value",
   "pandas.io.sas.sas_constants.align_1_length",
   "pandas.io.sas.sas_constants.align_1_offset",
   "pandas.io.sas.sas_constants.align_2_length",
   "pandas.io.sas.sas_constants.align_2_offset",
   "pandas.io.sas.sas_constants.align_2_value",
   "pandas.io.sas.sas_constants.dataset_length",
   "pandas.io.sas.sas_constants.dataset_offset",
   "pandas.io.sas.sas_constants.date_created_length",
   "pandas.io.sas.sas_constants.date_created_offset",
   "pandas.io.sas.sas_constants.date_modified_length",
   "pandas.io.sas.sas_constants.date_modified_offset",
   "pandas.io.sas.sas_constants.encoding_length",
   "pandas.io.sas.sas_constants.encoding_names",
   "pandas.io.sas.sas_constants.encoding_offset",
   "pandas.io.sas.sas_constants.endianness_length",
   "pandas.io.sas.sas_constants.endianness_offset",
   "pandas.io.sas.sas_constants.file_type_length",
   "pandas.io.sas.sas_constants.file_type_offset",
   "pandas.io.sas.sas_constants.header_size_length",
   "pandas.io.sas.sas_constants.header_size_offset",
   "pandas.io.sas.sas_constants.magic",
   "pandas.io.sas.sas_constants.os_maker_length",
   "pandas.io.sas.sas_constants.os_maker_offset",
   "pandas.io.sas.sas_constants.os_name_length",
   "pandas.io.sas.sas_constants.os_name_offset",
   "pandas.io.sas.sas_constants.os_version_number_length",
   "pandas.io.sas.sas_constants.os_version_number_offset",
   "pandas.io.sas.sas_constants.page_bit_offset_x64",
   "pandas.io.sas.sas_constants.page_bit_offset_x86",
   "pandas.io.sas.sas_constants.page_count_length",
   "pandas.io.sas.sas_constants.page_count_offset",
   "pandas.io.sas.sas_constants.page_size_length",
   "pandas.io.sas.sas_constants.page_size_offset",
   "pandas.io.sas.sas_constants.platform_length",
   "pandas.io.sas.sas_constants.platform_offset",
   "pandas.io.sas.sas_constants.sas_release_length",
   "pandas.io.sas.sas_constants.sas_release_offset",
   "pandas.io.sas.sas_constants.sas_server_type_length",
   "pandas.io.sas.sas_constants.sas_server_type_offset",
   "pandas.io.sas.sas_constants.subheader_pointer_length_x64",
   "pandas.io.sas.sas_constants.subheader_pointer_length_x86",
   "pandas.io.sas.sas_constants.u64_byte_checker_value",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_subheader_index": {
  "lineno": 316,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.compressed_subheader_id",
   "pandas.io.sas.sas_constants.compressed_subheader_type",
   "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
   "pandas.io.sas.sas_constants.subheader_signature_to_index.get"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._parse_metadata": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnattributes_subheader": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.int64",
   "pandas.io.sas.sas_constants.column_data_length_length",
   "pandas.io.sas.sas_constants.column_data_length_offset",
   "pandas.io.sas.sas_constants.column_data_offset_offset",
   "pandas.io.sas.sas_constants.column_type_length",
   "pandas.io.sas.sas_constants.column_type_offset"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnlist_subheader": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnname_subheader": {
  "lineno": 475,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.column_name_length_length",
   "pandas.io.sas.sas_constants.column_name_length_offset",
   "pandas.io.sas.sas_constants.column_name_offset_length",
   "pandas.io.sas.sas_constants.column_name_offset_offset",
   "pandas.io.sas.sas_constants.column_name_pointer_length",
   "pandas.io.sas.sas_constants.column_name_text_subheader_length",
   "pandas.io.sas.sas_constants.column_name_text_subheader_offset"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnsize_subheader": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columntext_subheader": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.compression_literals",
   "pandas.io.sas.sas_constants.rle_compression",
   "pandas.io.sas.sas_constants.text_block_size_length"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_format_subheader": {
  "lineno": 533,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.column_format_length_length",
   "pandas.io.sas.sas_constants.column_format_length_offset",
   "pandas.io.sas.sas_constants.column_format_offset_length",
   "pandas.io.sas.sas_constants.column_format_offset_offset",
   "pandas.io.sas.sas_constants.column_format_text_subheader_index_length",
   "pandas.io.sas.sas_constants.column_format_text_subheader_index_offset",
   "pandas.io.sas.sas_constants.column_label_length_length",
   "pandas.io.sas.sas_constants.column_label_length_offset",
   "pandas.io.sas.sas_constants.column_label_offset_length",
   "pandas.io.sas.sas_constants.column_label_offset_offset",
   "pandas.io.sas.sas_constants.column_label_text_subheader_index_length",
   "pandas.io.sas.sas_constants.column_label_text_subheader_index_offset"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_meta": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.page_amd_type",
   "pandas.io.sas.sas_constants.page_meta_type",
   "pandas.io.sas.sas_constants.page_mix_types"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_metadata": {
  "lineno": 299,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.subheader_pointers_offset",
   "pandas.io.sas.sas_constants.truncated_subheader_id"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_rowsize_subheader": {
  "lineno": 386,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.col_count_p1_multiplier",
   "pandas.io.sas.sas_constants.col_count_p2_multiplier",
   "pandas.io.sas.sas_constants.row_count_offset_multiplier",
   "pandas.io.sas.sas_constants.row_count_on_mix_page_offset_multiplier",
   "pandas.io.sas.sas_constants.row_length_offset_multiplier"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader": {
  "lineno": 358,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.index.columnAttributesIndex",
   "pandas.io.sas.sas_constants.index.columnListIndex",
   "pandas.io.sas.sas_constants.index.columnNameIndex",
   "pandas.io.sas.sas_constants.index.columnSizeIndex",
   "pandas.io.sas.sas_constants.index.columnTextIndex",
   "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
   "pandas.io.sas.sas_constants.index.formatAndLabelIndex",
   "pandas.io.sas.sas_constants.index.rowSizeIndex",
   "pandas.io.sas.sas_constants.index.subheaderCountsIndex"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_counts": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_pointers": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_bytes": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_float": {
  "lineno": 235,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_int": {
  "lineno": 244,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_next_page": {
  "lineno": 620,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.page_data_type",
   "pandas.io.sas.sas_constants.page_meta_type",
   "pandas.io.sas.sas_constants.page_mix_types"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_page_header": {
  "lineno": 288,
  "symbols_in_volume": [
   "pandas.io.sas.sas_constants.block_count_length",
   "pandas.io.sas.sas_constants.block_count_offset",
   "pandas.io.sas.sas_constants.page_type_length",
   "pandas.io.sas.sas_constants.page_type_offset",
   "pandas.io.sas.sas_constants.subheader_count_length",
   "pandas.io.sas.sas_constants.subheader_count_offset"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_subheader_signature": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.close": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.read": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object",
   "numpy.uint8",
   "pandas.io.sas._sas.Parser"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas7bdat._column": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sas.sas7bdat._subheader_pointer": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sas.sas_constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sas.sas_constants.index": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sas.sas_xport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sas.sas_xport.XportReader": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.sas.sas_xport.XportReader.__init__": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.text_type",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.__next__": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._get_row": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._missing_double": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._read_header": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.dtype",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._record_count": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.frombuffer",
   "numpy.uint64",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.close": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.get_chunk": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.read": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport._handle_truncated_float_vec": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport._parse_date": {
  "lineno": 117,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport._parse_float_vec": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.uint8",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.io.sas.sas_xport._split_line": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sas.sasreader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sas.sasreader.read_sas": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.common._stringify_path",
   "pandas.io.sas.sas7bdat.SAS7BDATReader",
   "pandas.io.sas.sas_xport.XportReader"
  ],
  "type": "function"
 },
 "pandas.io.sql": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.io.sql.DatabaseError": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sql.PandasSQL": {
  "lineno": 931,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.io.sql.PandasSQL.read_sql": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.PandasSQL.to_sql": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLAlchemyRequired": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sql.SQLDatabase": {
  "lineno": 945,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sql.SQLDatabase.__init__": {
  "lineno": 965,
  "symbols_in_volume": [
   "sqlalchemy.schema.MetaData"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase._create_sql_schema": {
  "lineno": 1208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase._query_iterator": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.drop_table": {
  "lineno": 1201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.execute": {
  "lineno": 981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.get_table": {
  "lineno": 1186,
  "symbols_in_volume": [
   "sqlalchemy.Numeric"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.has_table": {
  "lineno": 1179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.read_query": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.read_table": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.run_transaction": {
  "lineno": 973,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.tables": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLDatabase.to_sql": {
  "lineno": 1109,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dict_like",
   "sqlalchemy.types.TypeEngine",
   "sqlalchemy.types.to_instance",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable": {
  "lineno": 544,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.io.sql.SQLTable.__init__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._create_table_setup": {
  "lineno": 770,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "sqlalchemy.Column",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.Table",
   "sqlalchemy.schema.MetaData"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._execute_create": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._execute_insert": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._get_column_names_and_types": {
  "lineno": 752,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._get_dtype": {
  "lineno": 907,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "sqlalchemy.types.Boolean",
   "sqlalchemy.types.Date",
   "sqlalchemy.types.DateTime",
   "sqlalchemy.types.Float",
   "sqlalchemy.types.Integer",
   "sqlalchemy.types.TIMESTAMP"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._get_notna_col_dtype": {
  "lineno": 849,
  "symbols_in_volume": [
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._harmonize_columns": {
  "lineno": 796,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._index_name": {
  "lineno": 722,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._query_iterator": {
  "lineno": 672,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable._sqlalchemy_type": {
  "lineno": 863,
  "symbols_in_volume": [
   "sqlalchemy.types.BigInteger",
   "sqlalchemy.types.Boolean",
   "sqlalchemy.types.Date",
   "sqlalchemy.types.DateTime",
   "sqlalchemy.types.Float",
   "sqlalchemy.types.Integer",
   "sqlalchemy.types.Text",
   "sqlalchemy.types.Time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.create": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.exists": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.insert": {
  "lineno": 647,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.insert_data": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.map",
   "pandas.compat.text_type",
   "pandas.compat.zip",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.insert_statement": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.read": {
  "lineno": 691,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame.from_records",
   "sqlalchemy.select"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLTable.sql_schema": {
  "lineno": 580,
  "symbols_in_volume": [
   "sqlalchemy.schema.CreateTable"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase": {
  "lineno": 1371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sql.SQLiteDatabase.__init__": {
  "lineno": 1382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase._create_sql_schema": {
  "lineno": 1532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase._fetchall_as_list": {
  "lineno": 1461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase._query_iterator": {
  "lineno": 1423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.drop_table": {
  "lineno": 1528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.execute": {
  "lineno": 1400,
  "symbols_in_volume": [
   "pandas.compat.raise_with_traceback"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.get_table": {
  "lineno": 1525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.has_table": {
  "lineno": 1514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.read_query": {
  "lineno": 1440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.run_transaction": {
  "lineno": 1388,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteDatabase.to_sql": {
  "lineno": 1467,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dict_like"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable": {
  "lineno": 1259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.sql.SQLiteTable.__init__": {
  "lineno": 1265,
  "symbols_in_volume": [
   "datetime.time",
   "sqlite3.register_adapter"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable._create_table_setup": {
  "lineno": 1301,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.core.dtypes.common.is_list_like",
   "re.compile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable._execute_create": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable._execute_insert": {
  "lineno": 1297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable._sql_type_name": {
  "lineno": 1344,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable.insert_statement": {
  "lineno": 1282,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.sql.SQLiteTable.sql_schema": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql._convert_params": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql._engine_builder": {
  "lineno": 507,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.io.sql._get_unicode_name": {
  "lineno": 1228,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.io.sql._get_valid_sqlite_name": {
  "lineno": 1236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql._handle_date_column": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.sql._is_sqlalchemy_connectable": {
  "lineno": 62,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "sqlalchemy.__version__",
   "sqlalchemy.engine.Connectable"
  ],
  "type": "function"
 },
 "pandas.io.sql._is_sqlalchemy_connectable.compile_big_int_sqlite": {
  "lineno": 78,
  "symbols_in_volume": [
   "sqlalchemy.BigInteger",
   "sqlalchemy.ext.compiler.compiles"
  ],
  "type": "function"
 },
 "pandas.io.sql._parse_date_columns": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64tz_dtype"
  ],
  "type": "function"
 },
 "pandas.io.sql._validate_flavor_parameter": {
  "lineno": 44,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.sql._wrap_result": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.io.sql.execute": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.get_schema": {
  "lineno": 1538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.has_table": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.pandasSQL_builder": {
  "lineno": 525,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.io.sql.read_sql": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.read_sql_query": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.sql.read_sql_table": {
  "lineno": 198,
  "symbols_in_volume": [
   "sqlalchemy.exc.InvalidRequestError",
   "sqlalchemy.schema.MetaData"
  ],
  "type": "function"
 },
 "pandas.io.sql.to_sql": {
  "lineno": 419,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame",
   "pandas.core.api.Series"
  ],
  "type": "function"
 },
 "pandas.io.stata": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 },
 "pandas.io.stata.InvalidColumnName": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata.PossiblePrecisionLoss": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata.StataMissingValue": {
  "lineno": 709,
  "symbols_in_volume": [
   "pandas.compat.long",
   "pandas.compat.range",
   "pandas.core.base.StringMixin",
   "struct.pack",
   "struct.unpack"
  ],
  "type": "class"
 },
 "pandas.io.stata.StataMissingValue.__eq__": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__init__": {
  "lineno": 789,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__repr__": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__unicode__": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.get_base_missing_value": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataParser": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata.StataParser.__init__": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.uint8",
   "pandas.compat.lrange",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader": {
  "lineno": 948,
  "symbols_in_volume": [
   "pandas.io.common.BaseIterator"
  ],
  "type": "class"
 },
 "pandas.io.stata.StataReader.__enter__": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.__exit__": {
  "lineno": 1011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.__init__": {
  "lineno": 951,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.text_type",
   "pandas.io.common._stringify_path",
   "pandas.io.common.get_filepath_or_buffer",
   "pandas.util._decorators.deprecate_kwarg",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader.__next__": {
  "lineno": 1443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader._calcsize": {
  "lineno": 1321,
  "symbols_in_volume": [
   "struct.calcsize"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._decode": {
  "lineno": 1325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_categoricals": {
  "lineno": 1694,
  "symbols_in_volume": [
   "pandas.compat.iterkeys",
   "pandas.compat.zip",
   "pandas.core.categorical.Categorical",
   "pandas.core.frame.DataFrame.from_items",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_missing": {
  "lineno": 1619,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.float32",
   "numpy.float64",
   "numpy.logical_or",
   "numpy.nan",
   "numpy.object",
   "numpy.unique",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_select_columns": {
  "lineno": 1663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_data_label": {
  "lineno": 1185,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes": {
  "lineno": 1100,
  "symbols_in_volume": [
   "pandas.compat.range",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes.f": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_fmtlist": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_lbllist": {
  "lineno": 1155,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_nobs": {
  "lineno": 1177,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_seek_variable_labels": {
  "lineno": 1210,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_time_stamp": {
  "lineno": 1198,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_variable_labels": {
  "lineno": 1165,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_varlist": {
  "lineno": 1131,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._insert_strls": {
  "lineno": 1653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader._null_terminate": {
  "lineno": 1329,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_header": {
  "lineno": 1022,
  "symbols_in_volume": [
   "pandas.compat.lmap",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_new_header": {
  "lineno": 1035,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_old_header": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.uint8",
   "pandas.compat.range",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_strls": {
  "lineno": 1399,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_value_labels": {
  "lineno": 1341,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.frombuffer",
   "pandas.compat.range",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader._setup_dtype": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader.close": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.data": {
  "lineno": 1431,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader.data_label": {
  "lineno": 1728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.get_chunk": {
  "lineno": 1446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.read": {
  "lineno": 1463,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.frombuffer",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.where",
   "pandas.compat.lmap",
   "pandas.compat.zip",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.DataFrame.from_items",
   "pandas.core.frame.DataFrame.from_records",
   "pandas.core.series.Series",
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataReader.value_labels": {
  "lineno": 1738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataReader.variable_labels": {
  "lineno": 1732,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata.StataValueLabel.__init__": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int32",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel._encode": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel.generate_value_label": {
  "lineno": 655,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.range",
   "struct.pack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter": {
  "lineno": 1872,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata.StataWriter.__init__": {
  "lineno": 1936,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "pandas.io.common._stringify_path",
   "sys.byteorder"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._check_column_names": {
  "lineno": 2017,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.compat.text_type",
   "pandas.compat.zip",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._null_terminate": {
  "lineno": 2298,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_categoricals": {
  "lineno": 1964,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.frame.DataFrame.from_items"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_data": {
  "lineno": 2260,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.fromiter",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_pandas": {
  "lineno": 2090,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._replace_nans": {
  "lineno": 2002,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write": {
  "lineno": 1954,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_data": {
  "lineno": 2294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_descriptors": {
  "lineno": 2203,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_header": {
  "lineno": 2166,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.now",
   "struct.pack"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_value_labels": {
  "lineno": 2161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_variable_labels": {
  "lineno": 2236,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.io.stata.StataWriter.write_file": {
  "lineno": 2144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata.ValueLabelTypeMismatch": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.io.stata._cast_to_stata_types": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.isinf",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint8",
   "struct.unpack",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata._convert_datetime_to_stata_type": {
  "lineno": 1771,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.series.Series",
   "pandas.isna",
   "pandas.to_datetime",
   "struct.unpack",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec.parse_dates_safe": {
  "lineno": 373,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.int64",
   "numpy.vectorize",
   "pandas.DatetimeIndex",
   "pandas._libs.lib.infer_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.frame.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.stata._dtype_to_default_stata_fmt": {
  "lineno": 1835,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.object_",
   "pandas._libs.lib.infer_dtype",
   "pandas._libs.lib.max_len_string_array",
   "pandas.core.dtypes.common._ensure_object"
  ],
  "type": "function"
 },
 "pandas.io.stata._dtype_to_stata_type": {
  "lineno": 1797,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.object_",
   "numpy.string_",
   "pandas._libs.lib.max_len_string_array",
   "pandas.core.dtypes.common._ensure_object"
  ],
  "type": "function"
 },
 "pandas.io.stata._maybe_convert_to_int_keys": {
  "lineno": 1782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata._open_file_binary_write": {
  "lineno": 1748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata._pad_bytes": {
  "lineno": 1764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata._set_endianness": {
  "lineno": 1755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec": {
  "lineno": 192,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.int64",
   "numpy.isnan",
   "numpy.object",
   "numpy.ones_like",
   "pandas.NaT",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.Timestamp.max.days",
   "pandas._libs.tslib.Timestamp.max.year",
   "pandas._libs.tslib.Timestamp.min.days",
   "pandas._libs.tslib.Timestamp.min.year",
   "pandas.core.series.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_delta_safe": {
  "lineno": 277,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "pandas.core.series.Series",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_days_safe": {
  "lineno": 263,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas.compat.zip",
   "pandas.core.series.Series",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_month_safe": {
  "lineno": 248,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.zip",
   "pandas.core.series.Series",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.io.stata.read_stata": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.io.wb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.json": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.lib": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.parser": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._compat._mpl_ge_1_3_1": {
  "lineno": 17,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_1_4_0": {
  "lineno": 28,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_1_5_0": {
  "lineno": 37,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_2_0_0": {
  "lineno": 46,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_2_0_1": {
  "lineno": 62,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_ge_2_1_0": {
  "lineno": 70,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_le_1_2_1": {
  "lineno": 8,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__"
  ],
  "type": "function"
 },
 "pandas.plotting._compat._mpl_le_2_0_0": {
  "lineno": 54,
  "symbols_in_volume": [
   "matplotlib.__version__",
   "matplotlib.compare_versions"
  ],
  "type": "function"
 },
 "pandas.plotting._converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._converter.DatetimeConverter": {
  "lineno": 270,
  "symbols_in_volume": [
   "matplotlib.dates.DateConverter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.DatetimeConverter._convert_1d": {
  "lineno": 283,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.date",
   "datetime.datetime.time",
   "matplotlib.dates.date2num",
   "numpy.datetime64",
   "numpy.ndarray",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.string_types",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.index.Index",
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.DatetimeConverter._convert_1d.try_parse": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.DatetimeConverter.axisinfo": {
  "lineno": 321,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "matplotlib.units.AxisInfo"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.DatetimeConverter.convert": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_nested_list_like"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator": {
  "lineno": 382,
  "symbols_in_volume": [
   "matplotlib.dates.DateLocator"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.MilliSecondLocator.__call__": {
  "lineno": 400,
  "symbols_in_volume": [
   "matplotlib.dates.date2num",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator.__init__": {
  "lineno": 386,
  "symbols_in_volume": [
   "matplotlib.dates.DateLocator.__init__"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator._get_interval": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator._get_unit": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator.autoscale": {
  "lineno": 464,
  "symbols_in_volume": [
   "matplotlib.dates.date2num"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.MilliSecondLocator.get_unit_generic": {
  "lineno": 393,
  "symbols_in_volume": [
   "matplotlib.dates.RRuleLocator.get_unit_generic"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.PandasAutoDateFormatter": {
  "lineno": 340,
  "symbols_in_volume": [
   "matplotlib.dates.AutoDateFormatter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.PandasAutoDateFormatter.__init__": {
  "lineno": 342,
  "symbols_in_volume": [
   "matplotlib.dates.AutoDateFormatter.__init__",
   "matplotlib.dates.UTC",
   "pandas.plotting._compat._mpl_le_2_0_0"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.PandasAutoDateLocator": {
  "lineno": 356,
  "symbols_in_volume": [
   "matplotlib.dates.AutoDateLocator"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.PandasAutoDateLocator._get_unit": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.PandasAutoDateLocator.get_locator": {
  "lineno": 358,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "matplotlib.dates.AutoDateLocator.get_locator"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.PeriodConverter": {
  "lineno": 210,
  "symbols_in_volume": [
   "matplotlib.dates.DateConverter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.PeriodConverter._convert_1d": {
  "lineno": 221,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.date",
   "datetime.datetime.time",
   "numpy.ndarray",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_period_arraylike",
   "pandas.core.index.Index",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.PeriodConverter.convert": {
  "lineno": 212,
  "symbols_in_volume": [
   "matplotlib.units",
   "pandas.core.dtypes.common.is_nested_list_like"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeConverter": {
  "lineno": 157,
  "symbols_in_volume": [
   "matplotlib.units.ConversionInterface"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.TimeConverter.axisinfo": {
  "lineno": 171,
  "symbols_in_volume": [
   "matplotlib.ticker.AutoLocator",
   "matplotlib.units.AxisInfo"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeConverter.convert": {
  "lineno": 159,
  "symbols_in_volume": [
   "datetime.datetime.time",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeConverter.default_units": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.TimeFormatter": {
  "lineno": 186,
  "symbols_in_volume": [
   "matplotlib.ticker.Formatter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.TimeFormatter.__call__": {
  "lineno": 191,
  "symbols_in_volume": [
   "datetime.datetime.time"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeFormatter.__init__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateFormatter": {
  "lineno": 1041,
  "symbols_in_volume": [
   "matplotlib.ticker.Formatter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.TimeSeries_DateFormatter.__call__": {
  "lineno": 1101,
  "symbols_in_volume": [
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateFormatter.__init__": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateFormatter._set_default_format": {
  "lineno": 1070,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateFormatter.set_locs": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateLocator": {
  "lineno": 957,
  "symbols_in_volume": [
   "matplotlib.ticker.Locator"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.TimeSeries_DateLocator.__call__": {
  "lineno": 1000,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateLocator.__init__": {
  "lineno": 975,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateLocator._get_default_locs": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.compress"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_DateLocator.autoscale": {
  "lineno": 1021,
  "symbols_in_volume": [
   "matplotlib.transforms.nonsingular"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_TimedeltaFormatter": {
  "lineno": 1111,
  "symbols_in_volume": [
   "matplotlib.ticker.Formatter"
  ],
  "type": "class"
 },
 "pandas.plotting._converter.TimeSeries_TimedeltaFormatter.__call__": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log10"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.TimeSeries_TimedeltaFormatter.format_timedelta_ticks": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._annual_finder": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._check_implicitly_registered": {
  "lineno": 124,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._daily_finder": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.zeros",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.frequencies.FreqGroup.FR_BUS",
   "pandas.tseries.frequencies.FreqGroup.FR_DAY",
   "pandas.tseries.frequencies.FreqGroup.FR_HR",
   "pandas.tseries.frequencies.FreqGroup.FR_MIN",
   "pandas.tseries.frequencies.FreqGroup.FR_MS",
   "pandas.tseries.frequencies.FreqGroup.FR_NS",
   "pandas.tseries.frequencies.FreqGroup.FR_SEC",
   "pandas.tseries.frequencies.FreqGroup.FR_US",
   "pandas.tseries.frequencies.FreqGroup.FR_WK",
   "pandas.tseries.frequencies.get_freq_group"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._daily_finder._hour_finder": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._daily_finder._minute_finder": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._daily_finder._second_finder": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._daily_finder.first_label": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._dt_to_float_ordinal": {
  "lineno": 255,
  "symbols_in_volume": [
   "matplotlib.dates.date2num",
   "matplotlib.dates.epoch2num",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._from_ordinal": {
  "lineno": 496,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.fromordinal",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._get_default_annual_spacing": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter._monthly_finder": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._quarterly_finder": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._converter._to_ordinalf": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.deregister": {
  "lineno": 96,
  "symbols_in_volume": [
   "matplotlib.units.registry",
   "matplotlib.units.registry.get",
   "matplotlib.units.registry.pop"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.get_datevalue": {
  "lineno": 241,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.date",
   "datetime.datetime.time",
   "numpy.ndarray",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.index.Index",
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.get_finder": {
  "lineno": 939,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.FreqGroup.FR_ANN",
   "pandas.tseries.frequencies.FreqGroup.FR_BUS",
   "pandas.tseries.frequencies.FreqGroup.FR_MTH",
   "pandas.tseries.frequencies.FreqGroup.FR_QTR",
   "pandas.tseries.frequencies.FreqGroup.FR_WK",
   "pandas.tseries.frequencies.get_freq",
   "pandas.tseries.frequencies.get_freq_group"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.get_pairs": {
  "lineno": 52,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "datetime.datetime.datetime",
   "datetime.datetime.time",
   "numpy.datetime64",
   "pandas._libs.lib.Timestamp",
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.has_level_label": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._converter.period_break": {
  "lineno": 545,
  "symbols_in_volume": [
   "matplotlib.dates",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.register": {
  "lineno": 64,
  "symbols_in_volume": [
   "matplotlib.units.registry"
  ],
  "type": "function"
 },
 "pandas.plotting._converter.time2num": {
  "lineno": 146,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.time",
   "pandas.compat.string_types",
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.plotting._core": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.core.generic._shared_docs",
   "pandas.plotting._converter.register"
  ],
  "type": "module"
 },
 "pandas.plotting._core.AreaPlot": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.AreaPlot.__init__": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.AreaPlot._add_legend_handle": {
  "lineno": 1136,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle"
  ],
  "type": "function"
 },
 "pandas.plotting._core.AreaPlot._plot": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._core.AreaPlot._post_plot_logic": {
  "lineno": 1146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.BarPlot.__init__": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._args_adjust": {
  "lineno": 1193,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._decorate_ticks": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._make_plot": {
  "lineno": 1207,
  "symbols_in_volume": [
   "matplotlib.rcParams",
   "numpy.where",
   "numpy.zeros",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._plot": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._post_plot_logic": {
  "lineno": 1260,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BarPlot._start_base": {
  "lineno": 1203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarhPlot": {
  "lineno": 1280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.BarhPlot._decorate_ticks": {
  "lineno": 1293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarhPlot._plot": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BarhPlot._start_base": {
  "lineno": 1285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BasePlotMethods": {
  "lineno": 2465,
  "symbols_in_volume": [
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.plotting._core.BasePlotMethods.__call__": {
  "lineno": 2470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BasePlotMethods.__init__": {
  "lineno": 2467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot": {
  "lineno": 1501,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "pandas.plotting._core.BoxPlot.__init__": {
  "lineno": 1509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._args_adjust": {
  "lineno": 1518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._get_colors": {
  "lineno": 1576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._make_legend": {
  "lineno": 1637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._make_plot": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.series.Series",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._plot": {
  "lineno": 1527,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.dtypes.missing.remove_na_arraylike"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._post_plot_logic": {
  "lineno": 1640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._set_ticklabels": {
  "lineno": 1631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot._validate_color_args": {
  "lineno": 1546,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.plotting._style._get_standard_colors",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot.maybe_color_bp": {
  "lineno": 1579,
  "symbols_in_volume": [
   "matplotlib.artist.setp"
  ],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot.orientation": {
  "lineno": 1643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.BoxPlot.result": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods": {
  "lineno": 2647,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.FramePlotMethods.__call__": {
  "lineno": 2661,
  "symbols_in_volume": [
   "pandas.plotting._tools.table"
  ],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.area": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.bar": {
  "lineno": 2699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.barh": {
  "lineno": 2718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.box": {
  "lineno": 2737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.hexbin": {
  "lineno": 2857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.hist": {
  "lineno": 2756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.kde": {
  "lineno": 2777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.line": {
  "lineno": 2680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.pie": {
  "lineno": 2815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.FramePlotMethods.scatter": {
  "lineno": 2834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HexBinPlot": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.HexBinPlot.__init__": {
  "lineno": 896,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.plotting._core.HexBinPlot._make_legend": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HexBinPlot._make_plot": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot": {
  "lineno": 1302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.HistPlot.__init__": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot._args_adjust": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.histogram",
   "numpy.ravel",
   "pandas.core.dtypes.common.is_integer",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot._make_plot": {
  "lineno": 1341,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot._make_plot_keywords": {
  "lineno": 1362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot._plot": {
  "lineno": 1326,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot._post_plot_logic": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.HistPlot.orientation": {
  "lineno": 1375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot": {
  "lineno": 1383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.KdePlot.__init__": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot._args_adjust": {
  "lineno": 1392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot._get_ind": {
  "lineno": 1395,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot._make_plot_keywords": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot._plot": {
  "lineno": 1405,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.core.dtypes.missing.remove_na_arraylike",
   "scipy.__version__",
   "scipy.stats.gaussian_kde",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._core.KdePlot._post_plot_logic": {
  "lineno": 1431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.LinePlot.__init__": {
  "lineno": 930,
  "symbols_in_volume": [
   "pandas.plotting._style.plot_params"
  ],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._get_stacked_values": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._get_stacking_id": {
  "lineno": 1021,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._initialize_stacker": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._is_ts_plot": {
  "lineno": 938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._make_plot": {
  "lineno": 946,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._compat._mpl_ge_2_0_0",
   "pandas.plotting._timeseries._maybe_convert_index",
   "pandas.plotting._tools._get_all_lines",
   "pandas.plotting._tools._get_xlim"
  ],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._plot": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._post_plot_logic": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pandas.plotting._tools.format_date_labels"
  ],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._ts_plot": {
  "lineno": 997,
  "symbols_in_volume": [
   "pandas.plotting._timeseries._decorate_axes",
   "pandas.plotting._timeseries._maybe_resample",
   "pandas.plotting._timeseries.format_dateaxis"
  ],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._update_stacker": {
  "lineno": 1056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.LinePlot._use_dynamic_x": {
  "lineno": 942,
  "symbols_in_volume": [
   "pandas.plotting._timeseries._use_dynamic_x"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.MPLPlot.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.compat.zip",
   "pandas.core.index.Index",
   "pandas.plotting._converter._WARN",
   "pandas.plotting._tools.table"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._add_legend_handle": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._add_table": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.plotting._tools.table"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._adorn_subplots": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.plotting._tools._handle_shared_axes"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._apply_axis_properties": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._apply_style_colors": {
  "lineno": 651,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._args_adjust": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._compute_plot_data": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.number",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_ax": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_ax_layer": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_ax_legend": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_axes_layout": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_colors": {
  "lineno": 674,
  "symbols_in_volume": [
   "pandas.plotting._style._get_standard_colors"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_errorbars": {
  "lineno": 759,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_index_name": {
  "lineno": 609,
  "symbols_in_volume": [
   "pandas.core.common._any_not_none",
   "pandas.core.index.MultiIndex",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_subplots": {
  "lineno": 779,
  "symbols_in_volume": [
   "matplotlib.axes.Subplot"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._get_xticks": {
  "lineno": 555,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._has_plotted_object": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._iter_data": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._kind": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._make_legend": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._make_plot": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._maybe_right_yaxis": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._parse_errorbars": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_iterator",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._parse_errorbars.match_labels": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._plot": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "numpy.ma.masked_where",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._post_plot_logic": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._post_plot_logic_common": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._post_plot_logic_common.get_label": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._setup_subplots": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.plotting._tools._flatten",
   "pandas.plotting._tools._subplots"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot._validate_color_args": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "re.match",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.draw": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.generate": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.legend_title": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pandas.core.index.MultiIndex",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.mpl_ge_1_3_1": {
  "lineno": 545,
  "symbols_in_volume": [
   "pandas.plotting._compat._mpl_ge_1_3_1"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.mpl_ge_1_5_0": {
  "lineno": 549,
  "symbols_in_volume": [
   "pandas.plotting._compat._mpl_ge_1_5_0"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.nseries": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.on_right": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.plt": {
  "lineno": 540,
  "symbols_in_volume": [
   "matplotlib.pyplot",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.plotting._core.MPLPlot.result": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.plotting._core.PiePlot": {
  "lineno": 1435,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.PiePlot.__init__": {
  "lineno": 1439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.PiePlot._args_adjust": {
  "lineno": 1445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.PiePlot._make_plot": {
  "lineno": 1454,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.PiePlot._make_plot.blank_labeler": {
  "lineno": 1467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.PiePlot._validate_color_args": {
  "lineno": 1451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.PlanePlot": {
  "lineno": 796,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.PlanePlot.__init__": {
  "lineno": 803,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.plotting._core.PlanePlot._post_plot_logic": {
  "lineno": 823,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.PlanePlot.nseries": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.ScatterPlot": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.ScatterPlot.__init__": {
  "lineno": 832,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.plotting._core.ScatterPlot._make_plot": {
  "lineno": 842,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_hashable"
  ],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods": {
  "lineno": 2474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._core.SeriesPlotMethods.__call__": {
  "lineno": 2488,
  "symbols_in_volume": [
   "pandas.plotting._tools.table"
  ],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.area": {
  "lineno": 2612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.bar": {
  "lineno": 2523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.barh": {
  "lineno": 2540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.box": {
  "lineno": 2557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.hist": {
  "lineno": 2574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.kde": {
  "lineno": 2593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.line": {
  "lineno": 2506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.SeriesPlotMethods.pie": {
  "lineno": 2629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core._gca": {
  "lineno": 57,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.rc_context"
  ],
  "type": "function"
 },
 "pandas.plotting._core._gcf": {
  "lineno": 63,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf"
  ],
  "type": "function"
 },
 "pandas.plotting._core._get_standard_kind": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core._grouped_plot": {
  "lineno": 2392,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._tools._flatten",
   "pandas.plotting._tools._subplots",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._core._grouped_plot_by_column": {
  "lineno": 2424,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.series.Series",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._tools._flatten",
   "pandas.plotting._tools._subplots"
  ],
  "type": "function"
 },
 "pandas.plotting._core._plot": {
  "lineno": 1675,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot": {
  "lineno": 1977,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.generic._shared_doc_kwargs",
   "pandas.core.generic._shared_docs",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot._get_colors": {
  "lineno": 1991,
  "symbols_in_volume": [
   "pandas.plotting._style._get_standard_colors"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot.maybe_color_bp": {
  "lineno": 1994,
  "symbols_in_volume": [
   "matplotlib.artist.setp"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot.plot_group": {
  "lineno": 2001,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.core.dtypes.missing.remove_na_arraylike",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot_frame": {
  "lineno": 2059,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw_if_interactive",
   "pandas.core.generic._shared_doc_kwargs",
   "pandas.core.generic._shared_docs",
   "pandas.plotting._converter._WARN",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.plotting._core.boxplot_frame_groupby": {
  "lineno": 2313,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.reshape.concat.concat",
   "pandas.core.series.Series",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._converter._WARN",
   "pandas.plotting._tools._flatten",
   "pandas.plotting._tools._subplots"
  ],
  "type": "function"
 },
 "pandas.plotting._core.grouped_hist": {
  "lineno": 2268,
  "symbols_in_volume": [
   "pandas.plotting._converter._WARN",
   "pandas.plotting._tools._set_ticks_props"
  ],
  "type": "function"
 },
 "pandas.plotting._core.grouped_hist.plot_group": {
  "lineno": 2296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._core.hist_frame": {
  "lineno": 2119,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.common._try_sort",
   "pandas.core.index.Index",
   "pandas.plotting._converter._WARN",
   "pandas.plotting._tools._flatten",
   "pandas.plotting._tools._set_ticks_props",
   "pandas.plotting._tools._subplots"
  ],
  "type": "function"
 },
 "pandas.plotting._core.hist_series": {
  "lineno": 2194,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.get_fignums",
   "numpy.array",
   "pandas.plotting._tools._set_ticks_props"
  ],
  "type": "function"
 },
 "pandas.plotting._core.plot_frame": {
  "lineno": 1883,
  "symbols_in_volume": [
   "pandas.core.generic._shared_docs",
   "pandas.plotting._tools.table",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.plotting._core.plot_series": {
  "lineno": 1905,
  "symbols_in_volume": [
   "matplotlib.pyplot.get_fignums",
   "pandas.core.generic._shared_docs",
   "pandas.plotting._tools.table",
   "pandas.util._decorators.Appender"
  ],
  "type": "function"
 },
 "pandas.plotting._core.scatter_plot": {
  "lineno": 2072,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.plotting._core.scatter_plot.plot_group": {
  "lineno": 2096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._misc._get_marker_compat": {
  "lineno": 139,
  "symbols_in_volume": [
   "matplotlib.__version__",
   "matplotlib.lines.lineMarkers"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.andrews_curves": {
  "lineno": 234,
  "symbols_in_volume": [
   "math.pi",
   "matplotlib.pyplot.gca",
   "numpy.linspace",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._style._get_standard_colors",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.andrews_curves.function": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._misc.andrews_curves.function.f": {
  "lineno": 274,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.arange",
   "numpy.copy",
   "numpy.cos",
   "numpy.delete",
   "numpy.newaxis",
   "numpy.outer",
   "numpy.sin",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.autocorrelation_plot": {
  "lineno": 533,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "numpy.arange",
   "numpy.asarray",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.sum",
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.autocorrelation_plot.r": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._misc.bootstrap_plot": {
  "lineno": 325,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.setp",
   "numpy.array",
   "numpy.mean",
   "numpy.median",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "random.sample"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.lag_plot": {
  "lineno": 503,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.rcParams"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.parallel_coordinates": {
  "lineno": 386,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "numpy.all",
   "numpy.isreal",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._style._get_standard_colors",
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.radviz": {
  "lineno": 149,
  "symbols_in_volume": [
   "matplotlib.patches.Circle",
   "matplotlib.pyplot.gca",
   "numpy.array",
   "numpy.cos",
   "numpy.expand_dims",
   "numpy.pi",
   "numpy.repeat",
   "numpy.sin",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._style._get_standard_colors"
  ],
  "type": "function"
 },
 "pandas.plotting._misc.radviz.normalize": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._misc.scatter_matrix": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "pandas.compat.lrange",
   "pandas.compat.zip",
   "pandas.core.dtypes.missing.notna",
   "pandas.plotting._tools._set_ticks_props",
   "pandas.plotting._tools._subplots",
   "scipy.stats.gaussian_kde"
  ],
  "type": "function"
 },
 "pandas.plotting._style": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._style._Options": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.plotting._style._Options.__contains__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options.__delitem__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options.__getitem__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options.__setitem__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options._get_canonical_key": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options._warn_if_deprecated": {
  "lineno": 124,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._style._Options.reset": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._Options.use": {
  "lineno": 166,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors": {
  "lineno": 17,
  "symbols_in_volume": [
   "matplotlib.cm.get_cmap",
   "matplotlib.pyplot.rcParams",
   "matplotlib.pyplot.rcParams.get",
   "numpy.linspace",
   "pandas.compat.lmap",
   "pandas.compat.lrange",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.plotting._compat._mpl_ge_2_0_0",
   "re.match",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors._maybe_valid_colors": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._style._get_standard_colors.random_color": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.core.common._random_state"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._timeseries._decorate_axes": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._timeseries._format_coord": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._get_ax_freq": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._timeseries._get_freq": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_base_alias",
   "pandas.tseries.frequencies.get_period_alias",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._get_index_freq": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._is_sub": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.is_subperiod"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._is_sup": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.is_superperiod"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._maybe_convert_index": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.frequencies.get_base_alias",
   "pandas.tseries.frequencies.get_period_alias",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._maybe_resample": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.frequencies.is_subperiod",
   "pandas.tseries.frequencies.is_superperiod"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._replot_ax": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.plotting._core._plot_klass._plot"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries._upsample_others": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._timeseries._use_dynamic_x": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.Period",
   "pandas.tseries.frequencies.FreqGroup.FR_DAY",
   "pandas.tseries.frequencies.get_base_alias",
   "pandas.tseries.frequencies.get_freq",
   "pandas.tseries.frequencies.get_period_alias",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries.format_dateaxis": {
  "lineno": 302,
  "symbols_in_volume": [
   "functools.partial",
   "matplotlib.pylab.draw_if_interactive",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.plotting._converter.TimeSeries_DateFormatter",
   "pandas.plotting._converter.TimeSeries_DateLocator",
   "pandas.plotting._converter.TimeSeries_TimedeltaFormatter"
  ],
  "type": "function"
 },
 "pandas.plotting._timeseries.format_timedelta_ticks": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._timeseries.tsplot": {
  "lineno": 25,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "pandas.plotting._tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.plotting._tools._flatten": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_list_like",
   "pandas.core.index.Index"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._get_all_lines": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._tools._get_layout": {
  "lineno": 69,
  "symbols_in_volume": [
   "math.ceil"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._get_xlim": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._handle_shared_axes": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._remove_labels_from_axis": {
  "lineno": 279,
  "symbols_in_volume": [
   "matplotlib.ticker.AutoLocator",
   "matplotlib.ticker.FormatStrFormatter",
   "matplotlib.ticker.NullFormatter",
   "matplotlib.ticker.NullLocator"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._set_ticks_props": {
  "lineno": 369,
  "symbols_in_volume": [
   "matplotlib.pyplot.setp"
  ],
  "type": "function"
 },
 "pandas.plotting._tools._subplots": {
  "lineno": 115,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "numpy.empty",
   "pandas.compat.range",
   "pandas.core.dtypes.common.is_list_like",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.plotting._tools.format_date_labels": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.plotting._tools.table": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.stats.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.stats.moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.stats.moments._expanding_func": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments._expanding_func.f": {
  "lineno": 675,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments._rolling_func": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments._rolling_func.f": {
  "lineno": 463,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ensure_compat": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.api.DataFrame",
   "pandas.core.api.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ensure_compat.f": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ewma": {
  "lineno": 328,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ewmcorr": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ewmcov": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ewmstd": {
  "lineno": 368,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.ewmvar": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.expanding_apply": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.expanding_corr": {
  "lineno": 792,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.expanding_count": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.expanding_cov": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.expanding_quantile": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.rolling_apply": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.rolling_corr": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.rolling_count": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.rolling_cov": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandas.util._decorators.Appender",
   "pandas.util._decorators.Substitution"
  ],
  "type": "function"
 },
 "pandas.stats.moments.rolling_quantile": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.stats.moments.rolling_window": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.api.test_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.api.test_api.Base": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.Base.check": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestApi": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestApi.test_api": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.api"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestCDateRange": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestCDateRange.test_deprecation_cdaterange": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.cdate_range",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation.test_deprecation_access_func": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.datetools.to_datetime",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestDatetoolsDeprecation.test_deprecation_access_obj": {
  "lineno": 151,
  "symbols_in_volume": [
   "pandas.datetools.monthEnd",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestJson": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestJson.test_deprecation_access_func": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.json.dumps",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestLib": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestLib.test_deprecation_access_func": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.lib.infer_dtype",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestPDApi": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestPDApi.test_api": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestParser": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestParser.test_deprecation_access_func": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.parser.na_values",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTSLib": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTSLib.test_deprecation_access_func": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas.tslib.Timestamp",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTesting": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTesting.test_testing": {
  "lineno": 138,
  "symbols_in_volume": [
   "pandas.testing"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_TimeGrouper": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.TimeGrouper",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_expr": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.Expr",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_get_store": {
  "lineno": 194,
  "symbols_in_volume": [
   "pandas.get_store",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_groupby": {
  "lineno": 182,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.groupby",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_match": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.match",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_pnow": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.pnow",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTopLevelDeprecations.test_term": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.Term",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_api.TestTypes": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_api.TestTypes.test_deprecation_access_func": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.types.concat.union_categoricals",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.api.test_types.TestTypes": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.api.test_types.TestTypes.check_deprecation": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecated_from_api_types": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.api.types",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.api.types",
   "pandas.core.common"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common_array_equivalent": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.common.array_equivalent",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_deprecation_core_common_moved": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.core.common",
   "pandas.core.dtypes.common"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_removed_from_core_common": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.core.common",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.TestTypes.test_types": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.api.types"
  ],
  "type": "function"
 },
 "pandas.tests.api.test_types.test_moved_infer_dtype": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.lib.infer_dtype",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.computation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.computation.test_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.computation.test_compat.test_compat": {
  "lineno": 11,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numexpr.__version__",
   "pandas.core.computation.check._MIN_NUMEXPR_VERSION",
   "pandas.core.computation.check._NUMEXPR_INSTALLED",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_compat.test_invalid_numexpr_version": {
  "lineno": 26,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numexpr.__version__",
   "pandas.core.computation.check._MIN_NUMEXPR_VERSION",
   "pandas.core.computation.engines._engines",
   "pandas.core.computation.expr._parsers",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_compat.test_invalid_numexpr_version.testit": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.core.common.difference",
   "pandas.core.computation.expr.PandasExprVisitor",
   "pandas.core.computation.expr.PythonExprVisitor",
   "pandas.core.computation.ops._arith_ops_syms",
   "pandas.core.computation.ops._bool_ops_syms",
   "pandas.core.computation.ops._special_case_arith_ops_syms",
   "pandas.core.computation.pytables.ExprVisitor"
  ],
  "type": "module"
 },
 "pandas.tests.computation.test_eval.TestAlignment": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_align_nested_unary_op": {
  "lineno": 837,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_alignment": {
  "lineno": 843,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_series_alignment": {
  "lineno": 895,
  "symbols_in_volume": [
   "itertools.product",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_frame_series_alignment.testit": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_series_frame_alignment": {
  "lineno": 921,
  "symbols_in_volume": [
   "itertools.product",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_basic_series_frame_alignment.testit": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_complex_series_frame_alignment": {
  "lineno": 978,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.mark.slow",
   "random.choice",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_frame_comparison": {
  "lineno": 861,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_medium_complex_frame_alignment": {
  "lineno": 874,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.mark.slow",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_performance_warning_for_poor_alignment": {
  "lineno": 1023,
  "symbols_in_volume": [
   "numpy.log10",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.errors.PerformanceWarning",
   "pandas.eval",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestAlignment.test_series_frame_commutativity": {
  "lineno": 951,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_alignment": {
  "lineno": 294,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_binary_arith_op": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_chained_cmp_op": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_chained_cmp_op.check_operands": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_complex_cmp_op": {
  "lineno": 213,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_compound_invert_op": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_equal": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_floor_division": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_modulus": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_pow": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_simple_cmp_op": {
  "lineno": 271,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.check_single_invert_op": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.ex": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.get_expected_pow_result": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_class": {
  "lineno": 101,
  "symbols_in_volume": [
   "numexpr",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_data": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_method": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.core.computation.engines._engines"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.setup_ops": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.core.computation.expr._bool_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms",
   "pandas.core.computation.ops._special_case_arith_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.teardown_class": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.teardown_method": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_binary_arith_ops": {
  "lineno": 165,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_chained_cmp_op": {
  "lineno": 195,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_complex_cmp_ops": {
  "lineno": 148,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_compound_invert_op": {
  "lineno": 190,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_disallow_scalar_bool_ops": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_float_truncation": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_floor_division": {
  "lineno": 174,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_invert": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_negate": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_frame_pos": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_identical": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.eval",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_line_continuation": {
  "lineno": 690,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_modulus": {
  "lineno": 170,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_pow": {
  "lineno": 178,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.util.testing._skip_if_windows"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_scalar_unary": {
  "lineno": 608,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_invert": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_negate": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_series_pos": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.computation.expr",
   "pandas.eval",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_simple_cmp_ops": {
  "lineno": 157,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.randbool"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_single_invert_op": {
  "lineno": 185,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPandas.test_unary_in_array": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.eval",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.check_chained_cmp_op": {
  "lineno": 743,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.setup_class": {
  "lineno": 724,
  "symbols_in_volume": [
   "numexpr",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalNumexprPython.setup_ops": {
  "lineno": 733,
  "symbols_in_volume": [
   "pandas.core.computation.expr._bool_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms",
   "pandas.core.computation.ops._special_case_arith_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas.check_chained_cmp_op": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPandas.setup_class": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.check_alignment": {
  "lineno": 767,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.check_modulus": {
  "lineno": 757,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestEvalPythonPython.setup_class": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPandas": {
  "lineno": 1729,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPandas.setup_class": {
  "lineno": 1731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPython": {
  "lineno": 1738,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathNumExprPython.setup_class": {
  "lineno": 1740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPandas": {
  "lineno": 1720,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPandas.setup_class": {
  "lineno": 1722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython": {
  "lineno": 1614,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.check_result_type": {
  "lineno": 1676,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.sin",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.eval": {
  "lineno": 1628,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.setup_class": {
  "lineno": 1616,
  "symbols_in_volume": [
   "pandas.core.computation.ops._binary_math_ops",
   "pandas.core.computation.ops._unary_math_ops",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.teardown_class": {
  "lineno": 1624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_binary_functions": {
  "lineno": 1644,
  "symbols_in_volume": [
   "numpy",
   "numpy.errstate",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.expr",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_df_arithmetic_subexpression": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.sin",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_df_use_case": {
  "lineno": 1656,
  "symbols_in_volume": [
   "numpy.arctan2",
   "numpy.random.randn",
   "numpy.sin",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_keyword_arg": {
  "lineno": 1710,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_result_types": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_result_types2": {
  "lineno": 1694,
  "symbols_in_volume": [
   "numpy.complex128",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_unary_functions": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy",
   "numpy.errstate",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.expr",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestMathPythonPython.test_undefined_func": {
  "lineno": 1702,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas": {
  "lineno": 1069,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.assignment_not_inplace": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.eval": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.setup_class": {
  "lineno": 1071,
  "symbols_in_volume": [
   "pandas.core.computation.expr._arith_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.teardown_class": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_4d_ndarray_fails": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_column": {
  "lineno": 1235,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_column.f": {
  "lineno": 1274,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_fails": {
  "lineno": 1228,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_assignment_in_query": {
  "lineno": 1376,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_attr_expression": {
  "lineno": 1215,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_basic_period_index_boolean_expression": {
  "lineno": 1430,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_basic_period_index_subscript_expression": {
  "lineno": 1440,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_bool_ops_with_constants": {
  "lineno": 1122,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.core.computation.expr._bool_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_cannot_copy_item": {
  "lineno": 1411,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_cannot_item_assign": {
  "lineno": 1398,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_column_in": {
  "lineno": 1297,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_constant": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_date_boolean": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_failing_subscript_with_name_error": {
  "lineno": 1204,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_inplace_no_assignment": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_lhs_expression_subscript": {
  "lineno": 1209,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression": {
  "lineno": 1315,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression_local_variable": {
  "lineno": 1361,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_multi_line_expression_not_inplace": {
  "lineno": 1342,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_nested_period_index_subscript_expression": {
  "lineno": 1446,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_panel_fails": {
  "lineno": 1130,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.Series",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_query_inplace": {
  "lineno": 1384,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_dict_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_arith_ops": {
  "lineno": 1088,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_bool_ops": {
  "lineno": 1114,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.core.computation.expr._bool_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_simple_in_ops": {
  "lineno": 1460,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_single_variable": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPandas.test_truediv": {
  "lineno": 1154,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython": {
  "lineno": 1519,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.setup_class": {
  "lineno": 1521,
  "symbols_in_volume": [
   "pandas.core.computation.expr._arith_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_bool_ops_with_constants": {
  "lineno": 1568,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.core.computation.expr._bool_ops_syms",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_check_many_exprs": {
  "lineno": 1531,
  "symbols_in_volume": [
   "pandas.core.computation.expr",
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_ampersand": {
  "lineno": 1556,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_and": {
  "lineno": 1538,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_not": {
  "lineno": 1550,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_or": {
  "lineno": 1544,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_fails_pipe": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsNumExprPython.test_simple_bool_ops": {
  "lineno": 1580,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.core.computation.expr._bool_ops_syms",
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPandas": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPandas.setup_class": {
  "lineno": 1606,
  "symbols_in_volume": [
   "pandas.core.computation.expr._arith_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPython": {
  "lineno": 1593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestOperationsPythonPython.setup_class": {
  "lineno": 1595,
  "symbols_in_volume": [
   "pandas.core.computation.expr._arith_ops_syms",
   "pandas.core.computation.expr._cmp_ops_syms"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope": {
  "lineno": 1750,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestScope.test_global_scope": {
  "lineno": 1752,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope.test_no_new_globals": {
  "lineno": 1765,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestScope.test_no_new_locals": {
  "lineno": 1757,
  "symbols_in_volume": [
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestTypeCasting": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestTypeCasting.test_binop_typecasting": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.TestValidate": {
  "lineno": 1902,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.computation.test_eval.TestValidate.test_validate_bool_args": {
  "lineno": 1904,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._bool_and_frame": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._eval_single_bin": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.computation.ops._binary_ops_dict"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._is_datetime": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._is_py3_complex_incompat": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.complexfloating",
   "numpy.isnan",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._series_and_2d_ndarray": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval._series_and_frame": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.engine": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.core.computation.engines._engines",
   "pandas.core.computation.expressions._NUMEXPR_INSTALLED",
   "pandas.core.computation.expressions._USE_NUMEXPR",
   "pytest.fixture",
   "pytest.mark.skipif",
   "pytest.param"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.engine_has_neg_frac": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.core.computation.engines._engines.has_neg_frac"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.parser": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.core.computation.expr._parsers",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.should_warn": {
  "lineno": 826,
  "symbols_in_volume": [
   "operator.attrgetter",
   "operator.xor",
   "pandas.compat.reduce"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_bad_resolver_raises": {
  "lineno": 1842,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_bool_ops_fails_on_scalars": {
  "lineno": 1862,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.eval",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_disallowed_nodes": {
  "lineno": 1791,
  "symbols_in_volume": [
   "pandas.util.testing.skip_if_no_ne",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_empty_string_raises": {
  "lineno": 1849,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_inf": {
  "lineno": 1880,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_engine": {
  "lineno": 1773,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_local_variable_reference": {
  "lineno": 1816,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_invalid_parser": {
  "lineno": 1780,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_more_than_one_expression_raises": {
  "lineno": 1856,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_name_error_exprs": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_negate_lt_eq_le": {
  "lineno": 1887,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_numexpr_builtin_raises": {
  "lineno": 1831,
  "symbols_in_volume": [
   "pandas.core.computation.engines.NumExprClobberingError",
   "pandas.eval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.computation.test_eval.test_syntax_error_exprs": {
  "lineno": 1804,
  "symbols_in_volume": [
   "pandas.eval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_cast": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_categorical_dtype": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_datetimetz_dtype": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64",
   "numpy.object",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_numpy_dtypes": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.core.dtypes.cast.find_common_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestCommonTypes.test_period_dtype": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64",
   "numpy.object",
   "pandas.core.dtypes.cast.find_common_type",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestConvert": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestConvert.test_maybe_convert_objects_copy": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.cast.maybe_convert_objects"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.test_cast_scalar_to_array": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.empty",
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "numpy.ones",
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.core.dtypes.cast.cast_scalar_to_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.test_infer_dtype_from_array": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.float64",
   "numpy.float_",
   "numpy.int64",
   "numpy.int_",
   "numpy.nan",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.dtypes.cast.infer_dtype_from_array",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.date_range",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.testinfer_dtype_from_scalar": {
  "lineno": 104,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.complex_",
   "numpy.datetime64",
   "numpy.float",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.timedelta64",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestInferDtype.testinfer_dtype_from_scalar_errors": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.cast.infer_dtype_from_scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_convert_scalar": {
  "lineno": 261,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.cast.maybe_convert_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_convert_string_to_array": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.cast.maybe_convert_string_to_object",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybe.test_maybe_infer_to_datetimelike": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_datetime_with_timezone": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_datetimelikes_nan": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_cast.TestMaybeDowncast.test_downcast_conv": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.dtypes.cast.maybe_downcast_to_dtype",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "module"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_categorical_dtype": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_datetimetz_dtype": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_invalid_dtype_error": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.object_",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_numpy_dtype": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.pandas_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_numpy_string_dtype": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.pandas_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.TestPandasDtype.test_period_dtype": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.get_is_dtype_funcs": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.core.dtypes.common"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test__get_dtype": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.core.dtypes.common._get_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test__get_dtype_fails": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.dtypes.common._get_dtype",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test__get_dtype_type": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.core.dtypes.common.CategoricalDtypeType",
   "pandas.core.dtypes.common.DatetimeTZDtypeType",
   "pandas.core.dtypes.common.IntervalDtypeType",
   "pandas.core.dtypes.common.PeriodDtypeType",
   "pandas.core.dtypes.common._get_dtype_type",
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_dtype_equal": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_dtype_equal_strict": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.common.pandas_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_get_dtype_error_catch": {
  "lineno": 115,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_bool_dtype": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_bool_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_categorical": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.core.dtypes.common.is_categorical"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_categorical_dtype": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_complex_dtype": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex",
   "pandas.Series",
   "pandas.core.dtypes.common.is_complex_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_any_dtype": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_dtype": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.core.dtypes.common.is_datetime64_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64_ns_dtype": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime64tz_dtype": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.core.dtypes.common.is_datetime64tz_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime_arraylike": {
  "lineno": 259,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.core.dtypes.common.is_datetime_arraylike"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetime_or_timedelta_dtype": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.core.dtypes.common.is_datetime_or_timedelta_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.dtypes.common.is_datetimelike",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike_v_numeric": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.core.dtypes.common.is_datetimelike_v_numeric",
   "pandas.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimelike_v_object": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.core.dtypes.common.is_datetimelike_v_object",
   "pandas.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_datetimetz": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_extension_type": {
  "lineno": 504,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.SparseArray",
   "pandas.SparseSeries",
   "pandas.core.dtypes.common.is_extension_type",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_float_dtype": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_float_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_int64_dtype": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "numpy.uint32",
   "numpy.uint64",
   "pandas.Index",
   "pandas.core.dtypes.common.is_int64_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_int_or_datetime_dtype": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_int_or_datetime_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_integer_dtype": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_interval_dtype": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_numeric_dtype": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_numeric_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_numeric_v_string_like": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_numeric_v_string_like"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_object": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_object_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.core.dtypes.common.is_period"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period_arraylike": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.core.dtypes.common.is_period_arraylike"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_period_dtype": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_scipy_sparse": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.SparseArray",
   "pandas.SparseSeries",
   "pandas.core.dtypes.common.is_scipy_sparse",
   "pandas.util.testing._skip_if_no_scipy",
   "scipy.sparse.bsr_matrix"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_signed_integer_dtype": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "numpy.uint32",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_signed_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_sparse": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.SparseArray",
   "pandas.SparseSeries",
   "pandas.core.dtypes.common.is_sparse",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_string_dtype": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.dtypes.common.is_string_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_string_like_dtype": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.dtypes.common.is_string_like_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_timedelta64_dtype": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_timedelta64_ns_dtype": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.timedelta64",
   "pandas.core.dtypes.common.is_timedelta64_ns_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_is_unsigned_integer_dtype": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint32",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_unsigned_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_common.test_needs_i8_conversion": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.check_concat": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.concat.get_dtype_kinds"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_datetimelike": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_datetimelike_object": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_concat.TestConcatCompat.test_get_dtype_kinds_period": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.dtypes.concat.get_dtype_kinds"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_dtypes.Base": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.Base.setup_method": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_equality_invalid": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.core.dtypes.common.is_dtype_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_hash": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_numpy_informed": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.str_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.Base.test_pickle": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.create": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_basic": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.core.dtypes.common.is_categorical",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_construction_from_string": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.CategoricalDtype.construct_from_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_constructor_invalid": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_equality": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_hash_vs_equality": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_is_dtype": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype.is_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_pickle": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtype.test_tuple_categories": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_basic": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_categorical_categories": {
  "lineno": 662,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Index",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_categorical_equality": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_categories": {
  "lineno": 562,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_equal_but_different": {
  "lineno": 567,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_from_categorical_dtype_both": {
  "lineno": 648,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_from_categorical_dtype_categories": {
  "lineno": 634,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_from_categorical_dtype_identity": {
  "lineno": 628,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_from_categorical_dtype_ordered": {
  "lineno": 641,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.core.dtypes.dtypes.CategoricalDtype._from_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_invalid_raises": {
  "lineno": 616,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_mixed": {
  "lineno": 623,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_nan_invalid": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_non_unique_invalid": {
  "lineno": 586,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_order_hashes_different": {
  "lineno": 573,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_order_matters": {
  "lineno": 551,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_same_categories_different_order": {
  "lineno": 590,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_str_vs_repr": {
  "lineno": 655,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestCategoricalDtypeParametrized.test_unordered_same": {
  "lineno": 557,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.create": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_basic": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_coerce_to_dtype": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._coerce_to_dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_compat": {
  "lineno": 163,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_construction": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_construction_from_string": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype.construct_from_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_dst": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_empty": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_equality": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_hash_vs_equality": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_is_dtype": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype.is_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_parser": {
  "lineno": 230,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestDatetimeTZDtype.test_subclass": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.create": {
  "lineno": 388,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_basic": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.core.dtypes.common.is_interval_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_basic_dtype": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.int64",
   "numpy.object_",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_tuples",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_caching": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pandas.core.dtypes.dtypes.IntervalDtype._cache",
   "pandas.core.dtypes.dtypes.IntervalDtype.reset_cache",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_coerce_to_dtype": {
  "lineno": 466,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._coerce_to_dtype",
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction_from_string": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pandas.core.dtypes.dtypes.IntervalDtype.construct_from_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_construction_generic": {
  "lineno": 427,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_equality": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_hash_vs_equality": {
  "lineno": 391,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_identity": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_is_dtype": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object_",
   "pandas.core.dtypes.dtypes.IntervalDtype",
   "pandas.core.dtypes.dtypes.IntervalDtype.is_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestIntervalDtype.test_subclass": {
  "lineno": 439,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.IntervalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.create": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_basic": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.core.dtypes.common.is_period",
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_coerce_to_dtype": {
  "lineno": 299,
  "symbols_in_volume": [
   "pandas.core.dtypes.common._coerce_to_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_compat": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_construction": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_period_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Hour",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_construction_from_string": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype.construct_from_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_empty": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_equality": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_dtype_equal",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_hash_vs_equality": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_identity": {
  "lineno": 289,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_is_dtype": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object_",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype.is_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_not_string": {
  "lineno": 381,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_string_dtype",
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_dtypes.TestPeriodDtype.test_subclass": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.core.dtypes.dtypes.PeriodDtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_generic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_generic.TestABCClasses": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.SparseArray",
   "pandas.period_range",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "class"
 },
 "pandas.tests.dtypes.test_generic.TestABCClasses.test_abc_types": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.Period",
   "pandas.Series",
   "pandas.UInt64Index",
   "pandas.core.dtypes.generic.ABCCategorical",
   "pandas.core.dtypes.generic.ABCCategoricalIndex",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCDateOffset",
   "pandas.core.dtypes.generic.ABCDatetimeIndex",
   "pandas.core.dtypes.generic.ABCFloat64Index",
   "pandas.core.dtypes.generic.ABCIndex",
   "pandas.core.dtypes.generic.ABCIndexClass",
   "pandas.core.dtypes.generic.ABCInt64Index",
   "pandas.core.dtypes.generic.ABCMultiIndex",
   "pandas.core.dtypes.generic.ABCPanel",
   "pandas.core.dtypes.generic.ABCPeriod",
   "pandas.core.dtypes.generic.ABCPeriodIndex",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.dtypes.generic.ABCSparseArray",
   "pandas.core.dtypes.generic.ABCSparseSeries",
   "pandas.core.dtypes.generic.ABCTimedeltaIndex",
   "pandas.core.dtypes.generic.ABCUInt64Index",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_generic.test_setattr_warnings": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_inference.TestInference": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_infs": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas._libs.lib.maybe_convert_numeric"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_non_hashable": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_int64_uint64": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_uint64": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_uint64_nan": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_convert_numeric_uint64_nan_values": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_infer_dtype_bytes": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.PY2"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_isinf_scalar": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas._libs.lib.isneginf_scalar",
   "pandas._libs.lib.isposinf_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_numeric_infinities": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.compat.u",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_numeric_post_floatify_nan": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "pandas._libs.lib.maybe_convert_numeric",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_maybe_convert_objects_uint64": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.uint64",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_mixed_dtypes_remain_object_array": {
  "lineno": 402,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas._libs.lib.maybe_convert_objects",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestInference.test_scientific_no_exponent": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.isnan",
   "pandas._libs.lib.maybe_convert_numeric"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_bool": {
  "lineno": 848,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_bool"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_datetime_dtypes": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_datetime64_any_dtype",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_float": {
  "lineno": 894,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_float"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_integer": {
  "lineno": 870,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_number": {
  "lineno": 823,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.bool",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestNumberScalar.test_is_timedelta": {
  "lineno": 948,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.common.is_timedelta64_ns_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_bools": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.nan",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_categorical": {
  "lineno": 802,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_date": {
  "lineno": 742,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.nan",
   "pandas.Index",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_datetime": {
  "lineno": 508,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_decimals": {
  "lineno": 477,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_floats": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_all_nan_nat_like": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_datetime": {
  "lineno": 514,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_period": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Period",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_infer_dtype_timedelta": {
  "lineno": 579,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_integers": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_is_datetimelike_array_all_nan_nat_like": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas._libs.lib.is_datetime64_array",
   "pandas._libs.lib.is_datetime_array",
   "pandas._libs.lib.is_timedelta64_array",
   "pandas._libs.lib.is_timedelta_array",
   "pandas._libs.lib.is_timedelta_or_timedelta64_array"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_is_period": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Timestamp",
   "pandas._libs.lib.is_period"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_length_zero": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_object": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_string": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_to_object_array_tuples": {
  "lineno": 755,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas._libs.lib.to_object_array_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_to_object_array_width": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.to_object_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.TestTypeInference.test_unicode": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.lib.infer_dtype",
   "pandas.compat.PY2"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_builtin_nonscalars": {
  "lineno": 981,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_builtin_scalars": {
  "lineno": 966,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.time",
   "datetime.timedelta",
   "numpy.nan",
   "pandas.NaT",
   "pandas.compat.u",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_array_scalars": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.object_",
   "numpy.str_",
   "numpy.timedelta64",
   "numpy.unicode_",
   "pandas.compat.u",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_arrays": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matrix",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_numpy_zerodim_arrays": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas._libs.lib.item_from_zerodim",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_isscalar_pandas_scalars": {
  "lineno": 1014,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.Testisscalar.test_lisscalar_pandas_containers": {
  "lineno": 1019,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Panel",
   "pandas.Series",
   "pandas.core.dtypes.common.is_scalar",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.coerce": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_datetimeindex_from_empty_datetime64_array": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_ensure_categorical": {
  "lineno": 1074,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "pandas.Categorical",
   "pandas.core.dtypes.common._ensure_categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_ensure_int32": {
  "lineno": 1064,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.int64",
   "pandas.core.dtypes.common._ensure_int32"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_dict_like": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.inference.is_dict_like"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_file_like": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.inference.is_file_like",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_file_like.MockFile": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable": {
  "lineno": 162,
  "symbols_in_volume": [
   "collections.Hashable",
   "numpy.array",
   "numpy.float64",
   "pandas.compat.PY2",
   "pandas.core.dtypes.inference.is_hashable"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.HashableClass": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.OldStyleClass": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass1": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass2": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_hashable.UnhashableClass2.__hash__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_list_like": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.inference.is_list_like"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_named_tuple": {
  "lineno": 151,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.Series",
   "pandas.core.dtypes.inference.is_named_tuple"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_nested_list_like_fails": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.dtypes.inference.is_nested_list_like",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_nested_list_like_passes": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.dtypes.inference.is_list_like",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_re": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.core.dtypes.inference.is_re",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_recompilable": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.core.dtypes.inference.is_re_compilable",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_scipy_sparse": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.common.is_scipy_sparse",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.compat.u",
   "pandas.core.dtypes.inference.is_sequence"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence.A": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_inference.test_is_sequence.A.__getitem__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.dtypes.test_inference.test_nan_to_nat_conversions": {
  "lineno": 1037,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.lrange",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_downcast_int64": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint8",
   "pandas._libs.lib.downcast_int64",
   "pandas._libs.parsers.na_values",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_bools": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_decimals": {
  "lineno": 68,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_floats": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_ints": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_longs": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.compat.long",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_strings": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_io.TestParseSQL.test_convert_sql_column_unicode": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.convert_sql_column",
   "pandas.compat.u",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_0d_array": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.dtypes.missing.isna"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_complex": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.float64",
   "numpy.nan",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.core.dtypes.missing.isna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_datetime_other_units": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_empty_object": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones",
   "pandas.core.dtypes.missing.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_isna_datetime": {
  "lineno": 141,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "numpy.asarray",
   "numpy.ones",
   "numpy.zeros",
   "pandas.DatetimeIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_isna_isnull": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.inf",
   "pandas.Series",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.isnull",
   "pandas.util.testing.add_nans",
   "pandas.util.testing.add_nans_panel4d",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makeFloatSeries",
   "pandas.util.testing.makeMixedDataFrame",
   "pandas.util.testing.makeObjectSeries",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "pandas.util.testing.makePeriodFrame",
   "pandas.util.testing.makePeriodPanel",
   "pandas.util.testing.makePeriodSeries",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_isna_lists": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.u",
   "pandas.core.dtypes.missing.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_isna_nat": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.core.dtypes.missing.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_isna_numpy_nat": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.core.dtypes.missing.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_period": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.TestIsNA.test_timedelta_other_units": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.core.dtypes.missing.isna",
   "pandas.core.dtypes.missing.notna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Float64Index",
   "pandas.TimedeltaIndex",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent_compat": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_array_equivalent_str": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_na_value_for_dtype": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.isnan",
   "pandas.NaT",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.missing.na_value_for_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.dtypes.test_missing.test_notna_notnull": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.inf",
   "pandas.Series",
   "pandas.core.config.option_context",
   "pandas.core.dtypes.missing.notna",
   "pandas.core.dtypes.missing.notnull",
   "pandas.util.testing.makeFloatSeries",
   "pandas.util.testing.makeObjectSeries",
   "pandas.util.testing.makePeriodSeries",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData"
  ],
  "type": "module"
 },
 "pandas.tests.frame.common.TestData": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.common.TestData.all_mixed": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.empty": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame2": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.intframe": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float2": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_frame": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_int": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.simple": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts1": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts2": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tsframe": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tzframe": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_float": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_int": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_ambiguous_warns": {
  "lineno": 1001,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_assign_columns": {
  "lineno": 978,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_construction_with_categorical_index": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeCategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_dti_set_index_reindex": {
  "lineno": 346,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reindex_api_equivalence": {
  "lineno": 940,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reindex_signature": {
  "lineno": 1016,
  "symbols_in_volume": [
   "inspect.signature",
   "pandas.DataFrame.reindex",
   "pandas.compat.PY2",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_axis_inplace": {
  "lineno": 423,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_axis_style": {
  "lineno": 860,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_axis_style_raises": {
  "lineno": 908,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_axis_warns": {
  "lineno": 440,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_bug": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_inplace": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_mapper_multi": {
  "lineno": 894,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_multiindex": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_nocopy": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_objects": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_positional": {
  "lineno": 967,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_positional_named": {
  "lineno": 901,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_signature": {
  "lineno": 1009,
  "symbols_in_volume": [
   "inspect.signature",
   "pandas.DataFrame.rename",
   "pandas.compat.PY2",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reorder_levels": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_level": {
  "lineno": 682,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_multiindex_col": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_multiindex_nan": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_range": {
  "lineno": 815,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_right_dtype": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_with_datetimeindex_cols": {
  "lineno": 802,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_with_intervals": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_columns": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index2": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_bug": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast_datetimeindex": {
  "lineno": 199,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_dst": {
  "lineno": 288,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_empty_column": {
  "lineno": 327,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_multiindexcolumns": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_names": {
  "lineno": 826,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_nonuniq": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_pass_arrays": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_preserve_categorical_dtype": {
  "lineno": 986,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_timezone": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_set_axis_inplace": {
  "lineno": 1074,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_set_axis_prior_to_deprecation_signature": {
  "lineno": 1114,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_set_reset_index": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.cut"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestIntervalIndex.test_setitem": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.IntervalIndex",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.cut",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail.__nonzero__": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.skipna_wrapper": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.wrapper": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_method": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.skipna_wrapper": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.wrapper": {
  "lineno": 746,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_any_all": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_bool_describe_in_mixed_frame": {
  "lineno": 243,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_built_in_round": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip": {
  "lineno": 1827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_frame": {
  "lineno": 1934,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_list_like": {
  "lineno": 1914,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_series": {
  "lineno": 1885,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_mixed_numeric": {
  "lineno": 1874,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_with_na_args": {
  "lineno": 1950,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_constant": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.isna",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_cov_independent_index_column": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int_and_boolean": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_kendall": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_non_numeric": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_nooverlap": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.isna",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_pearson": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_spearman": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_matches_corrcoef": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.corrcoef",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_series": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_with_objects": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count": {
  "lineno": 395,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.notna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count_objects": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cov": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.linspace",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummax": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.shape",
   "pandas.DataFrame",
   "pandas.Series.cummax",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummin": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.shape",
   "pandas.DataFrame",
   "pandas.Series.cummin",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumprod": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.nan",
   "numpy.shape",
   "pandas.Series.cumprod",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.shape",
   "pandas.DataFrame",
   "pandas.Series.cumsum",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum_corner": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dataframe_clip": {
  "lineno": 1859,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_bool_frame": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_categorical_columns": {
  "lineno": 299,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_datetime_columns": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_timedelta_values": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dot": {
  "lineno": 1963,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA": {
  "lineno": 1473,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA_for_take_all": {
  "lineno": 1544,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_for_take_all": {
  "lineno": 1412,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_inplace": {
  "lineno": 1578,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_tuple": {
  "lineno": 1446,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_with_duplicate_column_names": {
  "lineno": 1397,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmax": {
  "lineno": 1021,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series.idxmax",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmin": {
  "lineno": 1007,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series.idxmin",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_inplace_clip": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin": {
  "lineno": 1144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_against_series": {
  "lineno": 1244,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df": {
  "lineno": 1193,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df_dupe_values": {
  "lineno": 1216,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dict": {
  "lineno": 1164,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dupe_self": {
  "lineno": 1235,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_empty": {
  "lineno": 1155,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_empty_datetimelike": {
  "lineno": 1278,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_multiIndex": {
  "lineno": 1254,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_tuples": {
  "lineno": 1208,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_with_string_scalar": {
  "lineno": 1182,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt.alt": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.stats.kurtosis"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mad": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_max": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean_corner": {
  "lineno": 952,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median.wrapper": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner.wrapper": {
  "lineno": 977,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_min": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mixed_ops": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mode": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numeric_only_flag": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numpy_round": {
  "lineno": 1771,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nunique": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.algorithms.unique1d",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_operators_timedelta64": {
  "lineno": 852,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_product": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_reduce_mixed_frame": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round": {
  "lineno": 1648,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.nan",
   "numpy.round",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "sys.version"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_issue": {
  "lineno": 1797,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_mixed_type": {
  "lineno": 1782,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sem": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.repeat",
   "numpy.sqrt",
   "numpy.std",
   "pandas.core.nanops.nansem",
   "pandas.option_context",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew": {
  "lineno": 682,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew.alt": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stat_operators_attempt_obj_array": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stats_mixed_type": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bool": {
  "lineno": 946,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bools": {
  "lineno": 1000,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_corner": {
  "lineno": 931,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_object": {
  "lineno": 939,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_var_std": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.repeat",
   "numpy.std",
   "numpy.var",
   "pandas.core.nanops.nanvar",
   "pandas.option_context",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest": {
  "lineno": 2051,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n": {
  "lineno": 2058,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_all_dtypes": {
  "lineno": 2107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_duplicate_index": {
  "lineno": 2126,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_error": {
  "lineno": 2092,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_n_identical_values": {
  "lineno": 2112,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestNLargestNSmallest.test_series_broadcasting": {
  "lineno": 2147,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.df_duplicates": {
  "lineno": 2016,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.df_main_dtypes": {
  "lineno": 2031,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.df_strings": {
  "lineno": 2024,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "pandas.DataFrame",
   "pytest.fixture",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_api.SharedWithSparse": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_api.SharedWithSparse._assert_frame_equal": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse._assert_series_equal": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_add_prefix_suffix": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_array_interface": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_as_matrix": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_axis_aliases": {
  "lineno": 297,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_column_contains_typeerror": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_copy_index_name_checking": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_empty_nonzero": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_get_agg_axis": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_get_axis": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_get_value": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_getitem_pop_assign_name": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_items": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_iter": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_iteritems": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_iteritems_names": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_iterrows": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_itertuples": {
  "lineno": 199,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.is_platform_32bit",
   "pandas.compat.is_platform_windows",
   "pandas.compat.long",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "sys.version"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_keys": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_len": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_more_asMatrix": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_new_empty_index": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_nonzero": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_not_hashable": {
  "lineno": 131,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_repr_with_mi_nat": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_series_put_names": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_swapaxes": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_transpose": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.object_",
   "pandas.compat.iteritems",
   "pandas.util.testing.getMixedTypeDict"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.SharedWithSparse.test_with_datetimelikes": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.tests.frame.common.TestData",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_deepcopy": {
  "lineno": 367,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_inplace_return_self": {
  "lineno": 380,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_inplace_return_self._check_f": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_tab_complete_warning": {
  "lineno": 444,
  "symbols_in_volume": [
   "IPython.core.completer.provisionalcompleter",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_transpose_get_view": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_api.TestDataFrameMisc.test_values": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate": {
  "lineno": 485,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_dict_nested_renaming_depr": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_reduce": {
  "lineno": 577,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_agg_transform": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.errstate",
   "numpy.sqrt",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_demo": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_non_callable_aggregates": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_nuiscance_columns": {
  "lineno": 611,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_transform_and_agg_err": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameAggregate.test_transform_and_agg_err.f": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.mean",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_attach_name": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_axis1": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_broadcast": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug": {
  "lineno": 293,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug.f": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_convert_objects": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_dict": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_differently_indexed": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series.describe",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nan",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check._checkit": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_ignore_failures": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_datetimelike": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_dtype_corner": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform2": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_multi_index": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_non_numpy_dtype": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_raw": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_reduce_Series": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nan",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_standard_nonunique": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.add_some": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.agg_and_add": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.subtract_and_divide": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_yield_list": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap_box": {
  "lineno": 429,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_frame_apply_dont_convert_datetime64": {
  "lineno": 447,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_with_string_args": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_apply.zip_frames": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_asof": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.setup_method": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_all_nans": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_basic": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_missing": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_asof.TestFrameAsof.test_subset": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align": {
  "lineno": 654,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align_fill": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align": {
  "lineno": 548,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_inner": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_left": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_outer": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_right": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_int_fill_bug": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_multiindex": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_series_combinations": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_api_equivalence": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_col_still_multiindex": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_multiindex_not_lexsorted": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_names": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter": {
  "lineno": 797,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_bytestring": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_corner": {
  "lineno": 908,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_regex_search": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_unicode": {
  "lineno": 887,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_merge_join_different_levels": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.Index",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_api_equivalence": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axes": {
  "lineno": 376,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axis": {
  "lineno": 1062,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axis_style": {
  "lineno": 452,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axis_style_raises": {
  "lineno": 476,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_boolean": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.object_",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_columns": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_columns_method": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_corner": {
  "lineno": 1052,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_dups": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_fill_value": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_int": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_like": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_multi": {
  "lineno": 1103,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_name_remains": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_nan": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_objects": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_positional_warns": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_single_named_indexer": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_with_nans": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_select": {
  "lineno": 917,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_take": {
  "lineno": 952,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_consolidate": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_lcd": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_numeric_cols": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_boolean_set_uncons": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_cast_internals": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_datetime64": {
  "lineno": 377,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_deprecation": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_inplace": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_conversions": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_mixed": {
  "lineno": 207,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.now",
   "datetime.timedelta",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.compat.is_platform_windows",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes.f": {
  "lineno": 282,
  "symbols_in_volume": [
   "datetime.datetime",
   "itertools.repeat",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_with_convert": {
  "lineno": 140,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.asarray",
   "numpy.complex_",
   "numpy.float_",
   "numpy.int64",
   "numpy.nan",
   "numpy.object_",
   "numpy.uint64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects_no_conversion": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy_blocks": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_equals_different_blocks": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_X_columns": {
  "lineno": 546,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_numeric_data": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.e",
   "numpy.float_",
   "numpy.int_",
   "numpy.object_",
   "numpy.pi",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_infer_objects": {
  "lineno": 506,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_is_mixed_type": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_modify_values": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_no_copy_blocks": {
  "lineno": 335,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_pickle": {
  "lineno": 362,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_stale_cached_series_bug_473": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.isna",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_strange_column_corruption_issue": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst": {
  "lineno": 444,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first": {
  "lineno": 460,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_align_nan": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_int": {
  "lineno": 743,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_mixed": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_mixed_bug": {
  "lineno": 521,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_period": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_timedelta": {
  "lineno": 698,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_combine_first_timezone": {
  "lineno": 626,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineFirst.test_concat_datetime_datetime64_frame": {
  "lineno": 753,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.lrange",
   "pandas.concat",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_dtypes": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_empty_dataframe": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_list_of_series_dicts": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_append_series_dict": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_axis_parameter": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_multiple_frames_dtypes": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_multiple_tzs": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_named_keys": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_numerical_names": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_concat_tuple_keys": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_join_multiindex_leftright": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_join_str_datetime": {
  "lineno": 297,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_dtypes": {
  "lineno": 218,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_filtered": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_from_non_df": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_nooverwrite": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameConcatCommon.test_update_raise": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameUpdate": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameUpdate.test_update_nan": {
  "lineno": 770,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ": {
  "lineno": 1939,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_datetime64_mixed_index_ctor_1681": {
  "lineno": 1980,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_dict_constructor_datetime64_1680": {
  "lineno": 1972,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_frame_timeseries_to_records": {
  "lineno": 1988,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_from_dict": {
  "lineno": 1941,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructorWithDatetimeTZ.test_from_index": {
  "lineno": 1957,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors._check_basic_constructor": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_DataFrame": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_copy_bug": {
  "lineno": 1027,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_differently_indexed": {
  "lineno": 1135,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_named": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_named_and_columns": {
  "lineno": 1119,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_arrays_and_scalars": {
  "lineno": 747,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_bool": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_cast_failure": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_column_duplicates": {
  "lineno": 1226,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_items",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_complex_dtypes": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.random.rand",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_corner": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_datetimes_with_nulls": {
  "lineno": 1398,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_block": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_cast": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index": {
  "lineno": 445,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index.create_data": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_dont_upcast": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_multiindex": {
  "lineno": 420,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_of_tuples": {
  "lineno": 411,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index": {
  "lineno": 470,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index.create_data": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_copy": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_list_data": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_nocast_view": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list.empty_gen": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_with_string_dtype": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.str_",
   "numpy.unicode_",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_error_msgs": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.random.rand",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_for_list_with_dtypes": {
  "lineno": 1407,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.float_",
   "numpy.int_",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_frame_copy": {
  "lineno": 1474,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_from_items": {
  "lineno": 1164,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.DataFrame.from_items",
   "pandas._libs.lib.list_to_object_array",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_generator": {
  "lineno": 877,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator_failure": {
  "lineno": 1222,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_frames": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts": {
  "lineno": 1002,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts.CustomDict": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_dicts": {
  "lineno": 892,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.compat.OrderedDict",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_lists": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_series": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.OrderedDict",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_lists_to_object_dtype": {
  "lineno": 1534,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.object_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_manager_resize": {
  "lineno": 1155,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.ma.masked_all",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray_nonfloat": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.float64",
   "numpy.int64",
   "numpy.ma.copy",
   "numpy.ma.masked_all",
   "pandas.DataFrame",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_miscast_na_int_dtype": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mix_series_nonseries": {
  "lineno": 1208,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.util.testing.getMixedTypeDict"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dict_and_Series": {
  "lineno": 1031,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._check_mixed_dtypes": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._make_mixed_dtypes_df": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_more": {
  "lineno": 762,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.ones",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mrecarray": {
  "lineno": 673,
  "symbols_in_volume": [
   "functools.partial",
   "itertools.combinations",
   "numpy.array",
   "numpy.ma.masked_all",
   "numpy.ma.masked_array",
   "numpy.ma.mrecords.fromarrays",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_multi_index": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_namedtuples": {
  "lineno": 1055,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray_copy": {
  "lineno": 1480,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordered_dict_conflicting_orders": {
  "lineno": 927,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordered_dict_preserve_order": {
  "lineno": 909,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordereddict": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.OrderedDict",
   "pandas.compat.lrange",
   "pandas.compat.zip",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_orient": {
  "lineno": 1069,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_overflow_int64": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.compat.long",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_period": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ragged": {
  "lineno": 1014,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_range_dtype": {
  "lineno": 1931,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_rec": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar": {
  "lineno": 1021,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar_inference": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.complex128",
   "numpy.float64",
   "numpy.int64",
   "numpy.object_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like": {
  "lineno": 837,
  "symbols_in_volume": [
   "array.array",
   "pandas.DataFrame",
   "pandas.DataFrame.from_items",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer": {
  "lineno": 842,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__getitem__": {
  "lineno": 847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__init__": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__len__": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_series_copy": {
  "lineno": 1490,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_single_value": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_subclass_dict": {
  "lineno": 347,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.util.testing.TestSubDict",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_tuples": {
  "lineno": 1050,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_datetimes": {
  "lineno": 1277,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.float_",
   "numpy.int_",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_embedded_frames": {
  "lineno": 332,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check": {
  "lineno": 1502,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.compat.range",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check.f": {
  "lineno": 1516,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_bad_index_column": {
  "lineno": 1879,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_columns_not_modified": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_decimal": {
  "lineno": 1644,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.float64",
   "numpy.isnan",
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_dictlike": {
  "lineno": 1838,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_duplicates": {
  "lineno": 1656,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty": {
  "lineno": 1714,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty_with_nonempty_fields_gh3682": {
  "lineno": 1724,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_iterator": {
  "lineno": 1579,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_len0_with_columns": {
  "lineno": 1912,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator": {
  "lineno": 1615,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator.list_generator": {
  "lineno": 1616,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_misc_brokenness": {
  "lineno": 1681,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple": {
  "lineno": 1893,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.compat.lmap",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record": {
  "lineno": 1894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__getitem__": {
  "lineno": 1899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__init__": {
  "lineno": 1896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__iter__": {
  "lineno": 1902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_nones": {
  "lineno": 1571,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_sequencelike": {
  "lineno": 1765,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.recarray",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.compat.iteritems",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name": {
  "lineno": 1665,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name.create_dict": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_to_records": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator": {
  "lineno": 1598,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator.tuple_generator": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_datetimes": {
  "lineno": 1736,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.core.records.fromarrays",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.is_platform_little_endian",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_index_data": {
  "lineno": 1872,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_nested_dict_frame_constructor": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_to_frame_with_falsey_names": {
  "lineno": 1922,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_frame_to_dict_tz": {
  "lineno": 256,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_dict_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict": {
  "lineno": 154,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_dict_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_box_scalars": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_errors": {
  "lineno": 213,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_invalid_orient": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_not_unique_warning": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_timestamp": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_datetimeindex_with_tz": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_dt64": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_floats": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_index_name": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_Mapping_type": {
  "lineno": 96,
  "symbols_in_volume": [
   "collections.Mapping.register",
   "email.message.Message",
   "email.parser.Parser",
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_multindex": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_unicode_column_names": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.rec.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_unicode_index": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.rec.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_arg_for_errors_in_astype": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype._check_cast": {
  "lineno": 422,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_cast_nan_inf_int": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.int32",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_categoricaldtype_class_raises": {
  "lineno": 622,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.api.types.CategoricalDtype",
   "pandas.api.types.DatetimeTZDtype",
   "pandas.api.types.IntervalDtype",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_dict_like": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_duplicate_col": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_str": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas._np_version_under1p14",
   "pandas.compat.text_type",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_exclude_string": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_view": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.round"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_concat_empty_dataframe_dtypes": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.float64",
   "numpy.int32",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_datetime_with_tz_dtypes": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_are_correct_after_column_slice": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.float_",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_gh8722": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.option_context",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_empty_frame_dtypes_ftypes": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.dtype",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.object",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_ftypes": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_arg_raises": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_datetime64": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_datetime_with_tz": {
  "lineno": 327,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_empty": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude_include_using_list_like": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude_using_list_like": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude_using_scalars": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include_exclude_mixed_scalars_lists": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include_exclude_using_scalars": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include_using_list_like": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include_using_scalars": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.number",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_not_an_attr_but_still_valid_dtype": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_str_raises": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.string_",
   "numpy.unicode_",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_typecodes": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.typecodes",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_timedeltas": {
  "lineno": 636,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ": {
  "lineno": 673,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_astype": {
  "lineno": 709,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_astype_str": {
  "lineno": 742,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDatetimeWithTZ.test_interleave": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_at_time_between_time_datetimeindex": {
  "lineno": 2170,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_index_empty_corner": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing": {
  "lineno": 2315,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing_mixed": {
  "lineno": 2336,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.long",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_delitem_corner": {
  "lineno": 738,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_int_labels": {
  "lineno": 980,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.core.common.SettingWithCopyError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed.f": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_index_int_labels_exceptions": {
  "lineno": 1003,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_setitem_int_labels": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_set_value_no_partial_indexing": {
  "lineno": 1758,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_value": {
  "lineno": 1636,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getattr": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.equalContents",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.where",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_casting": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_iadd": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list._checkit": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_callable": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_dupe_cols": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_empty_frame_with_boolean": {
  "lineno": 731,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_1d": {
  "lineno": 1177,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_2d": {
  "lineno": 746,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_boolean": {
  "lineno": 1310,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_ints": {
  "lineno": 1350,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_scalar": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_slice_integers_step": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_iterator": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_boolean_duplicates_multiple": {
  "lineno": 1598,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_float_duplicates": {
  "lineno": 2070,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_mixed_integer": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list_duplicates": {
  "lineno": 1625,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_misaligned": {
  "lineno": 1367,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_multi": {
  "lineno": 1381,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_fancy_exceptions": {
  "lineno": 1359,
  "symbols_in_volume": [
   "pandas.core.indexing.IndexingError",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels": {
  "lineno": 1397,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels.f": {
  "lineno": 1443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_integer_slice_keyerrors": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_bool_keyerror": {
  "lineno": 1615,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_duplicates": {
  "lineno": 1581,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_negative_integers": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_non_ix_labels": {
  "lineno": 1112,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_head_tail": {
  "lineno": 2905,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iat": {
  "lineno": 1903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_col": {
  "lineno": 1824,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.common.SettingWithCopyError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_col.f": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_duplicates": {
  "lineno": 1853,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_row": {
  "lineno": 1794,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.common.SettingWithCopyError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_row.f": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iloc_sparse_propegate_fill_value": {
  "lineno": 1898,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_index_namedtuple": {
  "lineno": 2299,
  "symbols_in_volume": [
   "collections.namedtuple",
   "pandas.DataFrame",
   "pandas.Index",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_align": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_dup": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_frame_align": {
  "lineno": 1088,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take": {
  "lineno": 1132,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_multiindex": {
  "lineno": 1153,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_nonint_index": {
  "lineno": 1145,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup": {
  "lineno": 1645,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.alt": {
  "lineno": 1646,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.zip",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.testit": {
  "lineno": 1654,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask": {
  "lineno": 2848,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_callable": {
  "lineno": 2884,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_edge_case_1xN_frame": {
  "lineno": 2877,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_inplace": {
  "lineno": 2861,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_nested_exception": {
  "lineno": 1911,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_non_monotonic_reindex_methods": {
  "lineno": 1987,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_frame_add_nat": {
  "lineno": 1972,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.issubdtype",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.common.isna",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level": {
  "lineno": 1999,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.concatenate",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify": {
  "lineno": 2010,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify_first_level": {
  "lineno": 2003,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.nonzero",
   "pandas.compat.map",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_methods": {
  "lineno": 1927,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_dataframe_column_ns_dtype": {
  "lineno": 1983,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.dtype",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value": {
  "lineno": 1682,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_resize": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.isna",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_with_index_dtype_change": {
  "lineno": 1728,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setattr_column": {
  "lineno": 415,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.column_stack",
   "numpy.nan",
   "numpy.object_",
   "numpy.random.randn",
   "numpy.ravel",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.common.SettingWithCopyError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem.f": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_None": {
  "lineno": 690,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_always_copy": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_ambig": {
  "lineno": 654,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.object_",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nan",
   "numpy.putmask",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean_column": {
  "lineno": 588,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_callable": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_cast": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.float64",
   "numpy.int64",
   "numpy.int8",
   "numpy.integer",
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_clear_caches": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner": {
  "lineno": 597,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.arange",
   "numpy.float64",
   "numpy.int64",
   "numpy.object_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner2": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetime_coercion": {
  "lineno": 2138,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetimelike_with_inference": {
  "lineno": 2147,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.timedelta64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty_frame_with_boolean": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_1d": {
  "lineno": 1228,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_2d": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_boolean": {
  "lineno": 1334,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_mixed_2d": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_scalar": {
  "lineno": 1294,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame": {
  "lineno": 1517,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame_align": {
  "lineno": 1572,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.int_",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_not_dataframe": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_of_tuples": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_mulit_index": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.shuffle",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_other_callable": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_scalars_no_index": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed": {
  "lineno": 1481,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed_datetime": {
  "lineno": 1489,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_tuple": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_sparse_value": {
  "lineno": 2109,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_sparse_value": {
  "lineno": 2116,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_tz_aware_datetime_column": {
  "lineno": 2124,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_single_element_ix_dont_upcast": {
  "lineno": 1766,
  "symbols_in_volume": [
   "numpy.integer",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_slice_floats": {
  "lineno": 786,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_type_error_multiindex": {
  "lineno": 2930,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where": {
  "lineno": 2368,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_align": {
  "lineno": 2416,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.where",
   "pandas.Series",
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_get": {
  "lineno": 2381,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_set": {
  "lineno": 2473,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.integer",
   "numpy.nan",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add": {
  "lineno": 2372,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add.is_ok": {
  "lineno": 2374,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align": {
  "lineno": 2682,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.notna",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align.create": {
  "lineno": 2684,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_array_like": {
  "lineno": 2508,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_axis": {
  "lineno": 2722,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_bug": {
  "lineno": 2598,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_callable": {
  "lineno": 2827,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_complex": {
  "lineno": 2714,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_dataframe_col_match": {
  "lineno": 2562,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_datetime": {
  "lineno": 2652,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_invalid_input": {
  "lineno": 2528,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_ndframe_align": {
  "lineno": 2576,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_none": {
  "lineno": 2665,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs": {
  "lineno": 2216,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_corner": {
  "lineno": 2249,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_duplicates": {
  "lineno": 2269,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_keep_level": {
  "lineno": 2276,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_view": {
  "lineno": 2289,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ": {
  "lineno": 2958,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.setup_method": {
  "lineno": 2960,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_set_reset": {
  "lineno": 2996,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_setitem": {
  "lineno": 2966,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.notna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingDatetimeWithTZ.test_transpose": {
  "lineno": 3008,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64": {
  "lineno": 3016,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.setup_method": {
  "lineno": 3018,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.uint64",
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_set_reset": {
  "lineno": 3050,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_setitem": {
  "lineno": 3024,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.NaT",
   "pandas.Series",
   "pandas.notna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexingUInt64.test_transpose": {
  "lineno": 3062,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_join.frame": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.frame_with_period_index": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.PeriodIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.left": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.right": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index_more": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_index_series": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_overlap": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_join.test_join_period_index": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.concatenate",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "scipy.__version__"
  ],
  "type": "module"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate": {
  "lineno": 525,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_alt_scipy": {
  "lineno": 622,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal",
   "scipy.__version__"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_bad_method": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_basic": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_combo": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_ignore_all_good": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace_row": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_leading_nans": {
  "lineno": 680,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_nan_idx": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_raise_on_only_mixed": {
  "lineno": 692,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_rowwise": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_various": {
  "lineno": 573,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_rowwise_alt": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_bfill": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropEmptyRows": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropIncompleteRows": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_drop_and_dropna_caching": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_corner": {
  "lineno": 159,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_multiple_axes": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_ffill": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_corner": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_value_when_combine_const": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.tests.frame.common._check_mixed_float",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_col_reordering": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_columns": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dataframe": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_datetime_columns": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dict_series": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_downcast": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dtype_conversion": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_inplace": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_method": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_value": {
  "lineno": 486,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_skip_certain_blocks": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_frame_fillna_limit": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_frame_pad_backfill_limit": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_missing._skip_if_no_pchip": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_bad": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_multiple": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_order": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY36",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_delitem": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_delitem_multiindex": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_benchmark": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.repeat",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_column_bug_4032": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_error_msmgs": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop": {
  "lineno": 202,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop_non_unique_cols": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_as_matrix_duplicates": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups2": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing.check": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing2": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_items",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.u",
   "pandas.concat",
   "pandas.date_range",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations.check": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_columns_with_dups": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_insert_with_columns_dups": {
  "lineno": 469,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_set_value_by_index": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators._test_op": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_alignment_non_pandas": {
  "lineno": 1206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.ops._align_method_FRAME",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_alignment_non_pandas_object": {
  "lineno": 752,
  "symbols_in_volume": [
   "collections.deque",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_frame": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "operator",
   "pandas.compat.PY3",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.tests.frame.common._check_mixed_float",
   "pandas.tests.frame.common._check_mixed_int",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_series": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.nan",
   "operator",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_getitem_commute": {
  "lineno": 528,
  "symbols_in_volume": [
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_mixed": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_non_pandas_object": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_binary_ops_align": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "operator",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame": {
  "lineno": 560,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.randn",
   "operator",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._check_unaligned_frame": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._test_seq": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_boolean_comparison": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "numpy.atleast_2d",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_boolean_comparison_error": {
  "lineno": 1047,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFrame": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.tests.frame.common._check_mixed_float",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFunc": {
  "lineno": 906,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.tests.frame.common._check_mixed_float",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineSeries": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.tests.frame.common._check_mixed_float",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combine_generic": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.add",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid.check": {
  "lineno": 156,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_protected_from_errstate": {
  "lineno": 956,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.ones",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons.test_comp": {
  "lineno": 928,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_div": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_dti_tz_convert_to_utc": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_float_none_comparison": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_alignment": {
  "lineno": 1074,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_identity": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_identity2": {
  "lineno": 1179,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_invert": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators": {
  "lineno": 276,
  "symbols_in_volume": [
   "operator.and_",
   "operator.inv",
   "operator.or_",
   "operator.xor",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_bin_op": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_unary_op": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_typeerror_with_non_valid": {
  "lineno": 319,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_with_nas": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_modulo": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_neg": {
  "lineno": 344,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean.f": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_none_as_na": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.nan",
   "operator.add",
   "operator.mul",
   "operator.sub",
   "operator.truediv",
   "pandas.DataFrame",
   "pandas.core.common.isna",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_ops_np_scalar": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_return_dtypes_bool_op_costant": {
  "lineno": 670,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_string_comparison": {
  "lineno": 965,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_timestamp_compare": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "operator",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.setup_method": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_align_frame": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_as_frame_columns": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_index_to_string": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_setitem": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_to_time_stamp": {
  "lineno": 47,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period.TestPeriodIndex.test_frame_to_time_stamp._get_with_delta": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_period._permute": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.percentile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_mixed": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_mixed.f": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_parameter": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_box": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_datetime": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_empty": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_interpolation": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.percentile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas._np_version_under1p11",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_invalid": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_multi": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_nan": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_nat": {
  "lineno": 337,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_query_eval.TestCompat": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.setup_method": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_None": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_default": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_numexpr": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.core.computation.check._NUMEXPR_INSTALLED",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_python": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_eval_resolvers_as_list": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_ops": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_query_empty_string": {
  "lineno": 156,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_query_non_str": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setup_class": {
  "lineno": 1042,
  "symbols_in_volume": [
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setup_method": {
  "lineno": 1048,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.teardown_method": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_bool_arith_expr": {
  "lineno": 1059,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_invalid_type_for_operator_raises": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_simple_expr": {
  "lineno": 1054,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython": {
  "lineno": 1076,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython.setup_class": {
  "lineno": 1078,
  "symbols_in_volume": [
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas": {
  "lineno": 1086,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas.setup_class": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython.setup_class": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.setup_class": {
  "lineno": 389,
  "symbols_in_volume": [
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.teardown_class": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_at_inside_string": {
  "lineno": 659,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_chained_cmp_and_in": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT_duplicates": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_no_attribute_access": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_NaT": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_attribute_access": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_non_date": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_index_resolvers_come_after_columns_with_the_same_name": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.r_",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_inf": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.random.rand",
   "operator.eq",
   "operator.ne",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_syntax": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_variable_with_in": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_raises_on_local_self_reference": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.ops.UndefinedVariableError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_scope": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_builtin": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.core.computation.engines.NumExprClobberingError",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_doesnt_pickup_local": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.core.computation.ops.UndefinedVariableError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_with_name": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_without_name": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_scope": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.ops.UndefinedVariableError",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_syntax_error": {
  "lineno": 489,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_undefined_local": {
  "lineno": 668,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.core.computation.ops.UndefinedVariableError",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.setup_class": {
  "lineno": 719,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT_duplicates": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_no_attribute_access": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_with_NaT": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_nested_scope": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.computation.ops.UndefinedVariableError",
   "pandas.eval",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.setup_class": {
  "lineno": 820,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.test_query_builtin": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.setup_class": {
  "lineno": 841,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.test_query_builtin": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_object_array_eq_ne": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_lex_compare_strings": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.choice",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_single_element_booleans": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_string_scalar_variable": {
  "lineno": 1029,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_special_character": {
  "lineno": 996,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_strings": {
  "lineno": 972,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_string_columns": {
  "lineno": 937,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_list_query_method": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_query_method": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_multiindex_get_index_resolvers": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_multiindex_get_index_resolvers.to_series": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_named_multiindex": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_partially_named_multiindex": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_unnamed_multiindex": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.skip_if_no_ne"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel4d_with_multiindex": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.makeCustomIndex",
   "pandas.util.testing.makePanel4D",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel_with_multiindex": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.eval",
   "pandas.util.testing.makeCustomIndex",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.skip_if_no_ne",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.engine": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.parser": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_ne": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.core.computation.check._NUMEXPR_INSTALLED",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_rank.TestRank": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank2": {
  "lineno": 63,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.now",
   "datetime.timedelta",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_2d_tie_methods": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.compat.product"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_2d_tie_methods._check2d": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_axis": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_descending": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_methods_frame": {
  "lineno": 194,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.apply_along_axis",
   "numpy.float64",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.importorskip",
   "scipy.__version__"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_rank.TestRank.test_rank_na_option": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.inf",
   "numpy.nan",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_mixed": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested_gh4115": {
  "lineno": 478,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed_inplace": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj_inplace": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_to_scalar": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_numeric_to_object_conversion": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.object_",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_regex_list_to_numeric": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar_inplace": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_series_of_regexes": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_str_to_numeric": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_bool": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_string": {
  "lineno": 902,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_convert": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetime": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetimetz": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_no_regex": {
  "lineno": 863,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_tuple_list_ordering_remains_the_same": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_doesnt_replace_without_regex": {
  "lineno": 892,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dtypes": {
  "lineno": 764,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.int16",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_for_new_dtypes": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_inplace": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_input_formats_listlike": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_input_formats_scalar": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_int_to_int_chain": {
  "lineno": 930,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_limit": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_list": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_mixed": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_period": {
  "lineno": 956,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_pure_bool_with_string_no_op": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_regex_metachar": {
  "lineno": 553,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_dict": {
  "lineno": 611,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_no_regex": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict_with_nonexistent_value": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_str_to_str_chain": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_swapping_bug": {
  "lineno": 945,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_truthy": {
  "lineno": 924,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_value_is_none": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_with_dict_with_bool_keys": {
  "lineno": 919,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_with_empty_dictlike": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_bytestring_with_unicode": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.capture_stdout"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_categorical": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns_shows_correct_dtypes": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_max_cols": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.size",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.compat.StringIO",
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_bug_on_multiindex": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "string.ascii_uppercase"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_bug_on_multiindex.memory_usage": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_deep_not_pypy": {
  "lineno": 375,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PYPY",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_deep_pypy": {
  "lineno": 388,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PYPY",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage_qualified": {
  "lineno": 415,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_shows_column_dtypes": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_wide": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.reset_option",
   "pandas.set_option"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_latex_repr": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_big": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_column_name_unicode_truncation_bug": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_dimensions": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_empty": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed_big": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.makeStringIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unicode": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unsortable": {
  "lineno": 98,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "datetime.timedelta",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.io.formats.format.set_option",
   "pandas.util.testing.reset_display_options",
   "warnings.filters",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_unicode_string_with_unicode": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_usage_via_getsizeof": {
  "lineno": 401,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.compat.PYPY",
   "pytest.mark.skipif",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_very_wide_info_repr": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_duplicates": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_empty": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_index_none": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_integer_bug": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_datetime_column_multiIndex": {
  "lineno": 704,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_int_level_names": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_ints": {
  "lineno": 345,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_mixed_levels": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex._test_stack_with_multiindex": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_preserve_categorical_dtype": {
  "lineno": 771,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_unstack": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.prod",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_bool": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_dtypes": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int16",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_categorical": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_datetime": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_period": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill_frame_timedelta": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_level_binding": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index": {
  "lineno": 549,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.NaN",
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index.verify": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_non_unique_index_names": {
  "lineno": 539,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_preserve_dtypes": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_preserve_dtypes.unstack_and_compare": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_to_series": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_categorical_index": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_different_sortorder": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lexsort",
   "numpy.random.permutation",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_duplicates": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_inplace": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_intervalindex": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.sign",
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.concat",
   "pandas.cut",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_level": {
  "lineno": 504,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_multicolumn": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lexsort",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSortIndexKinds.test_sort_index_multiindex": {
  "lineno": 553,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_frame_column_inplace_sort_exception": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_datetimes": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nan": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nat": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nat_values_in_int_column": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_values": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_values_inplace": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_categorial": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_multicolumn_sort": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_sort": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_dataframe_metadata": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame._constructor": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.custom_frame_function": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries._constructor": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries.custom_series_function": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_indexing_sliced": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align_combinations": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A": {
  "lineno": 154,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A.bar": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_iterrows": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_sparse_slice": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedSparseDataFrame",
   "pandas.util.testing.SubclassedSparseSeries",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_sparse_transpose": {
  "lineno": 243,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedSparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame._constructor_expanddim": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedPanel": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.Panel"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_timeseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq": {
  "lineno": 377,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq_datetimeindex": {
  "lineno": 394,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq_fillvalue": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_at_time_frame": {
  "lineno": 448,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_between_time_frame": {
  "lineno": 478,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.product",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_datetime_assignment_with_NaT_and_diff_time_units": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_axis": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_float_n": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_mixed_dtype": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_neg_n": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_timedelta": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_first_last_valid": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_add_datetime64_col_other_units": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_add_datetime64_column": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.issubdtype",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_ctor_datetime64_column": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype",
   "numpy.issubdtype",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_datetime64_pre1900_repr": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_frame_to_period": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.period.period_range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_operation_on_NaT": {
  "lineno": 538,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change_shift_over_nas": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makePeriodFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_bool": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_categorical": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_duplicate_columns": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_empty": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate": {
  "lineno": 328,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate_copy": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_tshift": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makePeriodFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.tests.frame.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.read_csv": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_from_csv_deprecation": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.DataFrame.from_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_multi_index_header": {
  "lineno": 1207,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_period_index_date_overflow": {
  "lineno": 1179,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_bug": {
  "lineno": 772,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_chunking": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_cols_reordering": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_bz2": {
  "lineno": 945,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_gzip": {
  "lineno": 922,
  "symbols_in_volume": [
   "gzip.open",
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_value_error": {
  "lineno": 990,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "zipfile.BadZipfile"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_xz": {
  "lineno": 968,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.import_lzma",
   "pandas.read_csv",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_date_format": {
  "lineno": 1003,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat.make_dtnat_arr": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.NaT",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dups_cols": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float32_nanrep": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float_format": {
  "lineno": 819,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv1": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv2": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv3": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.concat",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv4": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timedelta",
   "pandas.compat.range",
   "pandas.read_csv",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv5": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_categorical": {
  "lineno": 893,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_all_infs": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isinf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_some_infs": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isinf",
   "numpy.nan",
   "numpy.random.rand",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_headers": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_index_no_leading_comma": {
  "lineno": 861,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_line_terminators": {
  "lineno": 873,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed": {
  "lineno": 662,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "numpy.object",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed.create_cols": {
  "lineno": 664,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.compat.lmap",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test._to_uni": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.lrange",
   "pandas.core.common._all_none",
   "pandas.errors.ParserError",
   "pandas.read_csv",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex._make_frame": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols._check_df": {
  "lineno": 182,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_no_index": {
  "lineno": 441,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_path_is_none": {
  "lineno": 913,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quote_none": {
  "lineno": 850,
  "symbols_in_volume": [
   "csv.QUOTE_NONE",
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quoting": {
  "lineno": 1099,
  "symbols_in_volume": [
   "csv.Error",
   "csv.QUOTE_ALL",
   "csv.QUOTE_MINIMAL",
   "csv.QUOTE_NONE",
   "csv.QUOTE_NONNUMERIC",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_stringio": {
  "lineno": 811,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode": {
  "lineno": 784,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode_index_col": {
  "lineno": 797,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicodewriter_quoting": {
  "lineno": 835,
  "symbols_in_volume": [
   "csv.QUOTE_NONNUMERIC",
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_wide_frame_formatting": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_dst_transitions": {
  "lineno": 1056,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.read_csv",
   "pandas.read_pickle",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_mix_columns": {
  "lineno": 453,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_withcommas": {
  "lineno": 652,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.frame.test_validate.TestDataFrameValidate": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.frame.test_validate.TestDataFrameValidate.test_validate_bool_args": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.frame.test_validate.dataframe": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.common.MixIn": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.common.MixIn.setup_method": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.common.assert_fp_equal": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.common.df": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.common.mframe": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.setup_method": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test__cython_agg_general": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.mean",
   "numpy.median",
   "numpy.min",
   "numpy.prod",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.sum",
   "numpy.var",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_api": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_api.peak_to_peak": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_apply_corner": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables": {
  "lineno": 773,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.int64",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables.fn_class": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_callables.fn_class.__call__": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_cast_results_dtypes": {
  "lineno": 172,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_compat": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_consistency": {
  "lineno": 633,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_consistency.P1": {
  "lineno": 637,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.percentile"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_datetimes_mixed": {
  "lineno": 96,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.sum",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_dict_parameter_cast_result_dtypes": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_dict_renaming_deprecation": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_grouping_is_list_tuple": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.core.groupby.Grouping",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_item_by_item_raise_typeerror": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_item_by_item_raise_typeerror.raiseException": {
  "lineno": 499,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_multiple_functions_maintain_order": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.mean",
   "numpy.min",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_multiple_functions_too_many_lambdas": {
  "lineno": 693,
  "symbols_in_volume": [
   "pandas.core.groupby.SpecificationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_must_agg": {
  "lineno": 183,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_nested_dicts": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.core.groupby.SpecificationError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_nested_dicts.f": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_over_numpy_arrays": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_period_index": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_items",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_python_multiindex": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_regression1": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_ser_multi_key": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_agg_timezone_round_trip": {
  "lineno": 850,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.min",
   "pandas.DataFrame",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_api_consistency": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_float64_no_int64": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_item_by_item": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_item_by_item.aggfun": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_str_func": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_aggregate_str_func._check_results": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_boolean": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_empty_buckets": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.mean",
   "numpy.median",
   "numpy.min",
   "numpy.nan",
   "numpy.prod",
   "numpy.sum",
   "numpy.var",
   "pandas.DataFrame",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_frame_columns": {
  "lineno": 605,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_nothing_to_agg": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.core.groupby.DataError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_nothing_to_agg_with_dates": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.core.groupby.DataError",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_agg_return_dict": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cython_fail_agg": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cythonized_aggers": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_cythonized_aggers._testit": {
  "lineno": 541,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "pandas.compat.OrderedDict",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function.bar": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.std"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_more_flexible_frame_multi_function.foo": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_multi_function_flexible_mix": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_multiple_functions_tuples_and_non_tuples": {
  "lineno": 679,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multi_pure_python": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multi_pure_python.bad": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_series_agg_multikey": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_sum_uint64_overflow": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.uint64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_wrap_agg_out": {
  "lineno": 657,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_aggregate.TestGroupByAggregate.test_wrap_agg_out.func": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.object"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers.setup_method": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.TestBinGroupers.test_generate_bins": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.generate_bins_dt64",
   "pandas.core.groupby.generate_bins_generic",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.TestMoments": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestReducer": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_bin_groupby.TestReducer.test_int_index": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.Index",
   "pandas._libs.lib.reduce",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc._check": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.diff",
   "numpy.int64",
   "numpy.nan",
   "numpy.r_",
   "numpy.random.randn",
   "numpy.repeat",
   "numpy.zeros",
   "pandas._libs.groupby",
   "pandas.core.dtypes.common._ensure_int64",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_group_ohlc._check._ohlc": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.repeat",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_series_bin_grouper": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.mean",
   "numpy.random.randn",
   "pandas.Series",
   "pandas._libs.lib.SeriesBinGrouper",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_bin_groupby.test_series_grouper": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.mean",
   "numpy.random.randn",
   "pandas.Series",
   "pandas._libs.lib.SeriesGrouper",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_categorical_data": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_use_categorical_name": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.qcut"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_apply_use_categorical_name.get_stats": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_bins_unequal_len": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.cut",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_bins_unequal_len.f": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_index": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.repeat",
   "pandas.Categorical.from_codes",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_no_compress": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_categorical_two_columns": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Interval",
   "pandas.MultiIndex.from_product",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_datetime_categorical": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Categorical.from_codes",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_describe_categorical_columns": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_multi_categorical_as_index": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_preserve_categorical_dtype": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_preserve_categories": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_sort_categorical": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_sort_categorical_datetimelike": {
  "lineno": 422,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_groupby_unstack_categorical": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_categorical.TestGroupByCategorical.test_level_groupby_get_group": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_counting.TestCounting": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_count_with_datetimelike": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_dupe_index": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_empty": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_groupby_not_col": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_cumcount_mi": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_cumcount_pair": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.product",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_descending": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_distinct": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_dupe_index": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_empty": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_groupby_not_col": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_matches_cumcount": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_mi": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_one_group": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_respects_groupby_order": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_counting.TestCounting.test_ngroup_series_matches_frame": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.setup_method": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.core.api.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_against_workaround": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.random.seed",
   "numpy.round",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_multiple_non_unique_int_index": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_float_index": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_int_index": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_string_index": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_and_transform_with_non_unique_timestamp_index": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Timestamp",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_bad_shapes": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.outer",
   "pandas.core.api.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_condition_raises": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_condition_raises.raise_if_sum_is_zero": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_dropna_with_empty_groups": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "numpy.repeat",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_enforces_scalarness": {
  "lineno": 571,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_has_access_to_grouped_cols": {
  "lineno": 564,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_maintains_ordering": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_mixed_df": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_multi_column_df": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_multiple_timestamp": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Timestamp",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_nan_is_false": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_non_bool_raises": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_all_groups": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_all_groups_in_df": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_out_no_groups": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_series": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_single_column_df": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_using_len": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.api.DataFrame",
   "pandas.core.series.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.TestGroupByFilter.test_filter_with_axis_in_groupby": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters._check_groupby": {
  "lineno": 617,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.lmap",
   "pandas.core.common._asarray_tuplesafe"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_filters.assert_fp_equal": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_chunk_view": {
  "lineno": 1945,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names": {
  "lineno": 1448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc": {
  "lineno": 1451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc2": {
  "lineno": 1456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc3": {
  "lineno": 1463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner": {
  "lineno": 2306,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner_cases": {
  "lineno": 2335,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_corner_cases.f": {
  "lineno": 2346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_describe_bug": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series": {
  "lineno": 1876,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans": {
  "lineno": 1877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans2": {
  "lineno": 1880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_to_series": {
  "lineno": 1869,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_frame_yield_constant": {
  "lineno": 1859,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_issues": {
  "lineno": 559,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multiindex_fail": {
  "lineno": 2287,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multiindex_fail.f": {
  "lineno": 2294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multikey_corner": {
  "lineno": 1899,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_multikey_corner.f": {
  "lineno": 1902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_no_name_column_conflict": {
  "lineno": 1957,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime": {
  "lineno": 3736,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime.get_B": {
  "lineno": 3756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_numeric_coercion_when_datetime.predictions": {
  "lineno": 3764,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_to_frame": {
  "lineno": 1838,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_to_frame.f": {
  "lineno": 1839,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.log",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_series_yield_constant": {
  "lineno": 1855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_transform": {
  "lineno": 1893,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_typecast_fail": {
  "lineno": 2269,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_typecast_fail.f": {
  "lineno": 2275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_with_mixed_dtype": {
  "lineno": 2520,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy": {
  "lineno": 2311,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy.filt1": {
  "lineno": 2319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_apply_without_copy.filt2": {
  "lineno": 2325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_arg_passthru": {
  "lineno": 1531,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_as_index_series_return_frame": {
  "lineno": 1223,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_attr_wrapper": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.std",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic.checkit": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.random.shuffle",
   "numpy.std",
   "numpy.sum",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_basic_regression": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_builtins_apply": {
  "lineno": 1486,
  "symbols_in_volume": [
   "numpy",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_column_select_via_attr": {
  "lineno": 2769,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_consistency_name": {
  "lineno": 2392,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone": {
  "lineno": 2469,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_fast": {
  "lineno": 2476,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_force_pure": {
  "lineno": 2479,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count": {
  "lineno": 2076,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.count",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_cross_type": {
  "lineno": 2138,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_object": {
  "lineno": 2122,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception": {
  "lineno": 3353,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject": {
  "lineno": 3357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__eq__": {
  "lineno": 3363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__init__": {
  "lineno": 3359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObjectException": {
  "lineno": 3354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cummin_cummax": {
  "lineno": 3639,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_api2": {
  "lineno": 2236,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_grouper_series_bug_noncontig": {
  "lineno": 2447,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.tile",
   "pandas.Series",
   "pandas.Series.median",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_cython_median": {
  "lineno": 3030,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.nanops.nanmedian",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_dictify": {
  "lineno": 2655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_dont_clobber_name_column": {
  "lineno": 2807,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_empty_groups": {
  "lineno": 308,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_empty_groups_corner": {
  "lineno": 1429,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fast_apply": {
  "lineno": 2494,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fast_apply.f": {
  "lineno": 2507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_fill_constistency": {
  "lineno": 3292,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_multikey": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_tupleindex": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_describe_unstacked_format": {
  "lineno": 821,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_groupby": {
  "lineno": 840,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_groupby_columns": {
  "lineno": 890,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_multi_key_function_list": {
  "lineno": 1033,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.randn",
   "numpy.std",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_frame_set_name_single": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays": {
  "lineno": 3200,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays.noddy": {
  "lineno": 3212,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_gb_key_len_equal_axis_len": {
  "lineno": 3784,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group_empty_bins": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Interval",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_get_group_grouped_by_tuple": {
  "lineno": 534,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_getitem_list_of_columns": {
  "lineno": 2870,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_getitem_numeric_column_names": {
  "lineno": 2888,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_name_available_in_inference_pass": {
  "lineno": 2931,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_name_available_in_inference_pass.f": {
  "lineno": 2937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_selection_cache": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_group_shift_with_null_key": {
  "lineno": 3604,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_2d_malformed": {
  "lineno": 2706,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_aggregation_mixed_dtype": {
  "lineno": 2534,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_all_none": {
  "lineno": 3483,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_all_none.test_func": {
  "lineno": 3489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_none_first": {
  "lineno": 3496,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_apply_none_first.test_func": {
  "lineno": 3501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args": {
  "lineno": 1754,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args.j": {
  "lineno": 1758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_args.k": {
  "lineno": 1764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_agg": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.randint",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.OrderedDict",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_apply": {
  "lineno": 1288,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_corner": {
  "lineno": 1281,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_cython": {
  "lineno": 1250,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_as_index_series_scalar": {
  "lineno": 1272,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_categorical_index_and_columns": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_complex": {
  "lineno": 1812,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_cumprod": {
  "lineno": 3374,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_dict_mapping": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_dtype_inference_empty": {
  "lineno": 2559,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_duplicated_column_errormsg": {
  "lineno": 319,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_grouper": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_grouper_f_sanity_checked": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_head_tail": {
  "lineno": 1321,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_keys_same_size_as_index": {
  "lineno": 2585,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level": {
  "lineno": 1674,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_apply": {
  "lineno": 1743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_index_names": {
  "lineno": 1713,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_mapper": {
  "lineno": 1770,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_nonmulti": {
  "lineno": 1789,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_level_with_nas": {
  "lineno": 1720,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_levels_and_columns": {
  "lineno": 3184,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_list_infer_array_like": {
  "lineno": 2570,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_mixed_type_columns": {
  "lineno": 2435,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multi_corner": {
  "lineno": 1388,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiindex_missing_pair": {
  "lineno": 3124,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiindex_not_lexsorted": {
  "lineno": 3139,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.drop_duplicates",
   "pandas.MultiIndex.from_tuples",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_columns": {
  "lineno": 1055,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_columns._check_op": {
  "lineno": 1059,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.DataFrame",
   "pandas.Panel.fromDict",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_multiple_key": {
  "lineno": 1370,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation": {
  "lineno": 2406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize": {
  "lineno": 2408,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize_random_name": {
  "lineno": 2411,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nat_exclude": {
  "lineno": 2605,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_intlike_precision": {
  "lineno": 3098,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_types": {
  "lineno": 3056,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonobject_dtype": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonobject_dtype.max_value": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_nonstring_columns": {
  "lineno": 2428,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_one_row": {
  "lineno": 2598,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_preserves_sort": {
  "lineno": 3519,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_preserves_sort.test_sort": {
  "lineno": 3540,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function": {
  "lineno": 2973,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.max",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.afunc": {
  "lineno": 2996,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before": {
  "lineno": 2980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before._func": {
  "lineno": 2985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type.f": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_return_type.func": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_series_indexed_differently": {
  "lineno": 1966,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_series_with_name": {
  "lineno": 2370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_sort_multi": {
  "lineno": 2731,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_sort_multiindex_series": {
  "lineno": 2956,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_timedelta_cython_count": {
  "lineno": 1648,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_empty": {
  "lineno": 3224,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Grouper",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_hier_columns": {
  "lineno": 1977,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_single_column": {
  "lineno": 3232,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_with_small_elem": {
  "lineno": 3241,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Grouper",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groupby_wrong_multi_labels": {
  "lineno": 2353,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_column_and_index": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_creation_bug": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_getting_correct_binner": {
  "lineno": 288,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_index_types": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_iter": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouper_multilevel_freq": {
  "lineno": 142,
  "symbols_in_volume": [
   "datetime.date.today",
   "datetime.timedelta",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_error_on_multidim_input": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.core.groupby.Grouping",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_is_iterable": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_labels": {
  "lineno": 1833,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_ndarray": {
  "lineno": 2261,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_grouping_string_repr": {
  "lineno": 3594,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_groups": {
  "lineno": 639,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value": {
  "lineno": 2857,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value.f": {
  "lineno": 2858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_handle_dict_return_value.g": {
  "lineno": 2861,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_index_label_overlaps_location": {
  "lineno": 3310,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order": {
  "lineno": 693,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f1": {
  "lineno": 697,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f2": {
  "lineno": 708,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_indices_concatenation_order.f3": {
  "lineno": 716,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_int32_overflow": {
  "lineno": 2717,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_intercept_builtin_sum": {
  "lineno": 2759,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.builtins.sum",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_len": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_level_preserve_order": {
  "lineno": 1823,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.util.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_lower_int_prec_count": {
  "lineno": 3338,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int8",
   "numpy.uint32",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_max_min_non_numeric": {
  "lineno": 1513,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_max_nan_bug": {
  "lineno": 3422,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_median_empty_bins": {
  "lineno": 3046,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_func": {
  "lineno": 1002,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter_frame": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_iter_panel": {
  "lineno": 989,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multi_key_multiple_functions": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multifunc_select_col_integer_cols": {
  "lineno": 1216,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multifunc_sum_bug": {
  "lineno": 2847,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_columns_empty_level": {
  "lineno": 3006,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.long",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_negative_level": {
  "lineno": 1198,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_multiindex_passthru": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups": {
  "lineno": 1909,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups.f_copy": {
  "lineno": 1921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_mutate_groups.f_no_copy": {
  "lineno": 1926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nlargest": {
  "lineno": 3435,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_dummy_key_names": {
  "lineno": 2947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_mutate_but_looks_like": {
  "lineno": 1934,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_no_nonsense_name": {
  "lineno": 2839,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_non_cython_api": {
  "lineno": 2180,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nonsense_func": {
  "lineno": 1482,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nsmallest": {
  "lineno": 3452,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_numpy_compat": {
  "lineno": 3581,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique": {
  "lineno": 2152,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_empty_series": {
  "lineno": 3561,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_object": {
  "lineno": 3545,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_nunique_with_timegrouper": {
  "lineno": 3568,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Series.nunique",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_omit_nuisance": {
  "lineno": 1399,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.mean",
   "numpy.sum",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_omit_nuisance_python_multiple": {
  "lineno": 1422,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_ops_general": {
  "lineno": 3392,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.mean",
   "numpy.median",
   "numpy.min",
   "numpy.prod",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.size",
   "numpy.std",
   "numpy.sum",
   "numpy.var",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "scipy.stats.sem"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_panel_groupby": {
  "lineno": 2682,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.add_nans",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pass_args_kwargs": {
  "lineno": 2008,
  "symbols_in_volume": [
   "numpy.percentile",
   "pandas.DataFrame.quantile",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pass_args_kwargs.f": {
  "lineno": 2011,
  "symbols_in_volume": [
   "numpy.percentile"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe": {
  "lineno": 3797,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe.f": {
  "lineno": 3808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe.square": {
  "lineno": 3811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe_args": {
  "lineno": 3827,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe_args.f": {
  "lineno": 3835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe_args.g": {
  "lineno": 3839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pipe_args.h": {
  "lineno": 3842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_pivot_table_values_key_error": {
  "lineno": 3625,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.datetime.today",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_rank_apply": {
  "lineno": 2779,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_select_bad_cols": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_describe_multikey": {
  "lineno": 765,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_describe_single": {
  "lineno": 773,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_groupby_nunique": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.choice",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.product",
   "pandas.date_range",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_groupby_nunique.check_nunique": {
  "lineno": 1152,
  "symbols_in_volume": [
   "pandas.Series.nunique",
   "pandas.compat.product",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_grouper_noncontig_index": {
  "lineno": 2456,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.map",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_series_index_name": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_seriesgroupby_name_attr": {
  "lineno": 2383,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name": {
  "lineno": 2904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name._check_all": {
  "lineno": 2916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.f": {
  "lineno": 2905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.foo": {
  "lineno": 2913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_set_group_name.freduce": {
  "lineno": 2909,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_size": {
  "lineno": 2049,
  "symbols_in_volume": [
   "numpy.random.choice",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.product",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_skip_group_keys": {
  "lineno": 2814,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_sparse_friendly": {
  "lineno": 2663,
  "symbols_in_volume": [
   "pandas.util.testing.add_nans",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_sparse_friendly._check_work": {
  "lineno": 2669,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug": {
  "lineno": 596,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug.func_with_date": {
  "lineno": 607,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_time_field_bug.func_with_no_date": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_transform_doesnt_clobber_ints": {
  "lineno": 3469,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_with_na": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.nan",
   "numpy.ones",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_with_na.f": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex": {
  "lineno": 1657,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex.aggfun": {
  "lineno": 1665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby.TestGrouper": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_groupby.TestGrouper.test_repr": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.Grouper"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_groupby._check_groupby": {
  "lineno": 3867,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.lmap",
   "pandas.core.common._asarray_tuplesafe"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_index_as_string": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_index_as_string.frame": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_index_as_string.series": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_index_as_string.test_grouper_column_index_level_precedence": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.Grouper",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_index_as_string.test_grouper_index_level_as_string": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.Grouper",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_index_as_string.test_grouper_index_level_as_string_series": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.Grouper",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_nth.TestNth": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_first_last_nth": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_first_last_nth_dtypes": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth_multi_index": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.TestNth.test_nth_multi_index_as_expected": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_nth.test_nth_empty": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_datetime_count": {
  "lineno": 584,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_first_last_max_min_on_time_data": {
  "lineno": 593,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_frame_datetime64_handling_groupby": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_datetime64_32_bit": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_first_datetime64": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_datetimeindex": {
  "lineno": 368,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_dict_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_datetimeindex_tz": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_groups_periods": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_max_datetime64": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_multi_timezone": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timegrouper": {
  "lineno": 20,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timegrouper_methods": {
  "lineno": 61,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.core.groupby.BinGrouper"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_groupby_with_timezone_selection": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_nunique_with_timegrouper_and_nat": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_scalar_call_versus_list_call": {
  "lineno": 627,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_series": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_series.sumfunc_series": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_value": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.TimeGrouper",
   "pandas.to_datetime",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_apply_return_type_value.sumfunc_value": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_get_group": {
  "lineno": 276,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timegrouper_with_reg_groups": {
  "lineno": 90,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.offsets.MonthEnd",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_timegrouper.TestGroupBy.test_timezone_info": {
  "lineno": 574,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_cython_group_transform_algos": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumproduct",
   "numpy.cumsum",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.nan",
   "numpy.timedelta64",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.zeros_like",
   "pandas._libs.groupby.group_cumprod_float64",
   "pandas._libs.groupby.group_cumsum",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_cython_transform": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.groupby.DataError",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_dispatch_transform": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_groupby_transform_with_int": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_groupby_transform_with_nan_group": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_series_fast_transform_date": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.random.shuffle",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform.demean": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_axis": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_broadcast": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_bug": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_casting": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_coercion": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_datetime_to_numeric": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_datetime_to_timedelta": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_dtype": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_exclude_nuisance": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_fast": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.random.randn",
   "numpy.repeat",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_function_aliases": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_length": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_length.nsum": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.nansum"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_mixed_type": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.config.option_context",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_mixed_type.f": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_multiple": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_numeric_to_boolean": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_select_columns": {
  "lineno": 290,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_transform.TestGroupBy.test_transform_with_non_scalar_group": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts": {
  "lineno": 10,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.nan",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.check_value_counts": {
  "lineno": 20,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.Series.value_counts",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.loop": {
  "lineno": 38,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_value_counts.test_series_groupby_value_counts.rebuild_index": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.groupby.test_whitelist.df": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.df_letters": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.mframe": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.raw_frame": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_blacklist": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_function_rename": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_selection_with_methods": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_groupby_whitelist": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_regression_whitelist_methods": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.groupby.test_whitelist.test_tab_completion": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.common.Base": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.common.Base.setup_indices": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_argsort": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat.f": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_compat": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_copy_and_deepcopy": {
  "lineno": 310,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_copy_name": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_create_index_existing_name": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_delete_base": {
  "lineno": 683,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.compat.iteritems",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_difference_base": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_dtype_str": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_duplicates": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_empty": {
  "lineno": 942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_ensure_copied_data": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.IntervalIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.RangeIndex",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_equals": {
  "lineno": 708,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_equals_op": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_fillna": {
  "lineno": 877,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Int64Index",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.UInt64Index",
   "pandas._libs.tslib.iNaT",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_get_indexer_consistency": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.ndarray",
   "pandas.CategoricalIndex",
   "pandas.IntervalIndex",
   "pandas.core.indexes.base.InvalidIndexError",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_get_unique_index": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hash_error": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hasnans_isnans": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Int64Index",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.UInt64Index",
   "pandas._libs.tslib.iNaT",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_insert_base": {
  "lineno": 672,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_intersection_base": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_join_self_unique": {
  "lineno": 948,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_logical_compat": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_memory_usage": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.RangeIndex",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_mutability": {
  "lineno": 381,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_ndarray_compat_properties": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_nulls": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.zeros",
   "pandas.MultiIndex",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numeric_compat": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_argsort": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.argsort",
   "pandas.CategoricalIndex",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_repeat": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_ufuncs": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.cos",
   "numpy.cosh",
   "numpy.deg2rad",
   "numpy.errstate",
   "numpy.exp",
   "numpy.exp2",
   "numpy.expm1",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.log",
   "numpy.log10",
   "numpy.log1p",
   "numpy.log2",
   "numpy.ndarray",
   "numpy.rad2deg",
   "numpy.signbit",
   "numpy.sin",
   "numpy.sinh",
   "numpy.sqrt",
   "numpy.tan",
   "numpy.tanh",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.UInt64Index",
   "pandas.compat.iteritems",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle_compat_construction": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_putmask_with_wrong_mask": {
  "lineno": 1000,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_reindex_base": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repeat": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_max_seq_item_setting": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_roundtrip": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_searchsorted_monotonic": {
  "lineno": 955,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.MultiIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_set_name_methods": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_setops_errorcases": {
  "lineno": 536,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_shift": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_sort": {
  "lineno": 378,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_str": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_symmetric_difference": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take_invalid_kwargs": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_to_frame": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_to_series": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_union_base": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_view": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_where": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_where_array_like": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names.testit": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.verify_pickle": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.conftest.indices": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUIntIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_shift_identity": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_str": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimelike.DatetimeLike.test_view": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_astype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_datetime64": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_raises": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_str": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_str_compat": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_astype_with_tz": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array._check_rng": {
  "lineno": 131,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_dateutil": {
  "lineno": 165,
  "symbols_in_volume": [
   "dateutil.tz.tzutc",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_dateutil._check_rng": {
  "lineno": 166,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_explicit_pytz": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytz.timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestDatetimeIndex.test_index_convert_to_datetime_array_explicit_pytz._check_rng": {
  "lineno": 148,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.setup_method": {
  "lineno": 186,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_astype_object": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_microsecond": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_millisecond": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_dateutil": {
  "lineno": 263,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "dateutil.tz.tzutc",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_explicit_pytz": {
  "lineno": 236,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytz.timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_astype.TestToPeriod.test_to_period_tz_pytz": {
  "lineno": 207,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_000constructor_resolution": {
  "lineno": 438,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_base_constructor": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_caching": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_dti_with_mixed_timezones": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_index_with_mixed_timezones": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_index_with_mixed_timezones_with_NaT": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_outofbounds": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas.datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_with_alt": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_construction_with_ndarray": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.datetime",
   "pandas.tseries.frequencies.BDay",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_coverage": {
  "lineno": 305,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_datetime64_tzformat": {
  "lineno": 354,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytz.FixedOffset"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_dtype": {
  "lineno": 401,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestDatetimeIndex.test_constructor_name": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_constructor_int64_nocopy": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_ctor_str_intraday": {
  "lineno": 485,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_datetimeindex_constructor_misc": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas._libs.lib.Timestamp",
   "pandas.datetime",
   "pandas.offsets.BDay",
   "pandas.offsets.BQuarterEnd",
   "pandas.offsets.QuarterBegin",
   "pandas.offsets.Week",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_preserve_dti_freq": {
  "lineno": 448,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_small_int": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_dti_constructor_years_only": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_from_freq_recreate_from_data": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_index_cast_datetime64_other_units": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.tslib.cast_to_nanoseconds"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_construction.TestTimeSeries.test_is_": {
  "lineno": 489,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_cached_range": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas.DatetimeIndex._cached_range",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_cached_range_bug": {
  "lineno": 296,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_constructor": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.date_range",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_date_parse_failure": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.bdate_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_daterange_bug_456": {
  "lineno": 338,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_error_with_zero_monthends": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_freq_divides_end_in_nanos": {
  "lineno": 521,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_misc": {
  "lineno": 314,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.bdate_range",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_naive_aware_conflicts": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_bug": {
  "lineno": 352,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.tseries.offsets.DateOffset",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed": {
  "lineno": 430,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed_boundary": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_closed_with_tz_aware_start_end": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_dateutil": {
  "lineno": 405,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_dst_straddle_pytz": {
  "lineno": 382,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.all",
   "pandas.date_range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_range_tz_pytz": {
  "lineno": 361,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_timezone_comparaison_assert": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_timezone_comparaison_bug": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestBusinessDateRange.test_years_only": {
  "lineno": 515,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_all_custom_freq": {
  "lineno": 639,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.tseries.offsets.prefix_mapping",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cached_range": {
  "lineno": 553,
  "symbols_in_volume": [
   "pandas.DatetimeIndex._cached_range",
   "pandas.tseries.offsets.CDay",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_holidays": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_weekmask": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_cdaterange_weekmask_and_holidays": {
  "lineno": 624,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_constructor": {
  "lineno": 541,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.date_range",
   "pandas.tseries.offsets.CDay",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_daterange_bug_456": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.bdate_range",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestCustomDateRange.test_misc": {
  "lineno": 576,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.bdate_range",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.tests.series.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_begin_year_alias": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_business_end_year_alias": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_catch_infinite_loop": {
  "lineno": 179,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pandas.offsets.DateOffset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_compat_replace": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.compat.long",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_ambiguous_arguments": {
  "lineno": 98,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_bms_bug": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_businesshour": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_fy5252": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.offsets.FY5253"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_gen_error": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_negative_freq": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_date_range_normalize": {
  "lineno": 75,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "datetime.time",
   "datetime.timedelta",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_end_year_alias": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestDateRanges.test_range_misspecified": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_1": {
  "lineno": 198,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_2": {
  "lineno": 203,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_3": {
  "lineno": 211,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_generate": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_generate_cday": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay",
   "pandas.tseries.offsets.generate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_mismatching_tz_raises_err": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.tseries.offsets.BDay",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_date_range.TestGenRangeGeneration.test_precision_finer_than_offset": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.assert_index_parameters": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_append_join_nondatetimeindex": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_append_numpy_bug_1681": {
  "lineno": 613,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_argmin_argmax": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_comparisons_coverage": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_comparisons_nat": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.datetime",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_date": {
  "lineno": 639,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_datetimeindex_sub_timestamp_overflow": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.Timestamp.max",
   "pandas.Timestamp.max.value",
   "pandas.Timestamp.min",
   "pandas.Timestamp.min.value",
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_does_not_convert_mixed_integer": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize_dst": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_factorize_tz": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_duplicates": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_indexer": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_get_loc": {
  "lineno": 21,
  "symbols_in_volume": [
   "datetime.time",
   "datetime.timedelta",
   "numpy.array",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_groupby_function_tuple_1677": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_hash_error": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_isin": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_iteration_preserves_tz": {
  "lineno": 416,
  "symbols_in_volume": [
   "dateutil.tz.tzoffset",
   "pandas.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_join_self": {
  "lineno": 662,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_join_with_period_index": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_map": {
  "lineno": 408,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_map_bug_1677": {
  "lineno": 597,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_misc_coverage": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_nat": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_ns_index": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_overflow_offset": {
  "lineno": 465,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.offsets.Day",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_overflow_offset.f": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_reasonable_keyerror": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_reindex_preserves_tz_if_target_is_empty_list_or_array": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_roundtrip_pickle_with_tz": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_bounds_empty": {
  "lineno": 813,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_duplicate_monotonic": {
  "lineno": 825,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_keeps_name": {
  "lineno": 655,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_negative_step": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IndexSlice",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_negative_step.assert_slices_equivalent": {
  "lineno": 781,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_slice_with_zero_step_raises": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_sort_values": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_string_index_series_name_converted": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_stringified_slice_with_tz": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.compat.lrange",
   "pandas.datetime.datetime.now"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take": {
  "lineno": 514,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take_fill_value": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_take_fill_value_with_timezone": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time": {
  "lineno": 633,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time_loc": {
  "lineno": 141,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.Series",
   "pandas._libs.index._SIZE_CUTOFF",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_time_overflow_for_32bit_machines": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.int_",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_to_period_nofreq": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_ufunc_coercions": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.subtract",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetime.TestDatetimeIndex.test_week_of_month_frequency": {
  "lineno": 248,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.create_index": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.setup_method": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_intersection": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_pickle_compat_construction": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_shift": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_datetimelike.TestDatetimeIndex.test_union": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_formats.test_to_native_types": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_delete": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.compat.iteritems",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_delete_slice": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_insert": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_where_other": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_indexing.TestDatetimeIndex.test_where_tz": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_1700": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_2000": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_hour": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_minute": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDateTimeIndexToJulianDate.test_second": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64.test_datetimeindex_accessors": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._bool_ops",
   "pandas.DatetimeIndex._field_ops",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.datetime",
   "pandas.offsets.CustomBusinessDay",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestDatetime64.test_nanosecond_field": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_datetimeindex_integers_shift": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_datetimeindex_repr_short": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_normalize": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_pass_datetimeindex_to_index": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_misc.TestTimeSeries.test_range_edges": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_missing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_missing.TestDatetimeIndex": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_missing.TestDatetimeIndex.test_fillna_datetime64": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.datetime"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex": {
  "lineno": 1131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.setup_method": {
  "lineno": 1133,
  "symbols_in_volume": [
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_comparison": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_copy": {
  "lineno": 1147,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_equals": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_getitem": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.ndarray",
   "pandas.DatetimeIndex",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_getitem_matplotlib_hackaround": {
  "lineno": 1174,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_identical": {
  "lineno": 1209,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_pickle_unpickle": {
  "lineno": 1143,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_repr": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_shift": {
  "lineno": 1179,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary_dateutil": {
  "lineno": 1203,
  "symbols_in_volume": [
   "dateutil.tz.tzutc",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestBusinessDatetimeIndex.test_summary_pytz": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex": {
  "lineno": 1227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.setup_method": {
  "lineno": 1229,
  "symbols_in_volume": [
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_comparison": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_copy": {
  "lineno": 1239,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_equals": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_getitem": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.ndarray",
   "pandas.DatetimeIndex",
   "pandas.tseries.offsets.CDay",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_getitem_matplotlib_hackaround": {
  "lineno": 1265,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_pickle_unpickle": {
  "lineno": 1290,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_repr": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_shift": {
  "lineno": 1270,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.tseries.offsets.CDay",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary": {
  "lineno": 1294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary_dateutil": {
  "lineno": 1301,
  "symbols_in_volume": [
   "dateutil.tz.tzutc",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestCustomDatetimeIndex.test_summary_pytz": {
  "lineno": 1298,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_1700": {
  "lineno": 957,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_2000": {
  "lineno": 965,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_hour": {
  "lineno": 973,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_minute": {
  "lineno": 982,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDateTimeIndexToJulianDate.test_second": {
  "lineno": 991,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.tests.test_base.Ops"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.setup_method": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_add_datetimelike_and_dti": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.datetime",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_add_datetimelike_and_dti_tz": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.datetime",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_add_iadd": {
  "lineno": 409,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.offsets",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_asobject_tolist": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_comp_nat": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_difference": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_drop_duplicates": {
  "lineno": 786,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_drop_duplicates_metadata": {
  "lineno": 773,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_equals": {
  "lineno": 923,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._simple_new",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_getitem": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_infer_freq": {
  "lineno": 865,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_minmax": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nat": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._na_value",
   "pandas.NaT",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nat_new": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas._libs.tslib.iNaT",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_nonunique_contains": {
  "lineno": 651,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_numpy_minmax": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.max",
   "numpy.min",
   "pandas.Timestamp",
   "pandas._np_version_under1p10",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_ops_properties": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._bool_ops",
   "pandas.DatetimeIndex._field_ops",
   "pandas.DatetimeIndex._object_ops"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_ops_properties_basic": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_order": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_repeat": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_repeat_range": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_representation": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_representation_to_series": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Series",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_resolution": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_round": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_shift": {
  "lineno": 885,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_dti_dti": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.TimedeltaIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_isub": {
  "lineno": 503,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.offsets",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_sub_period": {
  "lineno": 571,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Period",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_summary": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_take": {
  "lineno": 807,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_take_invalid_kwargs": {
  "lineno": 849,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_union": {
  "lineno": 387,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.TestDatetimeIndexOps.test_value_counts_unique": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.test_datetime64_with_DateOffset": {
  "lineno": 1002,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.errors.PerformanceWarning",
   "pandas.offsets",
   "pandas.offsets.DateOffset",
   "pandas.offsets.Day",
   "pandas.offsets.MonthEnd",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_ops.test_shift_months": {
  "lineno": 1117,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas._libs.tslib.shift_months",
   "pandas.offsets.DateOffset",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_loc_datetime_length_one": {
  "lineno": 262,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice": {
  "lineno": 55,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_daily": {
  "lineno": 76,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_doesnt_require_monotonicity": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_hourly": {
  "lineno": 85,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_minutely": {
  "lineno": 99,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slice_second_precision": {
  "lineno": 113,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_dataframe": {
  "lineno": 129,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_with_multiindex": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_partial_slicing_with_multiindex.f": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_selection_by_datetimelike": {
  "lineno": 273,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "numpy.nan",
   "operator",
   "operator.eq",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_month": {
  "lineno": 45,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_quarter": {
  "lineno": 36,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_partial_slicing.TestSlicing.test_slice_year": {
  "lineno": 17,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.setup_method": {
  "lineno": 203,
  "symbols_in_volume": [
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_intersection": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_intersection_bug": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_month_range_union_tz_dateutil": {
  "lineno": 324,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslibs.timezones.dateutil_gettz",
   "pandas.date_range",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.util.testing._skip_if_windows_python_3"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_month_range_union_tz_pytz": {
  "lineno": 307,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.date_range",
   "pandas.tseries.offsets.MonthEnd",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_outer_join": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_union": {
  "lineno": 206,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.date_range",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex.test_union_not_cacheable": {
  "lineno": 269,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.setup_method": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_intersection_bug": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_outer_join": {
  "lineno": 380,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex.test_union": {
  "lineno": 349,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.date_range",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_datetimeindex_diff": {
  "lineno": 174,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_datetimeindex_union_join_empty": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_difference_freq": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_attr_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_intersection": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_intersection_bug_1708": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_join_nonunique": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_1730": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_1745": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_bug_4564": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_coverage": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_dataframe_index": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_freq_both_none": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndex.test_union_with_DatetimeIndex": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_coerce_of_invalid_datetimes": {
  "lineno": 1526,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.tslib.array_to_datetime",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_coercing_dates_outside_of_datetime64_ns_bounds": {
  "lineno": 1493,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.array",
   "numpy.datetime64",
   "pandas._libs.tslib.array_to_datetime",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_number_looking_strings_not_into_datetime": {
  "lineno": 1481,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.tslib.array_to_datetime",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_parsing_timezone_offsets": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.tslib.array_to_datetime",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_parsing_valid_dates": {
  "lineno": 1435,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.tslib.array_to_datetime",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestArrayToDatetime.test_try_parse_dates": {
  "lineno": 1428,
  "symbols_in_volume": [
   "dateutil.parser.parse",
   "numpy.array",
   "numpy.array_equal",
   "pandas._libs.tslibs.parsing.try_parse_dates"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_does_not_convert_mixed_integer": {
  "lineno": 1078,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing._does_string_look_like_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers": {
  "lineno": 1094,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.__version__",
   "distutils.version.LooseVersion",
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.tslib.NaT",
   "pandas.compat.iteritems",
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_dayfirst_yearfirst": {
  "lineno": 1194,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.__version__",
   "dateutil.parser.parse",
   "distutils.version.LooseVersion",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.compat.iteritems",
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_iso8601": {
  "lineno": 1388,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib._test_parse_iso8601",
   "pandas.compat.iteritems",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_monthfreq": {
  "lineno": 1342,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_quarter_invalid": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.parse_time_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_quarterly_with_freq": {
  "lineno": 1350,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslibs.parsing.DateParseError",
   "pandas.compat.iteritems",
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_time": {
  "lineno": 1307,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "numpy.object_",
   "pandas.Series",
   "pandas.core.tools.datetimes.to_time",
   "pandas.util.testing._skip_if_has_locale",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_timestring": {
  "lineno": 1287,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.parser.parse",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.compat.iteritems",
   "pandas.core.tools.datetimes.parse_time_string",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDatetimeParsingWrappers.test_parsers_timezone_minute_offsets_roundtrip": {
  "lineno": 1370,
  "symbols_in_volume": [
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_coerce": {
  "lineno": 1048,
  "symbols_in_volume": [
   "pandas.isna",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_ignore": {
  "lineno": 1067,
  "symbols_in_volume": [
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestDaysInMonth.test_day_not_in_month_raise": {
  "lineno": 1057,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_for_array": {
  "lineno": 963,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.nan",
   "pandas.core.tools.datetimes._guess_datetime_format_for_array",
   "pandas.util.testing._skip_if_not_us_locale",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_invalid_inputs": {
  "lineno": 933,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.tools.datetimes._guess_datetime_format"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_nopadding": {
  "lineno": 951,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes._guess_datetime_format"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_dayfirst": {
  "lineno": 914,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes._guess_datetime_format"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_locale_specific_formats": {
  "lineno": 921,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes._guess_datetime_format",
   "pandas.util.testing._skip_if_has_locale"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestGuessDatetimeFormat.test_guess_datetime_format_with_parseable_formats": {
  "lineno": 901,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes._guess_datetime_format",
   "pandas.util.testing._skip_if_not_us_locale"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin": {
  "lineno": 1589,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_epoch": {
  "lineno": 1640,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_origin": {
  "lineno": 1631,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_origins": {
  "lineno": 1650,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas.to_datetime",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_origins_tzinfo": {
  "lineno": 1661,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime",
   "pytest.raises",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_invalid_unit": {
  "lineno": 1624,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_julian_round_trip": {
  "lineno": 1616,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_processing_order": {
  "lineno": 1667,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestOrigin.test_to_basic": {
  "lineno": 1591,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_parse_nanoseconds_with_formula": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format_YYYYMMDD": {
  "lineno": 56,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format_integer": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format_microsecond": {
  "lineno": 109,
  "symbols_in_volume": [
   "calendar.month_abbr",
   "datetime.datetime.strptime",
   "locale.getlocale",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format_time": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_format_weeks": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestTimeConversionFormats.test_to_datetime_with_non_exact": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing._skip_if_has_locale",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_datetime_bool": {
  "lineno": 348,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_datetime_invalid_datatype": {
  "lineno": 367,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_array_of_dt64s": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_dt64s": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz_psycopg2": {
  "lineno": 312,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.core.dtypes.common.is_datetime64_ns_dtype",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "psycopg2.tz.FixedOffsetTimezone",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_tz_pytz": {
  "lineno": 250,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_utc_true": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_utc_true_with_series_datetime_ns": {
  "lineno": 304,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_utc_true_with_series_single_value": {
  "lineno": 289,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_to_datetime_utc_true_with_series_tzaware_string": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetime.test_week_without_day_and_calendar_year": {
  "lineno": 375,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.to_datetime",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_consistent_format": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_inconsistent_format": {
  "lineno": 1007,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_series_starting_with_nans": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_infer_datetime_format_series_with_nans": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeInferFormat.test_to_datetime_iso8601_noleading_0s": {
  "lineno": 1035,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_dayfirst": {
  "lineno": 880,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_dti_constructor_numpy_timeunits": {
  "lineno": 869,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_index_to_datetime": {
  "lineno": 660,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_string_na_nat_conversion": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas._libs.tslib.array_to_datetime",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.parse_date",
   "pandas.isna",
   "pandas.to_datetime",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_default": {
  "lineno": 686,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_freq": {
  "lineno": 799,
  "symbols_in_volume": [
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_iso8601": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_list_of_integers": {
  "lineno": 789,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_on_datetime64_series": {
  "lineno": 697,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_other_datetime64_units": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_overflow": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_types": {
  "lineno": 740,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.compat.lmap",
   "pandas.isna",
   "pandas.to_datetime",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_unprocessable_input": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_with_apply": {
  "lineno": 716,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing._skip_if_has_locale",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeMisc.test_to_datetime_with_space_in_series": {
  "lineno": 704,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_dataframe": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_dataframe_dtypes": {
  "lineno": 630,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_unit": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas._libs.tslib.iNaT",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_unit_consistency": {
  "lineno": 440,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_unit_mixed": {
  "lineno": 488,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.TestToDatetimeUnit.test_unit_with_numeric": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.epoch_1960": {
  "lineno": 1565,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.epochs": {
  "lineno": 1576,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.julian_dates": {
  "lineno": 1584,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.test_normalize_date": {
  "lineno": 1548,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.core.tools.datetimes.normalize_date"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.units": {
  "lineno": 1560,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.datetimes.test_tools.units_from_epochs": {
  "lineno": 1571,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_asfreq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.setup_method": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_combined_pi": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_mult_pi": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_nat": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_asfreq_ts": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_asfreq.TestPeriodIndex.test_astype_asfreq": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.setup_method": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_construction_base_constructor": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_U": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_arrays_negative_year": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.tile",
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_corner": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_datetime64arr": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.int64",
   "pandas.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_dtype": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_empty": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_error": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_field_arrays": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_floats": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.PeriodIndex",
   "pandas.PeriodIndex._simple_new",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_combined": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_mult": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_freq_mult_dti_compat": {
  "lineno": 346,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_fromarraylike": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.offsets.MonthEnd",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_incompat_freq": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_invalid_quarters": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_mixed": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_nano": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_nat": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_pi_nat": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_simple_new": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_simple_new_empty": {
  "lineno": 283,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_use_start_freq": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_constructor_year_and_quarter": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_map_with_string_constructor": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.compat.PY3",
   "pandas.compat.lmap",
   "pandas.compat.text_type",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestPeriodIndex.test_recreate_from_data": {
  "lineno": 448,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.setup_method": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.test_constructor_cant_cast_period": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_construction.TestSeriesPeriod.test_constructor_cast_object": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_formats.test_to_native_types": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.setup_method": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_datetime": {
  "lineno": 111,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_day": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_index": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_list_periods": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_nat": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_partial": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestGetItem.test_getitem_seconds": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_get_loc_msg": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_get_loc_nat": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take": {
  "lineno": 218,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take_fill_value": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_indexing.TestIndexing.test_take_misc": {
  "lineno": 266,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_ops.TestFramePeriod": {
  "lineno": 1178,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestFramePeriod.test_ops_frame_period": {
  "lineno": 1180,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons": {
  "lineno": 1209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons.test_pi_nat_comp": {
  "lineno": 1293,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexComparisons.test_pi_pi_comp": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.tests.test_base.Ops"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.setup_method": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_add_iadd": {
  "lineno": 289,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.offsets",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_asobject_tolist": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_comp_nat": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_drop_duplicates": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_drop_duplicates_metadata": {
  "lineno": 567,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_equals": {
  "lineno": 821,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.PeriodIndex._simple_new",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_minmax": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_nat": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.PeriodIndex._na_value",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_nat_new": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_numpy_minmax": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.max",
   "numpy.min",
   "pandas.Period",
   "pandas._np_version_under1p10",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_ops_properties": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.PeriodIndex._bool_ops",
   "pandas.PeriodIndex._field_ops",
   "pandas.PeriodIndex._object_ops"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order_compat": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_order_compat._check_freq": {
  "lineno": 602,
  "symbols_in_volume": [
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_repeat": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_representation": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_representation_to_series": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_resolution": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_shift": {
  "lineno": 760,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_sub": {
  "lineno": 390,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_sub_isub": {
  "lineno": 397,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.offsets",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_summary": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexOps.test_value_counts_unique": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods._check": {
  "lineno": 857,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_comp_period": {
  "lineno": 1065,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "pandas.Period",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_comp_period_nat": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_offset_errors": {
  "lineno": 992,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_array_int": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.subtract",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_errors": {
  "lineno": 890,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.subtract",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._np_version_under1p10",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_nat": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.subtract",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_ops_offset": {
  "lineno": 974,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_pdnat": {
  "lineno": 1040,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_period": {
  "lineno": 1014,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.subtract",
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas._np_version_under1p10",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestPeriodIndexSeriesMethods.test_pi_sub_period_nat": {
  "lineno": 1048,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.setup_method": {
  "lineno": 1140,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.test_ops_series_period": {
  "lineno": 1157,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_ops.TestSeriesPeriod.test_ops_series_timedelta": {
  "lineno": 1143,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.tseries.offsets.Day",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.setup_method": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_pindex_slice_index": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_day": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._np_version_under1p12",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_outofbounds": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_range_slice_seconds": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._np_version_under1p12",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_keep_name": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_negative_step": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IndexSlice",
   "pandas.Period",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_negative_step.assert_slices_equivalent": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_partial_slicing.TestPeriodIndex.test_slice_with_zero_step_raises": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.PeriodIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex._check_all_fields": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.create_index": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.setup_method": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.util.testing.makePeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_append_concat": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_asobject_like": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_astype": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.int64",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_astype_raises": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_comp_period": {
  "lineno": 526,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_contains": {
  "lineno": 533,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_contains_nat": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_convert_array_of_periods": {
  "lineno": 761,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_difference_freq": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_attr_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_dtype_str": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_end_time": {
  "lineno": 563,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_factorize": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_fields": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_fillna_period": {
  "lineno": 202,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_get_indexer": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.timedelta64",
   "pandas.PeriodIndex",
   "pandas.Timedelta",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.period_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_get_loc": {
  "lineno": 67,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_hash_error": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_index_duplicate_periods": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_index_unique": {
  "lineno": 587,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_indexing": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_is_": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_is_full": {
  "lineno": 732,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_iteration": {
  "lineno": 725,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_join_self": {
  "lineno": 801,
  "symbols_in_volume": [
   "pandas.period_range",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_make_time_series": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_map": {
  "lineno": 791,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_ndarray_compat_properties": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.compat.is_platform_32bit",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_negative_ordinals": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_no_millisecond_field": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex.millisecond",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_numpy_repeat": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_index_indexer": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.np.random.randn",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_index_length": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_period_set_index_reindex": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_periods_number_check": {
  "lineno": 554,
  "symbols_in_volume": [
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_compat_construction": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_freq": {
  "lineno": 784,
  "symbols_in_volume": [
   "pandas.offsets.MonthEnd",
   "pandas.period_range",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pickle_round_trip": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_fieldaccessor_nat": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Index",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_multiples": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.offsets.MonthEnd",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_pindex_qaccess": {
  "lineno": 690,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.PeriodIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_repeat": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shallow_copy_empty": {
  "lineno": 258,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_gh8083": {
  "lineno": 600,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_nat": {
  "lineno": 644,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_shift_ndarray": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_start_time": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_values": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_view_asi8": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where_array_like": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_where_other": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period.TestPeriodIndex.test_with_multi_index": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period_range": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_period_range.TestPeriodRange": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_period_range.TestPeriodRange.test_construction_from_period": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period_range.TestPeriodRange.test_construction_from_string": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_period_range.TestPeriodRange.test_errors": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.setup_method": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_difference": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_intersection": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_intersection_cases": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_join_does_not_recur": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_join_self": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_joins": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union_dataframe_index": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops.TestPeriodIndex.test_union_misc": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_setops._permute": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.setup_method": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_combine_first": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_dti_to_period": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Period",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_period_astype_to_timestamp": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_period_dt64_round_trip": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_searchsorted": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_datetime_depr": {
  "lineno": 389,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.period_range",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_annualish": {
  "lineno": 352,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_monthish": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_quarterly": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.period_range",
   "pandas.tseries.frequencies.MONTHS",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_period_quarterlyish": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp": {
  "lineno": 167,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp._get_with_delta": {
  "lineno": 180,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_1703": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_combined": {
  "lineno": 270,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_mult": {
  "lineno": 259,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_pi_nat": {
  "lineno": 234,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_preserve_name": {
  "lineno": 218,
  "symbols_in_volume": [
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_quarterly_bug": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_repr_is_code": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_to_timestamp_to_period_astype": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodIndex.test_tolist": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation._check_freq": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_annual": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_business_daily": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_daily": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_hourly": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_microsecondly": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_millisecondly": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_minutely": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_monthly": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_nanosecondly": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_negone_ordinals": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.core.indexes.period",
   "pandas.core.indexes.period.asfreq",
   "pandas.core.indexes.period.year"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_secondly": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestPeriodRepresentation.test_weekly": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_intraday_conversion_factors": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas._libs.period.period_asfreq",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_business_day": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas._libs.period.period_ordinal",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_start_values": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas._libs.period.period_ordinal",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.period.test_tools.TestTslib.test_period_ordinal_week": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas._libs.period.period_ordinal",
   "pandas.tseries.frequencies.get_freq"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_base.TestIndex": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.tests.indexes.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex._check_method_works": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.create_index": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.setup_method": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUIntIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add_string": {
  "lineno": 856,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_addsub_arithmetic": {
  "lineno": 1867,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_empty_preserve_name": {
  "lineno": 843,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_multiple": {
  "lineno": 832,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof": {
  "lineno": 505,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas._libs.lib.Timestamp",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof_datetime_partial": {
  "lineno": 516,
  "symbols_in_volume": [
   "pandas._libs.lib.Timestamp",
   "pandas.core.indexes.api.Index",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_astype": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_boolean_cmp": {
  "lineno": 1468,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_booleanindex": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.array",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas.core.indexes.datetimes._to_m8"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators._check": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_construction_list_mixed_tuples": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_contains_all",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_corner": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes": {
  "lineno": 282,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "numpy.timedelta64",
   "pandas.CategoricalIndex",
   "pandas.DatetimeIndex",
   "pandas.Float64Index",
   "pandas.Int64Index",
   "pandas.TimedeltaIndex",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes_datetime": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes_timedelta": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_datetimetz": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_period": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_timedelta": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas._libs.lib.Timestamp",
   "pandas.core.indexes.api.Index",
   "pandas.infer_freq",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_datetimetz": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_period": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_timedelta": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_int_dtype_nan": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__array__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__init__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_simple_new": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_conversion_preserves_name": {
  "lineno": 1690,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_copy_and_deepcopy": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_delete": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_difference": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_drop": {
  "lineno": 1303,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_empty_fancy": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.float_",
   "numpy.int_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals_object": {
  "lineno": 411,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals_op_multiindex": {
  "lineno": 1668,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.read_csv",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_fancy": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format": {
  "lineno": 976,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.nan",
   "pandas.compat.u",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.Index.format"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_datetime_with_time": {
  "lineno": 1012,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_none": {
  "lineno": 1020,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_with_name_time_info": {
  "lineno": 1004,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer": {
  "lineno": 1041,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_invalid": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest": {
  "lineno": 1078,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest_decreasing": {
  "lineno": 1130,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.compat.zip",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest_error": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest_listlike_tolerance": {
  "lineno": 1105,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_numeric_index_boolean_target": {
  "lineno": 1166,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_strings": {
  "lineno": 1145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_level_values": {
  "lineno": 1477,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_loc": {
  "lineno": 1173,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_set_value": {
  "lineno": 1377,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_getitem": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.datetimes._to_m8"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_groupby": {
  "lineno": 1662,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_iadd_string": {
  "lineno": 864,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_identical": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_index_ctor_infer_nan_nat": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.float64",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_index_ctor_infer_periodindex": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.core.indexes.api.Index",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_indexing_doesnt_change_class": {
  "lineno": 1546,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.Index",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_insert": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_intersect_str_dates": {
  "lineno": 667,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_intersection": {
  "lineno": 601,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pandas.compat.range",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_all_dates": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_monotonic_incomparable": {
  "lineno": 1370,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_numeric": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_object": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin": {
  "lineno": 1386,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_empty": {
  "lineno": 1459,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg": {
  "lineno": 1433,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg.check_idx": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_nan_common": {
  "lineno": 1414,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.NaT",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_nan_not_pypy": {
  "lineno": 1404,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.PYPY",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_nan_pypy": {
  "lineno": 1409,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.PYPY",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_join_self": {
  "lineno": 1491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_logical_compat": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_identity_mapping": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_tseries_indices_return_index": {
  "lineno": 817,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_map_with_tuples": {
  "lineno": 795,
  "symbols_in_volume": [
   "pandas.compat.lzip",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeIntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nan_first_take_datetime": {
  "lineno": 1565,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas._libs.lib.Timestamp",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nanosecond_index_access": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_new_axis": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_outer_join_sort": {
  "lineno": 1552,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index": {
  "lineno": 1646,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.float64",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index.get_reindex_type": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_name_if_target_is_list_or_ndarray": {
  "lineno": 1605,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array": {
  "lineno": 1635,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object_",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array.get_reindex_type": {
  "lineno": 1639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reshape_raise": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_keep_name": {
  "lineno": 1487,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs": {
  "lineno": 1206,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.api.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_dup": {
  "lineno": 1245,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_na": {
  "lineno": 1267,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.api.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step": {
  "lineno": 1277,
  "symbols_in_volume": [
   "pandas.IndexSlice",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step.check_slice": {
  "lineno": 1282,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_str_attribute": {
  "lineno": 1502,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.Index.str",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_string_index_repr": {
  "lineno": 1696,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.PY3",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_sub": {
  "lineno": 783,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_summary": {
  "lineno": 967,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.Index.summary"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_symmetric_difference": {
  "lineno": 899,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tab_completion": {
  "lineno": 1538,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_take_fill_value": {
  "lineno": 1571,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tuple_union_bug": {
  "lineno": 1344,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_union": {
  "lineno": 676,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.object_",
   "pandas.Series",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_contains_all",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_view_with_args": {
  "lineno": 382,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndexUtils": {
  "lineno": 2163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndexUtils.test_ensure_index_from_sequences": {
  "lineno": 2165,
  "symbols_in_volume": [
   "pandas.core.index._ensure_index_from_sequences",
   "pandas.core.indexes.api.Index",
   "pandas.core.indexes.api.MultiIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex": {
  "lineno": 1887,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.tests.indexes.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.create_index": {
  "lineno": 1898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.setup_method": {
  "lineno": 1894,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_argsort": {
  "lineno": 1901,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.PY3",
   "pandas.compat.PY36",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_bytestring_with_unicode": {
  "lineno": 2146,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.lrange",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_copy_name": {
  "lineno": 1927,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_copy_name2": {
  "lineno": 1953,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_difference_base": {
  "lineno": 2022,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_dropna": {
  "lineno": 2047,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_get_combined_index": {
  "lineno": 2088,
  "symbols_in_volume": [
   "pandas.core.index._get_combined_index",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_int_name_format": {
  "lineno": 2125,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_intersect_str_dates": {
  "lineno": 2153,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_intersection_base": {
  "lineno": 2006,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_is_monotonic_na": {
  "lineno": 2104,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_logical_compat": {
  "lineno": 2042,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_numpy_argsort": {
  "lineno": 1914,
  "symbols_in_volume": [
   "numpy.argsort",
   "pandas.compat.PY3",
   "pandas.compat.PY36",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_print_unicode_columns": {
  "lineno": 2132,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_repeat": {
  "lineno": 2092,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_repr_summary": {
  "lineno": 2119,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_symmetric_difference": {
  "lineno": 2032,
  "symbols_in_volume": [
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_unicode_string_with_unicode": {
  "lineno": 2138,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.lrange",
   "pandas.compat.text_type",
   "pandas.core.indexes.api.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestMixedIntIndex.test_union_base": {
  "lineno": 1977,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.create_index": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.setup_method": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.util.testing.makeCategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_append": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_astype": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical.from_codes",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_intervals",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction_with_categorical_dtype": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction_with_dtype": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.range",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_contains": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.api.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_create_categorical": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.CategoricalIndex._create_categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_delete": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_disallow_set_ops": {
  "lineno": 163,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_duplicates": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_ensure_copied_data": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_equals_categorical": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_fillna_categorical": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_indexer": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_loc": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_identical": {
  "lineno": 622,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_insert": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_is_monotonic": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.core.indexes.api.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_isin": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map.f": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_method_delegation": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_min_max": {
  "lineno": 228,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_base": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_dtype": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Categorical",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_empty_index": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindexing": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.core.indexes.api.Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_repr_roundtrip": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.core.indexes.api.CategoricalIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_string_categorical_index_repr": {
  "lineno": 703,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.compat.PY3",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value": {
  "lineno": 906,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value_datetime": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_invalid_kwargs": {
  "lineno": 1003,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_where": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_where_array_like": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.core.indexes.frozen.FrozenList",
   "pandas.tests.test_base.CheckImmutable",
   "pandas.tests.test_base.CheckStringMixin"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.setup_method": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenList"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.test_add": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenList"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenList.test_inplace": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.core.indexes.frozen.FrozenNDArray",
   "pandas.tests.test_base.CheckImmutable",
   "pandas.tests.test_base.CheckStringMixin"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.setup_method": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.core.indexes.frozen.FrozenNDArray"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_shallow_copying": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.indexes.frozen.FrozenNDArray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_shallow_copying.testit": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_frozen.TestFrozenNDArray.test_values": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.indexes.frozen.FrozenNDArray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.tests.indexes.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.create_index": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.create_index_with_nan": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.setup_method": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_tuples",
   "pandas.util.testing.makeIntervalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.slice_locs_cases": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.slice_locs_decreasing_cases": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_append": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_arrays",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_astype": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.IntervalIndex.from_intervals",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_comparison": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.Interval",
   "pandas.IntervalIndex",
   "pandas.IntervalIndex._simple_new",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_intervals",
   "pandas.IntervalIndex.from_tuples",
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_datetimelike": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_error": {
  "lineno": 162,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_error.f": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_intervals"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_errors": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Interval",
   "pandas.IntervalIndex",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_intervals",
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_constructors_other": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.IntervalIndex.from_intervals",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_contains": {
  "lineno": 629,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_copy": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_datetime": {
  "lineno": 820,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_delete": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_difference": {
  "lineno": 708,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_dropna": {
  "lineno": 662,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_ensure_copied_data": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.IntervalIndex.from_intervals",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_equals": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_indexer": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_indexer_subintervals": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_item": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Interval",
   "pandas.IntervalIndex.from_arrays",
   "pandas.isna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_loc_interval": {
  "lineno": 576,
  "symbols_in_volume": [
   "pandas.Interval",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_get_loc_value": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "pandas.IntervalIndex.from_arrays",
   "pandas.IntervalIndex.from_tuples",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_insert": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_intersection": {
  "lineno": 699,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_is_non_overlapping_monotonic": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_isin": {
  "lineno": 723,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_missing_values": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Index",
   "pandas.Interval",
   "pandas.IntervalIndex.from_arrays",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_monotonic": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_non_contiguous": {
  "lineno": 676,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_tuples",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_properties": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.nan",
   "pandas.Index",
   "pandas.Interval",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr": {
  "lineno": 448,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_tuples",
   "pandas.Timestamp",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr_max_seq_item_setting": {
  "lineno": 468,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_repr_roundtrip": {
  "lineno": 472,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_set_operation_errors": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_decreasing_float64": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_decreasing_int64": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_fails": {
  "lineno": 571,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_tuples",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_float64": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_slice_locs_int64": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_sort_values": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_symmetric_difference": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_take": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_union": {
  "lineno": 685,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_unique": {
  "lineno": 332,
  "symbols_in_volume": [
   "pandas.IntervalIndex",
   "pandas.IntervalIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_where": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_intervals",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_where_array_like": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.test_with_nans": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalIndex.testcontains": {
  "lineno": 645,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange": {
  "lineno": 896,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_construction_from_numeric": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks",
   "pandas.IntervalIndex.from_tuples",
   "pandas.interval_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_construction_from_timedelta": {
  "lineno": 1001,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.Timedelta",
   "pandas.interval_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_construction_from_timestamp": {
  "lineno": 935,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_breaks",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.interval_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_constructor_coverage": {
  "lineno": 1043,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DateOffset",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.interval_range",
   "pandas.tseries.offsets.Day",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalRange.test_errors": {
  "lineno": 1088,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.interval_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.setup_method": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas._libs.interval.IntervalTree"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_duplicates": {
  "lineno": 1205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "pandas._libs.interval.IntervalTree",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer": {
  "lineno": 1186,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer_closed": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "pandas._libs.interval.IntervalTree",
   "pandas.compat.is_platform_32bit",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_indexer_non_unique": {
  "lineno": 1194,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_loc": {
  "lineno": 1177,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.TestIntervalTree.test_get_loc_closed": {
  "lineno": 1218,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.interval.IntervalTree",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_interval.closed": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.assert_multiindex_copied": {
  "lineno": 591,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_copy"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.check_level_names": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.create_index": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.setup_method": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.take_invalid_kwargs": {
  "lineno": 1994,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_append": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_append_mixed_dtypes": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_argsort": {
  "lineno": 1727,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_astype": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.util.testing.assert_copy",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2.f": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bounds": {
  "lineno": 1484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bytestring_with_unicode": {
  "lineno": 2352,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_changing_names": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_consistency": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.repeat",
   "pandas.MultiIndex",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_mismatched_label_levels": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_raises_regex",
   "re.compile",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_no_levels": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.util.testing.assert_raises_regex",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_single_level": {
  "lineno": 539,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains_top_level": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains_with_nat": {
  "lineno": 1070,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy_in_constructor": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy_names": {
  "lineno": 465,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_difference": {
  "lineno": 1653,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_dims": {
  "lineno": 1781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop": {
  "lineno": 1784,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop_not_lexsorted": {
  "lineno": 1862,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_multiple": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_with_names": {
  "lineno": 1836,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_dropna": {
  "lineno": 2888,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_meta_data": {
  "lineno": 2234,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_names": {
  "lineno": 649,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates": {
  "lineno": 2132,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.nan",
   "numpy.random.choice",
   "numpy.random.permutation",
   "numpy.zeros",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas._libs.hashtable.duplicated_object",
   "pandas.compat.range",
   "pandas.compat.u",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates.check": {
  "lineno": 2164,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.insert",
   "numpy.tile",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_missing_values": {
  "lineno": 1528,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_multi": {
  "lineno": 1487,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_operator": {
  "lineno": 2753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format": {
  "lineno": 1384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_integer_names": {
  "lineno": 1388,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_config": {
  "lineno": 1401,
  "symbols_in_volume": [
   "pandas.set_option",
   "pandas.util.testing.reset_display_options",
   "warnings.filters",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_display": {
  "lineno": 1393,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays": {
  "lineno": 662,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.NaT",
   "pandas._libs.lib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_different_lengths": {
  "lineno": 787,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_empty": {
  "lineno": 760,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_datetimelike_mixed": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_categorical": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_datetimetz": {
  "lineno": 676,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_period": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_timedelta": {
  "lineno": 691,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_invalid_input": {
  "lineno": 781,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product": {
  "lineno": 807,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_datetimeindex": {
  "lineno": 858,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp",
   "pandas._libs.lib.list_to_object_array",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_empty": {
  "lineno": 822,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_index_series_categorical": {
  "lineno": 866,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_invalid_input": {
  "lineno": 852,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples": {
  "lineno": 1712,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples_empty": {
  "lineno": 1720,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples_index_values": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer": {
  "lineno": 1313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange",
   "pandas.core.indexes.base.InvalidIndexError",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer_nearest": {
  "lineno": 1364,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_number_integer": {
  "lineno": 654,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values_na": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.NaT",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc": {
  "lineno": 1108,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_duplicates": {
  "lineno": 1124,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_level": {
  "lineno": 1147,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_missing_nan": {
  "lineno": 1172,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_unique_index": {
  "lineno": 2245,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_value_duplicates": {
  "lineno": 1136,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem_group_select": {
  "lineno": 1103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_groupby": {
  "lineno": 2729,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_hash_collisions": {
  "lineno": 1371,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_identical": {
  "lineno": 1537,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_index_name_retained": {
  "lineno": 2740,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_inplace_mutation_resets_values": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.MultiIndex",
   "pandas.compat.long",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_insert": {
  "lineno": 1884,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_intersection": {
  "lineno": 1616,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_": {
  "lineno": 1555,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lrange",
   "pandas.compat.lzip",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_all_dates": {
  "lineno": 1080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_monotonic_decreasing": {
  "lineno": 2452,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_monotonic_increasing": {
  "lineno": 2384,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_numeric": {
  "lineno": 1083,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_strictly_monotonic_decreasing": {
  "lineno": 2527,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_strictly_monotonic_increasing": {
  "lineno": 2521,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin": {
  "lineno": 2634,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bool_",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_level_kwarg": {
  "lineno": 2665,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_nan_not_pypy": {
  "lineno": 2649,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.PYPY",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_nan_pypy": {
  "lineno": 2657,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.PYPY",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isna_behavior": {
  "lineno": 2366,
  "symbols_in_volume": [
   "pandas.isna",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_iter": {
  "lineno": 999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level": {
  "lineno": 2012,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_all": {
  "lineno": 2038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_how": {
  "lineno": 2013,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_multi": {
  "lineno": 2063,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_self": {
  "lineno": 2056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_labels_dtypes": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_large_multiindex_error": {
  "lineno": 2757,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_pickle": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.PY3",
   "pandas.read_pickle",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.get_data_path",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_v2_unpickle": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas.MultiIndex.from_tuples",
   "pandas.read_pickle",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_level_setting_resets_attributes": {
  "lineno": 2373,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_metadata_immutable": {
  "lineno": 373,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_million_record_attribute_error": {
  "lineno": 2984,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_names": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_nan_stays_float": {
  "lineno": 2963,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_nlevels": {
  "lineno": 996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_numpy_repeat": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_partial_string_timestamp_multiindex": {
  "lineno": 2774,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_rangeindex_fallback_coercion_bug": {
  "lineno": 2865,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.MultiIndex.from_product",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reconstruct_remove_unused": {
  "lineno": 2578,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reconstruct_sort": {
  "lineno": 2533,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reference_duplicate_name": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex": {
  "lineno": 2097,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_level": {
  "lineno": 2107,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_names_when_target_is_list_or_array": {
  "lineno": 2716,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_type_if_target_is_empty_list_or_array": {
  "lineno": 2723,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.object_",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_preserves_names_when_target_is_list_or_ndarray": {
  "lineno": 2692,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_remove_unused_levels_large": {
  "lineno": 2607,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reorder_levels": {
  "lineno": 991,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repeat": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_roundtrip": {
  "lineno": 2297,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.compat.PY3",
   "pandas.compat.range",
   "pandas.compat.text_type",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_with_unicode_data": {
  "lineno": 2291,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_roundtrip_pickle_with_tz": {
  "lineno": 1045,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels.assert_matching": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int8",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels.assert_matching": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels_categorical": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels_labels_names_bad_input": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_name_methods": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_value_keeps_names": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_shallow_copy": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_keep_name": {
  "lineno": 2361,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs": {
  "lineno": 1180,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_contained": {
  "lineno": 1244,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_sorted": {
  "lineno": 1215,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_partial": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_with_type_mismatch": {
  "lineno": 1196,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeCustomDataframe",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel": {
  "lineno": 1732,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_deterministic": {
  "lineno": 1760,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_not_sort_remaining": {
  "lineno": 1755,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_str": {
  "lineno": 2339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sub": {
  "lineno": 1639,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_fill_value": {
  "lineno": 1954,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_preserve_name": {
  "lineno": 1950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_to_frame": {
  "lineno": 1415,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_to_hierarchical": {
  "lineno": 1452,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_tolist": {
  "lineno": 2286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_truncate": {
  "lineno": 1289,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_tuples_with_name_string": {
  "lineno": 2954,
  "symbols_in_volume": [
   "pandas.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unicode_string_with_unicode": {
  "lineno": 2343,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_union": {
  "lineno": 1582,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unique": {
  "lineno": 2254,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unique_datetimelike": {
  "lineno": 2271,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unsortedindex": {
  "lineno": 2909,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lrange",
   "pandas.errors.UnsortedIndexError",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unsortedindex_doc_examples": {
  "lineno": 2930,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.errors.PerformanceWarning",
   "pandas.errors.UnsortedIndexError",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_values_boxed": {
  "lineno": 880,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas._libs.lib.list_to_object_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_view": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where.f": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_where_array_like": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_numeric.Numeric": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.tests.indexes.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_explicit_conversions": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_index_groupby": {
  "lineno": 148,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_modulo": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_numeric_compat": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.errstate",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.UInt64Index",
   "pandas.compat.PY3",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_ufunc_compat": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sin",
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_cant_or_shouldnt_cast": {
  "lineno": 573,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_identical": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_is_monotonic": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_is_strictly_monotonic": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_join_non_unique": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_join_self": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_logical_compat": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_prevent_casting": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_slice_keep_name": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_take_fill_value": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_take_preserve_name": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_ufunc_coercions": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.divide",
   "numpy.sqrt",
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_union_noncomparable": {
  "lineno": 560,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "datetime.timedelta",
   "numpy.concatenate",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_view": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.NumericInt.test_view_index": {
  "lineno": 582,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.Float64Index"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_coerce": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_is_index": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.create_index": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.setup_method": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.NAN",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype_from_object": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_coerce": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_explicit": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_invalid": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas._libs.lib.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_nans": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_not_nans": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_doesnt_contain_all_the_things": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_equals_numeric": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_fillna_float64": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_indexer": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Float64Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Float64Index",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc_missing_nan": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc_na": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_nan_multiple_containment": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.pi",
   "pandas.Float64Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_repr_roundtrip": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_take_fill_value": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index": {
  "lineno": 662,
  "symbols_in_volume": [
   "pandas.Int64Index"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.create_index": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.setup_method": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_coerce_list": {
  "lineno": 720,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor_corner": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_get_indexer": {
  "lineno": 754,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_intersection": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.intersect1d",
   "numpy.sort",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_inner": {
  "lineno": 782,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_left": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_non_int_index": {
  "lineno": 892,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_outer": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_right": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_where": {
  "lineno": 729,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_where_array_like": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index": {
  "lineno": 957,
  "symbols_in_volume": [
   "pandas.UInt64Index"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.create_index": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.UInt64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.setup_method": {
  "lineno": 962,
  "symbols_in_volume": [
   "pandas.UInt64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_constructor": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "pandas.Index",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_get_indexer": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_intersection": {
  "lineno": 1007,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.intersect1d",
   "numpy.sort",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_inner": {
  "lineno": 1019,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_left": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_non_int_index": {
  "lineno": 1144,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_outer": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestUInt64Index.test_join_right": {
  "lineno": 1101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.UInt64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.full_like": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.check_binop": {
  "lineno": 35,
  "symbols_in_volume": [
   "itertools.combinations",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.create_index": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.setup_method": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_append": {
  "lineno": 962,
  "symbols_in_volume": [
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_binops": {
  "lineno": 47,
  "symbols_in_volume": [
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.sub",
   "operator.truediv",
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_binops_pow": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_cant_or_shouldnt_cast": {
  "lineno": 714,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor": {
  "lineno": 70,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.int64",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_corner": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_name": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_range": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.RangeIndex.from_range",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_same": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_copy": {
  "lineno": 260,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_delete": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_dtype": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_duplicates": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_equals_range": {
  "lineno": 365,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_explicit_conversions": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.Float64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_extended_gcd": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_backfill": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_pad": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_identical": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_insert": {
  "lineno": 290,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_intersection": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.intersect1d",
   "numpy.sort",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_is_monotonic": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_inner": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_left": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_int_index": {
  "lineno": 540,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_unique": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_outer": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_right": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intp",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_self": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_len_specialised": {
  "lineno": 914,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_logical_compat": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_max_fitting_element": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_max_min": {
  "lineno": 998,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.isna",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_min_fitting_element": {
  "lineno": 821,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_nbytes": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_numeric_compat2": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_pickle_compat_construction": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_prevent_casting": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_print_unicode_columns": {
  "lineno": 760,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr": {
  "lineno": 270,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr_roundtrip": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_keep_name": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_specialised": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_fill_value": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_preserve_name": {
  "lineno": 728,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names.testit": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_ufunc_compat": {
  "lineno": 806,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sin",
   "pandas.Float64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union_noncomparable": {
  "lineno": 658,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "datetime.timedelta",
   "numpy.concatenate",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.RangeIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view_Index": {
  "lineno": 721,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_where": {
  "lineno": 937,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.notna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_where_array_like": {
  "lineno": 950,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_astype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.create_index": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.offsets.Hour",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.setup_method": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.int64",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype_raises": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_astype_timedelta64": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.Float64Index",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_numeric_compat": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_pickle_compat_construction": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_astype.TestTimedeltaIndex.test_shift": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_construction_base_constructor": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor": {
  "lineno": 25,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.TimedeltaIndex",
   "pandas.offsets.Second",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor_coverage": {
  "lineno": 48,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_construction.TestTimedeltaIndex.test_constructor_name": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_delete": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.compat.iteritems",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_delete_slice": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.compat.iteritems",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_indexing.TestTimedeltaIndex.test_insert": {
  "lineno": 12,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Index",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing": {
  "lineno": 1212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing.test_add_overflow": {
  "lineno": 1250,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing.test_tdi_ops_attributes": {
  "lineno": 1214,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestSlicing.test_timedeltaindex_add_timestamp_nat_masking": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.tests.test_base.Ops"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.setup_method": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_add_iadd": {
  "lineno": 217,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.offsets.Hour",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_addition_ops": {
  "lineno": 450,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Int64Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_asobject_tolist": {
  "lineno": 30,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_comp_nat": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_drop_duplicates": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_drop_duplicates_metadata": {
  "lineno": 678,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_dti_tdi_numeric_ops": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_equals": {
  "lineno": 843,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_getitem": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_infer_freq": {
  "lineno": 767,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_minmax": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nat": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.TimedeltaIndex._na_value",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nat_new": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_nonunique_contains": {
  "lineno": 561,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_numpy_minmax": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.asarray",
   "numpy.max",
   "numpy.min",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas._np_version_under1p10",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_ops_compat": {
  "lineno": 274,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.arange",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Float64Index",
   "pandas.Int64Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.offsets.Hour",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_ops_properties": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.TimedeltaIndex._field_ops",
   "pandas.TimedeltaIndex._object_ops"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_order": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_repeat": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_representation": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_representation_to_series": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_round": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_shift": {
  "lineno": 787,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_sub_isub": {
  "lineno": 242,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.offsets.Hour",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_sub_period": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.TimedeltaIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops_with_tz": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_subtraction_ops_with_tz._check": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_summary": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_take": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_take_invalid_kwargs": {
  "lineno": 751,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_unknown_attribute": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pandas.Series",
   "pandas.timedelta_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltaIndexOps.test_value_counts_unique": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.NaT",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_compare_timedelta_ndarray": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Timedelta",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_compare_timedelta_series": {
  "lineno": 1196,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_error_str": {
  "lineno": 1004,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_ndarray": {
  "lineno": 908,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.array",
   "numpy.float64",
   "pandas.Timedelta",
   "pandas.to_datetime",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_notimplemented": {
  "lineno": 991,
  "symbols_in_volume": [
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_notimplemented.Other": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_offsets": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.offsets.Hour"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_series": {
  "lineno": 951,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_ops_series_object": {
  "lineno": 959,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops": {
  "lineno": 1021,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.to_timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops_scalar": {
  "lineno": 1076,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.offsets.Day",
   "pandas.offsets.Second",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_ops.TestTimedeltas.test_timedelta_ops_with_missing_values": {
  "lineno": 1107,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_partial_slice": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_partial_slice_high_reso": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_negative_step": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IndexSlice",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_negative_step.assert_slices_equivalent": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_partial_slicing.TestSlicing.test_slice_with_zero_step_raises": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_intersection_bug_1708": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.offsets.Hour",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Int64Index",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_1730": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_1745": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_bug_4564": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.offsets.Minute",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_setops.TestTimedeltaIndex.test_union_coverage": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestSlicing": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestSlicing.test_timedelta": {
  "lineno": 577,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.Hour",
   "pandas.tseries.offsets.BusinessDay",
   "pandas.tseries.offsets.Day",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimeSeries": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimeSeries.test_series_box_timedelta": {
  "lineno": 613,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.create_index": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.offsets.Hour",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.setup_method": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_append_join_nondatetimeindex": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timedelta",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_append_numpy_bug_1681": {
  "lineno": 489,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_argmin_argmax": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_comparisons_coverage": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_comparisons_nat": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_difference_freq": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_attr_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_does_not_convert_mixed_integer": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_factorize": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_fields": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_fillna_timedelta": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_freq_conversion": {
  "lineno": 529,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Index",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_duplicates": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_indexer": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Timedelta",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_loc": {
  "lineno": 48,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_get_loc_nat": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_hash_error": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_isin": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_join_self": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_map": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_misc_coverage": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_numeric_compat": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pass_TimedeltaIndex_to_index": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pickle": {
  "lineno": 467,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_pickle_compat_construction": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_shift": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_slice_keeps_name": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_sort_values": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_take": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_take_fill_value": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_total_seconds": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta.TestTimedeltaIndex.test_ufunc_coercions": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.divide",
   "numpy.multiply",
   "numpy.negative",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.TestTimedeltas": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.TestTimedeltas.test_errors": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.timedelta_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_timedelta_range.TestTimedeltas.test_timedelta_range": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.normal",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.timedelta_range",
   "pandas.to_timedelta",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Second",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta": {
  "lineno": 17,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.arange",
   "numpy.array",
   "numpy.timedelta64",
   "pandas.Index",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas._libs.tslib.iNaT",
   "pandas.isna",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta.conv": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_invalid": {
  "lineno": 111,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_on_missing_values": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_on_nanoseconds": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexes.timedeltas.test_tools.TestTimedeltas.test_to_timedelta_via_apply": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.common.Base": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.common.Base.check_result": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.check_result._call": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.check_result._eq": {
  "lineno": 175,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.check_result._eq._print": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.check_values": {
  "lineno": 153,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.generate_indices": {
  "lineno": 105,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.get_result": {
  "lineno": 117,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.get_value": {
  "lineno": 138,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common.Base.setup_method": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.UInt64Index",
   "pandas.compat.lrange",
   "pandas.date_range",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.common._axify": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.common._mklbl": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_iloc_callable": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_iloc_callable_setitem": {
  "lineno": 213,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_loc_callable": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_loc_callable_setitem": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_loc_ix_callable": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_callable.TestIndexingCallable.test_frame_loc_ix_callable_mixture": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.setup_method": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_boolean_selection": {
  "lineno": 382,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_get_indexer_array": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.CategoricalIndex",
   "pandas.Timestamp",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_getitem_scalar": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_getitem_with_listlike": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_indexing_with_category": {
  "lineno": 427,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_ix_categorical_index": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_loc_listlike": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_loc_listlike_dtypes": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_loc_scalar": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_loc_scalar.f": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_loc_slice": {
  "lineno": 371,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_read_only_source": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.eye",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_categorical.TestCategoricalIndex.test_reindexing": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestCaching": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestCaching.test_setitem_cache_updating": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestCaching.test_slice_consolidate_invalidate_item_cache": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.option_context",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_cache_updating": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_chained_getitem_with_lists": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_chained_getitem_with_lists.check": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_detect_chained_assignment": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.core.common.SettingWithCopyError",
   "pandas.date_range",
   "pandas.read_pickle",
   "pandas.set_option",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_detect_chained_assignment.random_text": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_detect_chained_assignment_warnings": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.common.SettingWithCopyWarning",
   "pandas.option_context",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_setitem_chained_setfault": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.rec.fromarrays",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_setting_with_copy_bug": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.common.SettingWithCopyError",
   "pandas.isna",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_chaining_and_caching.TestChaining.test_setting_with_copy_bug.f": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_coercion.CoercionBase": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.CoercionBase._assert": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.CoercionBase.method": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.CoercionBase.test_has_comprehensive_tests": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion._assert_fillna_conversion": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion._fillna_float64_common": {
  "lineno": 964,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "numpy.object"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion._fillna_object_common": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.object"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_bool": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_complex128": {
  "lineno": 1012,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_datetime64": {
  "lineno": 1113,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_datetime64tz": {
  "lineno": 1146,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_float64": {
  "lineno": 989,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_int64": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_object": {
  "lineno": 954,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_period": {
  "lineno": 1193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_index_timedelta64": {
  "lineno": 1190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_bool": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_complex128": {
  "lineno": 992,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.nan",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_datetime64": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_datetime64tz": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_float64": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.complex128",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_int64": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_object": {
  "lineno": 951,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_period": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestFillnaSeriesCoercion.test_fillna_series_timedelta64": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion._assert_insert_conversion": {
  "lineno": 395,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_bool": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_complex128": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_datetime64": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_datetime64tz": {
  "lineno": 491,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_float64": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object",
   "pandas.Float64Index",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_int64": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "pandas.Index",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_object": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_period": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestInsertIndexCoercion.test_insert_index_timedelta64": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion": {
  "lineno": 1197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion._assert_replace_conversion": {
  "lineno": 1223,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.is_platform_32bit",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.setup_method": {
  "lineno": 1204,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_bool": {
  "lineno": 1292,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_complex128": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_datetime64": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_datetime64tz": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_float64": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_int64": {
  "lineno": 1268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_object": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_period": {
  "lineno": 1332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestReplaceSeriesCoercion.test_replace_series_timedelta64": {
  "lineno": 1323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion._assert_setitem_index_conversion": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion._assert_setitem_series_conversion": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_bool": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_complex128": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_datetime64": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_datetime64tz": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_float64": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object",
   "pandas.Index",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_int64": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_object": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_period": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_index_timedelta64": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_bool": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.bool",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_complex128": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_datetime64": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_datetime64tz": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_float64": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.float64",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_int64": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.int64",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_int8": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_object": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_period": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestSetitemCoercion.test_setitem_series_timedelta64": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Series",
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion._assert_where_conversion": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion._where_float64_common": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.float64",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion._where_int64_common": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion._where_object_common": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_bool": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_complex128": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_datetime64": {
  "lineno": 858,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_datetime64tz": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_float64": {
  "lineno": 727,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_int64": {
  "lineno": 681,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_object": {
  "lineno": 635,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_period": {
  "lineno": 914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_index_timedelta64": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_bool": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_complex128": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.object",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_datetime64": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_datetime64tz": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_float64": {
  "lineno": 724,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_int64": {
  "lineno": 678,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_object": {
  "lineno": 632,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_period": {
  "lineno": 905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_coercion.TestWhereCoercion.test_where_series_timedelta64": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_consistency_with_tz_aware_scalar": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_indexing_with_datetime_tz": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_indexing_with_datetimeindex_tz": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_loc_setitem_datetime": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_partial_setting_with_datetimelike_dtype": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_series_partial_set_datetime": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_series_partial_set_period": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_datetime.TestDatetimeIndex.test_setitem_with_datetime_tz": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.check": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_float64index_slicing_bug": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_floating_index_doc_example": {
  "lineno": 576,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_floating_misc": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_floating_tuples": {
  "lineno": 705,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_integer_positional_indexing": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_integer_positional_indexing.f": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_error": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeRangeIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_error.f": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_float": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_float.f": {
  "lineno": 267,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_float.g": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_integer": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeRangeIndex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_integer.compare": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_non_numeric": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_non_numeric.f": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_with_mixed": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_scalar_with_mixed.f": {
  "lineno": 175,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_float": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_integer": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeRangeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_integer.f": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_integer_frame_getitem": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeRangeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_integer_frame_getitem.f": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_non_numeric": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_floats.TestFloatIndexers.test_slice_non_numeric.f": {
  "lineno": 342,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.tests.indexing.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_identity_slice_returns_new_object": {
  "lineno": 638,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_empty_list_indexer_is_ok": {
  "lineno": 624,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_exceeds_bounds": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.random_sample",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_exceeds_bounds.check": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_array": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_bool": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_doc_issue": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_dups": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_frame": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_int": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_labelled_frame": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_list_int": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_neg_int": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_neg_int_can_reach_first_index": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_slice": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_getitem_slice_dups": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_mask": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lmap",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_non_unique_indexing": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_dups": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_int_multiindex_series": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_list": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_list_of_lists": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_pandas_object": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_iloc.TestiLoc.test_iloc_setitem_series": {
  "lineno": 483,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_indexing.TestDataframeNoneCoercion": {
  "lineno": 932,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.NaT"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing.TestDataframeNoneCoercion.test_coercion_with_loc": {
  "lineno": 946,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestDataframeNoneCoercion.test_coercion_with_setitem_and_dataframe": {
  "lineno": 954,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestDataframeNoneCoercion.test_none_coercion_loc_and_dataframe": {
  "lineno": 963,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestDataframeNoneCoercion.test_none_coercion_mixed_dtypes": {
  "lineno": 972,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.tests.indexing.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_astype_assignment": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_astype_assignment_with_dups": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_dups_fancy_indexing": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_index_contains": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.Index",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_index_not_contains": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.UInt64Index",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_index_type_coercion": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_indexing_mixed_frame_bug": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_inf_upcast": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.DataFrame",
   "pandas.Float64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_mi_access": {
  "lineno": 488,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_multi_assign": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_multi_nan_indexing": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_multitype_list_index_access": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_set_index_nan": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_dtype_upcast": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list.TO": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list.TO.__eq__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list.TO.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list.TO.__str__": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_list.TO.view": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_ndarray_1d": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex",
   "numpy.float64",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_setitem_ndarray_1d.f": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestFancy.test_string_slice": {
  "lineno": 467,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc": {
  "lineno": 670,
  "symbols_in_volume": [
   "pandas.tests.indexing.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_float_index_at_iat": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_float_index_non_scalar_assignment": {
  "lineno": 695,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_float_index_to_mixed": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_indexer_caching": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_indexing_assignment_dict_already_exists": {
  "lineno": 796,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_indexing_dtypes_on_empty": {
  "lineno": 806,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_list_slice": {
  "lineno": 849,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.Series",
   "pandas.core.indexing._non_reducing_slice",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_maybe_numeric_slice": {
  "lineno": 858,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.core.indexing._maybe_numeric_slice"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_non_reducing_slice": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.Series",
   "pandas.core.indexing._non_reducing_slice"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_partial_boolean_frame_indexing": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_range_in_series_indexing": {
  "lineno": 817,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_rhs_alignment": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_rhs_alignment.run_tests": {
  "lineno": 716,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_slice_with_zero_step_raises": {
  "lineno": 785,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.tests.indexing.common._mklbl",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_str_label_slicing_with_negative_step": {
  "lineno": 765,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "pandas.Index",
   "pandas.IndexSlice",
   "pandas.Series",
   "pandas.tests.indexing.common._mklbl"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestMisc.test_str_label_slicing_with_negative_step.assert_slices_equivalent": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestSeriesNoneCoercion": {
  "lineno": 885,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.NaT"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing.TestSeriesNoneCoercion.test_coercion_with_loc_and_series": {
  "lineno": 923,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestSeriesNoneCoercion.test_coercion_with_loc_setitem": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestSeriesNoneCoercion.test_coercion_with_setitem": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing.TestSeriesNoneCoercion.test_coercion_with_setitem_and_series": {
  "lineno": 915,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing_slow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow.test_large_dataframe_indexing": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow.test_large_mi_dataframe_indexing": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.core.api.MultiIndex.from_arrays",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow.test_multiindex_get_loc": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.date_range",
   "pytest.mark.slow",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow.test_multiindex_get_loc.loop": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_indexing_slow.TestIndexingSlow.test_multiindex_get_loc.validate": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.core.api.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.setup_method": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_getitem_with_scalar": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_large_series": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_loc_getitem_frame": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_loc_with_scalar": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_non_matching": {
  "lineno": 211,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_non_unique": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_non_unique_moar": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_nonoverlapping_monotonic": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.product",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_with_interval": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_with_overlaps": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_interval.TestIntervalIndex.test_with_slices": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_ix.TestIX": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_assign_column_mixed": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.option_context",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.getSeriesData"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_deprecation": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_duplicate_returns_series": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_empty_list_indexer_is_ok": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_general": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_get_set_consistency": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_loc_consistency": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_loc_consistency.compare": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_loc_setitem_consistency": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_setitem_out_of_bounds_axis_0": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_setitem_out_of_bounds_axis_1": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_slicing_strings": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_ix.TestIX.test_ix_weird_slicing": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_loc.TestLoc": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.tests.indexing.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_getitem_label_list_with_missing": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_identity_slice_returns_new_object": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_coerceion": {
  "lineno": 552,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_empty_list_indexer_is_ok": {
  "lineno": 670,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_general": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_bool": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_dups": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.random.random_sample",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_dups2": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_int": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_int_slice": {
  "lineno": 203,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_array_like": {
  "lineno": 185,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_list": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_list_fails": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_list_with_missing": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_out_of_range": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_label_slice": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_getitem_list_with_fail": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_index": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_name": {
  "lineno": 656,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_non_unique": {
  "lineno": 587,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_non_unique_memory_error": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_non_unique_memory_error.gen_expected": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_non_unique_memory_error.gen_test": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_consistency": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_consistency_empty": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_consistency_slice_column_len": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_dups": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_frame": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_frame_multiples": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_setitem_slice": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_to_fail": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_loc.TestLoc.test_loc_to_fail.f": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_getitem_duplicates_multiindex": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mean",
   "numpy.median",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.IndexSlice",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_getitem_duplicates_multiindex.f": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_getitem_partial_int": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_iloc_getitem_multiindex": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_iloc_getitem_multiindex2": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_loc_getitem_array": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_loc_getitem_series": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_loc_multiindex": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_loc_multiindex_incomplete": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_loc_multiindex_indexer_none": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_assignment": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_assignment.f": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_label_slicing_with_negative_step": {
  "lineno": 654,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_label_slicing_with_negative_step.assert_slices_equivalent": {
  "lineno": 659,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_perf_warn": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.core.index",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_setitem": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_setitem.f": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_slice_first_level": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_multiindex_symmetric_difference": {
  "lineno": 700,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_series_getitem_multiindex": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_setitem_multiindex": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_setitem_multiindex.assert_equal": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_setitem_multiindex.check": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexBasic.test_xs_multiindex": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexPanel": {
  "lineno": 1211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexPanel.test_iloc_getitem_panel_multiindex": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Panel",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexPanel.test_panel_setitem_with_multiindex": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_loc_axis_arguments": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.tests.indexing.common._mklbl",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_loc_axis_arguments.f": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_multiindex_slicers_datetimelike": {
  "lineno": 873,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_multiindex_slicers_edges": {
  "lineno": 914,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_multiindex_slicers_non_unique": {
  "lineno": 828,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_doc_examples": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.errors.UnsortedIndexError",
   "pandas.tests.indexing.common._mklbl",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_doc_examples.f": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_getitem": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.errors.UnsortedIndexError",
   "pandas.tests.indexing.common._mklbl",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_getitem.f": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_setitem": {
  "lineno": 1076,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_multiindex.TestMultiIndexSlicers.test_per_axis_per_level_setitem.f": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_panel.TestPanel": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_iloc_getitem_panel": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pandas.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_iloc_getitem_panel.f": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_iloc_panel_issue": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_assignment": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.date_range",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_assignment.f": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_getitem": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_getitem.TestObject": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_getitem.TestObject.__str__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_panel.TestPanel.test_panel_setitem": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame.f": {
  "lineno": 540,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame_empty_consistencies": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame_empty_copy_assignment": {
  "lineno": 617,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame_row": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_frame_set_series": {
  "lineno": 608,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_empty_series": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_invalid": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_set_invalid.f": {
  "lineno": 433,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_setting": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_setting.f": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_setting_mixed_dtype": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_partial_setting_mixed_dtype.f": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_series_partial_set": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_partial.TestPartialSetting.test_series_partial_set_with_name": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_scalar.TestScalar": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.tests.indexing.common.Base"
  ],
  "type": "class"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_and_iat_get": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_and_iat_get._check": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_and_iat_set": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_and_iat_set._check": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_iat_coercion": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_to_fail": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_at_with_tz": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_iat_invalid_args": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.indexing.test_scalar.TestScalar.test_imethods_with_dups": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_timedelta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing.test_boolean_indexing": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing.test_list_like_indexing": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing.test_listlike_setitem": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing.test_masked_setitem": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.indexing.test_timedelta.TestTimedeltaIndexing.test_string_indexing": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.internals.test_external_block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.internals.test_external_block.CustomBlock": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.internals.Block",
   "pandas.core.internals.NonConsolidatableMixIn"
  ],
  "type": "class"
 },
 "pandas.tests.internals.test_external_block.CustomBlock.concat_same_type": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.CustomBlock.formatting_values": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.df": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.core.internals.BlockManager",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.test_concat_axis1": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.test_concat_dataframe": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.test_concat_series": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_external_block.test_custom_repr": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals.SingleBlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "sys.version"
  ],
  "type": "module"
 },
 "pandas.tests.internals.test_internals.DummyElement": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.DummyElement.__array__": {
  "lineno": 1224,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.__init__": {
  "lineno": 1220,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.__repr__": {
  "lineno": 1230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.__str__": {
  "lineno": 1227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.any": {
  "lineno": 1240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.astype": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.DummyElement.view": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestBlock.setup_method": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_attrs": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_constructor": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_copy": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_delete": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.BlockPlacement",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_insert": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_merge": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.core.internals.make_block",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.randn"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_mgr_locs": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.BlockPlacement",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_pickle": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_pickle._check": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_reindex_cast": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_reindex_index": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlock.test_split_block_at": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.array_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_as_matrix_datetime": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_as_matrix_datetime_tz": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_as_matrix_float": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_as_matrix_int_bool": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_astype": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "numpy.int64",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_attrs": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_categorical_block_pickle": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_consolidate": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_consolidate_ordering_issues": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas._libs.lib.BlockPlacement",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.randn"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_constructor_corner": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_contains": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_convert": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.datetime64",
   "numpy.float16",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_convert._compare": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_copy": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_duplicate_ref_loc_failure": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.internals.BlockManager",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_equals": {
  "lineno": 826,
  "symbols_in_volume": [
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_equals_block_order_different_dtypes": {
  "lineno": 836,
  "symbols_in_volume": [
   "itertools.permutations",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_get": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pandas.Index",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals.make_block",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_get_bool_data": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.Index",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_get_numeric_data": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.Index",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_get_scalar": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_interleave": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_interleave_non_unique_cols": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_is_indexed_like": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_is_mixed_dtype": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_missing_unicode_key": {
  "lineno": 819,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_multiindex_xs": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_non_unique_pickle": {
  "lineno": 396,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_pickle": {
  "lineno": 380,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_reindex_index": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_reindex_items": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_set": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_set_change_dtype": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.int_",
   "numpy.object_",
   "numpy.repeat",
   "numpy.zeros",
   "pandas.util.testing.randn"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_set_change_dtype_slice": {
  "lineno": 467,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_single_mgr_ctor": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_sparse": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_sparse_mixed": {
  "lineno": 504,
  "symbols_in_volume": [
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_unicode_repr_doesnt_raise": {
  "lineno": 816,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockManager.test_validate_bool_args": {
  "lineno": 859,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_array_to_slice_conversion": {
  "lineno": 1125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_array_to_slice_conversion.assert_as_slice_equals": {
  "lineno": 1126,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_blockplacement_add": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_blockplacement_add_int": {
  "lineno": 1187,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_blockplacement_add_int.assert_add_equals": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_not_slice_like_arrays": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_not_slice_like_arrays.assert_not_slice_like": {
  "lineno": 1143,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_not_slice_like_slices": {
  "lineno": 1112,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_not_slice_like_slices.assert_not_slice_like": {
  "lineno": 1113,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_slice_iter": {
  "lineno": 1156,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_slice_len": {
  "lineno": 1079,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_slice_to_array_conversion": {
  "lineno": 1165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_slice_to_array_conversion.assert_as_array_equals": {
  "lineno": 1166,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int64",
   "pandas.core.internals.BlockPlacement",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_unbounded_slice_raises": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_unbounded_slice_raises.assert_unbounded_slice_error": {
  "lineno": 1094,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestBlockPlacement.test_zero_step_raises": {
  "lineno": 1087,
  "symbols_in_volume": [
   "pandas.core.internals.BlockPlacement",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestCanHoldElement": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestCanHoldElement.test_binop_other": {
  "lineno": 1245,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "operator.add",
   "operator.mod",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestDatetimeBlock": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestDatetimeBlock.test_try_coerce_arg": {
  "lineno": 315,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "numpy.int64",
   "pandas.NaT",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_get_slice": {
  "lineno": 901,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bool_",
   "numpy.ones",
   "numpy.zeros",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_get_slice.assert_slice_ok": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ndarray",
   "numpy.zeros",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_reindex_axis": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_reindex_axis.assert_reindex_axis_is_ok": {
  "lineno": 975,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_reindex_indexer": {
  "lineno": 1018,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_reindex_indexer.assert_reindex_indexer_is_ok": {
  "lineno": 1020,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_take": {
  "lineno": 954,
  "symbols_in_volume": [
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.TestIndexing.test_take.assert_take_ok": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.take",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.assert_block_equal": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas._libs.lib.BlockPlacement",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.create_block": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.nan",
   "numpy.ones",
   "numpy.reshape",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.core.internals.BlockPlacement",
   "pandas.core.internals.make_block",
   "pandas.core.sparse.array.SparseArray",
   "re.search"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.create_mgr": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.compat.OrderedDict",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.create_single_mgr": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.internals.SingleBlockManager"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.get_numeric_mat": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "pandas.tests.internals.test_internals.mgr": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "module"
 },
 "pandas.tests.io.conftest.jsonl_file": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.conftest.s3_resource": {
  "lineno": 29,
  "symbols_in_volume": [
   "moto.mock_s3",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.conftest.s3_resource.add_tips_files": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.conftest.salaries_table": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.parsers.read_table",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.conftest.tips_file": {
  "lineno": 10,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_css": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_css.assert_resolves": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSResolver"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.assert_same_resolution": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSResolver"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_absolute_font_size": {
  "lineno": 128,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_none_absent": {
  "lineno": 118,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_parse_invalid": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSWarning",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_parse_normalisation": {
  "lineno": 20,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_precedence": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSResolver",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_relative_font_size": {
  "lineno": 156,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_css.test_css_side_shorthands": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.io.formats.css.CSSWarning",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.compare": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.compare_all": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_eng_float_formatter": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.format.set_eng_float_format",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_exponents_with_eng_prefix": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.io.formats.format.EngFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_exponents_without_eng_prefix": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.pi",
   "pandas.io.formats.format.EngFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_inf": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.compat.u",
   "pandas.io.formats.format.EngFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_nan": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.io.formats.format.EngFormatter",
   "pandas.io.formats.format.set_eng_float_format",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_eng_formatting.TestEngFormatter.test_rounding": {
  "lineno": 151,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.formats.format.EngFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.is_platform_32bit",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.getSeriesData"
  ],
  "type": "module"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.setup_method": {
  "lineno": 112,
  "symbols_in_volume": [
   "warnings.filters",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.teardown_method": {
  "lineno": 119,
  "symbols_in_volume": [
   "warnings.filters"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_auto_detect": {
  "lineno": 371,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.config.option_context",
   "pandas.io.formats.terminal.get_terminal_size"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_datetimelike_frame": {
  "lineno": 832,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_dict_entries": {
  "lineno": 1603,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_east_asian_unicode_frame": {
  "lineno": 506,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.PY3",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_eng_float_formatter": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.io.formats.format.set_eng_float_format",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_expand_frame_repr": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_fake_qtconsole_repr_html": {
  "lineno": 1564,
  "symbols_in_volume": [
   "pandas.io.formats.format.set_option",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_fake_qtconsole_repr_html.get_ipython": {
  "lineno": 1565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_float_trim_zeros": {
  "lineno": 1590,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_frame_info_encoding": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.format.set_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_index_with_nan": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_info_repr": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_info_repr_html": {
  "lineno": 1547,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_info_repr_max_cols": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_long_series": {
  "lineno": 1055,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pandas.compat.range",
   "re.findall"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_nonunicode_nonascii_alignment": {
  "lineno": 886,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_period": {
  "lineno": 1610,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_pprint_pathological_object": {
  "lineno": 1578,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_pprint_pathological_object.A": {
  "lineno": 1583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_pprint_pathological_object.A.__getitem__": {
  "lineno": 1584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_pprint_thing": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.io.formats.printing.pprint_thing",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_chop_threshold": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context",
   "pandas.reset_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_chop_threshold_column_below": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_corner": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_embedded_ndarray": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html": {
  "lineno": 1395,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.format.set_option",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_float": {
  "lineno": 1462,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_long": {
  "lineno": 1443,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_long_and_wide": {
  "lineno": 1502,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_long_multiindex": {
  "lineno": 1484,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.config.get_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_wide": {
  "lineno": 1414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_html_wide_multiindex_cols": {
  "lineno": 1424,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.core.config.get_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_is_valid_construction_code": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_max_columns_max_rows": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.core.config.option_context",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.io.formats.terminal.get_terminal_size",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_max_columns_max_rows.mkframe": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_no_backslash": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_non_interactive": {
  "lineno": 299,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_obeys_max_seq_limit": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.config.option_context",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_set": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_should_return_str": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_truncation": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.core.config.option_context",
   "pandas.io.formats.format._get_adjustment",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_repr_tuples": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.lzip",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_show_dimensions": {
  "lineno": 1371,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_show_null_counts": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_show_null_counts.check": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_str_max_colwidth": {
  "lineno": 352,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_string_repr_encoding": {
  "lineno": 896,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string": {
  "lineno": 1137,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.compat.string_types",
   "pandas.read_table",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringIndex",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_ascii_error": {
  "lineno": 1302,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_buffer_all_unicode": {
  "lineno": 746,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_float_formatting": {
  "lineno": 1220,
  "symbols_in_volume": [
   "numpy.pi",
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.io.formats.format.set_option",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_float_index": {
  "lineno": 1289,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_format_na": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_index_formatter": {
  "lineno": 1319,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_int_formatting": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.integer",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_left_justify_cols": {
  "lineno": 1333,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.reset_display_options"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_line_width": {
  "lineno": 1366,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_line_width_no_index": {
  "lineno": 1212,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_no_header": {
  "lineno": 1185,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_no_index": {
  "lineno": 1204,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_repr_unicode": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.core.config.get_option",
   "sys.stdin"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_small_float_values": {
  "lineno": 1267,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_specified_header": {
  "lineno": 1193,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_truncate_indices": {
  "lineno": 772,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_truncate_multilevel": {
  "lineno": 801,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_unicode_columns": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_unicode_three": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_unicode_two": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_utf8_columns": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_col_space": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_datetime64_hourformatter": {
  "lineno": 489,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_datetime64_hourformatter.format_func": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_datetime64_monthformatter": {
  "lineno": 479,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_datetime64_monthformatter.format_func": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_formatters": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_to_string_with_formatters_unicode": {
  "lineno": 501,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_truncate_with_different_dtypes": {
  "lineno": 808,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_unicode_problem_decoding_as_ascii": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr": {
  "lineno": 939,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context",
   "pandas.core.config.reset_option",
   "pandas.core.config.set_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_multiindex": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context",
   "pandas.core.config.reset_option",
   "pandas.core.config.set_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_multiindex_cols": {
  "lineno": 1009,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context",
   "pandas.core.config.reset_option",
   "pandas.core.config.set_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_named": {
  "lineno": 966,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context",
   "pandas.core.config.reset_option",
   "pandas.core.config.set_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_unicode": {
  "lineno": 1030,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.get_option",
   "pandas.core.config.option_context",
   "pandas.core.config.reset_option",
   "pandas.core.config.set_option",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_wide_columns": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDataFrameFormatting.test_wide_repr_wide_long_columns": {
  "lineno": 1046,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter": {
  "lineno": 2387,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_date_nanos": {
  "lineno": 2401,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.io.formats.format.Datetime64Formatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_dates": {
  "lineno": 2395,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.Series",
   "pandas.io.formats.format.Datetime64Formatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_dates_display": {
  "lineno": 2406,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.io.formats.format.Datetime64Formatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_datetime64formatter_hoursecond": {
  "lineno": 2455,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.formats.format.Datetime64Formatter",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_datetime64formatter_hoursecond.format_func": {
  "lineno": 2460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_datetime64formatter_yearmonth": {
  "lineno": 2445,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.io.formats.format.Datetime64Formatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_datetime64formatter_yearmonth.format_func": {
  "lineno": 2448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetime64Formatter.test_mixed": {
  "lineno": 2389,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.Series",
   "pandas.io.formats.format.Datetime64Formatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexFormat": {
  "lineno": 2477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexFormat.test_date": {
  "lineno": 2484,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexFormat.test_date_explict_date_format": {
  "lineno": 2497,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexFormat.test_date_tz": {
  "lineno": 2489,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexFormat.test_datetime": {
  "lineno": 2479,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexUnicode": {
  "lineno": 2504,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexUnicode.test_dates": {
  "lineno": 2506,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestDatetimeIndexUnicode.test_mixed": {
  "lineno": 2512,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestFloatArrayFormatter": {
  "lineno": 2182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestFloatArrayFormatter.test_format": {
  "lineno": 2189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.io.formats.format.FloatArrayFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestFloatArrayFormatter.test_misc": {
  "lineno": 2184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.io.formats.format.FloatArrayFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestFloatArrayFormatter.test_output_significant_digits": {
  "lineno": 2195,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestFloatArrayFormatter.test_too_long": {
  "lineno": 2255,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestNaTFormatting": {
  "lineno": 2468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestNaTFormatting.test_repr": {
  "lineno": 2470,
  "symbols_in_volume": [
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestNaTFormatting.test_str": {
  "lineno": 2473,
  "symbols_in_volume": [
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64": {
  "lineno": 2268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64.test_all": {
  "lineno": 2330,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64.test_even_day": {
  "lineno": 2285,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64.test_long": {
  "lineno": 2315,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64.test_none": {
  "lineno": 2270,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestRepr_timedelta64.test_sub_day": {
  "lineno": 2300,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting": {
  "lineno": 1634,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.chck_ncols": {
  "lineno": 2054,
  "symbols_in_volume": [
   "pandas.core.config.option_context",
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.setup_method": {
  "lineno": 1636,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_consistent_format": {
  "lineno": 2043,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_datetimeindex": {
  "lineno": 1900,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_east_asian_unicode_series": {
  "lineno": 1724,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.PY3",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_float_trim_zeros": {
  "lineno": 1889,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_format_explicit": {
  "lineno": 2063,
  "symbols_in_volume": [
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_freq_name_separation": {
  "lineno": 1678,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_max_multi_index_display": {
  "lineno": 2005,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_max_rows_eq_one": {
  "lineno": 2088,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_mixed_datetime64": {
  "lineno": 1977,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_ncols": {
  "lineno": 2083,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_period": {
  "lineno": 1984,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Period",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_repr_unicode": {
  "lineno": 1639,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_show_dimensions": {
  "lineno": 2113,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_timedelta64": {
  "lineno": 1917,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.date_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string": {
  "lineno": 1647,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_dtype": {
  "lineno": 2139,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_float_format": {
  "lineno": 2160,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_float_na_spacing": {
  "lineno": 1703,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_header": {
  "lineno": 2167,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_length": {
  "lineno": 2148,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_mixed": {
  "lineno": 1685,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_na_rep": {
  "lineno": 2154,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_name": {
  "lineno": 2129,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_to_string_without_index": {
  "lineno": 1712,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_truncate_ndots": {
  "lineno": 2099,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_truncate_ndots.getndots": {
  "lineno": 2100,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestSeriesFormatting.test_unicode_name_in_footer": {
  "lineno": 1719,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u",
   "pandas.io.formats.format.SeriesFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestStringRepTimestamp": {
  "lineno": 2519,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestStringRepTimestamp.test_nat_representations": {
  "lineno": 2559,
  "symbols_in_volume": [
   "operator.methodcaller",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestStringRepTimestamp.test_no_tz": {
  "lineno": 2521,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestStringRepTimestamp.test_tz_dateutil": {
  "lineno": 2547,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.tz.tzutc",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestStringRepTimestamp.test_tz_pytz": {
  "lineno": 2537,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter.test_days": {
  "lineno": 2343,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.compat.range",
   "pandas.io.formats.format.Timedelta64Formatter",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter.test_days_neg": {
  "lineno": 2359,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.compat.range",
   "pandas.io.formats.format.Timedelta64Formatter",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter.test_subdays": {
  "lineno": 2365,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.compat.range",
   "pandas.io.formats.format.Timedelta64Formatter",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter.test_subdays_neg": {
  "lineno": 2371,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.compat.range",
   "pandas.io.formats.format.Timedelta64Formatter",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.TestTimedelta64Formatter.test_zero": {
  "lineno": 2377,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.compat.range",
   "pandas.io.formats.format.Timedelta64Formatter",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format._three_digit_exp": {
  "lineno": 2178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.curpath": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.split"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.gen_series_formatting": {
  "lineno": 1625,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_doubly_truncated_repr": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_expanded_repr": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_horizontally_truncated_repr": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_info_repr": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_non_verbose_info_repr": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_truncated_repr": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.has_vertically_truncated_repr": {
  "lineno": 83,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_format.test_format_percentiles": {
  "lineno": 2564,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.formats.format.format_percentiles",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_adjoin": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.io.formats.printing.adjoin"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_adjoin_unicode": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.io.formats.format.EastAsianTextAdjustment",
   "pandas.io.formats.printing.adjoin"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_ambiguous_width": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.core.config.option_context",
   "pandas.io.formats.format.EastAsianTextAdjustment"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_east_asian_len": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.io.formats.format.EastAsianTextAdjustment"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_justify": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.io.formats.format.EastAsianTextAdjustment"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestFormattBase.test_justify.just": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.setup_class": {
  "lineno": 127,
  "symbols_in_volume": [
   "IPython.core.interactiveshell.InteractiveShell.instance",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_config_default_off": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_config_on": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_enable_data_resource_formatter": {
  "lineno": 186,
  "symbols_in_volume": [
   "pandas.core.config",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_publishes": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.TestTableSchemaRepr.test_publishes_not_implemented": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.test_adjoin": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.io.formats.printing.adjoin"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_printing.test_repr_binary_type": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.compat.binary_type",
   "pandas.compat.bytes_to_str",
   "pandas.compat.text_type",
   "pandas.core.config.get_option",
   "pandas.io.formats.printing.pprint_thing",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas.tests.io.formats.test_style.TestStyler": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_style.TestStyler.setup_method": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.setup_method.h": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_axis": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_labels": {
  "lineno": 761,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_labels.f": {
  "lineno": 762,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_return": {
  "lineno": 754,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_bad_return.f": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_none": {
  "lineno": 606,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_none.f": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_apply_subset": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_applymap_subset": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_applymap_subset.f": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bad_apply_shape": {
  "lineno": 737,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_left": {
  "lineno": 337,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_left_0points": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_all_neg": {
  "lineno": 472,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_all_pos": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_mid_pos_and_neg": {
  "lineno": 420,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_align_zero_pos_and_neg": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_bar_bad_align_raises": {
  "lineno": 527,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_caption": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_clear": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_copy": {
  "lineno": 69,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_deepcopy": {
  "lineno": 80,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_dict": {
  "lineno": 726,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_format": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_format_raises": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_display_subset": {
  "lineno": 688,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_empty": {
  "lineno": 326,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_empty_index_name_doesnt_display": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_export": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_get_level_lengths": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.io.formats.style._get_level_lengths",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_get_level_lengths_un_sorted": {
  "lineno": 775,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_arrays",
   "pandas.io.formats.style._get_level_lengths",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_highlight_max": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_highlight_null": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_index_name": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_init_non_pandas": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_init_series": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_column_names": {
  "lineno": 851,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_disabled": {
  "lineno": 825,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_mi_sparse_index_names": {
  "lineno": 835,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_multiindex_name": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_nonunique_raises": {
  "lineno": 539,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.style.Styler",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_numeric_columns": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_precision": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render_double": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_render_empty_dfs": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_repr_html_ok": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_set_properties": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_set_properties_subset": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_table_attributes": {
  "lineno": 586,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_table_styles": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_trim": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_unique_id": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.unique",
   "pandas.DataFrame",
   "re.findall"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx_flatten_multi": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_update_ctx_flatten_multi_traliing_semi": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_uuid": {
  "lineno": 557,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_subset": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_subset.f": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_subset_compare_with_applymap": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandas.IndexSlice"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_subset_compare_with_applymap.f": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_subset_compare_with_applymap.g": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_with_one_style": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStyler.test_where_with_one_style.f": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.TestStylerMatplotlibDep": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_style.TestStylerMatplotlibDep.test_background_gradient": {
  "lineno": 897,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.test_block_names": {
  "lineno": 912,
  "symbols_in_volume": [
   "pandas.io.formats.style.Styler.template.blocks"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.test_from_custom_template": {
  "lineno": 924,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.style.Styler",
   "pandas.io.formats.style.Styler.env",
   "pandas.io.formats.style.Styler.from_custom_template",
   "pandas.io.formats.style.Styler.template",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_style.test_shim": {
  "lineno": 941,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_csv_to_string": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_date_format": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_decimal": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_defualt_encoding": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY2",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_doublequote": {
  "lineno": 54,
  "symbols_in_volume": [
   "_csv.Error",
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_escapechar": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_float_format": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_multi_index": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_na_rep": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_csv.TestToCSV.test_to_csv_quotechar": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_excel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.io.formats.excel.CSSToExcelConverter",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel_inherited": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.io.formats.excel.CSSToExcelConverter",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_excel.test_css_to_excel_multiple": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.io.formats.excel.CSSToExcelConverter"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html": {
  "lineno": null,
  "symbols_in_volume": [
   "IPython.__version__",
   "distutils.version.LooseVersion"
  ],
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_display_option_warning": {
  "lineno": 1414,
  "symbols_in_volume": [
   "pandas.options.html.border",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.compat.string_types",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border": {
  "lineno": 1397,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border_option": {
  "lineno": 1402,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_border_zero": {
  "lineno": 1409,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_columns_arg": {
  "lineno": 1471,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.getSeriesData"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_hourformatter": {
  "lineno": 1029,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_hourformatter.format_func": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_monthformatter": {
  "lineno": 1001,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_datetime64_monthformatter.format_func": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_decimal": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_escape_disabled": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_escaped": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_filename": {
  "lineno": 1446,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_index": {
  "lineno": 1609,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_index_formatter": {
  "lineno": 960,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_invalid_justify": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_justify": {
  "lineno": 1560,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.formats.format._VALID_JUSTIFY_PARAMETERS",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex": {
  "lineno": 1476,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mod",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_index_false": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_odd_even_truncate": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_sparsify": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_multiindex_sparsify_false_multi_sparse": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_no_index_max_rows": {
  "lineno": 1827,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_notebook_has_no_style": {
  "lineno": 1853,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_notebook_has_style": {
  "lineno": 1846,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_regression_GH6098": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate": {
  "lineno": 1068,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.compat.PY2",
   "pandas.io.formats.format.set_option",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate_multi_index": {
  "lineno": 1169,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY2",
   "pandas.io.formats.format.set_option",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_truncate_multi_index_sparse_off": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY2",
   "pandas.io.formats.format.set_option",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_unicode": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_classes": {
  "lineno": 1806,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_col_space": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_col_space.check_with_width": {
  "lineno": 28,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_empty_string_label": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_index_names_false": {
  "lineno": 1860,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_html.TestToHTML.test_to_html_with_no_bold": {
  "lineno": 1466,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_bold_rows": {
  "lineno": 563,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_decimal": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_empty": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_escape": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_escape_special_chars": {
  "lineno": 434,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_filename": {
  "lineno": 19,
  "symbols_in_volume": [
   "codecs.open",
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_format": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_longtable": {
  "lineno": 382,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_multicolumnrow": {
  "lineno": 269,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_multiindex": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_multiindex_dupe_level": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_no_bold_rows": {
  "lineno": 578,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_no_header": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_series": {
  "lineno": 548,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_specified_header": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.TestToLatex.test_to_latex_with_formatters": {
  "lineno": 117,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.formats.test_to_latex.frame": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.getSeriesData",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.__version__"
  ],
  "type": "module"
 },
 "pandas.tests.io.generate_legacy_storage_files._create_sp_frame": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files._create_sp_series": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files._create_sp_tsseries": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "pandas.SparseSeries",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files._u": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.create_data": {
  "lineno": 103,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.arange",
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.NaT",
   "pandas.Panel",
   "pandas.Period",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.tseries.offsets.BusinessDay",
   "pandas.tseries.offsets.BusinessHour",
   "pandas.tseries.offsets.CustomBusinessDay",
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Easter",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.MonthBegin",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.tseries.offsets.QuarterBegin",
   "pandas.tseries.offsets.QuarterEnd",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.WeekOfMonth",
   "pandas.tseries.offsets.YearBegin",
   "pandas.tseries.offsets.YearEnd",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.create_pickle_data": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.platform_name": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.__version__",
   "platform.machine",
   "platform.python_version",
   "platform.system"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.write_legacy_file": {
  "lineno": 328,
  "symbols_in_volume": [
   "sys.argv",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.write_legacy_msgpack": {
  "lineno": 312,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.__version__",
   "pandas.to_msgpack"
  ],
  "type": "function"
 },
 "pandas.tests.io.generate_legacy_storage_files.write_legacy_pickles": {
  "lineno": 287,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.__version__",
   "pandas.compat.cPickle.HIGHEST_PROTOCOL",
   "pandas.compat.cPickle.dump"
  ],
  "type": "function"
 },
 "pandas.tests.io.json": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.json.test_compression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.json.test_compression.decompress_file": {
  "lineno": 13,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.GzipFile",
   "pandas.compat.import_lzma"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_chunksize_with_compression": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.read_json",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_compress_zip_value_error": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "zipfile.BadZipfile"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_compression_roundtrip": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_lines_with_compression": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_read_unsupported_compression_type": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_read_zipped_json": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_with_s3_url": {
  "lineno": 72,
  "symbols_in_volume": [
   "moto.mock_s3",
   "pandas.read_json",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_compression.test_write_unsupported_compression_type": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.setup_method": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.date_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_build_table_schema": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.io.json.table_schema.build_table_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_multiindex": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.io.json.table_schema.build_table_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_series": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.json.table_schema.build_table_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestBuildSchema.test_series_unnamed": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.json.table_schema.build_table_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.setup_method": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_build_series": {
  "lineno": 191,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_categorical": {
  "lineno": 393,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_date_format_raises": {
  "lineno": 329,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_categorical": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.io.json.table_schema.make_field"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_datetime": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.json.table_schema.make_field",
   "pandas.period_range",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_float": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.io.json.table_schema.make_field"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_make_field_int": {
  "lineno": 337,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.io.json.table_schema.make_field"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_mi_falsey_name": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.io.json.table_schema.build_table_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_overlapping_names": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_partion": {
  "lineno": 437,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.io.json.table_schema.set_default_names"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_set": {
  "lineno": 430,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.io.json.table_schema.set_default_names"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_mi_unset": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.io.json.table_schema.set_default_names"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_set": {
  "lineno": 419,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.io.json.table_schema.set_default_names"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_set_default_names_unset": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.io.json.table_schema.set_default_names"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_timestamp_in_columns": {
  "lineno": 444,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json": {
  "lineno": 214,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_categorical_index": {
  "lineno": 309,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.CategoricalIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_float_index": {
  "lineno": 274,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableOrient.test_to_json_period_index": {
  "lineno": 291,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_bool_data": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_bool_dtypes": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.bool",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_categorical_data": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_categorical_dtypes": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_date_data": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.json.table_schema.as_json_table_type",
   "pandas.period_range",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_date_dtypes": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.dtypes.dtypes.PeriodDtype",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_float_data": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_float_dtypes": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_int_data": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_int_dtypes": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_string_data": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_string_dtypes": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_json_table_schema.TestTableSchemaType.test_as_json_table_type_timedelta_dtypes": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.timedelta64",
   "pandas.io.json.table_schema.as_json_table_type"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_empty_array": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_meta_name_conflict": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.io.json.json_normalize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_meta_parameter_not_modified": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.io.json.json_normalize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_more_deeply_nested": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_non_ascii_key": {
  "lineno": 209,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_record_prefix": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_shallow_nested": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_normalize": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_normalize_with_separator": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestJSONNormalize.test_simple_records": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.json_normalize",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_flat_stays_flat": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.io.json.normalize.nested_to_record"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_json_normalize_errors": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.io.json.json_normalize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_nested_flattens": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.io.json.normalize.nested_to_record"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.TestNestedToRecord.test_one_level_deep_flattens": {
  "lineno": 241,
  "symbols_in_volume": [
   "pandas.io.json.normalize.nested_to_record"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.deep_nested": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_normalize.state_data": {
  "lineno": 41,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData"
  ],
  "type": "module"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.setup_method": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.get_data_path",
   "pandas.util.testing.makeObjectSeries",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.teardown_method": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_axis_dates": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_blocks_compat_GH9037": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.OrderedDict",
   "pandas.date_range",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_categorical": {
  "lineno": 936,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_convert_dates": {
  "lineno": 684,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_convert_dates_infer": {
  "lineno": 709,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.io.json.dumps",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_data_frame_size_after_to_json": {
  "lineno": 1139,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_frame": {
  "lineno": 721,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_frame.test_w_date": {
  "lineno": 724,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_series": {
  "lineno": 744,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_format_series.test_w_date": {
  "lineno": 745,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_date_unit": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_datetime_tz": {
  "lineno": 949,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler": {
  "lineno": 892,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_indirect": {
  "lineno": 899,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.dumps"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_indirect.default": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_numpy_unsupported_dtype": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_raises": {
  "lineno": 926,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_default_handler_raises.my_handler_raises": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_doc_example": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_double_encoded_labels": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_empty": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_empty_mixedtype": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_bad_data": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_json",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_nones": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.NINF",
   "numpy.inf",
   "numpy.isnan",
   "pandas.DataFrame",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_precise_float": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_all_orients": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_orient": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy",
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.read_json",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_mixedtype_orient": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns._check": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_non_unique_index": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_nonprintable_bytes": {
  "lineno": 513,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_nonprintable_bytes.BinaryThing": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_nonprintable_bytes.BinaryThing.__init__": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.compat.PY2"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_nonprintable_bytes.BinaryThing.__str__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_to_json_except": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_frame_to_json_float_precision": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.is_platform_32bit",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_label_overflow": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.PY2",
   "pandas.util.testing.assert_raises_regex",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding._try_decode": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_latin_encoding.roundtrip": {
  "lineno": 1130,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_misc_example": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_mixed_timedelta_datetime": {
  "lineno": 882,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_path": {
  "lineno": 664,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_inline_jsonl": {
  "lineno": 1032,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_jsonl_unicode_chars": {
  "lineno": 1055,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_local_jsonl": {
  "lineno": 1046,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_read_s3_jsonl": {
  "lineno": 1038,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_reconstruction_index": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_round_trip_exception_": {
  "lineno": 836,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_precise_float": {
  "lineno": 635,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.read_json",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_all_orients": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_orient": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy",
   "pandas.read_json",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_non_unique_index": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.read_json",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_series_to_json_except": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_sparse": {
  "lineno": 967,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_timedelta": {
  "lineno": 853,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.read_json",
   "pandas.to_datetime",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_to_jsonl": {
  "lineno": 1074,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_typ": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.read_json",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_tz_is_utc": {
  "lineno": 983,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.io.json.dumps"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_tz_range_is_utc": {
  "lineno": 1002,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.io.json.dumps"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_url": {
  "lineno": 846,
  "symbols_in_volume": [
   "pandas.read_json",
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_v12_compat": {
  "lineno": 459,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_pandas.TestPandasContainer.test_weird_nested_json": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.json.test_readlines.lines_json_df": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_read_jsonl": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_read_jsonl_unicode_chars": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunks": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunks_closes": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.json.json.JsonReader",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunks_from_file": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunks_multiple_empty_lines": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunks_series": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.read_json",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_chunksize_requires_lines": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_json",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_each_chunk": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_readjson_invalid_chunksize": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_json",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_readlines.test_to_jsonl": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_json",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.compat.PY3",
   "simplejson.dumps"
  ],
  "type": "module"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_ArrayNumpyExcept": {
  "lineno": 1106,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.dumps"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_ArrayNumpyLabelled": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas._libs.json.dumps",
   "pandas._libs.json.loads",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_Arrays": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_Bool": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.bool",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_BoolArray": {
  "lineno": 953,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_Float": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_FloatArray": {
  "lineno": 1036,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_FloatMax": {
  "lineno": 1046,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_Int": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_IntArray": {
  "lineno": 987,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_IntMax": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.is_platform_32bit"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_OdArray": {
  "lineno": 1100,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestNumpyJSONTests.test_OdArray.will_raise": {
  "lineno": 1101,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests": {
  "lineno": 1223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_DataFrame": {
  "lineno": 1225,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_DataFrameNested": {
  "lineno": 1278,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_DataFrameNumpy": {
  "lineno": 1255,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_DataFrameNumpyLabelled": {
  "lineno": 1304,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_Index": {
  "lineno": 1401,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_Series": {
  "lineno": 1327,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_SeriesNested": {
  "lineno": 1375,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_datetimeindex": {
  "lineno": 1446,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayEmpty": {
  "lineno": 1498,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayFaultyUnicode": {
  "lineno": 1571,
  "symbols_in_volume": [
   "pandas._libs.json.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayLeadingCommaFail": {
  "lineno": 1471,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayOneItem": {
  "lineno": 1502,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayOnlyCommaFail": {
  "lineno": 1480,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayTrailingCommaFail": {
  "lineno": 1462,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayUnmatchedBracketFail": {
  "lineno": 1489,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeArrayWithBigInt": {
  "lineno": 1563,
  "symbols_in_volume": [
   "pandas._libs.json.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeBigValue": {
  "lineno": 1506,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeFloatingPointAdditionalTests": {
  "lineno": 1579,
  "symbols_in_volume": [
   "pandas._libs.json.loads",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeSmallValue": {
  "lineno": 1510,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeTooBigValue": {
  "lineno": 1514,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeTooSmallValue": {
  "lineno": 1523,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeVeryTooBigValue": {
  "lineno": 1532,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeVeryTooSmallValue": {
  "lineno": 1541,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeWithTrailingNonWhitespaces": {
  "lineno": 1554,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_decodeWithTrailingWhitespaces": {
  "lineno": 1550,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_encodeBigSet": {
  "lineno": 1626,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_encodeEmptySet": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestPandasJSONTests.test_encodeSet": {
  "lineno": 1636,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_datetime_units": {
  "lineno": 427,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas._libs.lib.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decimalDecodeTestPrecise": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeArrayDepthTooBig": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBigEscape": {
  "lineno": 876,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.PY3",
   "pandas.compat.range",
   "pandas.compat.str_to_bytes"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenArrayEnd": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenArrayStart": {
  "lineno": 502,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenDictKeyTypeLeakTest": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenDictLeakTest": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenListLeakTest": {
  "lineno": 632,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenObjectEnd": {
  "lineno": 538,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeBrokenObjectStart": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeDictWithNoColonOrValue": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeDictWithNoKey": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeDictWithNoValue": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeFalseBroken": {
  "lineno": 592,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeFromUnicode": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeJibberish": {
  "lineno": 493,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNullBroken": {
  "lineno": 601,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNullCharacter": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumberWith32bitSignBit": {
  "lineno": 852,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpE": {
  "lineno": 749,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpEMinus": {
  "lineno": 759,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpEPLUS": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpe": {
  "lineno": 754,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpeMinus": {
  "lineno": 764,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntExpePLUS": {
  "lineno": 744,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntNeg": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeNumericIntPos": {
  "lineno": 673,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeObjectDepthTooBig": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeStringBadEscape": {
  "lineno": 574,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeStringUntermEscapeSequence": {
  "lineno": 565,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeStringUnterminated": {
  "lineno": 556,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeTrueBroken": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas._libs.json.decode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_decodeUnicodeConversion": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler": {
  "lineno": 899,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler._TestObject": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler._TestObject.__init__": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler._TestObject.__str__": {
  "lineno": 910,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler._TestObject.recursive_attr": {
  "lineno": 906,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler.my_handler": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler.my_handler_raises": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler.my_int_handler": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_defaultHandler.my_obj_handler": {
  "lineno": 935,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_doubleLongDecimalIssue": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.u",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_doubleLongIssue": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.u",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_doublePrecisionTest": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpFileArgsError": {
  "lineno": 786,
  "symbols_in_volume": [
   "pandas._libs.json.dump"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpToFile": {
  "lineno": 769,
  "symbols_in_volume": [
   "pandas._libs.json.dump",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpToFileLikeObject": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas._libs.json.dump"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpToFileLikeObject.filelike": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpToFileLikeObject.filelike.__init__": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_dumpToFileLikeObject.filelike.write": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeArrayInArray": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeArrayOfDoubles": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeArrayOfNestedArrays": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeBigEscape": {
  "lineno": 867,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pandas.compat.PY3",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeControlEscaping": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDateConversion": {
  "lineno": 378,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.date.fromtimestamp",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads",
   "time.time"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDatetimeConversion": {
  "lineno": 370,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.datetime.fromtimestamp",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads",
   "time.time"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDecimal": {
  "lineno": 32,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.is_platform_32bit",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDecodeLongDecimal": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.dumps",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDictConversion": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDictWithUnicodeKeys": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleConversion": {
  "lineno": 175,
  "symbols_in_volume": [
   "math.pi",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleInf": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleNan": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleNegConversion": {
  "lineno": 186,
  "symbols_in_volume": [
   "math.pi",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleNegInf": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeDoubleTinyExponential": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.PY3",
   "pandas.compat.is_platform_windows",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeFalseConversion": {
  "lineno": 363,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeIntConversion": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeIntNegConversion": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeListConversion": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeListLongConversion": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.util.testing.assert_numpy_array_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeLongConversion": {
  "lineno": 721,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeLongNegConversion": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNonCLocale": {
  "lineno": 125,
  "symbols_in_volume": [
   "locale.LC_NUMERIC",
   "locale.getlocale",
   "locale.setlocale",
   "pandas._libs.json.dumps",
   "pandas._libs.json.loads",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNoneConversion": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNullCharacter": {
  "lineno": 690,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.dumps",
   "pandas._libs.json.encode",
   "pandas.compat.u",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNumericOverflow": {
  "lineno": 830,
  "symbols_in_volume": [
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNumericOverflowNested": {
  "lineno": 838,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeNumericOverflowNested.Nested": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeRecursionMax": {
  "lineno": 460,
  "symbols_in_volume": [
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeRecursionMax.O1": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeRecursionMax.O2": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeStringConversion": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeStringConversion.helper": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeStringConversion2": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeTimeConversion": {
  "lineno": 389,
  "symbols_in_volume": [
   "datetime.time",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeTimeConversion_dateutil": {
  "lineno": 407,
  "symbols_in_volume": [
   "datetime.time",
   "dateutil.tz.tzutc",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeTimeConversion_pytz": {
  "lineno": 400,
  "symbols_in_volume": [
   "datetime.time",
   "pandas._libs.json.encode",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeToUTF8": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeTrueConversion": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.dumps",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicode4BytesUTF8": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicode4BytesUTF8Fail": {
  "lineno": 681,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pandas.compat.PY3",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicode4BytesUTF8Highest": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicodeConversion1": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicodeConversion2": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeUnicodeSurrogatePair": {
  "lineno": 270,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_encodeWithDecimal": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_invalidDoublePrecision": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas._libs.json.encode",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_loadFile": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.load",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_loadFileArgsError": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas._libs.json.load"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_loadFileLikeObject": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.json.load",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_loadFileLikeObject.filelike": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_loadFileLikeObject.filelike.read": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_nat": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas._libs.json.encode"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_npy_nat": {
  "lineno": 418,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.datetime64",
   "pandas._libs.json.encode",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_numericIntExp": {
  "lineno": 729,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_numericIntFrcExp": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas.util.testing.assert_almost_equal",
   "simplejson.loads"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_toDict": {
  "lineno": 886,
  "symbols_in_volume": [
   "pandas._libs.json.decode",
   "pandas._libs.json.encode",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_toDict.DictTest": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_toDict.DictTest.toDict": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson.TestUltraJSONTests.test_version": {
  "lineno": 826,
  "symbols_in_volume": [
   "pandas._libs.json.__version__",
   "re.match"
  ],
  "type": "function"
 },
 "pandas.tests.io.json.test_ujson._clean_dict": {
  "lineno": 1645,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_buffer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_buffer.test_unpack_buffer": {
  "lineno": 7,
  "symbols_in_volume": [
   "array.array",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_buffer.test_unpack_bytearray": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_case.check": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.check_array": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.check_raw": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.match": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_1": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_2": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_3": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_5": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_9": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_array16": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_array32": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_fixarray": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_fixraw": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_match": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_raw16": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_raw32": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_case.test_unicode": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_except.DummyException": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_invalid_value": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.io.msgpack.unpackb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_from_object_hook": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_from_object_hook.hook": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_except.TestExceptions.test_raise_on_find_unsupported_value": {
  "lineno": 16,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type": {
  "lineno": 42,
  "symbols_in_volume": [
   "array.array",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type.default": {
  "lineno": 43,
  "symbols_in_volume": [
   "array.array",
   "pandas.io.msgpack.ExtType"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_extension_type.ext_hook": {
  "lineno": 51,
  "symbols_in_volume": [
   "array.array"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_pack_ext_type": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_pack_ext_type.p": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_unpack_ext_type": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_extension.test_unpack_ext_type.check": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_format.check": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testArray": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixArray": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixMap": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixRaw": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testFixnum": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testMap": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testRaw": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testSignedInt": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testSimpleValue": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_format.testUnsignedInt": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_array_header": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_integer": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_map_header": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_array_len": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_bin_len": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_ext_len": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_map_len": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_limits.TestLimits.test_max_str_len": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin16": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin32": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_bin8": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_ext": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_ext.check": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_newspec.test_str8": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_obj.DecodeError": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._arr_to_str": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._decode_complex": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj._encode_complex": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.bad_complex_decoder": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook1": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook1.f": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook2": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_an_exception_in_objecthook2.f": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_array_hook": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_bad_hook": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_bad_hook.f": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_decode_hook": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_decode_pairs_hook": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_encode_hook": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_obj.TestObj.test_only_one_obj_hook": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.io.msgpack.unpackb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.check": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testArraySize": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testDecodeBinary": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testIgnoreErrorsPack": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testIgnoreUnicodeErrors": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testMapSize": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testNoEncoding": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.msgpack.packb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPack": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackBytes": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackFloat": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "struct.pack"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackUTF32": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testPackUnicode": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.u",
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testStrictUnicodePack": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.io.msgpack.packb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.testStrictUnicodeUnpack": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_manualreset": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_odict": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.compat.OrderedDict",
   "pandas.io.msgpack.packb",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_odict.pair_hook": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_pack.TestPack.test_pairlist": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.unpackb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_read_size.test_correct_type_nested_array": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_array": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_map": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_incorrect_type_nested_map": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_read_array_header": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.io.msgpack.OutOfData",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_read_size.test_read_map_header": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.io.msgpack.OutOfData",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_seq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_seq.gen_binary_data": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_seq.test_exceeding_unpacker_read_size": {
  "lineno": 13,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.io.msgpack.Packer",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_foobar": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.io.msgpack.OutOfData",
   "pandas.io.msgpack.Unpacker",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_foobar_skip": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.io.msgpack.OutOfData",
   "pandas.io.msgpack.Unpacker",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_issue124": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_maxbuffersize": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.io.msgpack.BufferFull",
   "pandas.io.msgpack.Unpacker",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_partial_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_sequnpack.TestPack.test_readbytes": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_subtype": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_subtype.MyDict": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.MyList": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.MyTuple": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_subtype.test_types": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpack_array_header_from_file": {
  "lineno": 9,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.io.msgpack.OutOfData",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "class"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker._hook": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.io.msgpack.ExtType"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb",
   "pytest.skip",
   "sys",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt.hook": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack_raw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.test_write_bytes": {
  "lineno": 7,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.io.msgpack.Unpacker"
  ],
  "type": "function"
 },
 "pandas.tests.io.msgpack.test_unpack_raw.test_write_bytes_multi_buffer": {
  "lineno": 21,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.io.msgpack.Unpacker",
   "pandas.io.msgpack.packb"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.c_parser_only": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_buffer_overflow": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_buffer_rd_bytes": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_bytes_exceed_2gb": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pytest.mark.high_memory",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_comment_whitespace_delimited": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.capture_stderr",
   "sys.stderr.getvalue"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_custom_lineterminator": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_data_after_quote": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_delim_whitespace_custom_terminator": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_disable_bool_parsing": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_dtype_and_names_error": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next": {
  "lineno": 461,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next.NoNextBuffer": {
  "lineno": 466,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "class"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_file_like_no_next.NoNextBuffer.__next__": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_float_precision_round_trip_with_text": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap.test_empty_header_read": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_internal_null_byte": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_large_difference_in_columns": {
  "lineno": 413,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_parse_ragged_csv": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_parse_trim_buffers": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_pass_dtype_as_recarray": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.assert_produces_warning",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_precise_conversion": {
  "lineno": 132,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.linspace",
   "pandas.compat.StringIO",
   "pandas.util.testing._skip_if_32bit"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_precise_conversion.error": {
  "lineno": 152,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_read_nrows_large": {
  "lineno": 389,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_read_tarfile": {
  "lineno": 479,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "tarfile.open"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_tokenize_CR_with_quoting": {
  "lineno": 258,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_unsupported_dtype": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.c_parser_only.CParserTests.test_usecols_dtypes": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.float.all",
   "numpy.int.all",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.comment.CommentTests": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_header": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_skiprows": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_comment_skiprows_header": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_commment_first_line": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_custom_comment_char": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.comment.CommentTests.test_line_comment": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.common.ParserTests": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_1000_sep": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_1000_sep_with_decimal": {
  "lineno": 1315,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_as_recarray": {
  "lineno": 1454,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_bad_stream_exception": {
  "lineno": 50,
  "symbols_in_volume": [
   "codecs.StreamRecoder",
   "codecs.lookup",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_catch_too_many_names": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_chunk_begins_with_newline_whitespace": {
  "lineno": 879,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_chunks_have_consistent_numerical_type": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float64",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_compact_ints_as_recarray": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_compact_ints_use_unsigned": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int16",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_csv_mixed_type": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_decimal_marker": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_lines": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_index": {
  "lineno": 894,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_multiindex": {
  "lineno": 901,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_nrows_chunksize": {
  "lineno": 990,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_records",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_empty_with_reversed_multiindex": {
  "lineno": 910,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_eof_states": {
  "lineno": 1017,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_escapechar": {
  "lineno": 777,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_euro_decimal_format": {
  "lineno": 1349,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_file": {
  "lineno": 648,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.common.URLError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path",
   "platform.uname",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_file_handles": {
  "lineno": 1657,
  "symbols_in_volume": [
   "mmap.ACCESS_READ",
   "mmap.mmap",
   "pandas.compat.PY3",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_float_parser": {
  "lineno": 918,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_get_chunk_passed_chunksize": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_ignore_leading_whitespace": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_inf_parsing": {
  "lineno": 1360,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int64_min_issues": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int64_overflow": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.uint64",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_int_conversion": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_integer_overflow_bug": {
  "lineno": 852,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_internal_eof_byte": {
  "lineno": 1624,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_internal_eof_byte_to_file": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer": {
  "lineno": 1680,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.InvalidBuffer": {
  "lineno": 1683,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer": {
  "lineno": 1697,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "class"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer.seek": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_invalid_file_buffer.NoSeekTellBuffer.tell": {
  "lineno": 1698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_iteration_open_handle": {
  "lineno": 1293,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "pytest.skip",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_iterator": {
  "lineno": 470,
  "symbols_in_volume": [
   "csv.reader",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.io.parsers.TextFileReader",
   "pandas.io.parsers.TextParser",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_malformed": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_memory_map": {
  "lineno": 1521,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_missing_trailing_delimiters": {
  "lineno": 682,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_multi_index_blank_df": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_multi_index_no_level_names": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_no_unnamed_index": {
  "lineno": 616,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_nonexistent_path": {
  "lineno": 676,
  "symbols_in_volume": [
   "pandas.compat.FileNotFoundError",
   "pandas.util.testing.rands",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_null_byte_char": {
  "lineno": 1532,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.ParserError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_parse_bools": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_parse_integers_above_fp_precision": {
  "lineno": 801,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_pass_names_with_index": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_path_localpath": {
  "lineno": 669,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_path_pathlib": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_quoting": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_raise_on_no_columns": {
  "lineno": 1382,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.errors.EmptyDataError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_raise_on_sep_with_delim_whitespace": {
  "lineno": 1164,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_and_nrows": {
  "lineno": 398,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_generated_index": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_chunksize_named": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.is_platform_windows",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_dataframe": {
  "lineno": 239,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "numpy.float64",
   "pandas.Index",
   "pandas._libs.lib.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_no_index_name": {
  "lineno": 250,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "numpy.float64",
   "pandas.Index",
   "pandas._libs.lib.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_parse_simple_list": {
  "lineno": 625,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_csv_utf_aliases": {
  "lineno": 1614,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_duplicate_index_explicit": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_duplicate_index_implicit": {
  "lineno": 294,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_empty_with_usecols": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.EmptyDataError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_nrows": {
  "lineno": 355,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_table_unicode": {
  "lineno": 260,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_table_wrong_num_columns": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_read_text_list": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.TextParser",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_regex_separator": {
  "lineno": 1229,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_scientific_no_exponent": {
  "lineno": 925,
  "symbols_in_volume": [
   "pandas.DataFrame.from_items",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_single_char_leading_whitespace": {
  "lineno": 1171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_skip_bad_lines": {
  "lineno": 1717,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.ParserError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.capture_stderr",
   "pytest.raises",
   "sys.stderr",
   "sys.stderr.getvalue"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_skipinitialspace": {
  "lineno": 690,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_squeeze": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_squeeze_no_view": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_sub_character": {
  "lineno": 1647,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_temporary_file": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_trailing_delimiters": {
  "lineno": 764,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_trailing_spaces": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_uneven_lines_with_usecols": {
  "lineno": 1088,
  "symbols_in_volume": [
   "csv",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_unicode_encoding": {
  "lineno": 753,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_unnamed_columns": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_url": {
  "lineno": 636,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path",
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf16_bom_skiprows": {
  "lineno": 704,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf16_example": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf8_bom": {
  "lineno": 1548,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_utf8_bom._encode_data_with_bom": {
  "lineno": 1553,
  "symbols_in_volume": [
   "pandas.compat.BytesIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_verbose_import": {
  "lineno": 1248,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.capture_stdout",
   "sys.stdout",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_warn_if_chunks_have_mismatched_type": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.errors.DtypeWarning",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.common.ParserTests.test_whitespace_lines": {
  "lineno": 1215,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.compression.CompressionTests": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_bz2": {
  "lineno": 91,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_gzip": {
  "lineno": 65,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_invalid_compression": {
  "lineno": 174,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_read_csv_compressed_utf16_example": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_read_csv_infer_compression": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_xz": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.compression.CompressionTests.test_zip": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "zipfile.BadZipfile",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.converters.ConverterTests": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converter_index_col_bug": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converter_return_string_bug": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters": {
  "lineno": 30,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.compat.parse_date",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.compat.StringIO",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days_sentinel": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_score": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.lmap"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_euro_decimal_format": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_no_implicit_conv": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.converters.ConverterTests.test_converters_type_must_be_dict": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dialect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.dialect.DialectTests": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect": {
  "lineno": 19,
  "symbols_in_volume": [
   "csv.QUOTE_NONE",
   "csv.excel",
   "pandas.compat.StringIO",
   "pandas.errors.ParserWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect_conflict": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.ParserWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_dialect_str": {
  "lineno": 40,
  "symbols_in_volume": [
   "csv.register_dialect",
   "csv.unregister_dialect",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.ParserWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_invalid_dialect": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dialect.DialectTests.test_invalid_dialect.InvalidDialect": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_categoricaldtype": {
  "lineno": 163,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_categoricaldtype_chunksize": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_categoricaldtype_unsorted": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype_chunksize": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype_encoding": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categorical_dtype_high_cardinality_numeric": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categoricaldtype_coerces_datetime": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categoricaldtype_coerces_numeric": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categoricaldtype_coerces_timedelta": {
  "lineno": 225,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_categoricaldtype_unexpected_categories": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_dtype_with_converter": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.ParserWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_dtype": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_pass_dtype": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_dup_column_pass_dtype_by_indexes": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_index_pass_dtype": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_mangled_column_pass_dtype_by_indexes": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_mangled_column_pass_dtype_by_names": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_empty_with_multiindex_pass_dtype": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_numeric_dtype": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.typecodes",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_pass_dtype": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_passing_dtype": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.dtypes.DtypeTests.test_raise_on_passed_int_dtype_with_nas": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.header.HeaderTests": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_bool_header_arg": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_multi_index": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_multiindex_common_format": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_names_backward_compat": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_not_first_line": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_header_with_index_col": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_no_header": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_no_header_prefix": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_non_int_header": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_read_only_header_no_rows": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_read_with_bad_header": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.header.HeaderTests.test_singleton_header": {
  "lineno": 287,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.index_col": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.index_col.IndexColTests": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_empty_index_col_scenarios": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_empty_with_index_col_false": {
  "lineno": 138,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_index_col_is_true": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_index_col_named": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.index_col.IndexColTests.test_infer_index_col": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.mangle_dupes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.mangle_dupes.DupeColumnTests": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.mangle_dupes.DupeColumnTests.test_basic": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.mangle_dupes.DupeColumnTests.test_basic_names": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.mangle_dupes.DupeColumnTests.test_thorough_mangle_columns": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.mangle_dupes.DupeColumnTests.test_thorough_mangle_names": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.multithread": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests._generate_multithread_dataframe": {
  "lineno": 34,
  "symbols_in_volume": [
   "multiprocessing.pool.ThreadPool",
   "pandas.compat.range",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests._generate_multithread_dataframe.reader": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests.test_multithread_path_multipart_read_csv": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.multithread.MultithreadTests.test_multithread_stringio_read_csv": {
  "lineno": 67,
  "symbols_in_volume": [
   "multiprocessing.pool.ThreadPool",
   "pandas.compat.BytesIO",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.multithread._construct_dataframe": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_bool_na_values": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_custom_na_values": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_default_na_values": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.io.common._NA_VALUES",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_default_na_values.f": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_detect_string_na": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_empty_na_values_no_default_with_index": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_trailing_columns": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_value_dict": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_dict_aliasing": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_dict_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_dict_col_index": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_keep_default": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_na_filter_override": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_scalar": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_na_values_uint64": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_no_na_filter_on_index": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_non_string_na_values": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.na_values.NAvaluesTests.test_string_nas": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_csv_custom_parser": {
  "lineno": 226,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug.f": {
  "lineno": 198,
  "symbols_in_volume": [
   "datetime.datetime.utcfromtimestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_dateparser_resolution_if_not_ns": {
  "lineno": 619,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.StringIO",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_dateparser_resolution_if_not_ns.date_parser": {
  "lineno": 628,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.compat.numpy.np_array_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_datetime_fractional_seconds": {
  "lineno": 593,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_all_fields"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_datetime_six_col": {
  "lineno": 566,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_all_fields"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_generic": {
  "lineno": 609,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multi_index_parse_dates": {
  "lineno": 311,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col": {
  "lineno": 44,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col.func": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas._libs.tslibs.parsing.try_parse_dates",
   "pandas.io.parsers._concat_date_cols"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_multiple_index": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_name_collision": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_named_components": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_col_timestamp_parse": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_chunked": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_index": {
  "lineno": 375,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_int_cast": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_date_time"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_with_header": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_nat_parse": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_column_with_empty_string": {
  "lineno": 647,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_fields": {
  "lineno": 549,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_date_fields"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_float": {
  "lineno": 660,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_time": {
  "lineno": 517,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_date_time"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_date_time_multi_level_column_name": {
  "lineno": 499,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.io.date_converters.parse_date_time",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_column_list": {
  "lineno": 296,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_custom_euroformat": {
  "lineno": 332,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.compat.parse_date",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_empty_string": {
  "lineno": 460,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_implicit_first_col": {
  "lineno": 237,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_noconvert_thousands": {
  "lineno": 467,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_dates_string": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_parse_tz_aware": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.core.tools.datetimes.to_datetime",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_invalid_type": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_scalar_non_bool": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_separator_date_conflict": {
  "lineno": 31,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.parse_dates.ParseDatesTests.test_yy_format_with_yearfirst": {
  "lineno": 264,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.__version__",
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_BytesIO_input": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_decompression_regex_sep": {
  "lineno": 131,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.GzipFile",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_default_separator": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_encoding_non_utf8_multichar_sep": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_invalid_skipfooter": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_multi_char_sep_quotes": {
  "lineno": 215,
  "symbols_in_volume": [
   "csv.QUOTE_NONE",
   "pandas.compat.StringIO",
   "pandas.errors.ParserError",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_none_delimiter": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_read_table_buglet_4x_multiindex": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_single_line": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter_bad_row": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.errors.ParserError",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_skipfooter_with_decimal": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.python_parser_only.PythonParserTests.test_sniff_delimiter": {
  "lineno": 50,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "pandas.Index",
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.quoting.QuotingTests": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_bad_quote_char": {
  "lineno": 17,
  "symbols_in_volume": [
   "csv.QUOTE_MINIMAL",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_bad_quoting": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_double_quote": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_null_quote_char": {
  "lineno": 65,
  "symbols_in_volume": [
   "csv.QUOTE_MINIMAL",
   "csv.QUOTE_NONE",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quote_char_basic": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quote_char_various": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quotechar_unicode": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.quoting.QuotingTests.test_quoting_various": {
  "lineno": 91,
  "symbols_in_volume": [
   "csv.QUOTE_ALL",
   "csv.QUOTE_MINIMAL",
   "csv.QUOTE_NONE",
   "csv.QUOTE_NONNUMERIC",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_deep_skiprows": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_newline": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_newline_and_quote": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprow_with_quote": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_blank": {
  "lineno": 59,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_bug": {
  "lineno": 21,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_callable": {
  "lineno": 203,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.errors.EmptyDataError",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_infield_quote": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.skiprows.SkipRowsTests.test_skiprows_lineterminator": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.test_network.TestS3": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_infer_s3_compression": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path",
   "pandas.util.testing.network",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked_python": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows_python": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3_bucket_python": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3a_bucket": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_parse_public_s3n_bucket": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_read_csv_handles_boto_s3_object": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.TestS3.test_s3_fails": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.io.parsers.read_csv",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.check_compressed_urls": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.io.parsers.read_table",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_network.test_compressed_urls": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.util.testing._check_if_lzma",
   "pytest.mark.network",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.param"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.float_precision_choices": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.read_csv": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.read_table": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.BaseParser.setup_method": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory.read_csv": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserHighMemory.read_table": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.read_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory.read_csv": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestCParserLowMemory.read_table": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.read_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser.read_csv": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestPythonParser.read_table": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.read_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols.test_override__set_noconvert_columns": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols.test_override__set_noconvert_columns.MyCParserWrapper": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.io.parsers.CParserWrapper"
  ],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols.test_override__set_noconvert_columns.MyCParserWrapper._set_noconvert_columns": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.io.parsers.CParserWrapper._set_noconvert_columns"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols.test_override__set_noconvert_columns.MyTextFileReader": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.io.parsers.TextFileReader"
  ],
  "type": "class"
 },
 "pandas.tests.io.parser.test_parsers.TestUnsortedUsecols.test_override__set_noconvert_columns.MyTextFileReader.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_1000_fwf": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_BytesIO_input": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_bool_header_arg": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_comment_fwf": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_default_delimiter": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_dtype": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_missing": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces_and_missing": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_None": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.FixedWidthReader",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple_of_two_element_tuples": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_compression": {
  "lineno": 192,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.GzipFile",
   "pandas.compat.PY3",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_for_uint8": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_fwf_regression": {
  "lineno": 144,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_messed_up_data": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_multiple_delimiters": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_by_index_inference": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_inference": {
  "lineno": 371,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_skiprows_inference_empty": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.EmptyDataError",
   "pandas.io.parsers.read_fwf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_variable_width_unicode": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.compat.PY3",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_read_fwf.TestFwfParsing.test_whitespace_preservation": {
  "lineno": 409,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_fwf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.setup_method": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_StringIO": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.BytesIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_cr_delimited": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_cr_delimited._test": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_delimit_whitespace": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_embedded_newline": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_empty_csv_input": {
  "lineno": 395,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.TextFileReader",
   "pandas.io.parsers.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_empty_field_eof": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_eof_has_eol": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_escapechar": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_euro_decimal": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_file_handle": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_file_handle_mmap": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_header_not_enough_lines": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.parsers.ParserError",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_header_not_enough_lines_as_recarray": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.parsers.ParserError",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_integer_thousands": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_integer_thousands_alt": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.io.parsers.TextFileReader",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_na_substitution": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_numpy_string_dtype": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_numpy_string_dtype._make_reader": {
  "lineno": 250,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_numpy_string_dtype_as_recarray": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_numpy_string_dtype_as_recarray._make_reader": {
  "lineno": 278,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_parse_booleans": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_pass_dtype": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_pass_dtype._make_reader": {
  "lineno": 297,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_skip_bad_lines": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.parsers.ParserError",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.capture_stderr",
   "pytest.raises",
   "sys.stderr.getvalue"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_skipinitialspace": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_string_factorize": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO",
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_string_filename": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_usecols": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.TestTextReader.test_usecols._make_reader": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas._libs.parsers.TextReader",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_textreader.assert_array_dicts_equal": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.test_unsupported.TestDeprecatedFeatures": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestDeprecatedFeatures.test_deprecated_args": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_c_engine": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.errors.ParserError",
   "pandas.io.parsers.ParserWarning",
   "pandas.io.parsers.read_csv",
   "pandas.io.parsers.read_table",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_mangle_dupe_cols_false": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.parsers._python_unsupported",
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.io.parsers.read_csv",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.__init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.__iter__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine_file_no_next.NoNextBuffer.read": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.parser.test_unsupported.python_engine": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_callable_usecols": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_empty_usecols": {
  "lineno": 400,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_incomplete_first_row": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_np_array_usecols": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_raise_on_mixed_dtype_usecols": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_raise_on_usecols_names_mismatch": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_uneven_length_cols": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_implicit_index_col": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_index_col_False": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_index_col_conflict": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_regex_sep": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_integer_like_header": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_mixed_encoding_strings": {
  "lineno": 344,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_multibyte_characters": {
  "lineno": 360,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_multibyte_unicode_characters": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_full_names": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_usecol_names": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas._libs.lib.Timestamp",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_single_byte_unicode_strings": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_unicode_strings": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.parser.usecols.UsecolsTests.test_usecols_with_whitespace": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas.TestSas": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.sas.test_sas.TestSas.test_sas_buffer_format": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_sas",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.setup_method": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.int64",
   "os.path.join",
   "pandas.compat.PY2",
   "pandas.datetime",
   "pandas.read_csv",
   "pandas.to_timedelta",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_buffer": {
  "lineno": 42,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_file": {
  "lineno": 34,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_from_iterator": {
  "lineno": 56,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_iterator_loop": {
  "lineno": 89,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_iterator_read_too_much": {
  "lineno": 102,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_path_localpath": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing._skip_if_no_localpath",
   "pandas.util.testing.assert_frame_equal",
   "py.path.local"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.TestSAS7BDAT.test_path_pathlib": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_sas",
   "pandas.util.testing._skip_if_no_pathlib",
   "pandas.util.testing.assert_frame_equal",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_12659": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.float64",
   "os.path.join",
   "pandas.read_csv",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_airline": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.float64",
   "os.path.join",
   "pandas.read_csv",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_date_time": {
  "lineno": 168,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_encoding_options": {
  "lineno": 117,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.sas.sas7bdat.SAS7BDATReader",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_sas7bdat.test_productsales": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.float64",
   "os.path.join",
   "pandas.read_csv",
   "pandas.read_sas",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.sas.test_xport.TestXport": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.sas.test_xport.TestXport.setup_method": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_basic": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_incremental": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test1_index": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test2": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test_multiple_types": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.TestXport.test_truncated_float_support": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.io.sas.sasreader.read_sas",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.sas.test_xport.numeric_as_float": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.clipboard.exceptions.PyperclipException"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_clipboard.TestClipboard": {
  "lineno": 25,
  "symbols_in_volume": [
   "pytest.mark.single",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.check_round_trip_frame": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.read_clipboard",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.setup_class": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.get_option",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.teardown_class": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_invalid_encoding": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.read_clipboard",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_read_clipboard_infer_excel": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.io.clipboard.clipboard_set",
   "pandas.read_clipboard",
   "pandas.util.testing.assert_frame_equal",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame_sep": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_frame_string": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_clipboard.TestClipboard.test_round_trip_valid_encodings": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "pathlib.Path",
   "py.path.local"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_common.CustomFSPath": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_common.CustomFSPath.__fspath__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_common.CustomFSPath.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_expand_user": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.isabs",
   "pandas.io.common._expand_user"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_expand_user_normal_path": {
  "lineno": 63,
  "symbols_in_volume": [
   "os.path.expanduser",
   "pandas.io.common._expand_user"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_buffer": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_path": {
  "lineno": 104,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.isabs",
   "pandas.io.common.get_filepath_or_buffer"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_infer_compression_from_path": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.io.common._infer_compression",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_iterator": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_read_fspath_all": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pandas.read_excel",
   "pandas.read_feather",
   "pandas.read_fwf",
   "pandas.read_hdf",
   "pandas.read_json",
   "pandas.read_msgpack",
   "pandas.read_pickle",
   "pandas.read_sas",
   "pandas.read_stata",
   "pandas.read_table",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_frame_equal",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_stringify_path_fspath": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.io.common._stringify_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_stringify_path_localpath": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "pandas.io.common._stringify_path",
   "pandas.util.testing._skip_if_no_localpath",
   "py.path.local"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_stringify_path_pathlib": {
  "lineno": 70,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.common._stringify_path",
   "pandas.util.testing._skip_if_no_pathlib",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_write_fspath_all": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestCommonIOCapabilities.test_write_fspath_hdf5": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.setup_method": {
  "lineno": 214,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_constructor_bad_file": {
  "lineno": 218,
  "symbols_in_volume": [
   "mmap.error",
   "pandas.compat.StringIO",
   "pandas.compat.is_platform_windows",
   "pandas.io.common.MMapWrapper",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_get_attr": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.io.common.MMapWrapper"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_next": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.io.common.MMapWrapper",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_common.TestMMapWrapper.test_unknown_engine": {
  "lineno": 264,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.getSeriesData",
   "pandas.util.testing.getTimeSeriesData",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.setup_method": {
  "lineno": 1071,
  "symbols_in_volume": [
   "pandas.core.config.get_option",
   "pandas.core.config.set_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.teardown_method": {
  "lineno": 1078,
  "symbols_in_volume": [
   "pandas.core.config.set_option"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_basics_with_nan": {
  "lineno": 1179,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_bool_types": {
  "lineno": 1225,
  "symbols_in_volume": [
   "numpy.bool8",
   "numpy.bool_",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_bytes_io": {
  "lineno": 1865,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_colaliases": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_datetimes": {
  "lineno": 1840,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame.from_items",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_duplicated_columns": {
  "lineno": 1779,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring": {
  "lineno": 1697,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring.roundtrip": {
  "lineno": 1707,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError": {
  "lineno": 1750,
  "symbols_in_volume": [
   "pandas.util.testing.makeCustomDataframe",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError.roundtrip2": {
  "lineno": 1762,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_date_datetime_format": {
  "lineno": 1384,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_roundtrip_datetime": {
  "lineno": 1370,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_roundtrip_indexname": {
  "lineno": 1354,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excel_sheet_by_name_raise": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "xlrd.XLRDError"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_excelwriter_contextmanager": {
  "lineno": 1095,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_float_types": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.random_sample",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_freeze_panes": {
  "lineno": 1904,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_inf_roundtrip": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_int_types": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_invalid_columns": {
  "lineno": 1822,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_mixed": {
  "lineno": 1159,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_path_localpath": {
  "lineno": 1920,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_path_pathlib": {
  "lineno": 1912,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_roundtrip": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_roundtrip_indexlabels": {
  "lineno": 1292,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_sheets": {
  "lineno": 1247,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_swapped_columns": {
  "lineno": 1808,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_float_format": {
  "lineno": 1542,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex": {
  "lineno": 1435,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_arrays",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_cols": {
  "lineno": 1471,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.map",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_dates": {
  "lineno": 1499,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.MultiIndex.from_arrays",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_nan_label": {
  "lineno": 1455,
  "symbols_in_volume": [
   "numpy.random.sample",
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_multiindex_no_write_index": {
  "lineno": 1517,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_output_encoding": {
  "lineno": 1559,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_periodindex": {
  "lineno": 1422,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_to_excel_unicode_filename": {
  "lineno": 1574,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_true_and_false_value_options": {
  "lineno": 1894,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_tsframe": {
  "lineno": 1168,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ExcelWriterBase.test_write_lists_dict": {
  "lineno": 1879,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.setup_method": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_date_conversion_overflow": {
  "lineno": 548,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_cell_error_na": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_passes_na": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_stop_iterator": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_table": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_excel_table_sheet_by_index": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "xlrd.XLRDError"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_excel_blank": {
  "lineno": 453,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_excel_blank_with_header": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_one_empty_col_no_header": {
  "lineno": 463,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_read_one_empty_col_with_header": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_converters": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame.from_items",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_dtype": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reader_special_dtypes": {
  "lineno": 321,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame.from_items",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_all_sheets": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.util.testing.assert_contains_all"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_all_sheets_with_blank": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.util.testing.assert_contains_all"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_reading_multiple_specific_sheets": {
  "lineno": 429,
  "symbols_in_volume": [
   "pandas.util.testing.assert_contains_all"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_set_column_names_in_parameter": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_sheet_name_and_sheetname": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_sheet_name_both_raises": {
  "lineno": 570,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_usecols_int": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_usecols_list": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.ReadingTestsBase.test_usecols_str": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.SharedItems.get_csv_refdf": {
  "lineno": 87,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.parsers.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.get_exceldf": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.excel.read_excel"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.get_excelfile": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.excel.ExcelFile"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.SharedItems.setup_method": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests": {
  "lineno": 2358,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_ExcelWriter_dispatch": {
  "lineno": 2360,
  "symbols_in_volume": [
   "pandas.compat.openpyxl_compat.is_compat",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel._Openpyxl1Writer",
   "pandas.io.excel._XlsxWriter",
   "pandas.io.excel._XlwtWriter",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_register_writer": {
  "lineno": 2382,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.register_writer",
   "pandas.option_context",
   "pandas.util.testing.makeCustomDataframe",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_register_writer.DummyClass": {
  "lineno": 2387,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelWriter"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_register_writer.DummyClass.save": {
  "lineno": 2393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_register_writer.DummyClass.write_cells": {
  "lineno": 2396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestExcelWriterEngineTests.test_register_writer.check_called": {
  "lineno": 2399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestFSPath": {
  "lineno": 2563,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestFSPath.test_excelfile_fspath": {
  "lineno": 2565,
  "symbols_in_volume": [
   "os.fspath",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelFile",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestFSPath.test_excelwriter_fspath": {
  "lineno": 2575,
  "symbols_in_volume": [
   "os.fspath",
   "pandas.io.excel.ExcelWriter",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl20Tests": {
  "lineno": 2008,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl20Tests.test_to_excel_styleconverter": {
  "lineno": 2015,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "openpyxl.__version__",
   "openpyxl.styles.Alignment",
   "openpyxl.styles.Border",
   "openpyxl.styles.Color",
   "openpyxl.styles.Font",
   "openpyxl.styles.NumberFormat",
   "openpyxl.styles.PatternFill",
   "openpyxl.styles.Protection",
   "openpyxl.styles.Side",
   "openpyxl.styles.borders.BORDER_THIN",
   "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl20Tests.test_write_cells_merge_styled": {
  "lineno": 2075,
  "symbols_in_volume": [
   "openpyxl.styles.Style",
   "pandas.io.excel._Openpyxl20Writer",
   "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs",
   "pandas.io.formats.excel.ExcelCell",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl22Tests": {
  "lineno": 2124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl22Tests.test_to_excel_styleconverter": {
  "lineno": 2131,
  "symbols_in_volume": [
   "openpyxl.styles.Alignment",
   "openpyxl.styles.Border",
   "openpyxl.styles.Color",
   "openpyxl.styles.Font",
   "openpyxl.styles.PatternFill",
   "openpyxl.styles.Protection",
   "openpyxl.styles.Side",
   "openpyxl.styles.borders.BORDER_THIN",
   "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxl22Tests.test_write_cells_merge_styled": {
  "lineno": 2185,
  "symbols_in_volume": [
   "pandas.compat.openpyxl_compat.is_compat",
   "pandas.io.excel._Openpyxl22Writer",
   "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs",
   "pandas.io.formats.excel.ExcelCell",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxlTests": {
  "lineno": 1956,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestOpenpyxlTests.test_to_excel_styleconverter": {
  "lineno": 1962,
  "symbols_in_volume": [
   "openpyxl.style.Alignment.HORIZONTAL_CENTER",
   "openpyxl.style.Alignment.VERTICAL_TOP",
   "openpyxl.style.Border.BORDER_THIN",
   "pandas.compat.openpyxl_compat.is_compat",
   "pandas.io.excel._Openpyxl1Writer._convert_to_style",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestOpenpyxlTests_NoMerge": {
  "lineno": 2331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlsReaderTests": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlsmReaderTests": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlsxReaderTests": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlsxWriterTests": {
  "lineno": 2278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlsxWriterTests.test_column_format": {
  "lineno": 2283,
  "symbols_in_volume": [
   "openpyxl.load_workbook",
   "pandas.DataFrame",
   "pandas.io.excel.ExcelWriter",
   "pandas.util.testing.ensure_clean",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestXlsxWriterTests_NoMerge": {
  "lineno": 2349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlwtTests": {
  "lineno": 2221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.TestXlwtTests.test_excel_multiindex_columns_and_index_true": {
  "lineno": 2237,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestXlwtTests.test_excel_multiindex_index": {
  "lineno": 2246,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestXlwtTests.test_excel_raise_error_on_multiindex_columns_and_no_index": {
  "lineno": 2226,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestXlwtTests.test_to_excel_styleconverter": {
  "lineno": 2256,
  "symbols_in_volume": [
   "pandas.io.excel._XlwtWriter._convert_to_style",
   "xlwt.Alignment.HORZ_CENTER",
   "xlwt.Alignment.VERT_TOP",
   "xlwt.Borders.THIN"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.TestXlwtTests_NoMerge": {
  "lineno": 2340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlrdTests": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets": {
  "lineno": 696,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets.tdf": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_multindex_roundtrip": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.range",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_old_index_format": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_excel_read_buffer": {
  "lineno": 581,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_bool_header_arg": {
  "lineno": 963,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_excel",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_chunksize": {
  "lineno": 970,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_excel",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_multiindex": {
  "lineno": 760,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_multiindex_empty_level": {
  "lineno": 817,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_parse_dates": {
  "lineno": 976,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.datetime.strptime",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_skiprows_list": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_excel_squeeze": {
  "lineno": 1022,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_file_url": {
  "lineno": 635,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.common.URLError",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "platform.uname",
   "pytest.mark.slow",
   "pytest.skip",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_http_url": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_pathlib_path": {
  "lineno": 655,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.excel.read_excel",
   "pandas.util.testing._skip_if_no_pathlib",
   "pandas.util.testing.assert_frame_equal",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_py_localpath": {
  "lineno": 670,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "pandas.io.excel.read_excel",
   "pandas.util.testing._skip_if_no_localpath",
   "pandas.util.testing.assert_frame_equal",
   "py.path.local"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_from_s3_url": {
  "lineno": 618,
  "symbols_in_volume": [
   "moto.mock_s3",
   "os.path.join",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_read_xlrd_Book": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "xlrd.open_workbook"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_reader_closes_file": {
  "lineno": 686,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.excel.ExcelFile",
   "pandas.io.excel.read_excel"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.XlrdTests.test_reader_seconds": {
  "lineno": 721,
  "symbols_in_volume": [
   "datetime.time",
   "distutils.version.LooseVersion",
   "pandas.DataFrame.from_items",
   "pandas.util.testing.assert_frame_equal",
   "xlrd.__VERSION__"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_excelsuite": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_openpyxl": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlrd": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.compat.map",
   "pytest.skip",
   "xlrd.__VERSION__.split"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlsxwriter": {
  "lineno": 56,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel._skip_if_no_xlwt": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_on_incompat_version": {
  "lineno": 1945,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_on_incompat_version.versioned_raise_on_incompat_version": {
  "lineno": 1946,
  "symbols_in_volume": [
   "operator.methodcaller"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper.versioned_raise_wrapper": {
  "lineno": 1930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.raise_wrapper.versioned_raise_wrapper.wrapped": {
  "lineno": 1931,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.compat.openpyxl_compat.is_compat",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_gt21": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_gt21.setup_class": {
  "lineno": 1995,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "openpyxl.__version__",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_lt22": {
  "lineno": 2109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.skip_openpyxl_lt22.setup_class": {
  "lineno": 2112,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "openpyxl.__version__",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel": {
  "lineno": 2423,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.openpyxl_compat.is_compat",
   "pandas.io.excel.ExcelWriter",
   "pandas.io.formats.excel.ExcelFormatter",
   "pandas.util.testing.ensure_clean",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "pytest.skip",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.assert_equal_style": {
  "lineno": 2446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.custom_converter": {
  "lineno": 2455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_excel.test_styler_to_excel.style": {
  "lineno": 2432,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_feather.TestFeather": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_feather.TestFeather.check_error_on_write": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.io.feather_format.to_feather",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.check_round_trip": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.io.feather_format.read_feather",
   "pandas.io.feather_format.to_feather",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_basic": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_duplicate_columns": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_error": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_path_localpath": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.read_feather",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_path_pathlib": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.read_feather",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_rw_nthreads": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_strided_data_issues": {
  "lineno": 64,
  "symbols_in_volume": [
   "feather.FeatherError",
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_stringify_columns": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_unsupported": {
  "lineno": 84,
  "symbols_in_volume": [
   "feather.FeatherError",
   "pandas.DataFrame",
   "pandas.timedelta_range",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_unsupported_other": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_feather.TestFeather.test_write_with_index": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "platform.python_version",
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath": {
  "lineno": 95,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.setup_class": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.teardown_class": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_roundtrip": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.read_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq._get_private_key_path": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq._get_project_id": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq._in_travis_environment": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq._skip_if_no_private_key_path": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq._skip_if_no_project_id": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq.clean_gbq_environment": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_gbq.make_mixed_dataframe_v2": {
  "lineno": 79,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html": {
  "lineno": null,
  "symbols_in_volume": [
   "importlib.import_module",
   "pandas.util.testing.get_data_path"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_html.ErrorThread": {
  "lineno": 943,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_html.ErrorThread.run": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.ReadHtmlMixin": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_html.ReadHtmlMixin.read_html": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.io.html.read_html"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml": {
  "lineno": 101,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.compat.PY3"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtml._bank_data": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.setup_class": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_bad_url_protocol": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.io.common.URLError",
   "pandas.util.testing.network",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_header": {
  "lineno": 533,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.Timestamp",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_header.try_remove_ws": {
  "lineno": 537,
  "symbols_in_volume": [
   "pandas.io.html._remove_whitespace"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_no_match": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_banklist_url": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_bool_header_arg": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.io.html.read_html",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_computer_sales_page": {
  "lineno": 662,
  "symbols_in_volume": [
   "os.path.join",
   "pandas._libs.parsers.ParserError",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_converters": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.html.read_html",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_countries_municipalities": {
  "lineno": 485,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_decimal_rows": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_different_number_of_rows": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_empty_tables": {
  "lineno": 401,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_file_like": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_file_url": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.common.file_path_to_url",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_gold_canyon": {
  "lineno": 572,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_index_no_types": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_index_with_types": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_header_and_one_column": {
  "lineno": 427,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_index": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_infer_types": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_invalid_table_attrs": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_invalid_url": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.io.common.URLError",
   "pandas.util.testing.network",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_keep_default_na": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.html.read_html",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_index": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_index_skiprows": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_skiprows": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_header_skiprows_tuples": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiindex_index": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiple_header_rows": {
  "lineno": 773,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.html.read_html",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_multiple_matches": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_na_values": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.html.read_html",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_negative_skiprows": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_nyse_wsj_commas_table": {
  "lineno": 522,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_parse_dates_combine": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_parse_dates_list": {
  "lineno": 645,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_python_docs_table": {
  "lineno": 375,
  "symbols_in_volume": [
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_regex_idempotency": {
  "lineno": 354,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.common.file_path_to_url",
   "pytest.mark.slow",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_int": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_invalid": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_list": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_ndarray": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_set": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice_long": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_slice_short": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_skiprows_xrange": {
  "lineno": 186,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_header": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_no_match": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_no_types": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_url": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_spam_with_types": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_string": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_string_io": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_tfoot_read": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_thousands_macau_index_col": {
  "lineno": 392,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_thousands_macau_stats": {
  "lineno": 382,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_to_html_compat": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtml.test_wikipedia_states_table": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.dtype",
   "os.path.getsize",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding": {
  "lineno": 790,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_file_like": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.compat.BytesIO"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_filename": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_html": {
  "lineno": 798,
  "symbols_in_volume": [
   "pandas.io.html.read_html"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.read_string": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.setup_class": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncoding.test_encode": {
  "lineno": 814,
  "symbols_in_volume": [
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncodingLxml": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlEncodingLxml.setup_class": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.setup_class": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_computer_sales_page": {
  "lineno": 888,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_data_fail": {
  "lineno": 848,
  "symbols_in_volume": [
   "lxml.etree.XMLSyntaxError",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_fallback_success": {
  "lineno": 865,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_parse_dates_combine": {
  "lineno": 879,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_parse_dates_list": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.TestReadHtmlLxml.test_works_on_valid_markup": {
  "lineno": 859,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html._have_module": {
  "lineno": 37,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html._lang_enc": {
  "lineno": 786,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html._skip_if_no": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html._skip_if_none_of": {
  "lineno": 50,
  "symbols_in_volume": [
   "bs4.__version__",
   "distutils.version.LooseVersion",
   "pandas.compat.string_types",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.assert_framelist_equal": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.map",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.get_elements_from_file": {
  "lineno": 899,
  "symbols_in_volume": [
   "bs4.BeautifulSoup",
   "pandas.io.common.file_path_to_url",
   "pandas.io.common.urlopen"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.get_lxml_elements": {
  "lineno": 916,
  "symbols_in_volume": [
   "lxml.html.parse"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_bs4_finds_tables": {
  "lineno": 908,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_bs4_version_fails": {
  "lineno": 85,
  "symbols_in_volume": [
   "bs4.__version__",
   "distutils.version.LooseVersion",
   "os.path.join",
   "pandas.io.html.read_html",
   "pandas.util.testing.assert_raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_importcheck_thread_safety": {
  "lineno": 953,
  "symbols_in_volume": [
   "importlib.reload",
   "os.path.join",
   "pandas.io.html.read_html",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_invalid_flavor": {
  "lineno": 893,
  "symbols_in_volume": [
   "pandas.io.html.read_html",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_lxml_finds_tables": {
  "lineno": 923,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_lxml_finds_tbody": {
  "lineno": 929,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_html.test_same_ordering": {
  "lineno": 935,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.html.read_html"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_packers.TestAPI": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg": {
  "lineno": 154,
  "symbols_in_volume": [
   "pandas.io.packers.read_msgpack",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg.A": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestAPI.test_invalid_arg.A.__init__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_iterator_with_string_io": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.packers.read_msgpack",
   "pandas.io.packers.to_msgpack",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_path_localpath": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.io.packers.read_msgpack",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_path_pathlib": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.io.packers.read_msgpack",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestAPI.test_string_io": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.BytesIO",
   "pandas.io.packers.read_msgpack",
   "pandas.io.packers.to_msgpack",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestBasic.test_datetimes": {
  "lineno": 298,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "distutils.version.LooseVersion",
   "numpy.datetime64",
   "pytest.skip",
   "sys.version"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_nat": {
  "lineno": 294,
  "symbols_in_volume": [
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_timedeltas": {
  "lineno": 312,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestBasic.test_timestamp": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCategorical": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestCategorical.setup_method": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCategorical.test_basic": {
  "lineno": 448,
  "symbols_in_volume": [
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression_warns_when_decompress_caches": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.timedelta64",
   "pandas.errors.PerformanceWarning",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.patch"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_compression_warns_when_decompress_caches.decompress": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression._test_small_strings_no_warn": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.setup_method": {
  "lineno": 603,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.arange",
   "numpy.float64",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.date_range",
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_blosc": {
  "lineno": 646,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_warns_when_decompress_caches_blosc": {
  "lineno": 708,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_warns_when_decompress_caches_zlib": {
  "lineno": 703,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_compression_zlib": {
  "lineno": 641,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_plain": {
  "lineno": 626,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_blosc": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_blosc_to_sql": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_zlib": {
  "lineno": 759,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_readonly_axis_zlib_to_sql": {
  "lineno": 780,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_small_strings_no_warn_blosc": {
  "lineno": 745,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestCompression.test_small_strings_no_warn_zlib": {
  "lineno": 740,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestEncoding.setup_method": {
  "lineno": 797,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.arange",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding.test_default_encoding": {
  "lineno": 821,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestEncoding.test_utf": {
  "lineno": 814,
  "symbols_in_volume": [
   "pandas.compat.itervalues",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestIndex.categorical_index": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.setup_method": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.bdate_range",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeRangeIndex",
   "pandas.util.testing.makeStringIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_basic_index": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_multi_index": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestIndex.test_unicode": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestMsgpack.check_min_structure": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare": {
  "lineno": 865,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.io.packers.read_msgpack"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare_frame_dt_mixed_tzs": {
  "lineno": 904,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.compare_series_dt_tz": {
  "lineno": 895,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestMsgpack.test_msgpacks_legacy": {
  "lineno": 913,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "pandas.compat.PY3",
   "pandas.util.testing.get_data_path",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestNDFrame.setup_method": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_basic_frame": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_basic_panel": {
  "lineno": 490,
  "symbols_in_volume": [
   "pandas.tests.test_panel.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_dataframe_duplicate_column_names": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_iterator": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.io.packers.read_msgpack",
   "pandas.io.packers.to_msgpack",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.test_multi": {
  "lineno": 497,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNDFrame.tests_datetimeindex_freq_issue": {
  "lineno": 525,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_complex": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.util.testing.assert_class_equal",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_float": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_numpy_complex": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.complex128",
   "pandas.util.testing.assert_class_equal",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_dict_numpy_float": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_float": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_float_complex": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_mixed": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complex128",
   "numpy.float32",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_numpy_float": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_list_numpy_float_complex": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy",
   "numpy.allclose",
   "numpy.complex128",
   "numpy.float32",
   "numpy.random.rand",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_array_complex": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_array_float": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_scalar_complex": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.complex64",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_numpy_scalar_float": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_scalar_bool": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_scalar_complex": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestNumpy.test_scalar_float": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestPackers.encode_decode": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.io.packers.read_msgpack",
   "pandas.io.packers.to_msgpack",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers.setup_method": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestPackers.teardown_method": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSeries": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestSeries.setup_method": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.date_range",
   "pandas.util.testing.makeObjectSeries",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSeries.test_basic": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_packers.TestSparse._check_roundtrip": {
  "lineno": 557,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse.test_sparse_frame": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.TestSparse.test_sparse_series": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.all_packers_data": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.tests.io.generate_legacy_storage_files.create_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.check_arbitrary": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Panel",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.PY3",
   "pandas.tests.test_panel.assert_panel_equal",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.current_packers_data": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.tests.io.generate_legacy_storage_files.create_msgpack_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_packers.legacy_packers_versions": {
  "lineno": 830,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.test_parquet.Base": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_parquet.Base.check_error_on_write": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.io.parquet.to_parquet",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.Base.check_round_trip": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.io.parquet.to_parquet",
   "pandas.read_parquet",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_columns_dtypes": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_columns_dtypes_invalid": {
  "lineno": 230,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_compression": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_error": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_multiindex_with_columns": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.io.parquet.read_parquet",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_read_columns": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_write_column_multiindex": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_write_index": {
  "lineno": 272,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.__version__",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestBasic.test_write_multiindex": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_basic": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_bool_with_none": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_categorical": {
  "lineno": 448,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "fastparquet.__version__",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_datetime_tz": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_duplicate_columns": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_filter_row_groups": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.parquet.read_parquet",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetFastParquet.test_unsupported": {
  "lineno": 438,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow.test_basic": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow.test_categorical": {
  "lineno": 382,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow.test_categorical_unsupported": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow.test_duplicate_columns": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.TestParquetPyArrow.test_unsupported": {
  "lineno": 368,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.df_compat": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.df_cross_compat": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.engine": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.mark.skipif",
   "pytest.param"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.fp": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.pa": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.pa_ge_070": {
  "lineno": 58,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pyarrow.__version__",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.pa_lt_070": {
  "lineno": 49,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pyarrow.__version__",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_cross_engine_fp_pa": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_cross_engine_pa_fp": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_invalid_engine": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_options_auto": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.option_context",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_options_fp": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.option_context",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_options_get_engine": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.io.parquet.FastParquetImpl",
   "pandas.io.parquet.PyArrowImpl",
   "pandas.io.parquet.get_engine",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_parquet.test_options_py": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.io.parquet.read_parquet",
   "pandas.option_context",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.test_pickle.TestCompression": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_pickle.TestCompression.compress_file": {
  "lineno": 326,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.open",
   "os.path.basename",
   "pandas.compat.import_lzma",
   "shutil.copyfile",
   "zipfile.ZIP_DEFLATED",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.decompress_file": {
  "lineno": 354,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.open",
   "pandas.compat.import_lzma",
   "shutil.copyfile",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_read_explicit": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_read_infer": {
  "lineno": 469,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_explicit": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_explicit_bad": {
  "lineno": 409,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestCompression.test_write_infer": {
  "lineno": 417,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing._skip_if_no_lzma",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestProtocol": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_pickle.TestProtocol.test_read": {
  "lineno": 505,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.TestProtocol.test_read_bad_versions": {
  "lineno": 513,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.read_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_element": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.util.testing",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_cat_and_float": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_cat_onecol": {
  "lineno": 155,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_frame_dt_mixed_tzs": {
  "lineno": 145,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_index_period": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.tseries.offsets.MonthEnd",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_cat": {
  "lineno": 133,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_dt_tz": {
  "lineno": 123,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_series_ts": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.tseries.offsets.Day",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_sp_frame_float": {
  "lineno": 179,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.compare_sp_series_ts": {
  "lineno": 94,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.current_pickle_data": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.tests.io.generate_legacy_storage_files.create_pickle_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.get_random_path": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.util.testing.rands",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.legacy_pickle_versions": {
  "lineno": 190,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_path_localpath": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_path_pathlib": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_v0_14_1": {
  "lineno": 263,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.Categorical",
   "pandas.read_pickle",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickle_v0_15_2": {
  "lineno": 278,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.Categorical",
   "pandas.read_pickle",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_pickles": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.compat.is_platform_little_endian",
   "pandas.util.testing.get_data_path",
   "pytest.mark.parametrize",
   "pytest.skip",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.to_pickle",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.c_pickler": {
  "lineno": 215,
  "symbols_in_volume": [
   "cPickle.dump"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.c_unpickler": {
  "lineno": 219,
  "symbols_in_volume": [
   "cPickle.load"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.python_pickler": {
  "lineno": 229,
  "symbols_in_volume": [
   "pickle.dump"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pickle.test_round_trip_current.python_unpickler": {
  "lineno": 233,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.compat.PY3",
   "pandas.compat.is_platform_windows",
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_pytables.Base": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_pytables.Base.setup_class": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.util.testing.reset_testing_mode"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.setup_method": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.teardown_class": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.util.testing.set_testing_mode"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.Base.teardown_method": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues": {
  "lineno": 5277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_across_dimensions": {
  "lineno": 5372,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Panel4D",
   "pandas.Series",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_across_dimensions_fixed": {
  "lineno": 5355,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_append": {
  "lineno": 5413,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_fixed": {
  "lineno": 5280,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_indexing_error": {
  "lineno": 5390,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_mixed_fixed": {
  "lineno": 5317,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_mixed_table": {
  "lineno": 5333,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_series_error": {
  "lineno": 5401,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFComplexValues.test_complex_table": {
  "lineno": 5298,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore": {
  "lineno": 146,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_double_roundtrip": {
  "lineno": 4458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_roundtrip": {
  "lineno": 4447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore._check_roundtrip_table": {
  "lineno": 4472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_api": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.compat.FileNotFoundError",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_api_default_format": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore",
   "pandas.set_option",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randint",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "pandas.util.testing.makeTimeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_all_nans": {
  "lineno": 1152,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Timestamp",
   "pandas.io.pytables.read_hdf",
   "pandas.set_option",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_diff_item_order": {
  "lineno": 1789,
  "symbols_in_volume": [
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_frame_column_oriented": {
  "lineno": 1251,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_hierarchical": {
  "lineno": 1802,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_misc": {
  "lineno": 1986,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_misc.check": {
  "lineno": 2012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_raise": {
  "lineno": 2074,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_series": {
  "lineno": 960,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_some_nans": {
  "lineno": 1111,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple": {
  "lineno": 4150,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple_dropna": {
  "lineno": 4175,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_to_multiple_dropna_false": {
  "lineno": 4193,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.mark.xfail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_data_columns": {
  "lineno": 1551,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeTimeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_data_columns.check_col": {
  "lineno": 1589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_diff_col_name_types_raises_value_error": {
  "lineno": 4777,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.rands",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_different_block_ordering": {
  "lineno": 1277,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_strings": {
  "lineno": 1389,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeMixedDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_strings.check_col": {
  "lineno": 1492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_append_with_timedelta": {
  "lineno": 2285,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_calendar_roundtrip_issue": {
  "lineno": 2249,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.CustomBusinessDay",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_can_serialize_dates": {
  "lineno": 2948,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.bdate_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_categorical": {
  "lineno": 4802,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_categorical_conversion": {
  "lineno": 4901,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_categorical_nan_only_columns": {
  "lineno": 4931,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_column_multiindex": {
  "lineno": 1827,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.RangeIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_columns_multiindex_modified": {
  "lineno": 4988,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_complibs": {
  "lineno": 793,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_complibs_default_settings": {
  "lineno": 740,
  "symbols_in_volume": [
   "pandas.HDFStore",
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_contains": {
  "lineno": 437,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_context": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.pytables.HDFStore",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_contiguous_mixed_data_table": {
  "lineno": 4399,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_conv_read_write": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_conv_read_write.roundtrip": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.io.pytables.read_hdf"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_coordinates": {
  "lineno": 4050,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_copy": {
  "lineno": 4628,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore",
   "pandas.util.testing.makeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_copy.do_copy": {
  "lineno": 4632,
  "symbols_in_volume": [
   "os.close",
   "pandas.io.pytables.HDFStore",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_create_table_index": {
  "lineno": 1728,
  "symbols_in_volume": [
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_create_table_index.col": {
  "lineno": 1733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_duplicate_column_name": {
  "lineno": 4950,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_empty_series": {
  "lineno": 2943,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_empty_series_frame": {
  "lineno": 2930,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_encoding": {
  "lineno": 1045,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.is_platform_little_endian",
   "pandas.compat.range",
   "pandas.io.pytables.Term",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_factory_fun": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.pytables.get_store",
   "pandas.util.testing.makeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_float_index": {
  "lineno": 2816,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_flush": {
  "lineno": 605,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame": {
  "lineno": 2896,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select": {
  "lineno": 3773,
  "symbols_in_volume": [
   "pandas.io.pytables.Term",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select_complex": {
  "lineno": 3806,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_frame_select_complex2": {
  "lineno": 3857,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_fspath": {
  "lineno": 5249,
  "symbols_in_volume": [
   "os.fspath",
   "pandas.HDFStore",
   "pandas.compat.PY36",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_get": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_getattr": {
  "lineno": 626,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_index_types": {
  "lineno": 2834,
  "symbols_in_volume": [
   "datetime.datetime.date.today",
   "datetime.datetime.datetime",
   "datetime.datetime.datetime.today",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_complib": {
  "lineno": 5094,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_filtering": {
  "lineno": 3921,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_invalid_terms": {
  "lineno": 2551,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.io.pytables.Term",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_iter_empty": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_keys": {
  "lineno": 367,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding": {
  "lineno": 1061,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.PY2",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding._try_decode": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_latin_encoding.roundtrip": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_legacy_table_read": {
  "lineno": 4605,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long": {
  "lineno": 3141,
  "symbols_in_volume": [
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long._check": {
  "lineno": 3142,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_long_strings": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_longpanel": {
  "lineno": 3149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mi_data_columns": {
  "lineno": 1963,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode": {
  "lineno": 478,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check": {
  "lineno": 482,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check.f": {
  "lineno": 499,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_mode.check_default_mode": {
  "lineno": 525,
  "symbols_in_volume": [
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_multiple_open_close": {
  "lineno": 4483,
  "symbols_in_volume": [
   "pandas.io.pytables.ClosedFileError",
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables._table_file_open_policy_is_strict",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_multiple_open_close.f": {
  "lineno": 4583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_nan_selection_bug_4858": {
  "lineno": 4273,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.skipf"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_ndim_indexables": {
  "lineno": 1319,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.makePanel4D",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_ndim_indexables.check_indexers": {
  "lineno": 1327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_open_args": {
  "lineno": 585,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.io.pytables.HDFStore",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_overwrite_node": {
  "lineno": 3152,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_panel_select": {
  "lineno": 3748,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pass_spec_to_storer": {
  "lineno": 1976,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore": {
  "lineno": 4433,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore.reader": {
  "lineno": 4440,
  "symbols_in_volume": [
   "pandas.HDFStore",
   "pandas.read_hdf"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_localpath_hdfstore.writer": {
  "lineno": 4436,
  "symbols_in_volume": [
   "pandas.HDFStore"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib": {
  "lineno": 4391,
  "symbols_in_volume": [
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore": {
  "lineno": 4412,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore.reader": {
  "lineno": 4419,
  "symbols_in_volume": [
   "pandas.HDFStore",
   "pandas.read_hdf"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_path_pathlib_hdfstore.writer": {
  "lineno": 4415,
  "symbols_in_volume": [
   "pandas.HDFStore"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pickle_path_localpath": {
  "lineno": 4426,
  "symbols_in_volume": [
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_preserve_timedeltaindex_type": {
  "lineno": 4975,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pandas.DataFrame",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put": {
  "lineno": 654,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_compression": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_compression_blosc": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.skip_if_no_package",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_integer": {
  "lineno": 830,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_mixed_type": {
  "lineno": 835,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_put_string_index": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pytables_native2_read": {
  "lineno": 4595,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY35",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.get_data_path",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_pytables_native_read": {
  "lineno": 4587,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_compare_column_type": {
  "lineno": 5194,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_long_float_literal": {
  "lineno": 5171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_query_with_nested_special_character": {
  "lineno": 4792,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_column": {
  "lineno": 3985,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_column.f": {
  "lineno": 3996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_from_pathlib_path": {
  "lineno": 5135,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing._skip_if_no_pathlib",
   "pandas.util.testing.assert_frame_equal",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_from_py_localpath": {
  "lineno": 5153,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing._skip_if_no_localpath",
   "pandas.util.testing.assert_frame_equal",
   "py.path.local"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_errors": {
  "lineno": 5079,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.read_hdf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_generic_buffer_errors": {
  "lineno": 5091,
  "symbols_in_volume": [
   "pandas.compat.BytesIO",
   "pandas.io.pytables.read_hdf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_iterator": {
  "lineno": 5063,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.TableIterator",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_open_store": {
  "lineno": 5045,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_hdf_series_mode_r": {
  "lineno": 5238,
  "symbols_in_volume": [
   "pandas.read_hdf",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeFloatSeries",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey": {
  "lineno": 5103,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey_empty": {
  "lineno": 5129,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.read_hdf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_nokey_table": {
  "lineno": 5117,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_read_py2_hdf_file_in_py3": {
  "lineno": 5255,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove": {
  "lineno": 2327,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_crit": {
  "lineno": 2473,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_startstop": {
  "lineno": 2397,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_remove_where": {
  "lineno": 2364,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_reopen_handle": {
  "lineno": 539,
  "symbols_in_volume": [
   "pandas.io.pytables.HDFStore",
   "pandas.io.pytables.PossibleDataLossError",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_repr": {
  "lineno": 387,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Timestamp",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_retain_index_attributes": {
  "lineno": 3674,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_retain_index_attributes2": {
  "lineno": 3716,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.io.pytables.read_hdf",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_round_trip_equals": {
  "lineno": 4964,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_roundtrip_tz_aware_index": {
  "lineno": 2274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_same_name_scoping": {
  "lineno": 2743,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select": {
  "lineno": 3193,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makeTimeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_as_multiple": {
  "lineno": 4215,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_columns_in_where": {
  "lineno": 1932,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_dtypes": {
  "lineno": 3261,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.bdate_range",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_filter_corner": {
  "lineno": 4374,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator": {
  "lineno": 3417,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.io.pytables.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_complete_8014": {
  "lineno": 3483,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_many_empty_frames": {
  "lineno": 3613,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_iterator_non_complete_8014": {
  "lineno": 3557,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_with_dups": {
  "lineno": 3070,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_select_with_many_inputs": {
  "lineno": 3370,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.bdate_range",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_series": {
  "lineno": 2766,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_frame": {
  "lineno": 2798,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_series": {
  "lineno": 2782,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_sparse_with_compression": {
  "lineno": 3161,
  "symbols_in_volume": [
   "numpy.random.binomial",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_fixed": {
  "lineno": 4328,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_multiple": {
  "lineno": 4313,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_start_stop_table": {
  "lineno": 4293,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_datetime_fractional_secs": {
  "lineno": 4685,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_datetime_mixed": {
  "lineno": 4761,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_hierarchical": {
  "lineno": 2955,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name": {
  "lineno": 2974,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name_numpy_str": {
  "lineno": 2995,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.text_type",
   "pandas.compat.u",
   "pandas.io.pytables.read_hdf",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_name_with_tz": {
  "lineno": 2983,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_types": {
  "lineno": 1006,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_index_types.check": {
  "lineno": 1012,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_mixed": {
  "lineno": 3025,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_mixed._make_one": {
  "lineno": 3027,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_multiindex": {
  "lineno": 1877,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_multiindex.make_index": {
  "lineno": 1883,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_store_series_name": {
  "lineno": 3016,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_string_select": {
  "lineno": 3938,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.isna",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_index_incompatible_dtypes": {
  "lineno": 2114,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_mixed_dtypes": {
  "lineno": 2166,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_table_values_dtypes_roundtrip": {
  "lineno": 2124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_term_compat": {
  "lineno": 2689,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_terms": {
  "lineno": 2604,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.Panel.fromDict",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makePanel",
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_timeseries_preepoch": {
  "lineno": 2887,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_to_hdf_with_min_itemsize": {
  "lineno": 1531,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.read_hdf",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeMixedDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_to_hdf_with_object_column_names": {
  "lineno": 5011,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.read_hdf",
   "pandas.util.testing.makeCategoricalIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeTimedeltaIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tseries_indices_frame": {
  "lineno": 4714,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_class_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tseries_indices_series": {
  "lineno": 4693,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_class_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makePeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_tuple_index": {
  "lineno": 2823,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unicode_index": {
  "lineno": 4737,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unicode_longer_encoded": {
  "lineno": 4746,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_unimplemented_dtypes_table_columns": {
  "lineno": 2221,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.util.testing.makeDataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_versioning": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_wide": {
  "lineno": 3064,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestHDFStore.test_wide_table_dups": {
  "lineno": 3129,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones": {
  "lineno": 5424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_pytables.TestTimezones._compare_with_tz": {
  "lineno": 5426,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_append_with_timezones_dateutil": {
  "lineno": 5438,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_append_with_timezones_pytz": {
  "lineno": 5513,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_dst_transitions": {
  "lineno": 5681,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_fixed_offset_tz": {
  "lineno": 5632,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_legacy_datetimetz_object": {
  "lineno": 5669,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_store_timezone": {
  "lineno": 5642,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.set_timezone"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_timezones_fixed": {
  "lineno": 5611,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.TestTimezones.test_tseries_select_index_column": {
  "lineno": 5579,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables._maybe_remove": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.create_tempfile": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.path.join",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.ensure_clean_path": {
  "lineno": 91,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.ensure_clean_store": {
  "lineno": 72,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.path.dirname",
   "pandas.io.pytables.HDFStore"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.safe_close": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_pytables.safe_remove": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_s3": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.test_s3.TestS3URL": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_s3.TestS3URL.test_is_s3_url": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.io.common._is_s3_url"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.float64",
   "numpy.str_",
   "pandas.compat.binary_type",
   "pandas.compat.text_type",
   "pandas.core.tools.datetimes.format"
  ],
  "type": "module"
 },
 "pandas.tests.io.test_sql.MixInBase": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql.MixInBase.teardown_method": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.MySQLMixIn": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql.MySQLMixIn._close_conn": {
  "lineno": 205,
  "symbols_in_volume": [
   "pymysql.err.Error"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.MySQLMixIn._get_all_tables": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.MySQLMixIn.drop_table": {
  "lineno": 194,
  "symbols_in_volume": [
   "pandas.io.sql._get_valid_mysql_name"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._check_iris_loaded_frame": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.floating",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._count_rows": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._execute_sql": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._get_exec": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_iris_data": {
  "lineno": 256,
  "symbols_in_volume": [
   "csv.reader",
   "io.open",
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_iris_view": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_raw_sql": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test1_data": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test2_data": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._load_test3_data": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris_named_parameter": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._read_sql_iris_parameter": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._roundtrip": {
  "lineno": 434,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_append": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_empty": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_fail": {
  "lineno": 388,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_replace": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._to_sql_save_index": {
  "lineno": 453,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.PandasSQLTest._transaction_test": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn._close_conn": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn._get_all_tables": {
  "lineno": 234,
  "symbols_in_volume": [
   "sqlalchemy.schema.MetaData"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLAlchemyMixIn.drop_table": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.io.sql.SQLDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn._close_conn": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn._get_all_tables": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.SQLiteMixIn.drop_table": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.io.sql._get_valid_sqlite_name"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestMySQLAlchemy": {
  "lineno": 1875,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestMySQLAlchemyConn": {
  "lineno": 1880,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestPostgreSQLAlchemy": {
  "lineno": 1885,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestPostgreSQLAlchemyConn": {
  "lineno": 1890,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLApi": {
  "lineno": 858,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLApi._get_index_columns": {
  "lineno": 942,
  "symbols_in_volume": [
   "sqlalchemy.engine.reflection.Inspector.from_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi._make_iris_table_metadata": {
  "lineno": 990,
  "symbols_in_volume": [
   "sqlalchemy"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.connect": {
  "lineno": 870,
  "symbols_in_volume": [
   "pytest.skip",
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_database_uri_string": {
  "lineno": 958,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_not_reflect_all_tables": {
  "lineno": 912,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_query_by_select_obj": {
  "lineno": 1011,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "sqlalchemy.bindparam",
   "sqlalchemy.select"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_query_by_text_obj": {
  "lineno": 1003,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "sqlalchemy.text"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_sql_delegate": {
  "lineno": 901,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_table_columns": {
  "lineno": 876,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_table",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_read_table_index_col": {
  "lineno": 884,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_table",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_sqlalchemy_type_mapping": {
  "lineno": 949,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.SQLDatabase",
   "pandas.io.sql.SQLTable",
   "pandas.to_datetime",
   "sqlalchemy.sql.sqltypes.DateTime"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApi.test_warning_case_insensitive_table_name": {
  "lineno": 928,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLApiConn": {
  "lineno": 1045,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation": {
  "lineno": 2336,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation.test_deprecated_flavor": {
  "lineno": 2354,
  "symbols_in_volume": [
   "pandas.io.sql",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLFlavorDeprecation.test_unsupported_flavor": {
  "lineno": 2347,
  "symbols_in_volume": [
   "pandas.io.sql",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteAlchemy": {
  "lineno": 1895,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteAlchemyConn": {
  "lineno": 1900,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback": {
  "lineno": 1908,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback._get_index_columns": {
  "lineno": 1991,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback._get_sqlite_column_type": {
  "lineno": 2010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.connect": {
  "lineno": 1916,
  "symbols_in_volume": [
   "sqlite3.connect"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.setup_method": {
  "lineno": 1920,
  "symbols_in_volume": [
   "pandas.io.sql.SQLiteDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_create_and_drop_table": {
  "lineno": 1952,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_datetime_date": {
  "lineno": 1970,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_datetime_time": {
  "lineno": 1981,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_dtype": {
  "lineno": 2017,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_execute_sql": {
  "lineno": 1967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_illegal_names": {
  "lineno": 2062,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.table_exists",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_notna_dtype": {
  "lineno": 2043,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql": {
  "lineno": 1928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql_named_parameter": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_read_sql_parameter": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_roundtrip": {
  "lineno": 1964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql": {
  "lineno": 1937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_append": {
  "lineno": 1949,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_empty": {
  "lineno": 1940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_fail": {
  "lineno": 1943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_replace": {
  "lineno": 1946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_to_sql_save_index": {
  "lineno": 2002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallback.test_transactions": {
  "lineno": 2005,
  "symbols_in_volume": [
   "pandas.compat.PY36",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi": {
  "lineno": 1050,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi._get_sqlite_column_type": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.connect": {
  "lineno": 1059,
  "symbols_in_volume": [
   "sqlite3.connect"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_con_string_import_error": {
  "lineno": 1080,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_get_schema2": {
  "lineno": 1102,
  "symbols_in_volume": [
   "pandas.io.sql.get_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_read_sql_delegate": {
  "lineno": 1088,
  "symbols_in_volume": [
   "pandas.io.sql.DatabaseError",
   "pandas.io.sql.read_sql",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_safe_names_warning": {
  "lineno": 1095,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_sql_open_close": {
  "lineno": 1062,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestSQLiteFallbackApi.test_sqlite_type_mapping": {
  "lineno": 1114,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.SQLiteDatabase",
   "pandas.io.sql.SQLiteTable",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL": {
  "lineno": 2361,
  "symbols_in_volume": [
   "pytest.mark.single",
   "pytest.mark.skip"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestXMySQL._check_roundtrip": {
  "lineno": 2556,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.io.sql.read_sql",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.setup_class": {
  "lineno": 2366,
  "symbols_in_volume": [
   "pymysql.Error",
   "pymysql.ProgrammingError",
   "pymysql.connect",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.setup_method": {
  "lineno": 2395,
  "symbols_in_volume": [
   "pymysql.Error",
   "pymysql.ProgrammingError",
   "pymysql.connect",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_basic": {
  "lineno": 2423,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_chunksize_read_type": {
  "lineno": 2449,
  "symbols_in_volume": [
   "pandas.io.sql.to_sql",
   "pandas.read_sql_query",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute": {
  "lineno": 2464,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.io.sql.get_schema",
   "pandas.io.sql.read_sql",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute_closed_connection": {
  "lineno": 2526,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.util.testing.capture_stdout",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_execute_fail": {
  "lineno": 2503,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.util.testing.capture_stdout",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_if_exists": {
  "lineno": 2599,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.to_sql",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_if_exists.clean_up": {
  "lineno": 2607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_keyword_as_column_names": {
  "lineno": 2593,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_na_roundtrip": {
  "lineno": 2552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_schema": {
  "lineno": 2484,
  "symbols_in_volume": [
   "pandas.io.sql.get_schema",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXMySQL.test_write_row_by_row": {
  "lineno": 2428,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.sql.get_schema",
   "pandas.io.sql.read_sql",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite": {
  "lineno": 2132,
  "symbols_in_volume": [
   "pytest.mark.single"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql.TestXSQLite._check_roundtrip": {
  "lineno": 2241,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.io.sql.read_sql",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.setup_method": {
  "lineno": 2135,
  "symbols_in_volume": [
   "sqlite3.connect"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_basic": {
  "lineno": 2139,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute": {
  "lineno": 2164,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.io.sql.get_schema",
   "pandas.io.sql.read_sql",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute_closed_connection": {
  "lineno": 2215,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.util.testing.capture_stdout",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_execute_fail": {
  "lineno": 2195,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.util.testing.capture_stdout",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_if_exists": {
  "lineno": 2282,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.to_sql",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_if_exists.clean_up": {
  "lineno": 2289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_keyword_as_column_names": {
  "lineno": 2262,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_na_roundtrip": {
  "lineno": 2238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_onecolumn_of_integer": {
  "lineno": 2266,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_schema": {
  "lineno": 2179,
  "symbols_in_volume": [
   "pandas.io.sql.get_schema",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.TestXSQLite.test_write_row_by_row": {
  "lineno": 2143,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.io.sql.get_schema",
   "pandas.io.sql.read_sql",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin": {
  "lineno": 1023,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin.setup_method": {
  "lineno": 1028,
  "symbols_in_volume": [
   "pandas.io.sql.SQLDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._EngineToConnMixin.teardown_method": {
  "lineno": 1037,
  "symbols_in_volume": [
   "pandas.io.sql.SQLDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy": {
  "lineno": 1724,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.connect": {
  "lineno": 1731,
  "symbols_in_volume": [
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.setup_driver": {
  "lineno": 1736,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.test_default_type_conversion": {
  "lineno": 1744,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestMySQLAlchemy.test_read_procedure": {
  "lineno": 1759,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy": {
  "lineno": 1790,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.connect": {
  "lineno": 1797,
  "symbols_in_volume": [
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.setup_driver": {
  "lineno": 1802,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestPostgreSQLAlchemy.test_schema_support": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.io.sql.SQLDatabase",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "sqlalchemy.MetaData",
   "sqlalchemy.engine.Engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy": {
  "lineno": 1129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy._get_index_columns": {
  "lineno": 1508,
  "symbols_in_volume": [
   "sqlalchemy.engine.reflection.Inspector.from_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.connect": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_class": {
  "lineno": 1139,
  "symbols_in_volume": [
   "pytest.skip",
   "sqlalchemy.exc.OperationalError"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_connect": {
  "lineno": 1173,
  "symbols_in_volume": [
   "pandas.io.sql.SQLDatabase",
   "pytest.skip",
   "sqlalchemy.exc.OperationalError"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_driver": {
  "lineno": 1165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_import": {
  "lineno": 1159,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.setup_method": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_aread_sql": {
  "lineno": 1183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_bigint": {
  "lineno": 1264,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example": {
  "lineno": 1621,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.bar": {
  "lineno": 1629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.foo": {
  "lineno": 1625,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_connectable_issue_example.main": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_create_table": {
  "lineno": 1207,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.SQLDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_date_parsing": {
  "lineno": 1352,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime": {
  "lineno": 1380,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.compat.string_types",
   "pandas.date_range",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_NaT": {
  "lineno": 1400,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.string_types",
   "pandas.date_range",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_date": {
  "lineno": 1419,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_table",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_time": {
  "lineno": 1429,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_with_timezone": {
  "lineno": 1279,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.io.sql.read_sql_table",
   "pandas.read_sql_query",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_datetime_with_timezone.check": {
  "lineno": 1284,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_default_date_load": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_default_type_conversion": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.floating",
   "numpy.integer",
   "numpy.object",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_double_precision": {
  "lineno": 1593,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.sql.read_sql_table",
   "sqlalchemy.Float",
   "sqlalchemy.schema.MetaData",
   "sqlalchemy.sql.sqltypes.BigInteger",
   "sqlalchemy.sql.sqltypes.Float",
   "sqlalchemy.sql.sqltypes.Integer"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_drop_table": {
  "lineno": 1217,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.SQLDatabase"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_dtype": {
  "lineno": 1538,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "sqlalchemy.String",
   "sqlalchemy.TEXT",
   "sqlalchemy.schema.MetaData"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_execute_sql": {
  "lineno": 1235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_get_schema_create_table": {
  "lineno": 1521,
  "symbols_in_volume": [
   "pandas.io.sql.get_schema",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_mixed_dtype_insert": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_fullcolumn": {
  "lineno": 1477,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_numeric": {
  "lineno": 1464,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_nan_string": {
  "lineno": 1492,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_notna_dtype": {
  "lineno": 1568,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.io.sql.read_sql_table",
   "sqlalchemy.schema.MetaData",
   "sqlalchemy.sql.sqltypes.Boolean",
   "sqlalchemy.sql.sqltypes.DateTime",
   "sqlalchemy.sql.sqltypes.Float",
   "sqlalchemy.sql.sqltypes.Integer"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_sql_named_parameter": {
  "lineno": 1189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_sql_parameter": {
  "lineno": 1186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table": {
  "lineno": 1238,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table_absent": {
  "lineno": 1248,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_read_table_columns": {
  "lineno": 1242,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_roundtrip": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_temporary_table": {
  "lineno": 1643,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal",
   "sqlalchemy.ext.declarative.declarative_base",
   "sqlalchemy.orm.session",
   "sqlalchemy.orm.session.add",
   "sqlalchemy.orm.session.connection",
   "sqlalchemy.orm.session.flush",
   "sqlalchemy.orm.session.sessionmaker",
   "sqlalchemy.orm.session.transaction",
   "sqlalchemy.select"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_temporary_table.Temporary": {
  "lineno": 1648,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.Unicode"
  ],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_append": {
  "lineno": 1204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_empty": {
  "lineno": 1195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_fail": {
  "lineno": 1198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_replace": {
  "lineno": 1201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_to_sql_save_index": {
  "lineno": 1515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemy.test_transactions": {
  "lineno": 1518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemyConn": {
  "lineno": 1669,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLAlchemyConn.test_transactions": {
  "lineno": 1671,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLApi.setup_method": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_categorical": {
  "lineno": 828,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_chunksize_read": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.read_sql_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_complex": {
  "lineno": 676,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_date_and_index": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_date_parsing": {
  "lineno": 610,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.Timestamp",
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_escaped_table_name": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_execute_sql": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas.io.sql.execute",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema": {
  "lineno": 770,
  "symbols_in_volume": [
   "pandas.io.sql.get_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema_dtypes": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.get_schema",
   "sqlalchemy.Integer"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_get_schema_keys": {
  "lineno": 782,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.get_schema"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_integer_col_names": {
  "lineno": 765,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_multiindex_roundtrip": {
  "lineno": 756,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.io.sql.read_sql_query",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_read_sql_iris": {
  "lineno": 515,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_read_sql_view": {
  "lineno": 520,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_roundtrip": {
  "lineno": 582,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_roundtrip_chunksize": {
  "lineno": 596,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_timedelta": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.io.sql.read_sql_query",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql": {
  "lineno": 525,
  "symbols_in_volume": [
   "pandas.io.sql.has_table",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_append": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.io.sql.has_table",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_fail": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.io.sql.has_table",
   "pandas.io.sql.to_sql",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_index_label": {
  "lineno": 681,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_index_label_multiindex": {
  "lineno": 721,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.compat.range",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_panel": {
  "lineno": 576,
  "symbols_in_volume": [
   "pandas.io.sql.to_sql",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_replace": {
  "lineno": 537,
  "symbols_in_volume": [
   "pandas.io.sql.has_table",
   "pandas.io.sql.to_sql"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_series": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.io.sql.read_sql_query",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_to_sql_type_mapping": {
  "lineno": 564,
  "symbols_in_volume": [
   "pandas.io.sql.read_sql",
   "pandas.io.sql.to_sql",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLApi.test_unicode_column_name": {
  "lineno": 842,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy": {
  "lineno": 1676,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.connect": {
  "lineno": 1683,
  "symbols_in_volume": [
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.setup_driver": {
  "lineno": 1687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_bigint_warning": {
  "lineno": 1713,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.sql.read_sql_table",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_default_date_load": {
  "lineno": 1707,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._TestSQLiteAlchemy.test_default_type_conversion": {
  "lineno": 1692,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "pandas.io.sql.read_sql_table"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql._skip_if_no_pymysql": {
  "lineno": 2125,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.format_query": {
  "lineno": 2101,
  "symbols_in_volume": [
   "pandas.io.sql",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_sql.tquery": {
  "lineno": 2116,
  "symbols_in_volume": [
   "pandas.io.sql.execute"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.io.test_stata.TestStata": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.io.test_stata.TestStata.read_csv": {
  "lineno": 105,
  "symbols_in_volume": [
   "pandas.io.parsers.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.read_dta": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.setup_method": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_105": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int16",
   "numpy.int8",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.read_stata",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_big_dates": {
  "lineno": 734,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.object",
   "pandas._libs.tslib.NaT",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_bool_uint": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint8",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_order": {
  "lineno": 924,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "pandas.Categorical.from_codes",
   "pandas.Series",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.frame.DataFrame.from_items",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_ordering": {
  "lineno": 980,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.io.stata.read_stata",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_sorting": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical.from_codes",
   "pandas.Series",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_warnings_and_errors": {
  "lineno": 881,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.concat",
   "pandas.util.testing.ensure_clean",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_with_stata_missing_values": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame.from_records",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_categorical_writing": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.core.frame.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_data_method": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.io.stata.StataReader",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_date_export_formats": {
  "lineno": 591,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_date_parsing_ignores_format_details": {
  "lineno": 1333,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_dates_invalid_column": {
  "lineno": 564,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.InvalidColumnName",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_default_date_conversion": {
  "lineno": 1177,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_drop_column": {
  "lineno": 812,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_dtype_conversion": {
  "lineno": 787,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_encoding": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.string_types",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_excessively_long_string": {
  "lineno": 678,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_invalid_encoding": {
  "lineno": 1289,
  "symbols_in_volume": [
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_iterator": {
  "lineno": 1037,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_large_value_conversion": {
  "lineno": 545,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.io.stata.PossiblePrecisionLoss",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_minimal_size_col": {
  "lineno": 660,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.io.stata.StataReader",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_missing_value_conversion": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandas.compat.iterkeys",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.StataMissingValue",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_missing_value_generator": {
  "lineno": 689,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.StataMissingValue",
   "pandas.io.stata.StataReader",
   "pandas.util.testing.ensure_clean",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_nan_to_missing_value": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.nan",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_no_index": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_numeric_column_names": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.InvalidColumnName",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_out_of_range_double": {
  "lineno": 1243,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo",
   "numpy.inf",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_out_of_range_float": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_path_pathlib": {
  "lineno": 1296,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_pathlib"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_pickle_path_localpath": {
  "lineno": 1303,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.round_trip_localpath"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_115": {
  "lineno": 1064,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_117": {
  "lineno": 994,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_chunks_columns": {
  "lineno": 1109,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta1": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta12": {
  "lineno": 258,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta18": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "pandas.core.frame.DataFrame.from_records",
   "pandas.io.stata.StataReader",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta2": {
  "lineno": 145,
  "symbols_in_volume": [
   "datetime.datetime",
   "distutils.version.LooseVersion",
   "pandas.NaT",
   "pandas.core.frame.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal",
   "pytest.skip",
   "sys.version",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta3": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int16",
   "numpy.int8",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_dta4": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.core.frame.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_empty_dta": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta10": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.int32",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta11": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.compat.u",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta12": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta13": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_dta5": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_reread_dta14": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_read_write_reread_dta15": {
  "lineno": 465,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_repeated_column_labels": {
  "lineno": 1224,
  "symbols_in_volume": [
   "pandas.io.stata.read_stata",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_set_index": {
  "lineno": 1324,
  "symbols_in_volume": [
   "pandas.read_stata",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_stata_111": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.io.stata.read_stata",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_stata_doc_examples": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_string_no_dates": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.core.frame.DataFrame",
   "pandas.core.frame.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_timestamp_and_label": {
  "lineno": 483,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.frame.DataFrame",
   "pandas.io.stata.StataReader",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_unsupported_datetype": {
  "lineno": 1204,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_unsupported_type": {
  "lineno": 1197,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_value_labels_iterator": {
  "lineno": 1310,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_stata",
   "pandas.util.testing.ensure_clean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_variable_labels": {
  "lineno": 647,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.io.stata.StataReader"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_dta6": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_missing_strings": {
  "lineno": 613,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_preserves_original": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_variable_label_errors": {
  "lineno": 1150,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.ensure_clean",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.TestStata.test_write_variable_labels": {
  "lineno": 1125,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.io.stata.StataReader",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.dirpath": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.util.testing.get_data_path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.io.test_stata.parsed_114": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.stata.read_stata",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.plotting.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.common.TestPlotBase": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_ax_scales": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_axes_shape": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.plotting._tools._flatten",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_box_return_type": {
  "lineno": 416,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas.Series",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_colors": {
  "lineno": 183,
  "symbols_in_volume": [
   "matplotlib.collections.Collection",
   "matplotlib.collections.LineCollection",
   "matplotlib.collections.PolyCollection",
   "matplotlib.lines.Line2D",
   "numpy.ndarray",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_data": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_data.check_line": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_grid_settings": {
  "lineno": 474,
  "symbols_in_volume": [
   "matplotlib.rc"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_grid_settings.is_grid_on": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_has_errorbars": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_legend_labels": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_text_labels": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.dtypes.api.is_list_like"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_ticks_props": {
  "lineno": 265,
  "symbols_in_volume": [
   "matplotlib.ticker.NullFormatter",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._check_visible": {
  "lineno": 157,
  "symbols_in_volume": [
   "matplotlib.collections.Collection",
   "pandas.core.dtypes.api.is_list_like"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._flatten_visible": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.plotting._tools._flatten"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._get_axes_layout": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._get_colors_mapped": {
  "lineno": 176,
  "symbols_in_volume": [
   "matplotlib.colors",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase._maybe_unpack_cycler": {
  "lineno": 516,
  "symbols_in_volume": [
   "matplotlib.colors"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.colorconverter": {
  "lineno": 107,
  "symbols_in_volume": [
   "matplotlib.colors.colorConverter",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.plt": {
  "lineno": 102,
  "symbols_in_volume": [
   "matplotlib.pyplot",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.setup_method": {
  "lineno": 48,
  "symbols_in_volume": [
   "matplotlib.rcdefaults",
   "numpy.arange",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.random.randint",
   "numpy.random.uniform",
   "os.pardir",
   "os.path.dirname",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.plotting._compat._mpl_ge_1_3_1",
   "pandas.plotting._compat._mpl_ge_1_4_0",
   "pandas.plotting._compat._mpl_ge_1_5_0",
   "pandas.plotting._compat._mpl_ge_2_0_0",
   "pandas.plotting._compat._mpl_ge_2_0_1",
   "pandas.plotting._compat._mpl_le_1_2_1",
   "pandas.read_csv",
   "pandas.util.testing.RNGContext",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.TestPlotBase.teardown_method": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common._check_plot_works": {
  "lineno": 531,
  "symbols_in_volume": [
   "matplotlib.pyplot.clf",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.savefig",
   "pandas.util.testing.assert_is_valid_plot_return_object",
   "pandas.util.testing.close",
   "pandas.util.testing.ensure_clean",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common._ok_for_gaussian_kde": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.plotting._compat._mpl_ge_1_5_0"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.common.curpath": {
  "lineno": 565,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.split"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_boxplot_legacy1": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_boxplot_legacy2": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_boxplot_legacy3": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_fontsize": {
  "lineno": 393,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_layout": {
  "lineno": 277,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_multiple_axes": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_box_return_type": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFrameGroupByPlots.test_grouped_plot_fignums": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.normal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.RNGContext",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_axis_limits": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_axis_limits._check_ax_limits": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_empty_column": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_legacy1": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.plotting._core.boxplot",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_legacy2": {
  "lineno": 62,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_return_type_legacy": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_boxplot_return_type_none": {
  "lineno": 96,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_figsize": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method.TestDataFramePlots.test_fontsize": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_boxplot_method._skip_if_mpl_14_or_dev_boxplot": {
  "lineno": 25,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.setup_method": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.tseries.converter.DatetimeConverter",
   "pandas.tseries.converter.TimeFormatter"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion": {
  "lineno": 153,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.array",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion_float": {
  "lineno": 205,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.tseries.converter.dates.date2num",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_conversion_outofbounds_datetime": {
  "lineno": 220,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.converter.dates.date2num",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_convert_accepts_unicode": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_convert_nested": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_dateindex_conversion": {
  "lineno": 241,
  "symbols_in_volume": [
   "pandas.tseries.converter.dates.date2num",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_resolution": {
  "lineno": 250,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Second"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_resolution._assert_less": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestDateTimeConverter.test_time_formatter": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.setup_method": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.tseries.converter.PeriodConverter"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.setup_method.Axis": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_conversion": {
  "lineno": 289,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.Period",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_convert_accepts_unicode": {
  "lineno": 284,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_convert_nested": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestPeriodConverter.test_integer_passthrough": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_matplotlib_formatters": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.core.config.option_context",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_old_import_warns": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.tseries.converter.register",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_option_no_warning": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.config.option_context",
   "pandas.date_range",
   "pandas.plotting.register_matplotlib_converters",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_pandas_plots_register": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_register_by_default": {
  "lineno": 24,
  "symbols_in_volume": [
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_registering_no_warning": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.plotting.register_matplotlib_converters",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_registry_resets": {
  "lineno": 107,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.plotting.deregister_matplotlib_converters",
   "pandas.plotting.register_matplotlib_converters",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.TestRegistration.test_warns": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_converter.test_timtetonum_accepts_unicode": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.setup_method": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.period_range",
   "pandas.tests.plotting.common.TestPlotBase.setup_method"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.teardown_method": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_ax_plot": {
  "lineno": 1209,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_axis_limits": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_axis_limits._test": {
  "lineno": 334,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_both_style_and_color": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_business_freq": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.makePeriodSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_business_freq_convert": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.N",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_dataframe": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_fake_inferred_business": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_annual": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.period_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_daily": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.bdate_range",
   "pandas.core.indexes.period.Period",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_hourly": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.Period"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_minutely": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.Period",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_monthly": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.period_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_monthly_long": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_finder_quarterly": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.period_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_fontsize_set_correctly": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_format_date_axis": {
  "lineno": 1199,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_format_timedelta_ticks_narrow": {
  "lineno": 1328,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.is_platform_mac",
   "pandas.compat.zip",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_format_timedelta_ticks_wide": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.is_platform_mac",
   "pandas.compat.zip",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_frame_inferred": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.DatetimeIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_from_resampling_area_line_mixed": {
  "lineno": 916,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.random.rand",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_from_weekly_resampling": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.plotting.tsplot",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_gap_upsample": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing._skip_if_mpl_1_5",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_gaps": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.ma.core.MaskedArray",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing._skip_if_mpl_1_5",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_get_datevalue": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.core.indexes.period.Period",
   "pandas.plotting._converter.get_datevalue"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_get_finder": {
  "lineno": 378,
  "symbols_in_volume": [
   "pandas.plotting._converter._annual_finder",
   "pandas.plotting._converter._daily_finder",
   "pandas.plotting._converter._monthly_finder",
   "pandas.plotting._converter._quarterly_finder",
   "pandas.plotting._converter.get_finder"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_high_freq": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_hist": {
  "lineno": 1412,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_irreg_dtypes": {
  "lineno": 1014,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_irreg_hf": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.fabs",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_irregular_datetime64_repr_bug": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_irregular_ts_shared_ax_xlim": {
  "lineno": 1236,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_is_error_nozeroindex": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_line_plot_datetime_frame": {
  "lineno": 204,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_line_plot_datetime_series": {
  "lineno": 194,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_line_plot_inferred_freq": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Index",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_line_plot_period_frame": {
  "lineno": 199,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_line_plot_period_series": {
  "lineno": 189,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_alignment": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_hf_first": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_irreg_period": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_irregular_first": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_irregular_first_df": {
  "lineno": 737,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_lf_first": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_regular_first": {
  "lineno": 687,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_regular_first_df": {
  "lineno": 720,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_second_millisecond": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mixed_freq_shared_ax": {
  "lineno": 812,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_mpl_nopandas": {
  "lineno": 1217,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_nat_handling": {
  "lineno": 847,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_nonnumeric_exclude": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_nonzero_base": {
  "lineno": 314,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_overlapping_datetime": {
  "lineno": 1421,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_plot_multiple_inferred_freq": {
  "lineno": 236,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.Index",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_plot_offset_freq": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_plot_outofbounds_datetime": {
  "lineno": 1319,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_bar": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_bar_frame": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_frame": {
  "lineno": 669,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_kde": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_legend": {
  "lineno": 1107,
  "symbols_in_volume": [
   "pandas.util.testing.makeDataFrame",
   "pandas.util.testing.makeTimeDataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_upsample": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y_irregular_ts_xlim": {
  "lineno": 1302,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y_mixed_freq_ts_xlim": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y_non_ts_xlim": {
  "lineno": 1252,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y_regular_ts_xlim": {
  "lineno": 1269,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_secondary_y_ts": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_time": {
  "lineno": 1028,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "datetime.timedelta",
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_time_musec": {
  "lineno": 1064,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "datetime.timedelta",
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_timedelta_plot": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_to_weekly_resampling": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.plotting.tsplot",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_ts_plot_format_coord": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.plotting.tsplot",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_ts_plot_format_coord.check_format_of_first_point": {
  "lineno": 157,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_ts_plot_with_tz": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_tsplot": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.tseries.plotting.tsplot",
   "pandas.util.testing.makeTimeSeries",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike.TestTSPlot.test_uhf": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.plotting._converter._from_ordinal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_datetimelike._check_plot_works": {
  "lineno": 1439,
  "symbols_in_volume": [
   "matplotlib.pyplot.clf",
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.savefig",
   "pandas.compat.PY3",
   "pandas.tseries.offsets.DateOffset",
   "pandas.util.testing.ensure_clean",
   "pickle.dump"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_boxplot_deprecated": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tools.plotting.boxplot",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_plot_params": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.plot_params",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_radviz_deprecated": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.tools.plotting.radviz",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_deprecated.TestDeprecatedNameSpace.test_scatter_plot_legacy": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.scatter_matrix",
   "pandas.tools.plotting.scatter_matrix",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots._check_bar_alignment": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots._check_box_coord": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots._compare_stacked_y_cood": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.compat.zip",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.setup_method": {
  "lineno": 32,
  "symbols_in_volume": [
   "matplotlib.rcdefaults",
   "numpy.arange",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pandas.tests.plotting.common.TestPlotBase.setup_method",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_all_invalid_plot_data": {
  "lineno": 2141,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_allow_cmap": {
  "lineno": 2219,
  "symbols_in_volume": [
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_area_colors": {
  "lineno": 1858,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "matplotlib.collections.PolyCollection",
   "numpy.linspace",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_area_lim": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_align_single_column": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_barwidth": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_barwidth_position": {
  "lineno": 906,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_barwidth_position_int": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_bottom_left": {
  "lineno": 942,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_categorical": {
  "lineno": 989,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_center": {
  "lineno": 1221,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_colors": {
  "lineno": 797,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "matplotlib.pyplot.rcParams",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_edge": {
  "lineno": 1247,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_linewidth": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_log_no_subplots": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_log_subplots": {
  "lineno": 1286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_nan": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_stacked_center": {
  "lineno": 1212,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_subplots_center": {
  "lineno": 1229,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_bar_user_colors": {
  "lineno": 833,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot": {
  "lineno": 1298,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.compat.PY3",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot_colors": {
  "lineno": 2038,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot_colors._check_colors": {
  "lineno": 2040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot_return_type": {
  "lineno": 1364,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot_subplots_return_type": {
  "lineno": 1384,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_boxplot_vertical": {
  "lineno": 1336,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_color_and_style_arguments": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_color_empty_string": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_color_single_series_list": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_default_color_cycle": {
  "lineno": 2103,
  "symbols_in_volume": [
   "cycler.cycler",
   "matplotlib.pyplot.rcParams",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_grid_settings": {
  "lineno": 2801,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.plotting._core._dataframe_kinds",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_gridspec_patterns": {
  "lineno": 2678,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_gridspec_patterns._get_boxed_grid": {
  "lineno": 2762,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.pyplot.figure"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_gridspec_patterns._get_horizontal_grid": {
  "lineno": 2697,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.pyplot.figure"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_gridspec_patterns._get_vertical_grid": {
  "lineno": 2690,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.pyplot.figure"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_legend_labels": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_df_subplots_patterns_minorticks": {
  "lineno": 2633,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_donot_overwrite_index_name": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_dont_modify_colors": {
  "lineno": 1774,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_asymmetrical": {
  "lineno": 2419,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.close",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_plot": {
  "lineno": 2283,
  "symbols_in_volume": [
   "itertools.repeat",
   "numpy.arange",
   "numpy.ones",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_scatter": {
  "lineno": 2456,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.tests.plotting.common._check_plot_works"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_scatter._check_errorbar_color": {
  "lineno": 2473,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.dtypes.api.is_list_like"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_timeseries": {
  "lineno": 2387,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_with_integer_column_names": {
  "lineno": 2354,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_errorbar_with_partial_columns": {
  "lineno": 2364,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hexbin_basic": {
  "lineno": 2174,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hexbin_cmap": {
  "lineno": 2200,
  "symbols_in_volume": [
   "matplotlib.cm",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hexbin_with_c": {
  "lineno": 2190,
  "symbols_in_volume": [
   "numpy.std",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hist_colors": {
  "lineno": 1918,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hist_df": {
  "lineno": 1436,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_hist_df_coord": {
  "lineno": 1496,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.repeat",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_implicit_label": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_invalid_colormap": {
  "lineno": 2808,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_invalid_kind": {
  "lineno": 2169,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_kde_colors": {
  "lineno": 1952,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_kde_colors_and_styles_subplots": {
  "lineno": 1977,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.compat.zip",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_kde_df": {
  "lineno": 1401,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.io.formats.printing.pprint_thing",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_kde_missing_vals": {
  "lineno": 1425,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_kind_both_ways": {
  "lineno": 2130,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_legend_name": {
  "lineno": 1661,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_area_nan_df": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.delete",
   "numpy.float64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_area_stacked": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.RNGContext",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_colors": {
  "lineno": 1722,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.compat.zip",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.capture_stdout",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_colors_and_styles_subplots": {
  "lineno": 1780,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.compat.zip",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_label_none": {
  "lineno": 1713,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_line_lim": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_logscales": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_memory_leak": {
  "lineno": 2601,
  "symbols_in_volume": [
   "gc.collect",
   "pandas.plotting._core._plot_klass.keys",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pandas.util.testing.close",
   "pytest.raises",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_mpl2_color_cycle_str": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_negative_log": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_no_color_bar": {
  "lineno": 2212,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_no_legend": {
  "lineno": 1685,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_nonnumeric_exclude": {
  "lineno": 185,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_partially_invalid_plot_data": {
  "lineno": 2149,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pandas.util.testing.RNGContext",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_passed_bar_colors": {
  "lineno": 2843,
  "symbols_in_volume": [
   "matplotlib.colors.ListedColormap",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_period_compat": {
  "lineno": 278,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.bdate_range",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_pie_df": {
  "lineno": 2229,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_pie_df_nan": {
  "lineno": 2264,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plain_axes": {
  "lineno": 2814,
  "symbols_in_volume": [
   "mpl_toolkits.axes_grid1.inset_locator.inset_axes",
   "mpl_toolkits.axes_grid1.make_axes_locatable",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.compat.u",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_bar": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_int_columns": {
  "lineno": 1587,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_scatter": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_scatter_with_c": {
  "lineno": 1051,
  "symbols_in_volume": [
   "matplotlib.cm",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_scatter_with_categorical_data": {
  "lineno": 1033,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_plot_xy": {
  "lineno": 204,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_rcParams_bar_colors": {
  "lineno": 2850,
  "symbols_in_volume": [
   "matplotlib.cycler",
   "matplotlib.rc_context",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_rgb_tuple_color": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_scatter_colors": {
  "lineno": 1105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_secondary_axis_font_size": {
  "lineno": 2862,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_sharex_and_ax": {
  "lineno": 2498,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.gcf",
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_sharex_and_ax._check": {
  "lineno": 2512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_sharey_and_ax": {
  "lineno": 2550,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf",
   "pandas.DataFrame",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_sharey_and_ax._check": {
  "lineno": 2564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_style_by_column": {
  "lineno": 1697,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.io.formats.printing.pprint_thing",
   "pytest.mark.slow",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_dup_columns": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_layout": {
  "lineno": 482,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_multiple_axes": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises",
   "string.ascii_letters",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_sharex_axes_existing_axes": {
  "lineno": 630,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_timeseries": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_timeseries_y_axis": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.to_datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_timeseries_y_axis_not_supported": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.to_datetime",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_ts_share_axes": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_subplots_warnings": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.mark.slow",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_table": {
  "lineno": 2445,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.plotting.table",
   "pandas.tests.plotting.common._check_plot_works",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_unordered_ts": {
  "lineno": 2118,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_unsorted_index": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_unsorted_index_lims": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame.TestDataFramePlots.test_xcompat": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.plotting.plot_params",
   "pandas.plotting.plot_params.use",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_frame._generate_4_axes_via_gridspec": {
  "lineno": 2880,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.pyplot.subplot"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_hist_single_row": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plot_kwargs": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plot_submethod_works": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_plotting_with_float_index_works": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_groupby.TestDataFrameGroupByPlots.test_series_groupby_plotting_nominally_works": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.normal",
   "pandas.Series",
   "pandas.util.testing.RNGContext",
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_x": {
  "lineno": 389,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_xy": {
  "lineno": 416,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_axis_share_y": {
  "lineno": 403,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_layout": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_legacy": {
  "lineno": 256,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.plotting._core.grouped_hist",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_legacy2": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.normal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.RNGContext",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFrameGroupByPlots.test_grouped_hist_multiple_axes": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_hist_df_legacy": {
  "lineno": 146,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_hist_layout": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestDataFramePlots.test_tight_layout": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.setup_method": {
  "lineno": 22,
  "symbols_in_volume": [
   "matplotlib.rcdefaults",
   "pandas.tests.plotting.common.TestPlotBase.setup_method",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_bins_legacy": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_by_no_extra_plots": {
  "lineno": 128,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_layout": {
  "lineno": 60,
  "symbols_in_volume": [
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_layout_with_by": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_legacy": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_hist_no_overlap": {
  "lineno": 115,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.subplot",
   "numpy.random.randn",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_hist_method.TestSeriesPlots.test_plot_fails_when_ax_differs_from_figure": {
  "lineno": 134,
  "symbols_in_volume": [
   "pylab.figure",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_andrews_curves": {
  "lineno": 91,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.plotting.andrews_curves",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_get_standard_colors_random_seed": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.plotting._style._get_standard_colors",
   "pandas.plotting.parallel_coordinates"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_parallel_coordinates": {
  "lineno": 156,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.plotting.parallel_coordinates",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_parallel_coordinates_with_sorted_labels": {
  "lineno": 204,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.plotting.parallel_coordinates",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_radviz": {
  "lineno": 224,
  "symbols_in_volume": [
   "matplotlib.cm.jet",
   "numpy.linspace",
   "pandas.DataFrame",
   "pandas.compat.lmap",
   "pandas.plotting.radviz",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_scatter_matrix_axis": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.plotting.scatter_matrix",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.RNGContext",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestDataFramePlots.test_subplot_titles": {
  "lineno": 262,
  "symbols_in_volume": [
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.setup_method": {
  "lineno": 23,
  "symbols_in_volume": [
   "matplotlib.rcdefaults",
   "pandas.tests.plotting.common.TestPlotBase.setup_method",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_autocorrelation_plot": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.plotting.autocorrelation_plot",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_bootstrap_plot": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.plotting.bootstrap_plot",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_misc.TestSeriesPlots.test_lag_plot": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.plotting.lag_plot",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_mpl"
  ],
  "type": "module"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.tests.plotting.common.TestPlotBase"
  ],
  "type": "class"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.setup_method": {
  "lineno": 29,
  "symbols_in_volume": [
   "matplotlib.rcdefaults",
   "pandas.tests.plotting.common.TestPlotBase.setup_method",
   "pandas.util.testing.makePeriodSeries",
   "pandas.util.testing.makeStringSeries",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_bar_ignore_index": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_bar_log": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_bar_user_colors": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_boxplot_series": {
  "lineno": 688,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_custom_business_day_freq": {
  "lineno": 893,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.compat.range",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tseries.offsets.CustomBusinessDay"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_df_series_secondary_legend": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_dont_modify_rcParams": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_dup_datetime_index_plot": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_errorbar_plot": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_bins_legacy": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_df_kwargs": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_df_with_nonnumerics": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.RNGContext",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kde": {
  "lineno": 592,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kde_color": {
  "lineno": 668,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_kwargs": {
  "lineno": 650,
  "symbols_in_volume": [
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_layout": {
  "lineno": 415,
  "symbols_in_volume": [
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_layout_with_by": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_legacy": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.close",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_no_overlap": {
  "lineno": 468,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.subplot",
   "numpy.random.randn",
   "pandas.Series",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_hist_secondary_legend": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.close",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_invalid_kind": {
  "lineno": 737,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_invalid_plot_data": {
  "lineno": 710,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_irregular_datetime": {
  "lineno": 282,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kde_kwargs": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kde_missing_vals": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.uniform",
   "pandas.Series",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._skip_if_no_scipy_gaussian_kde",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_kind_both_ways": {
  "lineno": 698,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.plotting._core._common_kinds",
   "pandas.plotting._core._series_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_label": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_line_area_nan_series": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.delete",
   "numpy.float64",
   "numpy.nan",
   "pandas.Series",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_line_use_index_false": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_partially_invalid_plot_data": {
  "lineno": 728,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_pie_nan": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_pie_series": {
  "lineno": 302,
  "symbols_in_volume": [
   "itertools.cycle",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.Series",
   "pandas.tests.plotting.common._check_plot_works",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot_fails_with_dupe_color_and_style": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_plot_figsize_and_title": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_rotation": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_series_grid_settings": {
  "lineno": 798,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.plotting._core._common_kinds",
   "pandas.plotting._core._series_kinds",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_series_plot_color_kwargs": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_standard_colors": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.plotting._style._get_standard_colors",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_standard_colors_all": {
  "lineno": 822,
  "symbols_in_volume": [
   "matplotlib.colors.ColorConverter.colors",
   "matplotlib.colors.cnames",
   "pandas.plotting._style._get_standard_colors",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_table": {
  "lineno": 794,
  "symbols_in_volume": [
   "pandas.tests.plotting.common._check_plot_works"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_time_series_plot_color_kwargs": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_time_series_plot_color_with_empty_kwargs": {
  "lineno": 868,
  "symbols_in_volume": [
   "matplotlib.rcParams",
   "numpy.arange",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_ts_area_lim": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_ts_line_lim": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_unsorted_index_xlim": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_valid_object_plot": {
  "lineno": 720,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.plotting._core._common_kinds",
   "pandas.tests.plotting.common._check_plot_works",
   "pandas.tests.plotting.common._ok_for_gaussian_kde",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.plotting.test_series.TestSeriesPlots.test_xticklabels": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_concat.ConcatenateBase": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.ConcatenateBase.setup_method": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.getSeriesData"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_different_columns": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_dtype_coerce": {
  "lineno": 822,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_length0_frame": {
  "lineno": 760,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_many": {
  "lineno": 797,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_missing_column_proper_upcast": {
  "lineno": 849,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_preserve_index_name": {
  "lineno": 811,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestAppend.test_append_records": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon._check_expected_dtype": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.setup_method": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_3elem_coercion": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_coercion": {
  "lineno": 483,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_coercion_nan": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_empty": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_multi_coercion": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concat_categorical_ordered": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_common_coerce_to_pandas_object": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_common_period": {
  "lineno": 378,
  "symbols_in_volume": [
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_common_period_diff_freq_to_object": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_common_period_mixed_dt_to_object": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_datetimetz": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_datetimetz_short": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_datetimetz_to_object": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_dtypes_coercion": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_concatlike_same_dtypes": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatAppendCommon.test_dtypes": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_NaT_series": {
  "lineno": 1668,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_bug_1719": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_bug_2972": {
  "lineno": 1555,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_bug_3602": {
  "lineno": 1565,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_categoricalindex": {
  "lineno": 1930,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_copy": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_dataframe_keys_bug": {
  "lineno": 942,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_datetime64_block": {
  "lineno": 1508,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_dict": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_empty_series": {
  "lineno": 1835,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_exclude_none": {
  "lineno": 1500,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_ignore_index": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_inner_join_empty": {
  "lineno": 1581,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_invalid": {
  "lineno": 1637,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_invalid_first_argument": {
  "lineno": 1644,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.concat",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeCustomDataframe",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables": {
  "lineno": 1601,
  "symbols_in_volume": [
   "collections.deque",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables.CustomIterator1": {
  "lineno": 1616,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables.CustomIterator1.__getitem__": {
  "lineno": 1621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables.CustomIterator1.__len__": {
  "lineno": 1618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables.CustomIterator2": {
  "lineno": 1629,
  "symbols_in_volume": [
   "collections.Iterable"
  ],
  "type": "class"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_iterables.CustomIterator2.__iter__": {
  "lineno": 1631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_keys_and_levels": {
  "lineno": 1075,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_keys_levels_no_overlap": {
  "lineno": 1111,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_keys_specific_levels": {
  "lineno": 930,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_keys_with_none": {
  "lineno": 1530,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_mixed_objs": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_multiindex_dfs_with_deepcopy": {
  "lineno": 1909,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_multiindex_rangeindex": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.RangeIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_multiindex_with_keys": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_multiindex_with_none_in_index_names": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_multiindex_with_tz": {
  "lineno": 1030,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_order": {
  "lineno": 1951,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY2",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_period_series": {
  "lineno": 1797,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_rename_index": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_series": {
  "lineno": 1437,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.repeat",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_series_axis1": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_series_axis1_same_names_ignore_index": {
  "lineno": 1591,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Index",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_series_partial_columns_names": {
  "lineno": 953,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_single_with_key": {
  "lineno": 1493,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_timedelta64_block": {
  "lineno": 1519,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_tz_frame": {
  "lineno": 1702,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_tz_series": {
  "lineno": 1711,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_tz_series_tzlocal": {
  "lineno": 1786,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_tz_series_with_datetimelike": {
  "lineno": 1773,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_concat_with_group_keys": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.r_",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_crossed_dtypes_weird_corner": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_default_index": {
  "lineno": 1858,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_dtype_coerceion": {
  "lineno": 1328,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_dups_index": {
  "lineno": 1166,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_empty_dtype_coerce": {
  "lineno": 1314,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_handle_empty_objects": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel4d_concat": {
  "lineno": 1404,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel4d_concat_mixed_type": {
  "lineno": 1420,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel_concat_buglet": {
  "lineno": 1377,
  "symbols_in_volume": [
   "pandas.concat",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel_concat_buglet.make_panel": {
  "lineno": 1380,
  "symbols_in_volume": [
   "pandas.Panel"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel_concat_buglet.make_panel.df": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_panel_concat_other_axes": {
  "lineno": 1349,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.TestConcatenate.test_with_mixed_tuples": {
  "lineno": 1208,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.test_concat_empty_and_non_empty_frame_regression": {
  "lineno": 1988,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.test_concat_empty_and_non_empty_series_regression": {
  "lineno": 1997,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.test_concat_no_unnecessary_upcast": {
  "lineno": 1963,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.nan",
   "numpy.sctypes",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_concat.test_concat_will_upcast": {
  "lineno": 1976,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.nan",
   "numpy.sctypes",
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series",
   "pandas.concat",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pandas.tests.reshape.test_join.TestJoin": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_join.TestJoin.setup_method": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.tests.reshape.test_merge.N",
   "pandas.tests.reshape.test_merge.NGROUPS",
   "pandas.tests.reshape.test_merge.get_test_data",
   "pandas.util.testing.getMixedTypeDict"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_cython_inner_join": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.join.inner_join",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_cython_left_outer_join": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.join.left_outer_join",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_cython_right_outer_join": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas._libs.join.left_outer_join",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_full_outer_join": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_handle_overlap": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_handle_overlap_arbitrary_key": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_inner_join": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_dups": {
  "lineno": 616,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_empty_bug": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_float64_float32": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_hierarchical_mixed": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_index_mixed": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool_",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_inner_multiindex": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_many": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_many._check_diff_index": {
  "lineno": 589,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_many_mixed": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_many_non_unique_index": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.repeat",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_mixed_non_unique_index": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_multiindex": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_non_unique_period_index": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_fails_with_different_column_counts": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.makeCustomIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_fails_with_different_left_index": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.makeCustomIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_fails_with_different_right_index": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.makeCustomIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_fails_with_wrong_object_type": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.merge",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_inner": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_pass_vector": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_series": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_series_buglet": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_on_singlekey_list": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_sort": {
  "lineno": 519,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_unconsolidated": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_join_with_len0": {
  "lineno": 250,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_left_outer_join": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_mixed_type_join_with_suffix": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_panel_join": {
  "lineno": 645,
  "symbols_in_volume": [
   "pandas.util.testing.add_nans",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_panel_join_many": {
  "lineno": 698,
  "symbols_in_volume": [
   "pandas.Panel.from_dict",
   "pandas.util.testing.K",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_panel_join_overlap": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas.util.testing.add_nans",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join.TestJoin.test_right_outer_join": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join._assert_all_na": {
  "lineno": 796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_join._assert_same_contents": {
  "lineno": 785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_join._check_join": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_join._join_by_hand": {
  "lineno": 803,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_join._restrict_to_columns": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_merge.TestMerge": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMerge.setup_method": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_handle_join_key_pass_array": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_index_and_on_parameters_confusion": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_indicator": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_intelligently_handle_join_key": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_join_append_timedeltas": {
  "lineno": 465,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "datetime.datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_left_merge_empty_dataframe": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_common": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_copy": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.reshape.merge.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_different_column_key_names": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_index_singlekey_inner": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_index_singlekey_right_vs_left": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_inner_join_empty": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_join_key_dtype_cast": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_empty_right_empty": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_empty_right_notempty": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_empty_right_notempty.check1": {
  "lineno": 341,
  "symbols_in_volume": [
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_empty_right_notempty.check2": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_notempty_right_empty": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_notempty_right_empty.check1": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_left_notempty_right_empty.check2": {
  "lineno": 391,
  "symbols_in_volume": [
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_misspecified": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_nan_right": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_nocopy": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.reshape.merge.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_non_unique_index_many_to_many": {
  "lineno": 281,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_non_unique_indexes": {
  "lineno": 260,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_non_unique_period_index": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.core.reshape.concat.concat",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_nosort": {
  "lineno": 404,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randint",
   "numpy.random.random",
   "pandas.DataFrame.from_dict",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_on_datetime64tz": {
  "lineno": 555,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.date_range",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_on_periods": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.merge",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_overlap": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_two_empty_df_no_division_error": {
  "lineno": 864,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_type": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_type.NotADataFrame": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_merge_type.NotADataFrame._constructor": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_no_overlap_more_informative_error": {
  "lineno": 253,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.core.reshape.merge.merge",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_other_datetime_unit": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_other_timedelta_unit": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_overlapping_columns_error_message": {
  "lineno": 533,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMerge.test_validation": {
  "lineno": 740,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical": {
  "lineno": 1436,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_basic": {
  "lineno": 1448,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.merge",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_dtype_on_categorical_dates": {
  "lineno": 1521,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_dtype_on_merged_different": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.merge",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_identical": {
  "lineno": 1438,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.merge",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_merging_with_bool_or_int_cateorical_column": {
  "lineno": 1555,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_other_columns": {
  "lineno": 1459,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.merge",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeCategorical.test_self_join_multiple_categories": {
  "lineno": 1498,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeDtypes": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMergeDtypes.test_different": {
  "lineno": 1374,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.merge"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeDtypes.test_join_multi_dtypes": {
  "lineno": 1385,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.nan",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti": {
  "lineno": 883,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.setup_method": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_compress_group_combinations": {
  "lineno": 995,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_join_multi_levels": {
  "lineno": 1215,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.reshape.concat.concat",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_join_multi_levels.f": {
  "lineno": 1287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_join_multi_levels2": {
  "lineno": 1291,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_join_multi_levels2.f": {
  "lineno": 1356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_index_multi_match": {
  "lineno": 1127,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_index_multi_match_multiindex": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_index_preserve_order": {
  "lineno": 1011,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_multi_index": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.choice",
   "numpy.random.permutation",
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_multi_index.bind_cols": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_join_multi_index.run_asserts": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_left_merge_na_buglet": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_merge_na_keys": {
  "lineno": 1187,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_merge_on_multikey": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.lzip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeMulti.test_merge_right_vs_left": {
  "lineno": 982,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.TestMergeOnIndexes": {
  "lineno": 1590,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge.TestMergeOnIndexes.test_merge_on_indexes": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge._check_merge": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.df": {
  "lineno": 1361,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.get_test_data": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.tile",
   "pandas.compat.lrange",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.left": {
  "lineno": 1418,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.left_df": {
  "lineno": 1580,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.right": {
  "lineno": 1428,
  "symbols_in_volume": [
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge.right_df": {
  "lineno": 1585,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.read_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pandas.to_datetime",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.setup_method": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches": {
  "lineno": 638,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_and_tolerance": {
  "lineno": 679,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_and_tolerance2": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_and_tolerance3": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_and_tolerance_forward": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_and_tolerance_nearest": {
  "lineno": 757,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_forward": {
  "lineno": 647,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_allow_exact_matches_nearest": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic2": {
  "lineno": 407,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_categorical": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_left_by_right_by": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_left_index": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_left_index_right_index": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_no_by": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_basic_right_index": {
  "lineno": 175,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_by_int": {
  "lineno": 811,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_examples1": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_examples2": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_examples3": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_examples4": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_forward_by": {
  "lineno": 773,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_index_tolerance": {
  "lineno": 625,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_merge_datatype_error": {
  "lineno": 977,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_missing_right_by": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_multi_index": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_multiby": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_multiby_heterogeneous_types": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_multiby_indexed": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_nearest_by": {
  "lineno": 792,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_non_sorted": {
  "lineno": 528,
  "symbols_in_volume": [
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_on_and_index": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_on_float": {
  "lineno": 851,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_on_float_by_int": {
  "lineno": 947,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_on_specialized_type": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_on_specialized_type_by_int": {
  "lineno": 910,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.nan",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_tolerance": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_tolerance_forward": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_tolerance_nearest": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_tolerance_tz": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Timedelta",
   "pandas.merge_asof",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_valid_allow_exact_matches": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_valid_join_keys": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_valid_tolerance": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.core.reshape.merge.MergeError",
   "pandas.merge_asof",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_with_duplicates": {
  "lineno": 451,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_asof.TestAsOfMerge.test_with_duplicates_no_on": {
  "lineno": 461,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.merge_asof",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.setup_method": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_basic": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_ordered",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_deprecation": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.ordered_merge",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_empty_sequence_concat": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_ffill": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.merge_ordered",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_merge_type": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_merge_type.NotADataFrame": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_merge_type.NotADataFrame._constructor": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_merge_ordered.TestOrderedMerge.test_multigroup": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.merge_ordered",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.setup_method": {
  "lineno": 1054,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_dropna": {
  "lineno": 1209,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.MultiIndex.from_tuples",
   "pandas.crosstab",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_dup_index_names": {
  "lineno": 1519,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_errors": {
  "lineno": 1437,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.crosstab",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_margins": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_margins_set_margin_name": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_multiple": {
  "lineno": 1076,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_ndarray": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_no_overlap": {
  "lineno": 1224,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_non_aligned": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_normalize": {
  "lineno": 1320,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_pass_values": {
  "lineno": 1194,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_single": {
  "lineno": 1070,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.core.reshape.pivot.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_with_categorial_columns": {
  "lineno": 1462,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_with_empties": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_crosstab_with_numpy_size": {
  "lineno": 1484,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.randn",
   "numpy.size",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestCrosstab.test_margin_dropna": {
  "lineno": 1235,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.crosstab",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual": {
  "lineno": 1530,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_daily": {
  "lineno": 1535,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.tseries.util.isleapyear",
   "pandas.tseries.util.pivot_annual",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_hourly": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pandas.date_range",
   "pandas.tseries.util.isleapyear",
   "pandas.tseries.util.pivot_annual",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_isleapyear_deprecate": {
  "lineno": 1622,
  "symbols_in_volume": [
   "pandas.tseries.util.isleapyear",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_monthly": {
  "lineno": 1598,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.tseries.util.pivot_annual",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_period_daily": {
  "lineno": 1616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_period_monthly": {
  "lineno": 1613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_period_weekly": {
  "lineno": 1619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_pivot_margins_name_unicode": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotAnnual.test_weekly": {
  "lineno": 1595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.setup_method": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_categorical_aggfunc": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_categorical_margins": {
  "lineno": 935,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_categorical_margins_category": {
  "lineno": 950,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_categorical_pivot_index_ordering": {
  "lineno": 987,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Int64Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins._check_output": {
  "lineno": 358,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_dtype": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_dtype_len": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_no_values_no_cols": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_no_values_one_row_one_col": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_no_values_two_row_two_cols": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_margins_no_values_two_rows": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pass_array": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pass_function": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_columns_lexsorted": {
  "lineno": 530,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "numpy.dtype",
   "numpy.empty",
   "numpy.random.lognormal",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_complex_aggfunc": {
  "lineno": 575,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_datetime_tz": {
  "lineno": 791,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mean",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_dtaccessor": {
  "lineno": 839,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_dtypes": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_index_with_nan": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_integer_columns": {
  "lineno": 500,
  "symbols_in_volume": [
   "datetime.date.min",
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.compat.product",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_multi_functions": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "pandas.concat",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_multi_values": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_no_level_overlap": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_no_values": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Grouper",
   "pandas.MultiIndex.from_tuples",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_periods": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_preserve_dtypes": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.float64",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_dropna": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_dropna_categoricals": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_margins_name_with_aggfunc_list": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_multiple": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_nocols": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_not_series": {
  "lineno": 1013,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_with_iterator_values": {
  "lineno": 894,
  "symbols_in_volume": [
   "pandas.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_table_with_margins_set_margin_name": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandas.core.reshape.pivot.pivot_table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_timegrouper": {
  "lineno": 631,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.nan",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.reshape.pivot.pivot_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_pivot.TestPivotTable.test_pivot_with_tz": {
  "lineno": 280,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.setup_method": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_basic": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_basic_drop_first": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_basic_drop_first_NA": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_basic_drop_first_one_level": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_basic_types": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_all_obj": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first_with_categorical": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first_with_na": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_mix_default": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_bad_length": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.get_dummies",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_dict": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_list": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_sep": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_sep_bad_length": {
  "lineno": 428,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.get_dummies",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_str": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_preserve_categorical_dtype": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint8",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_subset": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_with_categorical": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_dataframe_dummies_with_na": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_include_na": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_int_df": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_int_int": {
  "lineno": 595,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.get_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_just_na": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.core.reshape.reshape.get_dummies"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummies.test_unicode": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.util.testing.assert_frame_equal",
   "unicodedata.lookup"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummiesSparse": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestGetDummiesSparse.test_include_na": {
  "lineno": 646,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestLreshape": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestLreshape.test_pairs": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.reshape.reshape.lreshape",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMakeAxisDummies": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestMakeAxisDummies.test_preserve_categorical_dtype": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.core.reshape.reshape.make_axis_dummies",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.setup_method": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_col_level": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_custom_value_name": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_custom_var_and_value_name": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_custom_var_name": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_default_col_names": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_method_signatures": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.melt",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_multiindex": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_top_level_method": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.core.reshape.reshape.melt"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_tuple_vars_fail_with_multiindex": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_value_vars": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_value_vars_types": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestMelt.test_vars_work_with_multiindex": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_character_overlap": {
  "lineno": 861,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_escapable_characters": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_invalid_separator": {
  "lineno": 888,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_invalid_suffixtype": {
  "lineno": 940,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_multiple_id_columns": {
  "lineno": 964,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_non_unique_idvars": {
  "lineno": 984,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_num_string_disambiguation": {
  "lineno": 912,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_separating_character": {
  "lineno": 785,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_simple": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_stubs": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.wide_to_long"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_reshape.TestWideToLong.test_unbalanced": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.reshape.reshape.wide_to_long",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_tile.TestCut": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_arraylike": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_bins": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_bins_from_intervalindex": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "pandas.Categorical.from_codes",
   "pandas.IntervalIndex.from_tuples",
   "pandas.cut",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_bins_not_monotonic": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.cut",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_corner": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.cut",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_out_of_bounds": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.cut",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_out_of_range_more": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.cut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_pass_labels": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.cut",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_pass_series_name_to_factor": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.cut"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_cut_return_intervals": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.cut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_datetime_bin": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.Interval",
   "pandas.IntervalIndex.from_intervals",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.api.types.CategoricalDtype",
   "pandas.cut",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_datetime_cut": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.DatetimeIndex",
   "pandas.Interval",
   "pandas.IntervalIndex.from_intervals",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.api.types.CategoricalDtype",
   "pandas.cut",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_datetime_nan": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.cut",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_datetime_nan.f": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.cut",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_inf_handling": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.cut",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_label_precision": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_labels": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_na_handling": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.nan",
   "numpy.where",
   "pandas.cut",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_noright": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.randn",
   "pandas.core.algorithms.quantile",
   "pandas.cut",
   "pandas.qcut",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_all_bins_same": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.qcut",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_binning_issues": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.unique",
   "os.path.join",
   "pandas.compat.zip",
   "pandas.qcut",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_bounds": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.unique",
   "pandas.qcut"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_duplicates_bin": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex.from_intervals",
   "pandas.qcut",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_include_lowest": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Interval",
   "pandas.IntervalIndex.from_intervals",
   "pandas.qcut",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_index": {
  "lineno": 250,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Interval",
   "pandas.qcut",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_nas": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.isna",
   "pandas.qcut"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_return_intervals": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Interval",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.qcut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_qcut_specify_quantiles": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.qcut",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_right": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.IntervalIndex.from_breaks",
   "pandas.cut",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_round_frac": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.reshape.tile._round_frac",
   "pandas.cut"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_series_retbins": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.cut",
   "pandas.qcut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_simple": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "pandas.cut",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_single_bin": {
  "lineno": 405,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.cut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_single_quantile": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.IntervalIndex",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.qcut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.TestCut.test_wrong_num_labels": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas.cut",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_tile.curpath": {
  "lineno": 513,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.split"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categorical": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categorical_same_category": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categorical_unwrap": {
  "lineno": 318,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_empty": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_ignore_order": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_nan": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_ordered": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_sort": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_union_categoricals.TestUnionCategoricals.test_union_categoricals_sort_false": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.concat.union_categoricals",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.reshape.test_util.TestCartesianProduct": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.reshape.test_util.TestCartesianProduct.test_datetimeindex": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_util.TestCartesianProduct.test_empty": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_util.TestCartesianProduct.test_invalid_input": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.core.reshape.util.cartesian_product",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.reshape.test_util.TestCartesianProduct.test_simple": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_interval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_interval.TestInterval": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_comparison": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_contains": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_equal": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.Interval"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_hash": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_add": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_div": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_mult": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_math_sub": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.Interval",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_properties": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.TestInterval.test_repr": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.Interval"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_interval.interval": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.Interval",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_nat.test_NaT_docstrings": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.compat.callable"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_NaT_methods": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.NaT",
   "pandas.NaT.isoformat",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_equality": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.isna",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_identity": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.isna",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_isoformat": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_arithmetic": {
  "lineno": 217,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pytest.raises",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_arithmetic_index": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_fields": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_pinned_docstrings": {
  "lineno": 302,
  "symbols_in_volume": [
   "datetime.datetime.ctime.__doc__",
   "pandas.NaT.ctime.__doc__"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_nat_vector_field_access": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._bool_ops",
   "pandas.DatetimeIndex._field_ops",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_nat.test_round_nat": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_period.TestComparisons": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestComparisons.setup_method": {
  "lineno": 926,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_equal": {
  "lineno": 933,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_equal_Raises_Value": {
  "lineno": 936,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greaterEqual": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greaterEqual_Raises_Value": {
  "lineno": 958,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater_Raises_Type": {
  "lineno": 951,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_greater_Raises_Value": {
  "lineno": 947,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_notEqual": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_period_nat_comp": {
  "lineno": 992,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual_Raises_Type": {
  "lineno": 972,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smallerEqual_Raises_Value": {
  "lineno": 968,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller_Raises_Type": {
  "lineno": 983,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_smaller_Raises_Value": {
  "lineno": 979,
  "symbols_in_volume": [
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestComparisons.test_sort": {
  "lineno": 987,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add": {
  "lineno": 1011,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_offset": {
  "lineno": 1052,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Period",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_offset_nat": {
  "lineno": 1181,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Period",
   "pandas._libs.tslib.NaT",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_pdnat": {
  "lineno": 1017,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_add_raises": {
  "lineno": 1026,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_nat_ops": {
  "lineno": 1385,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_period_ops_offset": {
  "lineno": 1394,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub": {
  "lineno": 1041,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_offset": {
  "lineno": 1278,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Period",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_offset_nat": {
  "lineno": 1338,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Period",
   "pandas._libs.tslib.NaT",
   "pandas.offsets.Day",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.MonthBegin",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearBegin",
   "pandas.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestMethods.test_sub_pdnat": {
  "lineno": 1268,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodField": {
  "lineno": 914,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestPeriodField.test_get_period_field_array_raises_on_out_of_range": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas._libs.period.get_period_field_arr",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodField.test_get_period_field_raises_on_out_of_range": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas._libs.period.get_period_field",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_anchor_week_end_time": {
  "lineno": 694,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_anchor_week_end_time._ex": {
  "lineno": 695,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_badinput": {
  "lineno": 888,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.tslibs.parsing.DateParseError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction": {
  "lineno": 282,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.now",
   "pandas.Period",
   "pandas.Period.now",
   "pandas.compat.numpy.np_datetime64_compat",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_bday": {
  "lineno": 341,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_month": {
  "lineno": 395,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.Period",
   "pandas.compat.numpy.np_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_construction_quarter": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_constructor_corner": {
  "lineno": 848,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.NaT",
   "pandas.Period",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_constructor_infer_freq": {
  "lineno": 866,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_end_time": {
  "lineno": 648,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_end_time._ex": {
  "lineno": 651,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_freq_str": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.offsets.Minute"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_hash": {
  "lineno": 530,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_is_leap_year": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_microsecond_repr": {
  "lineno": 559,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_millisecond_repr": {
  "lineno": 554,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_multiples": {
  "lineno": 893,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_annual": {
  "lineno": 68,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Period",
   "pandas.tseries.frequencies.MONTHS"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_combined": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_mult": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.offsets.MonthEnd",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_nat": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_quarterly": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies.MONTHS"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_cons_weekly": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies.DAYS"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_constructor_offsets": {
  "lineno": 424,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.Period",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.offsets.BDay",
   "pandas.offsets.BusinessDay",
   "pandas.offsets.Day",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.QuarterEnd",
   "pandas.offsets.YearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_deprecated_freq": {
  "lineno": 505,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.compat.iteritems",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_period_from_ordinal": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Period._from_ordinal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_pnow": {
  "lineno": 841,
  "symbols_in_volume": [
   "pandas._libs.period.pnow",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_annually": {
  "lineno": 702,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_daily": {
  "lineno": 764,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_hourly": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_minutely": {
  "lineno": 807,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_monthly": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_quarterly": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_secondly": {
  "lineno": 823,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_weekly": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_properties_weekly_legacy": {
  "lineno": 747,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_quarterly_negative_ordinals": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_repr": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_repr_nat": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.tslib.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_round_trip": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_start_time": {
  "lineno": 639,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_strftime": {
  "lineno": 564,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.compat.text_type"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_sub_delta": {
  "lineno": 570,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.period.IncompatibleFrequency",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_mult": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timestamp",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg_dateutil": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timestamp",
   "pandas._libs.tslibs.timezones.dateutil_gettz",
   "pandas._libs.tslibs.timezones.maybe_get_tz"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_timestamp_tz_arg_dateutil_from_string": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas._libs.tslibs.timezones.dateutil_gettz"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_to_timestamp": {
  "lineno": 578,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.TestPeriodProperties.test_to_timestamp._ex": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period.test_period_immutable": {
  "lineno": 1412,
  "symbols_in_volume": [
   "pandas.Period",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_MS": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies._period_code_map.get",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_combined": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_corner": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_asfreq_mult": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.offsets.MonthEnd",
   "pandas.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_annual": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_business": {
  "lineno": 319,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_daily": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_hourly": {
  "lineno": 438,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_minutely": {
  "lineno": 491,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_monthly": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_quarterly": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_secondly": {
  "lineno": 544,
  "symbols_in_volume": [
   "pandas.Period"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_weekly": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_period_asfreq.TestFreqConversion.test_conv_weekly_legacy": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.setup_method": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_apply_to_timedelta": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_arithmetic_overflow": {
  "lineno": 622,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_components": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_construction": {
  "lineno": 21,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.offsets.Hour",
   "pandas.offsets.Second",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_contains": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.offsets.Hour",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_conversion": {
  "lineno": 196,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_fields": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.to_timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_fields.check": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_freq_conversion": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_full_format_converters": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_full_format_converters.conv": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_identity": {
  "lineno": 451,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_implementation_limits": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "pandas.Timedelta",
   "pandas.Timedelta.max",
   "pandas.Timedelta.min",
   "pandas._libs.tslib.NaT",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_isoformat": {
  "lineno": 659,
  "symbols_in_volume": [
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_nat_converters": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas._libs.tslib.iNaT",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_nat_converters.testit": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_numeric_conversions": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_ops_error_str": {
  "lineno": 693,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_overflow": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_overflow_on_construction": {
  "lineno": 164,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timedelta",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_pickle": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_repr": {
  "lineno": 185,
  "symbols_in_volume": [
   "pandas.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_round": {
  "lineno": 358,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_short_format_converters": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_short_format_converters.conv": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_arithmetic": {
  "lineno": 600,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_conversions": {
  "lineno": 350,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.core.tools.timedeltas._coerce_scalar_to_timedelta_type"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_timedelta_hash_equality": {
  "lineno": 556,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timedelta",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timedelta.TestTimedeltas.test_total_seconds_scalar": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Timedelta",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_dti_slicing": {
  "lineno": 1449,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_frame_setitem_timestamp": {
  "lineno": 1420,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_box_timestamp": {
  "lineno": 1408,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_map_box_timestamps": {
  "lineno": 1437,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_series_map_box_timestamps.f": {
  "lineno": 1441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_compare_with_early_datetime": {
  "lineno": 1375,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.min",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_date_out_of_range": {
  "lineno": 1344,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_equality": {
  "lineno": 1390,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_fields": {
  "lineno": 1328,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_from_ordinal": {
  "lineno": 1362,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.Timestamp.fromordinal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_repr": {
  "lineno": 1352,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime": {
  "lineno": 1292,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_dateutil": {
  "lineno": 1300,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_explicit_dateutil": {
  "lineno": 1317,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones.dateutil_gettz",
   "pandas.date_range",
   "pandas.util.testing._skip_if_windows_python_3"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_timestamp_to_datetime_explicit_pytz": {
  "lineno": 1308,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_to_html_timestamp": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimeSeries.test_woy_boundary": {
  "lineno": 1464,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_asm8": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.random.seed",
   "pandas.Timestamp",
   "pandas.Timestamp.max.value",
   "pandas.Timestamp.min.value"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_barely_oob_dts": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.Timestamp",
   "pandas.Timestamp.max",
   "pandas.Timestamp.min",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_basics_nanos": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_bounds_with_different_units": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware": {
  "lineno": 904,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware_dateutil": {
  "lineno": 946,
  "symbols_in_volume": [
   "dateutil.tz.tzutc",
   "pandas.Timestamp",
   "pytest.raises",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_cant_compare_tz_naive_w_aware_explicit_pytz": {
  "lineno": 925,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises",
   "pytz.utc",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_dateutil": {
  "lineno": 729,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.datetime.combine",
   "datetime.datetime.fromtimestamp",
   "datetime.datetime.now",
   "datetime.datetime.today",
   "datetime.datetime.utcfromtimestamp",
   "datetime.datetime.utcnow",
   "datetime.timedelta",
   "dateutil.tz.tzutc",
   "pandas.Timestamp.combine",
   "pandas.Timestamp.fromtimestamp",
   "pandas.Timestamp.now",
   "pandas.Timestamp.today",
   "pandas.Timestamp.utcfromtimestamp",
   "pandas.Timestamp.utcnow"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_dateutil.compare": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_pytz": {
  "lineno": 709,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.datetime.combine",
   "datetime.datetime.fromtimestamp",
   "datetime.datetime.now",
   "datetime.datetime.today",
   "datetime.datetime.utcfromtimestamp",
   "datetime.datetime.utcnow",
   "datetime.timedelta",
   "pandas.Timestamp.combine",
   "pandas.Timestamp.fromtimestamp",
   "pandas.Timestamp.now",
   "pandas.Timestamp.today",
   "pandas.Timestamp.utcfromtimestamp",
   "pandas.Timestamp.utcnow",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_class_ops_pytz.compare": {
  "lineno": 710,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_compare_invalid": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.long",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_comparison": {
  "lineno": 845,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor": {
  "lineno": 33,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.datetime",
   "dateutil.tz.tzoffset",
   "pandas.Timestamp",
   "pandas._libs.tslib.pydt_to_i8",
   "pytz.FixedOffset",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_fromordinal": {
  "lineno": 217,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.Timestamp.fromordinal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_invalid": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_keyword": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_offset_depr": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_offset_depr_fromordinal": {
  "lineno": 244,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.Timestamp.fromordinal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_positional": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_constructor_with_stringoffset": {
  "lineno": 88,
  "symbols_in_volume": [
   "calendar.timegm",
   "datetime.datetime",
   "dateutil.tz.tzoffset",
   "pandas.Timestamp",
   "pandas._libs.tslib.pydt_to_i8",
   "pytz.FixedOffset",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_conversion": {
  "lineno": 259,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_delta_preserve_nanos": {
  "lineno": 967,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timestamp",
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_fields": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_fields.check": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_frequency_misc": {
  "lineno": 972,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.FreqGroup.FR_HR",
   "pandas.tseries.frequencies.FreqGroup.FR_MIN",
   "pandas.tseries.frequencies.get_freq_code",
   "pandas.tseries.frequencies.get_freq_group",
   "pandas.tseries.frequencies.get_standard_freq",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_hash_equivalent": {
  "lineno": 1001,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_is_leap_year": {
  "lineno": 1066,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_now": {
  "lineno": 461,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.Timestamp.now"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_pprint": {
  "lineno": 566,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_repr": {
  "lineno": 274,
  "symbols_in_volume": [
   "dateutil.__version__",
   "distutils.version.LooseVersion",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round": {
  "lineno": 605,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round_misc": {
  "lineno": 693,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_round_misc._check_round": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_roundtrip": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_timestamp": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.Timestamp.now",
   "pandas.compat.PY3",
   "pandas.util.testing.set_timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_timestamp_compare_scalars": {
  "lineno": 1006,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "operator",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_timestamp_compare_series": {
  "lineno": 1031,
  "symbols_in_volume": [
   "operator",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_today": {
  "lineno": 479,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.Timestamp.today"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_convert_roundtrip": {
  "lineno": 428,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_ambiguous": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_errors_ambiguous": {
  "lineno": 407,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises",
   "pytz.exceptions.AmbiguousTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_nonexistent": {
  "lineno": 393,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pytest.raises",
   "pytz.exceptions.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_tz_localize_roundtrip": {
  "lineno": 413,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_unit": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.compat.PY3",
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_unit.check": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_utc_z_designator": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas._libs.tslibs.timezones.get_timezone"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.test_weekday_name": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.to_datetime_depr": {
  "lineno": 585,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestamp.to_pydatetime_nonzero_nano": {
  "lineno": 595,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.assert_ns_timedelta": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.setup_method": {
  "lineno": 1107,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_nanosecond_string_parsing": {
  "lineno": 1132,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_nanosecond_timestamp": {
  "lineno": 1157,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ms_arithmetic": {
  "lineno": 1128,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ns_arithmetic": {
  "lineno": 1116,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_ns_based_arithmetic": {
  "lineno": 1120,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampNsOperations.test_timedelta_us_arithmetic": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_addition_subtraction_preserve_frequency": {
  "lineno": 1234,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_addition_subtraction_types": {
  "lineno": 1209,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_resolution": {
  "lineno": 1250,
  "symbols_in_volume": [
   "pandas._libs.period.resolution",
   "pandas.date_range",
   "pandas.tseries.frequencies.RESO_DAY",
   "pandas.tseries.frequencies.RESO_HR",
   "pandas.tseries.frequencies.RESO_MIN",
   "pandas.tseries.frequencies.RESO_MS",
   "pandas.tseries.frequencies.RESO_SEC",
   "pandas.tseries.frequencies.RESO_US"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_timestamp_and_datetime": {
  "lineno": 1194,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampOps.test_timestamp_and_series": {
  "lineno": 1200,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_1700": {
  "lineno": 1269,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_2000": {
  "lineno": 1273,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_2100": {
  "lineno": 1277,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_hour01": {
  "lineno": 1281,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTimestampToJulianDate.test_compare_hour13": {
  "lineno": 1285,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil": {
  "lineno": 1497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_max_valid": {
  "lineno": 1503,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.Timestamp.max"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_min_valid": {
  "lineno": 1499,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.Timestamp.min"
  ],
  "type": "function"
 },
 "pandas.tests.scalar.test_timestamp.TestTsUtil.test_to_datetime_bijective": {
  "lineno": 1507,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.Timestamp.max.nanosecond",
   "pandas.Timestamp.max.to_pydatetime",
   "pandas.Timestamp.max.value",
   "pandas.Timestamp.min.nanosecond",
   "pandas.Timestamp.min.to_pydatetime",
   "pandas.Timestamp.min.value",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.common": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "module"
 },
 "pandas.tests.series.common.TestData": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.common.TestData.empty": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.series.common.TestData.objSeries": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly",
   "pandas.util.testing.makeObjectSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.common.TestData.series": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly",
   "pandas.util.testing.makeStringSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.common.TestData.ts": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_axis_inplace": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_by_series": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_inplace": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name": {
  "lineno": 67,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name_inplace": {
  "lineno": 75,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reorder_levels": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index_level": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index_range": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.index.RangeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_axis_inplace": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_axis_prior_to_deprecation_signature": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_index_makes_timeseries": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name_attribute": {
  "lineno": 84,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_setindex": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest": {
  "lineno": 1742,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_error": {
  "lineno": 1744,
  "symbols_in_volume": [
   "itertools.product",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_misc": {
  "lineno": 1784,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_n": {
  "lineno": 1813,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestNLargestNSmallest.test_nsmallest_nlargest": {
  "lineno": 1762,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_accum_op": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy",
   "numpy.NaN",
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_stat_op": {
  "lineno": 504,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.compat.lrange",
   "pandas.compat.signature",
   "pandas.date_range",
   "pandas.isna",
   "pandas.notna",
   "pandas.option_context",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any": {
  "lineno": 641,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any_params": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_apply_categorical": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.integer",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort_stable": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.random.randint",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_built_in_round": {
  "lineno": 620,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip": {
  "lineno": 937,
  "symbols_in_volume": [
   "numpy.clip",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_against_list_like": {
  "lineno": 992,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_against_series": {
  "lineno": 977,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_types_and_nulls": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.isna",
   "pandas.notna",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_with_datetimes": {
  "lineno": 1004,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_with_na_args": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_compress": {
  "lineno": 577,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.isna",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeTimeSeries",
   "scipy.stats.pearsonr"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr_rank": {
  "lineno": 741,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeTimeSeries",
   "pytest.skip",
   "scipy.__version__",
   "scipy.stats.kendalltau",
   "scipy.stats.spearmanr"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_count": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.isfinite",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cov": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.maximum.accumulate",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_datetime64": {
  "lineno": 427,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_timedelta64": {
  "lineno": 468,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool": {
  "lineno": 1025,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.cumprod",
   "numpy.cumsum",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummax": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.maximum.accumulate"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummin": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.minimum.accumulate"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.minimum.accumulate",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_datetime64": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_timedelta64": {
  "lineno": 442,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumprod": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumsum": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_describe": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_dot": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.dot",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_drop_duplicates": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_empty": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.isna",
   "pandas.option_context",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_empty_timeseries_redections_return_nat": {
  "lineno": 1333,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmax": {
  "lineno": 1234,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmin": {
  "lineno": 1177,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_is_monotonic": {
  "lineno": 1426,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randint",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_is_unique": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randint",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin": {
  "lineno": 1062,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_empty": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_i8": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_string_scalar": {
  "lineno": 1081,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_kurt": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ones",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_almost_equal",
   "scipy.stats.kurtosis"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_max": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mean": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_median": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.ones",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_min": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mode": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.object",
   "numpy.typecodes",
   "numpy.uint64",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_modulo": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.errstate",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_nansum_buglet": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.nansum",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_npdiff": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmax_deprecated": {
  "lineno": 1278,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argmax",
   "pandas.Series",
   "pandas._np_version_under1p10",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmin_deprecated": {
  "lineno": 1208,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argmin",
   "pandas.Series",
   "pandas._np_version_under1p10",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_compress": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.compress",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_repeat": {
  "lineno": 1360,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_reshape": {
  "lineno": 1551,
  "symbols_in_volume": [
   "numpy.reshape",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_round": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ops_consistency_on_empty": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.isna",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod_numpy16_bug": {
  "lineno": 635,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ptp": {
  "lineno": 1303,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "numpy.ptp",
   "numpy.random.randn",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_repeat": {
  "lineno": 1343,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_2d_return_array": {
  "lineno": 1522,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.reshape",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_bad_kwarg": {
  "lineno": 1538,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_deprecate": {
  "lineno": 1504,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_non_2d": {
  "lineno": 1508,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_round": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_list": {
  "lineno": 1405,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_scalar": {
  "lineno": 1398,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted": {
  "lineno": 1369,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_scalar": {
  "lineno": 1382,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_vector": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_sorter": {
  "lineno": 1412,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.intp",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sem": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.std",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_categorical": {
  "lineno": 1485,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_int": {
  "lineno": 1479,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_skew": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing._skip_if_no_scipy",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_index_level": {
  "lineno": 1443,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_inf": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isinf",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.nanops.nansum",
   "pandas.option_context",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_overflow": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "pandas.Series",
   "pandas.option_context",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_timedelta64_analytics": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique_data_ownership": {
  "lineno": 1339,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unstack": {
  "lineno": 1564,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_not_ordered": {
  "lineno": 1701,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_ordered": {
  "lineno": 1681,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime": {
  "lineno": 1611,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime_tz": {
  "lineno": 1636,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_nunique": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_period": {
  "lineno": 1658,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_var_std": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.std",
   "numpy.var",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_analytics.s_main_dtypes": {
  "lineno": 1721,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.to_timedelta",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_api.SharedWithSparse": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_api.SharedWithSparse._assert_series_equal": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse._pickle_roundtrip": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_append_preserve_name": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_argsort_preserve_name": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_binop_maybe_preserve_name": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_combine_first_name": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_dict": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_dict_multiindex": {
  "lineno": 163,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_dict_timedelta_index": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_ordereddict": {
  "lineno": 147,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.random.random",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_ordereddict.A": {
  "lineno": 157,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_constructor_subclass_dict": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.util.testing.TestSubDict"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_copy_index_name_checking": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_copy_name": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_getitem_preserve_name": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_pickle": {
  "lineno": 105,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_scalarop_preserve_name": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_sort_index_name": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.SharedWithSparse.test_to_sparse_pass_name": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_axis_alias": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_contains": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.util.testing.assert_contains_all"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_copy": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.isnan",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_empty_method": {
  "lineno": 404,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_items": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_iter": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_iteritems": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_keys": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_ndarray_compat": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.ones_like",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_ndarray_compat.f": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_not_hashable": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_numpy_unique": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_raise_on_info": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_str_attribute": {
  "lineno": 390,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Series.str",
   "pandas.compat.range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_tab_complete_warning": {
  "lineno": 411,
  "symbols_in_volume": [
   "IPython.core.completer.provisionalcompleter",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_tab_completion": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_api.TestSeriesMisc.test_values": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_agg_apply_evaluate_lambdas_the_same": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_demo": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_multiple_aggregators_with_dict_api": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_non_callable_aggregates": {
  "lineno": 309,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_reduce": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_replicate_describe": {
  "lineno": 286,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.errstate",
   "numpy.sqrt",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform_and_agg_error": {
  "lineno": 206,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_transform_and_agg_error.f": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesAggregate.test_with_nested_series": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply": {
  "lineno": 22,
  "symbols_in_volume": [
   "math.exp",
   "numpy.errstate",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_args": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_box": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.Day",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz.f": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_dict_depr": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_dont_convert_dtype": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_same_length_inference_bug": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_with_string_args": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.getMixedTypeDict"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_box": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_categorical": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.object",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_compat": {
  "lineno": 380,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_counter": {
  "lineno": 433,
  "symbols_in_volume": [
   "collections.Counter",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.Day",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz.f": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_decimal": {
  "lineno": 404,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_defaultdict": {
  "lineno": 442,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing": {
  "lineno": 450,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing.DictWithMissing": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_with_missing.DictWithMissing.__missing__": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_without_missing": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_subclass_without_missing.DictWithoutMissing": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_with_tuple_keys": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_int": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.integer",
   "pandas.Series",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_na_exclusion": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_type_inference": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.where",
   "pandas.Series",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_all_nans": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_basic": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_errors": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_periodindex": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.date_range",
   "pandas.isna",
   "pandas.notna",
   "pandas.offsets.BDay",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_scalar": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.isnan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_asof.TestSeriesAsof.test_with_nan": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append_duplicates": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append_many": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isfinite",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.randn"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first_dt64": {
  "lineno": 205,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.NaN",
   "pandas.Series",
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.bool_",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.object_",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.float_result_type": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.get_result_type": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.int_result_type": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_update": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz_dateutil": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestTimeseries.test_append_concat_tz_explicit_pytz": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_NaT_cast": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_NaT_scalar": {
  "lineno": 780,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_auto_conversion": {
  "lineno": 806,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_construction_consistency": {
  "lineno": 588,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_construction_interval": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.object_",
   "numpy.random.randn",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.equalContents",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cant_cast_datetime64": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cast": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cast_object": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_categorical": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_categorical_dtype": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_copy": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_corner": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_datelike_coercion": {
  "lineno": 335,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_datetimes_with_nulls": {
  "lineno": 361,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_default_index": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makePeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index": {
  "lineno": 628,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.datetime64",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index.create_data": {
  "lineno": 634,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_datetime64": {
  "lineno": 369,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.datetime64",
   "numpy.nan",
   "numpy.ndarray",
   "pandas.NaT",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_nocast": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64": {
  "lineno": 708,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64.f": {
  "lineno": 761,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_empty": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_generator": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_generic_timestamp_deprecated": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_iterator": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_list_like": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_list_of_tuples": {
  "lineno": 651,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_map": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_maskedarray": {
  "lineno": 181,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ma.masked_all",
   "numpy.nan",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_hashable": {
  "lineno": 795,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.ones",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_unhashable": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_pass_nan_nat": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_pass_none": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.object_",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_periodindex": {
  "lineno": 603,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_range_dtype": {
  "lineno": 850,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_sanitize": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_series": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_set": {
  "lineno": 661,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_tuple_of_tuples": {
  "lineno": 656,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_with_datetime_tz": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.lib.infer_dtype",
   "pandas.concat",
   "pandas.core.dtypes.common.is_datetime64tz_dtype",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromDict": {
  "lineno": 667,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.float64",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.is_sorted"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromValue": {
  "lineno": 685,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.NaN",
   "numpy.float_",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_invalid_dtype": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_scalar_conversion": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.long"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_series_ctor_plus_datetimeindex": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_unordered_compare_equal": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_between": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_date_tz": {
  "lineno": 401,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_datetime_understood": {
  "lineno": 413,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.offsets.DateOffset",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_api": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.Series.dt",
   "pandas.core.indexes.accessors.CombinedDatetimelikeProperties",
   "pandas.core.indexes.accessors.DatetimeProperties",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_no_new_attributes": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.DatetimeIndex._datetimelike_ops",
   "pandas.PeriodIndex",
   "pandas.PeriodIndex._datetimelike_ops",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.TimedeltaIndex._datetimelike_ops",
   "pandas.core.common.SettingWithCopyError",
   "pandas.date_range",
   "pandas.option_context",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.compare": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_list_like",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.f": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_dir": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_expected": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.dtypes.common.is_list_like"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_strftime": {
  "lineno": 269,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.object_",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_sub_of_datetime_from_TimeSeries": {
  "lineno": 380,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.abs",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.tools.timedeltas.to_timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_valid_dt_with_missing_values": {
  "lineno": 338,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.time",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_arg_for_errors_in_astype": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int8",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_nan_inf_int": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.int32",
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_object_int": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_object_int_fail": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int8",
   "pandas.Series",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_categoricaldtype": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_categoricaldtype_with_args": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_categories_deprecation": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_datetimes": {
  "lineno": 72,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.lrange",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_dict_like": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_empty_constructor_equality": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.typecodes",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_generic_timestamp_deprecated": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_str_cast": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.compat.text_type",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_str_map": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.str_",
   "pandas.Series",
   "pandas.compat.text_type",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.rands",
   "pytest.mark.parametrize",
   "string.digits"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_unicode": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.rands",
   "string.digits",
   "sys",
   "sys.getdefaultencoding",
   "sys.setdefaultencoding"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_complex": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_dtype": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_infer_objects_series": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_intercept_astype_object": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_series_to_categorical": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing": {
  "lineno": 2583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.setup_method": {
  "lineno": 2588,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.DatetimeIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_dti_reset_index_round_trip": {
  "lineno": 2636,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.dtype",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_dti_snap": {
  "lineno": 2621,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_fancy_getitem": {
  "lineno": 2593,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas._libs.lib.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_fancy_setitem": {
  "lineno": 2609,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DatetimeIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_frame_datetime64_duplicated": {
  "lineno": 2719,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_series_set_value": {
  "lineno": 2652,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_slice_locs_indexerror": {
  "lineno": 2673,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestDatetimeIndexing.test_slicing_datetimes": {
  "lineno": 2680,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing": {
  "lineno": 2731,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.setup_method": {
  "lineno": 2733,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_nat_operations": {
  "lineno": 2752,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_round_nat": {
  "lineno": 2760,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestNatIndexing.test_set_none_nan": {
  "lineno": 2739,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.tests.series.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align": {
  "lineno": 1832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align._check_align": {
  "lineno": 1833,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method": {
  "lineno": 1875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method._check_align": {
  "lineno": 1876,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_multiindex": {
  "lineno": 1948,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_nocopy": {
  "lineno": 1910,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_same_index": {
  "lineno": 1939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_setitem_corner": {
  "lineno": 828,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_with_labels": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_indexing": {
  "lineno": 1662,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_setitem_with_labels": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_cast_on_putmask": {
  "lineno": 2264,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_datetime_indexing": {
  "lineno": 1689,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem.f": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_drop": {
  "lineno": 1779,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Float64Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get_nan": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Float64Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get_set_boolean_different_order": {
  "lineno": 1626,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_ambiguous_keyerror": {
  "lineno": 578,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.indexing.IndexingError",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty.f": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_object": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_box_float64": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_callable": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dataframe": {
  "lineno": 608,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups_with_missing": {
  "lineno": 588,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_fancy": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_generator": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_get": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.tseries.offsets.BDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_int64": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_median_slice_bug": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_negative_out_of_bounds": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.rands_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_out_of_bounds": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_regression": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_boolean_corner": {
  "lineno": 327,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetime_tz_dateutil": {
  "lineno": 388,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.tz.tzutc",
   "numpy.random.randn",
   "pandas.Series",
   "pandas._libs.tslibs.timezones.dateutil_gettz",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetime_tz_pytz": {
  "lineno": 354,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_datetimeindex": {
  "lineno": 426,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_ellipsis": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.fix",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_integers": {
  "lineno": 566,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_periodindex": {
  "lineno": 504,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_bug": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_integers": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_unordered_dup": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.dtypes.common.is_scalar"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_head_tail": {
  "lineno": 2296,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iloc": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iloc_nonunique": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_int_indexing": {
  "lineno": 1675,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_boolean": {
  "lineno": 1611,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_corner": {
  "lineno": 1620,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem": {
  "lineno": 942,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_iterator": {
  "lineno": 994,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_not_monotonic": {
  "lineno": 961,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_loc_getitem_setitem_integer_slice_keyerrors": {
  "lineno": 969,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask": {
  "lineno": 1475,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_broadcast": {
  "lineno": 1510,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.finfo",
   "numpy.float",
   "numpy.nan",
   "numpy.resize",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_inplace": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_multilevel_preserve_name": {
  "lineno": 2302,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.MultiIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_pop": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_preserveRefs": {
  "lineno": 1774,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex": {
  "lineno": 1980,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.may_share_memory",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_backfill": {
  "lineno": 2133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool": {
  "lineno": 2150,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.object_",
   "numpy.zeros",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool_pad": {
  "lineno": 2166,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.Series",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_corner": {
  "lineno": 2052,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_fill_value": {
  "lineno": 2190,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_int": {
  "lineno": 2136,
  "symbols_in_volume": [
   "numpy.float_",
   "numpy.int_",
   "numpy.zeros",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_like": {
  "lineno": 2173,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nan": {
  "lineno": 2019,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nearest": {
  "lineno": 2108,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.around",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_pad": {
  "lineno": 2067,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_series_add_nat": {
  "lineno": 2030,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.issubdtype",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_with_datetimes": {
  "lineno": 2041,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_rename": {
  "lineno": 2240,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_select": {
  "lineno": 2250,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_set_value": {
  "lineno": 801,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isnan",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeIntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_ambiguous_keyerror": {
  "lineno": 626,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_boolean": {
  "lineno": 1595,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_callable": {
  "lineno": 650,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_dtypes": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_float_labels": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_na": {
  "lineno": 1643,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_other_callable": {
  "lineno": 656,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_scalar_into_readonly_backing_data": {
  "lineno": 2315,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.Series",
   "pandas.compat.range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_slice_into_readonly_backing_data": {
  "lineno": 2328,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_with_tz": {
  "lineno": 999,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_with_tz_dst": {
  "lineno": 1040,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setslice": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_can_reorder_not_uniquely_indexed": {
  "lineno": 686,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float64": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set": {
  "lineno": 690,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set.f": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_floats2": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_take": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_timedelta_assignment": {
  "lineno": 1710,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_type_promote_putmask": {
  "lineno": 2275,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_type_promotion": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_underlying_data_conversion": {
  "lineno": 1734,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.set_option",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_array_like": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_broadcast": {
  "lineno": 1359,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.finfo",
   "numpy.float",
   "numpy.nan",
   "numpy.resize",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_datetime_conversion": {
  "lineno": 1425,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_dups": {
  "lineno": 1404,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_error": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_inplace": {
  "lineno": 1390,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_invalid_input": {
  "lineno": 1253,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_ndframe_align": {
  "lineno": 1274,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_numeric_with_string": {
  "lineno": 1570,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_raise_on_error_deprecation": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid": {
  "lineno": 1296,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid.f": {
  "lineno": 1348,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_timedelta_coerce": {
  "lineno": 1454,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_unsafe": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.range",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_unsafe.f": {
  "lineno": 1218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.setup_method": {
  "lineno": 2343,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_constructor": {
  "lineno": 2352,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_duplicate_dates_indexing": {
  "lineno": 2398,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.where",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_groupby_average_dup_values": {
  "lineno": 2438,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_index_dupes_contains": {
  "lineno": 2393,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_index_unique": {
  "lineno": 2359,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing": {
  "lineno": 2527,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_over_size_cutoff": {
  "lineno": 2443,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "datetime.datetime.timedelta",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas._libs.index._SIZE_CUTOFF",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_unordered": {
  "lineno": 2483,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.random.permutation",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.concat",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_indexing_unordered.compare": {
  "lineno": 2498,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_is_unique_monotonic": {
  "lineno": 2356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestTimeSeriesDuplicates.test_range_slice": {
  "lineno": 2424,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert": {
  "lineno": 147,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.dtype",
   "numpy.nan",
   "pandas.Series",
   "pandas._libs.lib.NaT",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_no_arg_error": {
  "lineno": 297,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects": {
  "lineno": 21,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Series",
   "pandas._libs.lib.NaT",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_all_bool": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_bool": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_all_bool": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_bool": {
  "lineno": 301,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_io.TestSeriesIO": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO._pickle_roundtrip_name": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.read_pickle",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_pickle_preserve_name": {
  "lineno": 168,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_timeseries_periodindex": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_dict": {
  "lineno": 198,
  "symbols_in_volume": [
   "collections.Counter",
   "collections.OrderedDict",
   "collections.defaultdict",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim": {
  "lineno": 180,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedFrame": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries._constructor_expanddim": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.read_csv": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_from_csv": {
  "lineno": 47,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.Series.from_csv",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_from_csv_deprecation": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.Series.from_csv",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv": {
  "lineno": 91,
  "symbols_in_volume": [
   "io.open",
   "numpy.loadtxt",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_float_format": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.ensure_clean"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_list_entries": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_path_is_none": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesToCSV.test_to_csv_unicode_index": {
  "lineno": 105,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.StringIO",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "scipy.__version__"
  ],
  "type": "module"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_all_good": {
  "lineno": 1085,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_datetime64": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit": {
  "lineno": 964,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_bad_direction": {
  "lineno": 1014,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_before_ends": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_direction": {
  "lineno": 1024,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_forward": {
  "lineno": 982,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_no_nans": {
  "lineno": 1123,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_to_ends": {
  "lineno": 1052,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_multiIndex": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_nonmono_raise": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_quad": {
  "lineno": 914,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_scipy_basic": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_timedelta64": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_unlimited": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_akima": {
  "lineno": 804,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_corners": {
  "lineno": 849,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_from_derivatives": {
  "lineno": 834,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_index_values": {
  "lineno": 863,
  "symbols_in_volume": [
   "numpy.interp",
   "numpy.nan",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.sort",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_non_ts": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_pchip": {
  "lineno": 791,
  "symbols_in_volume": [
   "numpy.random.uniform",
   "numpy.sort",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_piecewise_polynomial": {
  "lineno": 819,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_interpolate": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_irregular_index": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_str_index": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_no_order": {
  "lineno": 1130,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_series_interpolate_intraday": {
  "lineno": 1211,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_series_interpolate_method_values": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_error": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_extrapolate": {
  "lineno": 1145,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.skip_if_no_package"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_interpolation": {
  "lineno": 1164,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_smooth": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_bfill": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_fillna": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_dropna": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_fillna": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64tz_fillna_round_issue": {
  "lineno": 317,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_empty": {
  "lineno": 576,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_intervals": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.IntervalIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_no_nan": {
  "lineno": 607,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_preserve_name": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_ffill": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_ffill_mixed_dtypes_without_missing_data": {
  "lineno": 527,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fill_value_when_combine_const": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_bug": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_consistency": {
  "lineno": 283,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_downcast": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_inplace": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_int": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_invalid_method": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_nat": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_raise": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isna": {
  "lineno": 637,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isna_for_inf": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.Series",
   "pandas.option_context",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isnull_for_inf_deprecated": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pandas.Series",
   "pandas.reset_option",
   "pandas.set_option",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.capture_stdout"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_notna": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_pad_nan": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_pad_require_monotonicity": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_remove_na_deprecation": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.series.remove_na",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_series_fillna_limit": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_series_pad_backfill_limit": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_sparse_series_fillna_limit": {
  "lineno": 709,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_sparse_series_pad_backfill_limit": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta64_nan": {
  "lineno": 538,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.range",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta_fillna": {
  "lineno": 59,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_valid": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.notna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing._simple_ts": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing._skip_if_no_akima": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_missing._skip_if_no_pchip": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_arith_ops_df_compat": {
  "lineno": 1499,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_assert_idxminmax_raises": {
  "lineno": 1859,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_bool_ops_df_compat": {
  "lineno": 1558,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comp_ops_df_compat": {
  "lineno": 1528,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_different_length": {
  "lineno": 1132,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_alignment": {
  "lineno": 1263,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_alignment_fill": {
  "lineno": 1285,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_flex_basic": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_invalid": {
  "lineno": 1024,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_label_based": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_object_numeric_nas": {
  "lineno": 1012,
  "symbols_in_volume": [
   "numpy.random.randn",
   "operator",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_operators_with_nas": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.nan",
   "operator",
   "pandas.Series",
   "pandas.bdate_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_tuples": {
  "lineno": 934,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparisons": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.nanops.nangt",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_datetime64_with_index": {
  "lineno": 1816,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_div": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divide_decimal": {
  "lineno": 1800,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divmod": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divmod.check": {
  "lineno": 216,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.asarray",
   "numpy.errstate",
   "numpy.nan",
   "pandas.compat.zip",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_dti_tz_convert_to_utc": {
  "lineno": 1842,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_frame_radd_more": {
  "lineno": 1672,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_idxminmax_with_inf": {
  "lineno": 1888,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_invert": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_more_na_comparisons": {
  "lineno": 1039,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_nat_comparisons": {
  "lineno": 1060,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_nat_comparisons_scalar": {
  "lineno": 1100,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ne": {
  "lineno": 1774,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_neg": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_object_comparisons": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_duplicate_index": {
  "lineno": 1851,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.util.testing.makeFloatSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method.check": {
  "lineno": 67,
  "symbols_in_volume": [
   "operator",
   "operator.truediv",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operator_series_comparison_zerorank": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators._check_op": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check": {
  "lineno": 183,
  "symbols_in_volume": [
   "operator",
   "operator.add",
   "operator.floordiv",
   "operator.mod",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check_comparators": {
  "lineno": 205,
  "symbols_in_volume": [
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_bitwise": {
  "lineno": 1321,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.int16",
   "numpy.int32",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine": {
  "lineno": 1715,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "operator",
   "operator.div",
   "operator.truediv",
   "pandas.Series",
   "pandas.Series.div",
   "pandas.Series.rdiv",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine._check_fill": {
  "lineno": 1716,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_corner": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike": {
  "lineno": 607,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike.run_ops": {
  "lineno": 608,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_empty_int_corner": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_frame": {
  "lineno": 1702,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_na_handling": {
  "lineno": 1780,
  "symbols_in_volume": [
   "datetime.date",
   "decimal.Decimal",
   "numpy.nan",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object": {
  "lineno": 1484,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.sub",
   "operator.truediv",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object._check_op": {
  "lineno": 1488,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_timedelta64": {
  "lineno": 248,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "numpy.int64",
   "numpy.timedelta64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_datetimelike_align": {
  "lineno": 903,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_nat": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_return_dtypes_bool_op_costant": {
  "lineno": 1307,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners": {
  "lineno": 1431,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners.tester": {
  "lineno": 1434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_comparison_scalars": {
  "lineno": 33,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_frame_radd_bug": {
  "lineno": 1616,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.rands_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_radd_more": {
  "lineno": 1635,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_sub_datetime_compat": {
  "lineno": 726,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.util.testing.assert_series_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_sub_single_tz": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_conversions": {
  "lineno": 538,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.nan",
   "numpy.object_",
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops": {
  "lineno": 574,
  "symbols_in_volume": [
   "datetime.timedelta",
   "itertools.product",
   "operator.add",
   "operator.sub",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops.timedelta64": {
  "lineno": 588,
  "symbols_in_volume": [
   "itertools.starmap",
   "numpy.timedelta64",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_DateOffset": {
  "lineno": 405,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Series",
   "pandas.offsets",
   "pandas.offsets.Hour",
   "pandas.offsets.Minute",
   "pandas.offsets.Second",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_integers": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_timedeltas": {
  "lineno": 435,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Series",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta_series_ops": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedeltas_with_DateOffset": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.offsets",
   "pandas.offsets.Milli",
   "pandas.offsets.Minute",
   "pandas.offsets.Second",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.setup_method": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_align_series": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.period_range",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_auto_conversion": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_between": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_object": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_scalar": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_comp_series_period_series": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.core.indexes.period.IncompatibleFrequency",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_dropna": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_fillna": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_getitem": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_intercept_astype_object": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_isna": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_series_comparison_scalars": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period.TestSeriesPeriod.test_set_none_nan": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_period._permute": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_datetime_timedelta_quantiles": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_box": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_empty": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.percentile"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation_dtype": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_multi": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.percentile",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.indexes.datetimes.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nan": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nat": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_rank.TestSeriesRank": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.tests.series.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.permutation",
   "numpy.repeat",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_categorical": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.Series",
   "pandas.api.types.CategoricalDtype",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_dense_method": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_descending": {
  "lineno": 269,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_inf": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.random.permutation",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_int": {
  "lineno": 289,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_methods_series": {
  "lineno": 228,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.concatenate",
   "numpy.random.randn",
   "numpy.random.shuffle",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.importorskip",
   "scipy.__version__"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_object_bug": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_signature": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_tie_methods": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.compat.product"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_rank.TestSeriesRank.test_rank_tie_methods._check": {
  "lineno": 214,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.fabs",
   "numpy.inf",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas._libs.lib.NaT",
   "pandas.isna",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace2": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.fabs",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.isna",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_bool": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string": {
  "lineno": 174,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string_no_op": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_gh5319": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types.check_replace": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types_with_string": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_string_with_number": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_unicode_with_number": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_dict_with_bool_keys": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_empty_dictlike": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_single_list": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_bytestring_with_unicode": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_latex_repr": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_multilevel_name_print": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_name_printing": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.randn"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_bool_fails": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.capture_stderr",
   "sys.stderr.getvalue"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_max_rows": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_name_iterable_indexable": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_should_return_str": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_tidy_repr": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_timeseries_repr_object_dtype": {
  "lineno": 172,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_unicode_string_with_unicode": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.text_type",
   "pandas.compat.u"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_inplace": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "random.shuffle"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_intervals": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.IntervalIndex.from_arrays",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_kind": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_multiindex": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_index_na_position": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_values": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isnan",
   "numpy.random.randn",
   "numpy.sort",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sort_values.f": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_sorting.TestSeriesSorting.test_sortlevel_deprecated": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_subclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_indexing_sliced": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_to_frame": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedDataFrame",
   "pandas.util.testing.SubclassedSeries",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_addition": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.util.testing.SubclassedSparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_slice": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas.util.testing.SubclassedSparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSparseSeriesSubclassing.test_subclass_sparse_to_frame": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.SparseArray",
   "pandas.util.testing.SubclassedSparseDataFrame",
   "pandas.util.testing.SubclassedSparseSeries",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.tests.series.common.TestData"
  ],
  "type": "class"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq": {
  "lineno": 239,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_datetimeindex_empty_series": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_keep_index_name": {
  "lineno": 503,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_normalize": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_asfreq_resample_set_correct_freq": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_at_time": {
  "lineno": 601,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_autocorr": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time": {
  "lineno": 651,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.product",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time_formats": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing._skip_if_has_locale"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_between_time_types": {
  "lineno": 711,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_contiguous_boolean_preserve_freq": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_diff": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_empty_series_ops": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_first_last_valid": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_first_subset": {
  "lineno": 555,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_format_pre_1900_dates": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_from_M8_structured": {
  "lineno": 909,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.Series.from_array",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_get_level_values_box": {
  "lineno": 925,
  "symbols_in_volume": [
   "pandas.MultiIndex",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_groupby_count_dateparseerror": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_last_subset": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_min_max": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_min_max_series": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_mpl_compat_hack": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.newaxis",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pct_change": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pct_change_shift_over_nas": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_pickle": {
  "lineno": 827,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_promote_datetime_date": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_ctor_datetime64": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype",
   "numpy.issubdtype",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_map_box_timedelta": {
  "lineno": 799,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_map_box_timedelta.f": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_series_repr_nat": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.tslib.iNaT"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_setops_preserve_freq": {
  "lineno": 845,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.date_range",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makePeriodSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift2": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.date_range",
   "pandas.offsets.Hour",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_shift_dst": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_timeseries_coercion": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.util.testing.makeDateIndex"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_csv_numpy_16_bug": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_datetime_unit": {
  "lineno": 423,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.arange",
   "numpy.nan",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas._libs.tslib.iNaT",
   "pandas.concat",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_to_period": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_truncate": {
  "lineno": 189,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestTimeSeries.test_tshift": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Index",
   "pandas.Series",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makePeriodSeries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries._simple_ts": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.assert_range_equal": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.series.test_validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.series.test_validate.TestSeriesValidate": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.series.test_validate.TestSeriesValidate.test_validate_bool_args": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.series.test_validate.series": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.core.series.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_arithmetics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.SparseArray"
  ],
  "type": "class"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._assert": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_bool_result": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.bool"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_comparison_ops": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_logical_ops": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics._check_numeric_ops": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_bool_array_logical": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_bool_same_index": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array_comparison": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_array_different_kind": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_same_index": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_same_index_comparison": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_scalar": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_float_scalar_comparison": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_int_array": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_int_array_comparison": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_mixed_array_comparison": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseArrayArithmetics.test_mixed_array_float_int": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.SparseSeries"
  ],
  "type": "class"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic._assert": {
  "lineno": 423,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_arithmetics.TestSparseSeriesArithmetic.test_alignment": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_array.TestSparseArray": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.setup_method": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_astype": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_astype_all": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_bad_take": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.nan",
   "numpy.random.randn",
   "operator",
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators._check_inplace_op": {
  "lineno": 556,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_binary_operators._check_op": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_bool": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.int32",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_bool_fill_value": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.bool",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_copy": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_dtype": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_float32": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_from_sparse": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_from_too_large_array": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_object_dtype": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.fromiter",
   "numpy.isnan",
   "numpy.nan",
   "numpy.object",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_constructor_spindex_dtype": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.isnan",
   "numpy.nan",
   "pandas._libs.sparse.IntIndex",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_copy_shallow": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_copy_shallow._get_base": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_fillna": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_fillna_overlap": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_generator_warnings": {
  "lineno": 580,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_get_item": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.util.testing.assert_raises_regex",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getitem": {
  "lineno": 469,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getitem._checkit": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getslice": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_getslice_tuple": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_pickle": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_pickle._check_roundtrip": {
  "lineno": 573,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_array_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_fill_value": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item.setitem": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_set_item.setslice": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_sparseseries_roundtrip": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.isscalar",
   "numpy.take",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_fill_value": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.take",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling_all_nan": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_filling_fill_value": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_invalid_kwargs": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_take_negative": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.take",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_to_dense": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArray.test_values_asarray": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_all": {
  "lineno": 667,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_any": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_cumsum": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_mean": {
  "lineno": 840,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_all": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_any": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_cumsum": {
  "lineno": 812,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumsum",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_mean": {
  "lineno": 849,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.mean",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_numpy_sum": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.nan",
   "numpy.sum",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_sum": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_ufunc": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nan",
   "numpy.sin",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_array.TestSparseArrayAnalytics.test_ufunc_args": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.nan",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.setup_method": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_axis1": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_columns": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_fill_value": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_series": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.concat",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseDataFrameConcat.test_concat_sparse_dense": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1_different_fill": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_different_fill": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_different_kind": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_combine_concat.TestSparseSeriesConcat.test_concat_sparse_dense": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.compat.is_platform_32bit",
   "pandas.compat.is_platform_windows"
  ],
  "type": "module"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting.test_sparse_frame": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseDataFrameFormatting.test_sparse_repr_after_set": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.option_context",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.dtype_format_for_platform": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_bool": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.SparseSeries",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_int": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.SparseSeries",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_max_row": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_format.TestSparseSeriesFormatting.test_sparse_mi_max_row": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.tests.frame.test_api.SharedWithSparse",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_all": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_frame_ops": {
  "lineno": 338,
  "symbols_in_volume": [
   "operator",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.index",
   "pandas.core.sparse.frame.reindex",
   "pandas.core.sparse.frame.to_dense",
   "pandas.core.sparse.frame.xs"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame._check_frame_ops._compare_to_dense": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.setup_method": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseArray",
   "pandas.bdate_range",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_append": {
  "lineno": 584,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_apply": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum",
   "pandas.core.nanops.nansum",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_apply_nonuq": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_applymap": {
  "lineno": 638,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_array_interface": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_as_blocks": {
  "lineno": 1108,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_as_matrix": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_astype": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_astype_bool": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.int64",
   "pandas.SparseDataFrame",
   "pandas.core.sparse.api.SparseArray",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_combine_add": {
  "lineno": 1077,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_combine_first": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.SparseArray",
   "pandas._libs.sparse.IntIndex",
   "pandas.compat.iteritems",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_convert_index_once": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.lrange",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_dataframe": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_empty": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_from_series": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_nan_dataframe": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_ndarray": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_constructor_preserve_attr": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.SparseArray",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_copy": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_corr": {
  "lineno": 798,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_count": {
  "lineno": 1033,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_delitem": {
  "lineno": 559,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_dense_to_sparse": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_density": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_describe": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_dtypes": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fancy_index_misc": {
  "lineno": 460,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fill_value_when_combine_const": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fillna": {
  "lineno": 702,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_fillna_fill_value": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_getitem": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_getitem_overload": {
  "lineno": 471,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_iloc": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_class_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_isin": {
  "lineno": 1087,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_isna": {
  "lineno": 1127,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_join": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_nan_columnname": {
  "lineno": 1119,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_notna": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_numpy_transpose": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.transpose",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_op_corners": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_pickle": {
  "lineno": 284,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_pickle._test_roundtrip": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.core.sparse.frame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex._check_frame": {
  "lineno": 824,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.columns",
   "pandas.core.sparse.frame.default_fill_value",
   "pandas.core.sparse.frame.fill_value",
   "pandas.core.sparse.frame.index",
   "pandas.core.sparse.frame.reindex",
   "pandas.core.sparse.frame.to_dense",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex_fill_value": {
  "lineno": 879,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_reindex_method": {
  "lineno": 887,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_rename": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_scalar_ops": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_columns": {
  "lineno": 574,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_index": {
  "lineno": 579,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_set_value": {
  "lineno": 429,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.set_value",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem._check_frame": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.__setitem__",
   "pandas.core.sparse.frame.default_fill_value",
   "pandas.core.sparse.frame.index",
   "pandas.core.sparse.frame.sp_values",
   "pandas.core.sparse.frame.sp_values.all",
   "pandas.core.sparse.frame.to_dense",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem_array": {
  "lineno": 546,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_setitem_corner": {
  "lineno": 541,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shape": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shift": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_shift._check": {
  "lineno": 1006,
  "symbols_in_volume": [
   "pandas.core.sparse.frame.default_fill_value",
   "pandas.core.sparse.frame.default_kind",
   "pandas.core.sparse.frame.shift",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_frame_fillna_limit": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_frame_pad_backfill_limit": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_pow_issue": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_fill": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_i": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_series_ops_z": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_sparse_to_dense": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_stack_sparse_frame": {
  "lineno": 970,
  "symbols_in_volume": [
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_stack_sparse_frame._check": {
  "lineno": 973,
  "symbols_in_volume": [
   "pandas.Panel.from_dict",
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.stack_sparse_frame",
   "pandas.core.sparse.frame.to_dense",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_str": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_take": {
  "lineno": 957,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_to_dense": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_to_dense._check": {
  "lineno": 963,
  "symbols_in_volume": [
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.to_dense",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_transpose": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_transpose._check": {
  "lineno": 993,
  "symbols_in_volume": [
   "pandas.core.sparse.frame",
   "pandas.core.sparse.frame.T",
   "pandas.core.sparse.frame.T.T",
   "pandas.core.sparse.frame.T.T.to_dense",
   "pandas.core.sparse.frame.T.to_dense",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrame.test_type_coercion_at_construction": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics": {
  "lineno": 1357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.setup_method": {
  "lineno": 1358,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.bdate_range",
   "pandas.core.sparse.api.SparseDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_cumsum": {
  "lineno": 1368,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_numpy_cumsum": {
  "lineno": 1380,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.int64",
   "pandas.core.sparse.api.SparseDataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameAnalytics.test_numpy_func_call": {
  "lineno": 1393,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic.test_comparison_op_scalar": {
  "lineno": 1339,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.TestSparseDataFrameArithmetic.test_numeric_op_scalar": {
  "lineno": 1330,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_scipy_correct_ordering": {
  "lineno": 1273,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.skip_if_no_package"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_scipy_fillna": {
  "lineno": 1293,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.skip_if_no_package"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_to_scipy": {
  "lineno": 1172,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "numpy.eye",
   "numpy.nan",
   "numpy.object_",
   "numpy.uint16",
   "pandas.SparseDataFrame",
   "pandas.core.dtypes.common.is_bool_dtype",
   "pandas.core.dtypes.common.is_float",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_object_dtype",
   "pandas.util.testing.assert_contains_all",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.skip_if_no_package",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_frame.test_from_to_scipy_object": {
  "lineno": 1228,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.eye",
   "numpy.nan",
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_contains_all",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.skip_if_no_package",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.setup_method": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.test_aggfuncs": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_groupby.TestSparseGroupBy.test_first_last_nth": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.setup_method": {
  "lineno": 962,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_basic_dtypes": {
  "lineno": 978,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_indexing_multiple": {
  "lineno": 1004,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_frame_indexing_single": {
  "lineno": 990,
  "symbols_in_volume": [
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_series_indexing_multiple": {
  "lineno": 1031,
  "symbols_in_volume": [
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestMultitype.test_series_indexing_single": {
  "lineno": 1020,
  "symbols_in_volume": [
   "pandas.util.testing.assert_class_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_at": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_at_fill_value": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_getitem": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_getitem_fill_value": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iat": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iat_fill_value": {
  "lineno": 850,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iloc": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_iloc_slice": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc_index": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_frame_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_loc_slice": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_reindex": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_reindex_fill_value": {
  "lineno": 923,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_take": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseDataFrameIndexing.test_take_fill_value": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.setup_method": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_at": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_at_fill_value": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_fill_value_reindex": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_get": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_ellipsis": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_fill_value": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_int_dtype": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_slice": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_getitem_slice_fill_value": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iat": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iat_fill_value": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.util.testing.assert_sp_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_fill_value": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_slice": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_iloc_slice_fill_value": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_index": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_index_fill_value": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice": {
  "lineno": 190,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice_fill_value": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_loc_slice_index_fill_value": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex_fill_value": {
  "lineno": 400,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_reindex_nearest": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.around",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_take": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.test_take_fill_value": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesIndexing.tests_indexing_with_sparse": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "pandas.SparseArray",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_sp_array_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.setup_method": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitem_multi": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitem_multi_tuple": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_getitems_slice_multi": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc": {
  "lineno": 510,
  "symbols_in_volume": [
   "pandas.SparseArray",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc_multi_tuple": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_loc_slice": {
  "lineno": 556,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_indexing.TestSparseSeriesMultiIndexing.test_reindex": {
  "lineno": 567,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_block_internal": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_check_integrity": {
  "lineno": 442,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_equals": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_make_block_boundary": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.ones",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_to_block_index": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestBlockIndex.test_to_int_index": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_check_integrity": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.core.sparse.array.IntIndex",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_equals": {
  "lineno": 535,
  "symbols_in_volume": [
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_int_internal": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.IntIndex",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_block_index": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_block_index._check_case": {
  "lineno": 542,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestIntIndex.test_to_int_index": {
  "lineno": 555,
  "symbols_in_volume": [
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_block_internal": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_int_internal": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.IntIndex",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array._make_index"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_array": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array._make_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_basics": {
  "lineno": 368,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexCommon.test_lookup_basics._check": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.compat.is_platform_windows",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_case": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas.core.sparse.array.BlockIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_correct": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect._check_length_exc": {
  "lineno": 198,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect_empty": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexIntersect.test_intersect_identical": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.IntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_index_make_union": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_index_make_union._check_case": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.core.sparse.array.IntIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseIndexUnion.test_intindex_make_union": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "pandas.core.sparse.array.IntIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators._op_tests": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.TestSparseOperators._op_tests._check_case": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.core.sparse.array.BlockIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.check_cases": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.check_cases._check_case_dict": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.make_optestf": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_libsparse.make_optestf.f": {
  "lineno": 607,
  "symbols_in_volume": [
   "operator",
   "pandas._libs.sparse"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_list.TestSparseList": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_list.TestSparseList.setup_method": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_append_na": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_append_zero": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_consolidate": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_constructor": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_sp_list_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_copy": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseArray",
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_deprecation": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_getitem": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_list.TestSparseList.test_len": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseList",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.setup_method": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.test_pivot_table": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_pivot.TestPivotTable.test_pivot_table_multi": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_reshape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_reshape.multi_index3": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_reshape.sparse_df": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_reshape.test_sparse_frame_stack": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_reshape.test_sparse_frame_unstack": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_reshape.test_sparse_series_unstack": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.setup_method": {
  "lineno": 976,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.test_round_trip_preserve_multiindex_names": {
  "lineno": 991,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseHandlingMultiIndexes.test_to_sparse_preserve_multiindex_names_columns": {
  "lineno": 985,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.tests.series.test_api.SharedWithSparse",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries._check_all": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.setup_method": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.bdate_range",
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_abs": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_astype": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_astype_all": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pandas.Series",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_binary_operators": {
  "lineno": 609,
  "symbols_in_volume": [
   "operator",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_binary_operators._check_inplace_op": {
  "lineno": 615,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_combine_first": {
  "lineno": 961,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_construct_DataFrame_with_sp_series": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.ones",
   "pandas._libs.sparse.BlockIndex",
   "pandas._libs.sparse.IntIndex",
   "pandas.bdate_range",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor._check_const": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_dict_input": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_dtype": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_empty": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_ndarray": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_nonnan": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_preserve_attr": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.SparseArray",
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_constructor_scalar": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_copy_astype": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_dense_to_sparse": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_dropna": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.SparseArray",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fill_value_corner": {
  "lineno": 840,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fill_value_when_combine_const": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_fillna": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_get_get_value": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem": {
  "lineno": 429,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem._check_getitem": {
  "lineno": 430,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_getitem_slice": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_groupby": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_homogenize": {
  "lineno": 813,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas._libs.sparse.BlockIndex",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.frame.homogenize",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_homogenize._check_matches": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.iteritems",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.core.sparse.frame.homogenize"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_iter": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_iteration_and_str": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_kind": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_numpy_take": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.take",
   "pandas._np_version_under1p12",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators": {
  "lineno": 563,
  "symbols_in_volume": [
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators._check_op": {
  "lineno": 565,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_operators.check": {
  "lineno": 572,
  "symbols_in_volume": [
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.sub",
   "operator.truediv"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_pickle": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_pickle._test_roundtrip": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions._compare_all": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reductions._compare_with_dense": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reindex": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_reindex._compare_with_series": {
  "lineno": 658,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_repr": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_series_density": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_set_value": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_setitem": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_setslice": {
  "lineno": 557,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shape": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.bdate_range",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_dtype": {
  "lineno": 916,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_dtype_fill_value": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_shift_nan": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas._libs.sparse.IntIndex",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check": {
  "lineno": 700,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check_all": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_reindex._check_with_fill_value": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas._libs.sparse.IntIndex"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_sparse_to_dense": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.isfinite",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "numpy.repeat",
   "pandas.Series",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take._compare_with_dense": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_take._compare_with_dense._compare": {
  "lineno": 510,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_dense_fill_value": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_dense_preserve_name": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_to_frame": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeries.test_truncate": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.setup_method": {
  "lineno": 1352,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_cumsum": {
  "lineno": 1361,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_deprecated_numpy_func_call": {
  "lineno": 1402,
  "symbols_in_volume": [
   "numpy",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_deprecated_reindex_axis": {
  "lineno": 1416,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_numpy_cumsum": {
  "lineno": 1375,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.int64",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesAnalytics.test_numpy_func_call": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction._check_results_to_coo": {
  "lineno": 1129,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction._run_test": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.setup_method": {
  "lineno": 1003,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.reshape.util.cartesian_product",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat": {
  "lineno": 1140,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1_different_fill": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseDataFrame",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_different_fill": {
  "lineno": 1174,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_different_kind": {
  "lineno": 1205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_concat_sparse_dense": {
  "lineno": 1222,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.concat",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_dense_index": {
  "lineno": 1097,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries.from_coo",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_long_repr": {
  "lineno": 1108,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries.from_coo",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_from_coo_nodense_index": {
  "lineno": 1102,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries.from_coo",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_isna": {
  "lineno": 1308,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_notna": {
  "lineno": 1325,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.assert_sp_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_ilevel": {
  "lineno": 1088,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_nonnull_intersection": {
  "lineno": 1075,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_small_union": {
  "lineno": 1079,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_duplicate_index_entries": {
  "lineno": 1092,
  "symbols_in_volume": [
   "pandas.concat",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_integer_names_integer_row_levels_nosort": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_nlevels_less_than_two": {
  "lineno": 1083,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_nosort": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_sort": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort": {
  "lineno": 1069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort_col_level_single": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts": {
  "lineno": 1254,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts_dup": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.TestSparseSeriesScipyInteraction.test_value_counts_int": {
  "lineno": 1291,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series._dense_series_compare": {
  "lineno": 1343,
  "symbols_in_volume": [
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data1": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data1_zero": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data2": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series._test_data2_zero": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandas.tests.sparse.test_series.test_constructor_dict_datetime64_index": {
  "lineno": 1423,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.datetime64",
   "pandas.Timestamp",
   "pandas.core.sparse.api.SparseSeries",
   "pandas.util.testing.assert_sp_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_algos.GroupVarTestMixin": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_constant": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.zeros",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.nan.astype",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.squeeze",
   "numpy.tile",
   "numpy.zeros",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d_flat_labels": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.nan.astype",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_all_finite": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.nan.astype",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.std",
   "numpy.tile",
   "numpy.zeros",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_some_nan": {
  "lineno": 942,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.nan.astype",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.tile",
   "numpy.vstack",
   "numpy.zeros",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestDuplicated.test_datetime_likes": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "pandas.Index",
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.algorithms.duplicated",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_duplicated_with_nas": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.nan",
   "pandas.core.algorithms.duplicated",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_numeric_object_likes": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.uint64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.algorithms.duplicated",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_unique_index": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.RangeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestDuplicated.test_unique_tuples": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.unique",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestFactorize.test_basic": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "numpy.intp",
   "pandas.compat.range",
   "pandas.core.algorithms.factorize",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_complex_sorting": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._np_version_under1p11",
   "pandas.compat.range",
   "pandas.core.algorithms.factorize",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_datelike": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.DatetimeIndex",
   "pandas.Period",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.algorithms.factorize",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_factorize_nan": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.hashtable.Factorizer",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_mixed": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.intp",
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.algorithms.factorize",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_uint64_factorize": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.uint64",
   "pandas.core.algorithms.factorize",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestGroupVarFloat32": {
  "lineno": 999,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas._libs.groupby.group_var_float32"
  ],
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64": {
  "lineno": 976,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas._libs.groupby.group_var_float64"
  ],
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64.test_group_var_large_inputs": {
  "lineno": 983,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.RandomState",
   "numpy.zeros",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestHashTable.test_get_unique": {
  "lineno": 1023,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_lookup_nan": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas._libs.hashtable.Float64HashTable",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_lookup_overflow": {
  "lineno": 1016,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.uint64",
   "pandas._libs.hashtable.UInt64HashTable",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_vector_resize": {
  "lineno": 1028,
  "symbols_in_volume": [
   "pandas._libs.hashtable.Float64HashTable",
   "pandas._libs.hashtable.Float64Vector",
   "pandas._libs.hashtable.Int64HashTable",
   "pandas._libs.hashtable.Int64Vector",
   "pandas._libs.hashtable.ObjectVector",
   "pandas._libs.hashtable.PyObjectHashTable",
   "pandas._libs.hashtable.StringHashTable",
   "pandas._libs.hashtable.UInt64HashTable",
   "pandas._libs.hashtable.UInt64Vector"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestHashTable.test_vector_resize._test_vector_resize": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestIsin.test_basic": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.algorithms.isin",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_categorical_from_codes": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.core.algorithms.isin",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_empty": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.algorithms.isin",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_i8": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.isin",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_invalid": {
  "lineno": 430,
  "symbols_in_volume": [
   "pandas.core.algorithms.isin",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_large": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.core.algorithms.isin",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestMatch.test_ints": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.algorithms.match",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch.test_strings": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas.Series",
   "pandas.core.algorithms.match",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode": {
  "lineno": 1349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestMode.test_categorical": {
  "lineno": 1448,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_datelike_mode": {
  "lineno": 1410,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_index": {
  "lineno": 1464,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_mixed_dtype": {
  "lineno": 1434,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_mode_single": {
  "lineno": 1355,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.object",
   "numpy.typecodes",
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_no_mode": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_number_mode": {
  "lineno": 1378,
  "symbols_in_volume": [
   "numpy.typecodes",
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_strobj_mode": {
  "lineno": 1394,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_timedelta_mode": {
  "lineno": 1422,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestMode.test_uint64_overflow": {
  "lineno": 1439,
  "symbols_in_volume": [
   "numpy.uint64",
   "pandas.Series",
   "pandas.core.algorithms.mode",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestRank.test_basic": {
  "lineno": 1106,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.typecodes",
   "pandas.Series",
   "pandas.core.algorithms.rank",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_scipy_compat": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.util.testing._skip_if_no_scipy"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_scipy_compat._check": {
  "lineno": 1094,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isfinite",
   "numpy.nan",
   "pandas._libs.algos.rank_1d_float64",
   "pandas.util.testing.assert_almost_equal",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_too_many_ndims": {
  "lineno": 1120,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.algorithms.rank",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestRank.test_uint64_overflow": {
  "lineno": 1113,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.uint64",
   "pandas.Series",
   "pandas.core.algorithms.rank",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_backfill": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.algos.backfill_int64",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_combineFunc": {
  "lineno": 1158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_groupby": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_groupby_withnull": {
  "lineno": 1170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_isna": {
  "lineno": 1164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_pad": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.algos.pad_int64",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestTseriesUtil.test_reindex": {
  "lineno": 1161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestUnique.test_categorical": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.core.algorithms.unique",
   "pandas.unique",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_datetime64_dtype_array_returned": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.core.algorithms.unique",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_datetime64tz_aware": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.unique",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_ints": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.randint",
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_nan_in_object_array": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.unique",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_object_refcount_bug": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_objects": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.randint",
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_on_index_object": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.MultiIndex.from_arrays",
   "pandas.unique",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_order_of_appearance": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.unique",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_timedelta64_dtype_array_returned": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.algorithms.unique",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_tuple_with_strings": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.unique",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_uint64_overflow": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "pandas.Series",
   "pandas.core.algorithms.unique",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical": {
  "lineno": 607,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_nans": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_zeroes": {
  "lineno": 649,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_dropna": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.is_platform_32bit",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.core.algorithms.value_counts",
   "pandas.core.reshape.tile.cut",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_bins": {
  "lineno": 549,
  "symbols_in_volume": [
   "pandas.IntervalIndex.from_tuples",
   "pandas.Series",
   "pandas.core.algorithms.value_counts",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_datetime_outofbounds": {
  "lineno": 589,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_dtypes": {
  "lineno": 562,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.algorithms.value_counts",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_nat": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.algorithms.value_counts",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_normalized": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.nan",
   "numpy.object",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_uint64": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint64",
   "pandas.Series",
   "pandas.compat.is_platform_32bit",
   "pandas.core.algorithms.value_counts",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_arrmap": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "pandas._libs.algos.arrmap_object"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_ensure_platform_int": {
  "lineno": 1293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intp",
   "pandas._libs.algos.ensure_platform_int"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_groupsort_indexer": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.int64",
   "numpy.lexsort",
   "numpy.random.randint",
   "pandas._libs.algos.groupsort_indexer",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_infinity_sort": {
  "lineno": 1264,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.array",
   "pandas._libs.algos.Infinity",
   "pandas._libs.algos.NegInfinity"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_int64_add_overflow": {
  "lineno": 1300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.int64",
   "numpy.nan",
   "pandas.core.algorithms.checked_add_with_arr",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_is_lexsorted": {
  "lineno": 1209,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.algos.is_lexsorted"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_pad_backfill_object_segfault": {
  "lineno": 1128,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.int64",
   "pandas._libs.algos.backfill_object",
   "pandas._libs.algos.pad_object",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_quantile": {
  "lineno": 1063,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.algorithms.quantile",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_algos.test_unique_label_indices": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.unique",
   "pandas._libs.hashtable.unique_label_indices",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_base.CheckImmutable": {
  "lineno": 46,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.tests.test_base.CheckImmutable.check_mutable_error": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.check_result": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delitem": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delslice": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setitem": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setslice": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_slicing_maintains_type": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.CheckStringMixin.test_string_methods_dont_fail": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin.test_tricky_container": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.Ops": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.Ops._allow_na_ops": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.Ops.check_ops_properties": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.Ops.setup_method": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.makeBoolIndex",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.Ops.test_binary_ops_docs": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Panel",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.TestIndexOps.setup_method": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_drop_duplicates_series_vs_dataframe": {
  "lineno": 879,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_duplicated_drop_duplicates_index": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_factorize": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_factorize_repeated": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_fillna": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_memory_usage": {
  "lineno": 947,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.PYPY",
   "pandas.core.dtypes.common.is_object_dtype",
   "pytest.mark.skipif",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_nanops": {
  "lineno": 350,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Series",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ndarray_compat_properties": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_none_comparison": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ops": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_searchsorted": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_validate_bool_args": {
  "lineno": 979,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_bins": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas.Index",
   "pandas.Interval",
   "pandas.IntervalIndex.from_breaks",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_datetime64": {
  "lineno": 641,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.TimedeltaIndex",
   "pandas.compat.StringIO",
   "pandas.compat.numpy.np_array_datetime64_compat",
   "pandas.isna",
   "pandas.read_fwf",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_inferred": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "numpy.unique",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_unique_nunique": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.unique",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_unique_nunique_null": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.nan",
   "numpy.zeros",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas._libs.tslib.iNaT",
   "pandas.core.dtypes.common.is_datetimetz",
   "pandas.core.dtypes.common.needs_i8_conversion",
   "pandas.isna",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin": {
  "lineno": 1017,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.T": {
  "lineno": 1018,
  "symbols_in_volume": [
   "pandas.core.base.NoNewAttributesMixin"
  ],
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.f": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegate": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.core.accessor.PandasDelegate",
   "pandas.core.base.PandasObject"
  ],
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegate.__init__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator._get_foo": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator._set_foo": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.Delegator.bar": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.setup_method": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.f": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_memory_usage": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas.compat.PYPY",
   "pytest.mark.skipif",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable": {
  "lineno": 1038,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.compat.long"
  ],
  "type": "class"
 },
 "pandas.tests.test_base.TestToIterable.test_categorial_datetimelike": {
  "lineno": 1127,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable.test_iter_box": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pandas.Period",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable.test_iterable": {
  "lineno": 1057,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable.test_iterable_items": {
  "lineno": 1099,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable.test_iterable_map": {
  "lineno": 1112,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.long",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestToIterable.test_iterable_object_and_category": {
  "lineno": 1075,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.long",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose": {
  "lineno": 987,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_base.TestTranspose.test_numpy_transpose": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.transpose",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose": {
  "lineno": 990,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose_non_default_axes": {
  "lineno": 997,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_categorical.TestCategorical": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategorical.setup_method": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories.f": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_argsort": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_big_print": {
  "lineno": 852,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments.f": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_none": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable": {
  "lineno": 1485,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable.f": {
  "lineno": 1502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparison_with_unknown_scalars": {
  "lineno": 1897,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons": {
  "lineno": 640,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.array",
   "numpy.asarray",
   "numpy.random.permutation",
   "numpy.repeat",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons.f": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_construction_with_ordered": {
  "lineno": 981,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor.f": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_dtype_and_others_raises": {
  "lineno": 465,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_empty": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_categorical_with_dtype": {
  "lineno": 491,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_categorical_with_unknown_dtype": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_datetimetz": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_period": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_timedelta": {
  "lineno": 423,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_interval": {
  "lineno": 176,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Interval",
   "pandas.IntervalIndex.from_intervals",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_invariant": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_not_sequence": {
  "lineno": 332,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_str_category": {
  "lineno": 476,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_str_unknown": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_tuples": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_tuples_datetimes": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_unsortable": {
  "lineno": 165,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "pandas.Categorical",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_categorical_categories": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_datetimelike": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int8",
   "pandas.Categorical",
   "pandas.NaT",
   "pandas.Series",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_dtype": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_generator": {
  "lineno": 361,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.compat.range",
   "pandas.core.index.MultiIndex.from_product",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_index": {
  "lineno": 352,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_null": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_contructor_from_categorical_string": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_datetime_categorical_comparison": {
  "lineno": 1881,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_from_array": {
  "lineno": 1876,
  "symbols_in_volume": [
   "pandas.Categorical.from_array",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_labels": {
  "lineno": 1867,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_describe": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_empty_print": {
  "lineno": 863,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.random",
   "numpy.random.choice",
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes.f": {
  "lineno": 561,
  "symbols_in_volume": [
   "pandas.Categorical.from_codes"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes_with_categorical_categories": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_inferred_categories": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical._from_inferred_categories",
   "pandas.Categorical.from_codes",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_inferred_categories_coerces": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Categorical._from_inferred_categories",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_inferred_categories_dtype": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Categorical._from_inferred_categories",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_inferred_categories_sorts": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical._from_inferred_categories",
   "pandas.Categorical.from_codes",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.int8",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem_category_type": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem_listlike": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getname_categorical_accessor": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_imaginary": {
  "lineno": 1969,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_is_equal_dtype": {
  "lineno": 186,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_isna": {
  "lineno": 1478,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_map": {
  "lineno": 1913,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_memory_usage": {
  "lineno": 1798,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.compat.PYPY",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_min_max": {
  "lineno": 1516,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Categorical",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_mode": {
  "lineno": 1638,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_na_flags_int_categories": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Categorical",
   "pandas.compat.lrange",
   "pandas.isna",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nan_handling": {
  "lineno": 1459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nbytes": {
  "lineno": 1793,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_numpy_argsort": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_ordered_api": {
  "lineno": 990,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_periodindex": {
  "lineno": 933,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "pandas.Categorical",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print": {
  "lineno": 845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print_none_width": {
  "lineno": 880,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_recode_to_categories": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.int8",
   "pandas.Index",
   "pandas.core.categorical._recode_for_categories",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_recode_to_categories_large": {
  "lineno": 1274,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int16",
   "pandas.Index",
   "pandas.core.categorical._recode_for_categories",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reflected_comparison_with_scalars": {
  "lineno": 1889,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories.f": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_unused_categories": {
  "lineno": 1417,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.nan",
   "numpy.random.choice",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories": {
  "lineno": 1176,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories_dict": {
  "lineno": 1218,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories_series": {
  "lineno": 1206,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories": {
  "lineno": 1313,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories.f": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_searchsorted": {
  "lineno": 1814,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories_inplace": {
  "lineno": 795,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories_many": {
  "lineno": 1283,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories_private": {
  "lineno": 1028,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_dtype_many": {
  "lineno": 1040,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_dtype_nans": {
  "lineno": 1022,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_dtype_new_categories": {
  "lineno": 1015,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_dtype_no_overlap": {
  "lineno": 1070,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_dtype_same": {
  "lineno": 1010,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_item_nan": {
  "lineno": 1766,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_ordered": {
  "lineno": 1076,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem_listlike": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.Categorical",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_shift": {
  "lineno": 1773,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_slicing_directly": {
  "lineno": 1757,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values": {
  "lineno": 1672,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values_na_position": {
  "lineno": 1713,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_tab_complete_warning": {
  "lineno": 922,
  "symbols_in_volume": [
   "IPython.core.completer.provisionalcompleter",
   "pandas.util.testing.assert_produces_warning",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unicode_print": {
  "lineno": 889,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.compat.PY3",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique": {
  "lineno": 1557,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique_index_series": {
  "lineno": 1614,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique_ordered": {
  "lineno": 1587,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_validate_inplace": {
  "lineno": 1932,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_validate_ordered": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock": {
  "lineno": 1977,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.setup_method": {
  "lineno": 1979,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.cut"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops": {
  "lineno": 3701,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops.f": {
  "lineno": 4009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assignment_to_dataframe": {
  "lineno": 2400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.random.randint",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.cut",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_categorical": {
  "lineno": 4561,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_categorical_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other": {
  "lineno": 4515,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other.cmp": {
  "lineno": 4532,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.unique",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_basic": {
  "lineno": 2034,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor": {
  "lineno": 2295,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_api": {
  "lineno": 4632,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Series.cat",
   "pandas.core.categorical.CategoricalAccessor",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_no_new_attributes": {
  "lineno": 4645,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_equality": {
  "lineno": 4151,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition": {
  "lineno": 4617,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition.get_dir": {
  "lineno": 4624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_frame": {
  "lineno": 3135,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_preserver": {
  "lineno": 4319,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr": {
  "lineno": 2982,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime": {
  "lineno": 3000,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime_ordered": {
  "lineno": 3020,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_ordered": {
  "lineno": 2991,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period": {
  "lineno": 3050,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period_ordered": {
  "lineno": 3089,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta": {
  "lineno": 3103,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta_ordered": {
  "lineno": 3119,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr": {
  "lineno": 2483,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime": {
  "lineno": 2538,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime_ordered": {
  "lineno": 2598,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_ordered": {
  "lineno": 2510,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period": {
  "lineno": 2632,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period_ordered": {
  "lineno": 2661,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta": {
  "lineno": 2690,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta_ordered": {
  "lineno": 2723,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr": {
  "lineno": 2756,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime": {
  "lineno": 2808,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime_ordered": {
  "lineno": 2837,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_ordered": {
  "lineno": 2782,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period": {
  "lineno": 2866,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period_ordered": {
  "lineno": 2892,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta": {
  "lineno": 2918,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta_ordered": {
  "lineno": 2950,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_codes_dtypes": {
  "lineno": 2012,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_compare_different_lengths": {
  "lineno": 4233,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons": {
  "lineno": 4060,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons.f": {
  "lineno": 4127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_append": {
  "lineno": 4240,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_append_gh7864": {
  "lineno": 4264,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_categorical": {
  "lineno": 4809,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_preserve": {
  "lineno": 4288,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_frame": {
  "lineno": 2158,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_series": {
  "lineno": 2134,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_count": {
  "lineno": 3432,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_creation_astype": {
  "lineno": 2088,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_describe": {
  "lineno": 2441,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dt_accessor_api_for_categorical": {
  "lineno": 4728,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.TimedeltaIndex",
   "pandas.core.indexes.accessors.Properties",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dtypes": {
  "lineno": 1991,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_empty_astype": {
  "lineno": 2127,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby": {
  "lineno": 3297,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.max",
   "numpy.nan",
   "numpy.sum",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby.f": {
  "lineno": 3363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby_sort": {
  "lineno": 3166,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_info": {
  "lineno": 3151,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_merge": {
  "lineno": 4340,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.dtypes.dtypes.CategoricalDtype",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_min_max": {
  "lineno": 3178,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_mode": {
  "lineno": 3212,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions": {
  "lineno": 4441,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.PeriodIndex",
   "pandas.TimedeltaIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions.f": {
  "lineno": 4460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_nan_handling": {
  "lineno": 2287,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int8",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numeric_like_ops": {
  "lineno": 4590,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sum",
   "pandas.Categorical",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_repeat": {
  "lineno": 4398,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_reshape": {
  "lineno": 4431,
  "symbols_in_volume": [
   "numpy.reshape",
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_pivot_table": {
  "lineno": 3414,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.pivot_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reindex": {
  "lineno": 2228,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repeat": {
  "lineno": 4391,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repr": {
  "lineno": 2463,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.core.config.option_context"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reshape": {
  "lineno": 4406,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reshaping": {
  "lineno": 2209,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sequence_like": {
  "lineno": 2311,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations": {
  "lineno": 2334,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations.f": {
  "lineno": 2387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_functions_no_warnings": {
  "lineno": 2393,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.cut",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sideeffects_free": {
  "lineno": 2253,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing": {
  "lineno": 3508,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Interval",
   "pandas.Series",
   "pandas.cut",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_and_getting_ops": {
  "lineno": 3531,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_doc_examples": {
  "lineno": 3670,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sort_values": {
  "lineno": 3439,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_str_accessor_api_for_categorical": {
  "lineno": 4652,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.strings.StringMethods",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_to_records": {
  "lineno": 4569,
  "symbols_in_volume": [
   "numpy.rec.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_unordered_different_categories_raises": {
  "lineno": 4226,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_unordered_different_order_equal": {
  "lineno": 4203,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts": {
  "lineno": 3232,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts_with_nan": {
  "lineno": 3258,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.CategoricalIndex",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing": {
  "lineno": 4829,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_constructor": {
  "lineno": 4831,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.SubclassedCategorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_from_array": {
  "lineno": 4836,
  "symbols_in_volume": [
   "pandas.Categorical.from_codes",
   "pandas.util.testing.SubclassedCategorical",
   "pandas.util.testing.SubclassedCategorical.from_codes",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalSubclassing.test_map": {
  "lineno": 4842,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.SubclassedCategorical",
   "pandas.util.testing.assert_categorical_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_common.test_all_not_none": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas.core.common._all_not_none"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_any_none": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.core.common._any_none"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_dict_compat": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.Timestamp",
   "pandas.core.common._dict_compat"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_difference": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.core.common.difference"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name": {
  "lineno": 24,
  "symbols_in_volume": [
   "functools.partial",
   "pandas.core.common._get_callable_name"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.fn": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall.__call__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_common.test_groupby": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandas.core.common.groupby"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_intersection": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.core.common.intersection"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_iterpairs": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.core.common.iterpairs"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_map_indices_py": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.core.common.map_indices_py"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_maybe_match_name": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.common._maybe_match_name"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_mut_exclusive": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.core.common._mut_exclusive",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_random_state": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.random",
   "numpy.random.RandomState",
   "pandas.core.common._random_state",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.compat.lmap",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges._bin": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges.test_locs": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.common.split_ranges"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_standardize_mapping": {
  "lineno": 203,
  "symbols_in_volume": [
   "collections.defaultdict",
   "functools.partial",
   "pandas.core.common.standardize_mapping",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_common.test_union": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.core.common.union"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_compat.TestBuiltinIterators": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.check_result": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_dict_iterators": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.compat.iterkeys",
   "pandas.compat.itervalues",
   "pandas.compat.next"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_filter": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.compat.builtins.filter",
   "pandas.compat.builtins.range",
   "pandas.compat.filter",
   "pandas.compat.lfilter"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_map": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.compat.builtins.map",
   "pandas.compat.builtins.range",
   "pandas.compat.lmap",
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_range": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.compat.builtins.range",
   "pandas.compat.lrange",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_zip": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.compat.builtins.range",
   "pandas.compat.builtins.zip",
   "pandas.compat.lzip",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tests.test_compat.TestCompatFunctions": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_compat.TestCompatFunctions.test_get_range_parameters": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.compat.PY2",
   "pandas.compat.get_range_parameters",
   "pandas.compat.range",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_config.TestConfig": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_config.TestConfig.setup_class": {
  "lineno": 11,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.core.config"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.setup_method": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.teardown_method": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_api": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access": {
  "lineno": 377,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f2": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f3": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback.callback": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_case_insensitive": {
  "lineno": 116,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_config_prefix": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_deprecate_option": {
  "lineno": 243,
  "symbols_in_volume": [
   "pytest.raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_describe_option": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_get_option": {
  "lineno": 130,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_is_one_of_factory": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_option_context_scope": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_register_option": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option_all": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager.eq": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_empty_args": {
  "lineno": 162,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_invalid_single_argument_type": {
  "lineno": 168,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_multiple": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_uneven_args": {
  "lineno": 165,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_validation": {
  "lineno": 186,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_downstream.df": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.import_module": {
  "lineno": 12,
  "symbols_in_volume": [
   "importlib.import_module",
   "pandas.compat.PY36",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_dask": {
  "lineno": 36,
  "symbols_in_volume": [
   "dask.dataframe.from_pandas"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_geopandas": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pandas_datareader": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.util.testing.network"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pandas_gbq": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_pyarrow": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_scikit_learn": {
  "lineno": 64,
  "symbols_in_volume": [
   "sklearn.datasets.load_digits",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_seaborn": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_statsmodels": {
  "lineno": 55,
  "symbols_in_volume": [
   "statsmodels.api.datasets.get_rdataset",
   "statsmodels.formula.api.ols"
  ],
  "type": "function"
 },
 "pandas.tests.test_downstream.test_xarray": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_errors.test_catch_oob": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.errors.OutOfBoundsDatetime"
  ],
  "type": "function"
 },
 "pandas.tests.test_errors.test_error_rename": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.errors.ParserError",
   "pandas.io.common.CParserError",
   "pandas.parser.CParserError",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_errors.test_exception_importable": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.errors",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.core.api.DataFrame",
   "pandas.core.api.Panel",
   "warnings.catch_warnings"
  ],
  "type": "module"
 },
 "pandas.tests.test_expressions.TestExpressions": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas.core.computation.expressions._USE_NUMEXPR",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "pandas.tests.test_expressions.TestExpressions.run_arithmetic": {
  "lineno": 73,
  "symbols_in_volume": [
   "operator",
   "pandas._np_version_under1p11",
   "pandas.compat.PY3",
   "pandas.core.computation.expressions._MIN_ELEMENTS",
   "pandas.core.computation.expressions.set_use_numexpr",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_binary": {
  "lineno": 117,
  "symbols_in_volume": [
   "operator",
   "pandas.core.computation.expressions._MIN_ELEMENTS",
   "pandas.core.computation.expressions.get_test_result",
   "pandas.core.computation.expressions.set_test_mode",
   "pandas.core.computation.expressions.set_use_numexpr",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_frame": {
  "lineno": 151,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.set_use_numexpr",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_panel": {
  "lineno": 180,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_series": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.setup_method": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.core.computation.expressions._MIN_ELEMENTS"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.teardown_method": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.core.computation.expressions._MIN_ELEMENTS"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.set_numexpr_threads",
   "pandas.core.computation.expressions.set_use_numexpr"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops.testit": {
  "lineno": 276,
  "symbols_in_volume": [
   "operator",
   "pandas._np_version_under1p11",
   "pandas.core.api.DataFrame",
   "pandas.core.computation.expressions._can_use_numexpr",
   "pandas.core.computation.expressions.evaluate",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_raise_on_arithmetic": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.random.rand",
   "operator",
   "pandas.compat.PY3",
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "re.escape"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_warn_on_arithmetic": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.random.rand",
   "operator",
   "pandas._np_version_under1p13",
   "pandas.core.api.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.use_numexpr"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.set_numexpr_threads",
   "pandas.core.computation.expressions.set_use_numexpr"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops.testit": {
  "lineno": 323,
  "symbols_in_volume": [
   "operator",
   "pandas.core.api.DataFrame",
   "pandas.core.computation.expressions._can_use_numexpr",
   "pandas.core.computation.expressions.evaluate",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic_frame": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithmetic_series": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_panel": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_frame": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_series": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_panel": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_with_zeros": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.shape",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_invalid": {
  "lineno": 253,
  "symbols_in_volume": [
   "operator.add",
   "pandas.core.computation.expressions._can_use_numexpr"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_frame": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_series": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_panel": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_panel4d": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.makePanel4D",
   "pytest.mark.slow",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where": {
  "lineno": 363,
  "symbols_in_volume": [
   "pandas.core.computation.expressions.set_numexpr_threads",
   "pandas.core.computation.expressions.set_use_numexpr"
  ],
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where.testit": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.empty",
   "numpy.where",
   "pandas.core.computation.expressions.where",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_join.TestIndexer": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_join.TestIndexer.test_outer_join_indexer": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.ndarray",
   "pandas._libs.join.outer_join_indexer_float32",
   "pandas._libs.join.outer_join_indexer_float64",
   "pandas._libs.join.outer_join_indexer_int32",
   "pandas._libs.join.outer_join_indexer_int64",
   "pandas._libs.join.outer_join_indexer_object",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_inner_join_indexer": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.join.inner_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_inner_join_indexer2": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.join.inner_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.join.left_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer2": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.join.left_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_left_join_indexer_unique": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.join.left_join_indexer_unique_int64",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_left_outer_join_bug": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "numpy.ones",
   "pandas._libs.join.left_outer_join",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_merge_join_categorical_multiindex": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_outer_join_indexer": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.join.outer_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_join.test_outer_join_indexer2": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Index",
   "pandas._libs.join.outer_join_indexer_int64",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_lib.TestIndexing": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_lib.TestIndexing.test_get_reverse_indexer": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.get_reverse_indexer",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_booleans_to_slice": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.uint8",
   "pandas._libs.lib.maybe_booleans_to_slice"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_both_edges": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_left_edge": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_middle": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestIndexing.test_maybe_indices_to_slice_right_edge": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.int64",
   "pandas._libs.lib.maybe_indices_to_slice",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_lib.TestMisc.test_fast_unique_multiple_list_gen_sort": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "pandas._libs.lib.fast_unique_multiple_list_gen",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_max_len_string_array": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas._libs.lib.max_len_string_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_lib.TestNAObj._check_behavior": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas._libs.lib",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj.test_basic": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.NaT"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj.test_empty_arr": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj.test_empty_like": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj.test_empty_str_inp": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.test_lib.TestNAObj.test_non_obj_dtype": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_multilevel.Base": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_multilevel.Base.setup_method": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lzip",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.N",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_alignment": {
  "lineno": 1322,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append_index": {
  "lineno": 71,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.core.index.Index",
   "pandas.core.index.Index._simple_new",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_assign_index_sequences": {
  "lineno": 2014,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level._check_op": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_constructor_with_tz": {
  "lineno": 2126,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count": {
  "lineno": 1365,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level": {
  "lineno": 734,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level._check_counts": {
  "lineno": 735,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_corner": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_series": {
  "lineno": 763,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_constructor": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_insert_column_all_na": {
  "lineno": 1915,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_datetimeindex": {
  "lineno": 2100,
  "symbols_in_volume": [
   "datetime.date.today",
   "datetime.datetime.today",
   "itertools.product",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp.today",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_delevel_infer_dtype": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.product",
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.dtypes.common.is_integer_dtype",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level": {
  "lineno": 1849,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level_nonunique_datetime": {
  "lineno": 1866,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_nonunique": {
  "lineno": 1759,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_preserve_names": {
  "lineno": 1885,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_groupby_issues": {
  "lineno": 2037,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_mi": {
  "lineno": 2048,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicated_drop_duplicates": {
  "lineno": 2063,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_fancy_slice_partial": {
  "lineno": 682,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_any_all_group": {
  "lineno": 1455,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_dict_constructor_empty_series": {
  "lineno": 1944,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_multicolumn_empty_level": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_boolean": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.putmask",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_multislice": {
  "lineno": 337,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_slice": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view": {
  "lineno": 1340,
  "symbols_in_volume": [
   "pandas.core.common.SettingWithCopyError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view.f": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops": {
  "lineno": 1410,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.compat.lrange",
   "pandas.compat.product",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops.aggf": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_series_agg_multiple_levels": {
  "lineno": 1487,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_ix": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_multi_column": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_level_number_out_of_bounds": {
  "lineno": 792,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_loc_single_level": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_int": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_lowerdim_corner": {
  "lineno": 1594,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial": {
  "lineno": 648,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial_column_select": {
  "lineno": 692,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_slice_integers": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_tuple_plus_columns": {
  "lineno": 428,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_simple": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_toplevel": {
  "lineno": 590,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_tuple_plus_slice": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_corner": {
  "lineno": 1227,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_level_no_obs": {
  "lineno": 1236,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel": {
  "lineno": 1496,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel_with_transform": {
  "lineno": 1511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_transform": {
  "lineno": 1153,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_iloc_mi": {
  "lineno": 2372,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_ambiguity_bug_1678": {
  "lineno": 1957,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_over_hashtable_size_cutoff": {
  "lineno": 1982,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas._libs.index._SIZE_CUTOFF",
   "pandas.core.index.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_insert_index": {
  "lineno": 1316,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_int_series_slicing": {
  "lineno": 1673,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_ix_preserve_names": {
  "lineno": 1521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join": {
  "lineno": 1249,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join_segfault": {
  "lineno": 1924,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_level_with_tuples": {
  "lineno": 1628,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_drop": {
  "lineno": 1729,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_get": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.u",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_insert": {
  "lineno": 1714,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_pop": {
  "lineno": 1780,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_na_repr": {
  "lineno": 1998,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_set_index": {
  "lineno": 2089,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multilevel_consolidate": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_nonunique_assignment_1750": {
  "lineno": 1971,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_ix_missing": {
  "lineno": 1605,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_set": {
  "lineno": 1532,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle._test_roundtrip": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level_partial_selection": {
  "lineno": 1803,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_preserve_levels": {
  "lineno": 196,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reorder_levels": {
  "lineno": 1297,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repeat": {
  "lineno": 2364,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_name_coincide": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_to_string": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_datetime": {
  "lineno": 2197,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_product",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_multiindex_columns": {
  "lineno": 2286,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_period": {
  "lineno": 2267,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Period",
   "pandas.period_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_with_drop": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_constructor": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem_corner": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_group_min_max": {
  "lineno": 1396,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.compat.product",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_setitem": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.isna",
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_slice_partial": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_column_scalar_with_ix": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_datetime": {
  "lineno": 2141,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_period": {
  "lineno": 2340,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_change_dtype": {
  "lineno": 656,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_multiple_partial": {
  "lineno": 1820,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack": {
  "lineno": 820,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack.check": {
  "lineno": 874,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_dropna": {
  "lineno": 1130,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_level_name": {
  "lineno": 972,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_mixed_dtype": {
  "lineno": 933,
  "symbols_in_volume": [
   "numpy.float_",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_bug": {
  "lineno": 1112,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_out_of_bounds": {
  "lineno": 1016,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_names_and_numbers": {
  "lineno": 1009,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_order_with_unsorted_levels": {
  "lineno": 1196,
  "symbols_in_volume": [
   "itertools.permutations",
   "itertools.product",
   "numpy.arange",
   "numpy.repeat",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_order_with_unsorted_levels.manual_compare_stacked": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_multiple": {
  "lineno": 982,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_preserve_names": {
  "lineno": 959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stat_op_corner": {
  "lineno": 1448,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_std_var_pass_ddof": {
  "lineno": 1470,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel": {
  "lineno": 1262,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel_panel": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_to_html": {
  "lineno": 1623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_tuples_have_na": {
  "lineno": 2029,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_issues": {
  "lineno": 1895,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.compat.u",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_level_names": {
  "lineno": 1906,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.compat.u",
   "pandas.core.index.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_bug": {
  "lineno": 944,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_group_index_overflow": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile",
   "pandas.Series",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_level_name": {
  "lineno": 967,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_hierarchical": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_no_empty_columns": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_odd_failure": {
  "lineno": 911,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_frame": {
  "lineno": 1076,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_series": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.PeriodIndex",
   "pandas.Series",
   "pandas.core.index.Index",
   "pandas.core.index.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_preserve_types": {
  "lineno": 1552,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_sparse_keyspace": {
  "lineno": 1164,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_unobserved_keys": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.index.Index",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.common.SettingWithCopyError",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level.f": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level0": {
  "lineno": 546,
  "symbols_in_volume": [
   "pandas.compat.StringIO",
   "pandas.read_table",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.compat.lrange",
   "pandas.compat.product",
   "pandas.core.common.SettingWithCopyError",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.read_table",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple.f": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_series": {
  "lineno": 561,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_partial": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted": {
  "lineno": 2401,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_multilevel.TestSorted.test_frame_getitem_not_sorted": {
  "lineno": 2568,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.zip",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_frame_getitem_not_sorted2": {
  "lineno": 2544,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_getitem_multilevel_index_tuple_not_sorted": {
  "lineno": 2524,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_getitem_slice_not_sorted": {
  "lineno": 2536,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_is_lexsorted": {
  "lineno": 2508,
  "symbols_in_volume": [
   "pandas.core.index.MultiIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_series_getitem_not_sorted": {
  "lineno": 2589,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.lzip",
   "pandas.compat.zip",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_ascending_list": {
  "lineno": 2802,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_and_reconstruction": {
  "lineno": 2605,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_product",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_and_reconstruction_doc_example": {
  "lineno": 2664,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level": {
  "lineno": 2449,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_by_name": {
  "lineno": 2485,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_large_cardinality": {
  "lineno": 2466,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_level_mixed": {
  "lineno": 2491,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_nan": {
  "lineno": 2745,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_preserve_levels": {
  "lineno": 2404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_reorder_on_ops": {
  "lineno": 2692,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.index.MultiIndex.from_product",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_index_reorder_on_ops.my_func": {
  "lineno": 2704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sort_non_lexsorted": {
  "lineno": 2718,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pandas.compat.range",
   "pandas.core.index.MultiIndex",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestSorted.test_sorting_repr_8017": {
  "lineno": 2408,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.core.index.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.core.nanops._USE_BOTTLENECK"
  ],
  "type": "module"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_convertable_values": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.core.nanops._ensure_numeric"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_ndarray": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandas.core.nanops._ensure_numeric",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_non_convertable_values": {
  "lineno": 777,
  "symbols_in_volume": [
   "pandas.core.nanops._ensure_numeric",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_numeric_values": {
  "lineno": 745,
  "symbols_in_volume": [
   "pandas.core.nanops._ensure_numeric"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.prng": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.setup_method": {
  "lineno": 950,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sin"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_all_finite": {
  "lineno": 962,
  "symbols_in_volume": [
   "pandas.core.nanops.nankurt"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_axis": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.vstack",
   "pandas.core.nanops.nankurt",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_constant_series": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.core.nanops.nankurt"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_ground_truth": {
  "lineno": 971,
  "symbols_in_volume": [
   "pandas.core.nanops.nankurt",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.nanops.nankurt"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans_skipna": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.nan",
   "pandas.core.nanops.nankurt",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues": {
  "lineno": 896,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.prng": {
  "lineno": 941,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.setup_method": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sin"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_all_finite": {
  "lineno": 912,
  "symbols_in_volume": [
   "pandas.core.nanops.nanskew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_axis": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.vstack",
   "pandas.core.nanops.nanskew",
   "pandas.util.testing.assert_almost_equal",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_constant_series": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.core.nanops.nanskew",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_ground_truth": {
  "lineno": 921,
  "symbols_in_volume": [
   "pandas.core.nanops.nanskew",
   "pandas.util.testing.assert_almost_equal",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.nanops.nanskew",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans_skipna": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.nan",
   "pandas.core.nanops.nanskew",
   "pandas.util.testing.assert_almost_equal",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.prng": {
  "lineno": 891,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.setup_method": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_ground_truth": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.isnan",
   "numpy.nan",
   "pandas.core.nanops.nanstd",
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_nans": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "pandas.core.nanops.nanstd",
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_roundoff": {
  "lineno": 883,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_all_finite": {
  "lineno": 792,
  "symbols_in_volume": [
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_axis": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_ddof": {
  "lineno": 831,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_nans": {
  "lineno": 798,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "pandas.core.nanops.nanvar",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._argminmax_wrap": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.min",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._badobj_wrap": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._minmax_wrap": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._skew_kurt_wrap": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.max",
   "numpy.min",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_bool": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.take"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun_data": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.take"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs": {
  "lineno": 240,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs_ddof": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancomp": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.take",
   "numpy.vstack",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_1d": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_2d": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.split",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results._coerce_tds": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.setup_method": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.errstate",
   "numpy.inf",
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.tile",
   "numpy.vstack",
   "pandas.core.nanops._USE_BOTTLENECK"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.teardown_method": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandas.core.nanops._USE_BOTTLENECK"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__bn_ok_dtype": {
  "lineno": 731,
  "symbols_in_volume": [
   "pandas.core.nanops._bn_ok_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__has_infs": {
  "lineno": 666,
  "symbols_in_volume": [
   "pandas.core.nanops._has_infs"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__isfinite": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.core.nanops._isfinite"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanall": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.all",
   "pandas.core.nanops.nanall"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanany": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.any",
   "pandas.core.nanops.nanany"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmax": {
  "lineno": 417,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.argmax",
   "pandas.core.nanops.nanargmax"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmin": {
  "lineno": 422,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.argmin",
   "pandas.core.nanops.nanargmin",
   "pandas.util.testing.sys.version_info"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "pandas.core.nanops.nancorr"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_kendall": {
  "lineno": 552,
  "symbols_in_volume": [
   "pandas.core.nanops.nancorr",
   "pandas.util.testing.skip_if_no_package",
   "scipy.stats.kendalltau"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_pearson": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "pandas.core.nanops.nancorr"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_spearman": {
  "lineno": 564,
  "symbols_in_volume": [
   "pandas.core.nanops.nancorr",
   "pandas.util.testing.skip_if_no_package",
   "scipy.stats.spearmanr"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancov": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.cov",
   "pandas.core.nanops.nancov"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_naneq": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.core.nanops.naneq"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nange": {
  "lineno": 628,
  "symbols_in_volume": [
   "pandas.core.nanops.nange"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nangt": {
  "lineno": 624,
  "symbols_in_volume": [
   "pandas.core.nanops.nangt"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nankurt": {
  "lineno": 453,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.errstate",
   "pandas.core.nanops.nankurt",
   "pandas.util.testing.skip_if_no_package",
   "scipy.stats.kurtosis"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanle": {
  "lineno": 636,
  "symbols_in_volume": [
   "pandas.core.nanops.nanle"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanlt": {
  "lineno": 632,
  "symbols_in_volume": [
   "pandas.core.nanops.nanlt"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmax": {
  "lineno": 402,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.max",
   "pandas.core.nanops.nanmax"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.core.nanops.nanmean"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean_overflow": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmedian": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.median",
   "pandas.core.nanops.nanmedian",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmin": {
  "lineno": 398,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.min",
   "pandas.core.nanops.nanmin"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanne": {
  "lineno": 644,
  "symbols_in_volume": [
   "pandas.core.nanops.nanne"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanprod": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.prod",
   "pandas.core.nanops.nanprod"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansem": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.core.nanops.nansem",
   "pandas.util.testing.skip_if_no_package",
   "scipy.stats.sem"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanskew": {
  "lineno": 444,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.errstate",
   "pandas.core.nanops.nanskew",
   "pandas.util.testing.skip_if_no_package",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanstd": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.std",
   "pandas.core.nanops.nanstd"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansum": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.core.nanops.nansum"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanvar": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.var",
   "pandas.core.nanops.nanvar"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_returned_dtype": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy",
   "numpy.float128",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "pandas.Series",
   "pandas.core.dtypes.common.is_integer_dtype"
  ],
  "type": "function"
 },
 "pandas.tests.test_nanops.test_use_bottleneck": {
  "lineno": 996,
  "symbols_in_volume": [
   "pandas.core.nanops._BOTTLENECK_INSTALLED",
   "pandas.get_option",
   "pandas.set_option"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_panel.CheckIndexing": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.CheckIndexing._check_view": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons": {
  "lineno": 837,
  "symbols_in_volume": [
   "numpy.errstate",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons.test_comp": {
  "lineno": 845,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_delitem_and_pop": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.lrange",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_get_value": {
  "lineno": 871,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem": {
  "lineno": 442,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_callable": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_ints": {
  "lineno": 646,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_labels": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_slice": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs": {
  "lineno": 654,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs_check_view": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_invert": {
  "lineno": 833,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_align": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_frame_align": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_setitem_slice_dataframe": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_logical_with_nas": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs": {
  "lineno": 555,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs_mixed": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs": {
  "lineno": 577,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs_mixed": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_neg": {
  "lineno": 829,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_minor_major": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.notna",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_value": {
  "lineno": 884,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int64",
   "numpy.object_",
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem_ndarray": {
  "lineno": 523,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.linspace",
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.date_range",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.util.testing.assert_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_xs": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.PanelTests.not_hashable": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_cumsum": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_pickle": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.round_trip_pickle",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_rank": {
  "lineno": 48,
  "symbols_in_volume": [
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.compat.signature",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.remove_na_arraylike"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.wrapper": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_copy_names": {
  "lineno": 70,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_count": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_iter": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_max": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_mean": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median.wrapper": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_min": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_prod": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_repr": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem.alt": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.sqrt",
   "numpy.std"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew.this_skew": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std.alt": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.std"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sum": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var.alt": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.var"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForSparse._test_op": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.assert_panel_equal": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_abs": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_arith": {
  "lineno": 268,
  "symbols_in_volume": [
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame": {
  "lineno": 308,
  "symbols_in_volume": [
   "operator",
   "operator.truediv",
   "pandas.compat.PY3",
   "pandas.io.formats.printing.pprint_thing",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame.check_op": {
  "lineno": 310,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combinePanel": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_name": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_number": {
  "lineno": 224,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_plane_axes": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_value": {
  "lineno": 404,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_iteritems": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_keys": {
  "lineno": 297,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_neg": {
  "lineno": 361,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_raise_when_not_implemented": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.core.panel.Panel",
   "pandas.date_range",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_select": {
  "lineno": 379,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_set_axis": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_truncate": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel": {
  "lineno": 2465,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.TestLongPanel.setup_method": {
  "lineno": 2470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_arith_flex_panel": {
  "lineno": 2537,
  "symbols_in_volume": [
   "numpy.random.randint",
   "operator",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_axis_dummies": {
  "lineno": 2621,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.Index",
   "pandas.core.reshape.reshape.make_axis_dummies",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combineFrame": {
  "lineno": 2497,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combinePanel": {
  "lineno": 2503,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_scalar": {
  "lineno": 2513,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_series": {
  "lineno": 2519,
  "symbols_in_volume": [
   "pandas.DataFrame.add",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_count": {
  "lineno": 2663,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_get_dummies": {
  "lineno": 2639,
  "symbols_in_volume": [
   "numpy.uint8",
   "pandas.core.reshape.reshape.get_dummies",
   "pandas.core.reshape.reshape.make_axis_dummies",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_join": {
  "lineno": 2677,
  "symbols_in_volume": [
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_mean": {
  "lineno": 2647,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_operators": {
  "lineno": 2531,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_differently_indexed": {
  "lineno": 2475,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_scalar": {
  "lineno": 2491,
  "symbols_in_volume": [
   "pandas.DataFrame.__mul__",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_pivot": {
  "lineno": 2689,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.reshape.reshape._slow_pivot",
   "pandas.pivot",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort": {
  "lineno": 2561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort.is_sorted": {
  "lineno": 2562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sum": {
  "lineno": 2655,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_to_sparse": {
  "lineno": 2575,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_to_string": {
  "lineno": 2571,
  "symbols_in_volume": [
   "pandas.compat.StringIO"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_truncate": {
  "lineno": 2581,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel.TestPanel.assert_panel_equal": {
  "lineno": 910,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.setup_method": {
  "lineno": 914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any": {
  "lineno": 2441,
  "symbols_in_volume": [
   "pandas.core.nanops.nanall",
   "pandas.core.nanops.nanany"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any_unhandled": {
  "lineno": 2455,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply": {
  "lineno": 1249,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.errstate",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_no_or_zero_ndim": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_slabs": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_astype": {
  "lineno": 1236,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_compound": {
  "lineno": 1966,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_conform": {
  "lineno": 1213,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_consolidate": {
  "lineno": 1050,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object_",
   "pandas.compat.range",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_cast": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dict_mixed": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.lrange",
   "pandas.core.panel.Panel",
   "pandas.core.panel.Panel.from_dict",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes._check_dtype": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_empty_panel": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs": {
  "lineno": 1181,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs.testit": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.compat.lrange",
   "pandas.core.panel.Panel"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_fails_with_not_3d_input": {
  "lineno": 1045,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_observe_dtype": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.object_",
   "pandas.compat.lrange",
   "pandas.core.panel.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_resize": {
  "lineno": 1144,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_convert_objects": {
  "lineno": 1221,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_dict": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.core.panel.Panel",
   "pandas.core.panel.Panel.from_dict",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_orderedDict": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.compat.OrderedDict",
   "pandas.core.panel.Panel",
   "pandas.core.panel.Panel.from_dict",
   "pandas.util.testing.makeCustomDataframe",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop": {
  "lineno": 2289,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop.check_drop": {
  "lineno": 2294,
  "symbols_in_volume": [
   "pandas.io.formats.printing.pprint_thing",
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dropna": {
  "lineno": 2254,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dtypes": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ffill_bfill": {
  "lineno": 1627,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_fillna": {
  "lineno": 1576,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.isfinite",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_filter": {
  "lineno": 1963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_dict_mixed_orient": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "pandas.core.panel.Panel.from_dict",
   "pandas.util.testing.makeDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_frame_level1_unsorted": {
  "lineno": 2205,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_get_attr": {
  "lineno": 2196,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_blocks": {
  "lineno": 2162,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_get": {
  "lineno": 2143,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_numpy_round": {
  "lineno": 2123,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.round",
   "pandas.core.panel.Panel",
   "pandas.date_range",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_panel_dups": {
  "lineno": 1903,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_pct_change": {
  "lineno": 2049,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex": {
  "lineno": 1404,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_axis_style": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_like": {
  "lineno": 1518,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_multi": {
  "lineno": 1471,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_rename": {
  "lineno": 2179,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_repr_empty": {
  "lineno": 2174,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_round": {
  "lineno": 2106,
  "symbols_in_volume": [
   "numpy.around",
   "pandas.core.panel.Panel",
   "pandas.date_range",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_shift": {
  "lineno": 1974,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.core.panel.Panel.from_dict",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeMixedDataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_sort_index": {
  "lineno": 1546,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "random.shuffle",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_sort_values": {
  "lineno": 2460,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_swapaxes": {
  "lineno": 1642,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_take": {
  "lineno": 1527,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel": {
  "lineno": 2214,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel_xlsxwriter": {
  "lineno": 2235,
  "symbols_in_volume": [
   "pandas.io.excel.ExcelFile",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.ensure_clean",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame": {
  "lineno": 1726,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_mixed": {
  "lineno": 1758,
  "symbols_in_volume": [
   "numpy.bool_",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_drop_level": {
  "lineno": 1874,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major": {
  "lineno": 1783,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major_minor": {
  "lineno": 1835,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_duplicates": {
  "lineno": 1895,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_na_handling": {
  "lineno": 1886,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.isna",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose": {
  "lineno": 1668,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose_copy": {
  "lineno": 1715,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.notna",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_truncate_fillna_bug": {
  "lineno": 1634,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_tshift": {
  "lineno": 2010,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.Index",
   "pandas.core.panel.Panel",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makePeriodPanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update": {
  "lineno": 2336,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_filtered": {
  "lineno": 2408,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_from_dict": {
  "lineno": 2358,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_nooverwrite": {
  "lineno": 2386,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_raise": {
  "lineno": 2429,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.panel.Panel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.make_test_panel": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.util.testing.add_nans",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel.test_panel_index": {
  "lineno": 2714,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.tile",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.panel.panel_index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_panel4d.CheckIndexing": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.errstate",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons.test_comp": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_delitem_and_pop": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.empty",
   "pandas.compat.lrange",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_get_value": {
  "lineno": 561,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem": {
  "lineno": 298,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_ints": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_labels": {
  "lineno": 516,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_slice": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs_mixed": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs": {
  "lineno": 479,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs_mixed": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.object_",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_set_value": {
  "lineno": 571,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_float_dtype",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.int64",
   "numpy.object_",
   "pandas.core.panel.Panel",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer": {
  "lineno": 377,
  "symbols_in_volume": [
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer.func": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer_mixed_type": {
  "lineno": 412,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_xs": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.dtypes.missing.remove_na_arraylike"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.wrapper": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_count": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_iter": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_max": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_mean": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median.wrapper": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_min": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_prod": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_repr": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem.alt": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.sqrt",
   "numpy.std"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew.this_skew": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std.alt": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.std"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sum": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var.alt": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.var"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForSparse._test_op": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_abs": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_arith": {
  "lineno": 197,
  "symbols_in_volume": [
   "operator.add",
   "operator.floordiv",
   "operator.mul",
   "operator.pow",
   "operator.sub",
   "operator.truediv",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_combinePanel4d": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_name": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_number": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_value": {
  "lineno": 269,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_iteritems": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_keys": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandas.util.testing.equalContents"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_neg": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_select": {
  "lineno": 238,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_set_axis": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panel4d.TestPanel4d.setup_method": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandas.util.testing.makePanel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_conform": {
  "lineno": 743,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_consolidate": {
  "lineno": 667,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object_",
   "pandas.compat.range",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_cast": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.core.panel.Panel",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_dict_mixed": {
  "lineno": 690,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_resize": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_ctor_dict": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_dtypes": {
  "lineno": 907,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_fillna": {
  "lineno": 843,
  "symbols_in_volume": [
   "numpy.isfinite",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_get_attr": {
  "lineno": 940,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_not_hashable": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.core.panel4d.Panel4D",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex": {
  "lineno": 755,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_panel4d_equal",
   "pandas.util.testing.assert_panel_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex_like": {
  "lineno": 816,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_rename": {
  "lineno": 918,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.testing.assert_index_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_repr_empty": {
  "lineno": 913,
  "symbols_in_volume": [
   "pandas.core.panel4d.Panel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_sort_index": {
  "lineno": 826,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "random.shuffle",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_sort_values": {
  "lineno": 944,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_swapaxes": {
  "lineno": 853,
  "symbols_in_volume": [
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_update": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.core.panel4d.Panel4D",
   "pandas.util.testing.assert_panel4d_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panel4d.add_nans": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.util.testing.add_nans"
  ],
  "type": "function"
 },
 "pandas.tests.test_panelnd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_panelnd.TestPanelnd": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_panelnd.TestPanelnd.setup_method": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.core.panelnd.create_nd_panel_factory",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_alt": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.core.panelnd.create_nd_panel_factory",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_error": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.core.panelnd.create_nd_panel_factory",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_5d_construction": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.core.panel.Panel",
   "pandas.core.panelnd.create_nd_panel_factory",
   "pandas.util.testing.assert_panel_equal",
   "pandas.util.testing.makePanel",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "module"
 },
 "pandas.tests.test_resample.Base": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_resample.Base._index_end": {
  "lineno": 705,
  "symbols_in_volume": [
   "datetime.datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base._index_freq": {
  "lineno": 709,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base._index_start": {
  "lineno": 701,
  "symbols_in_volume": [
   "datetime.datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base._series_name": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.core.base.AbstractMethodError",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base._static_values": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.create_index": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.frame": {
  "lineno": 729,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.index": {
  "lineno": 713,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.series": {
  "lineno": 725,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.series_and_frame": {
  "lineno": 733,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_apply_to_empty_series": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_asfreq": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.tseries.frequencies.to_offset",
   "pandas.util.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_asfreq_fill_value": {
  "lineno": 754,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_raises_on_non_datetimelike_index": {
  "lineno": 779,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_dataframe": {
  "lineno": 802,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_dtypes": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.object",
   "pandas.Series",
   "pandas.core.groupby.DataError",
   "pandas.util.testing.all_timeseries_index_generator"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_empty_series": {
  "lineno": 784,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_interpolate": {
  "lineno": 772,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.Base.test_resample_loffset_arg_type": {
  "lineno": 841,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.timedeltas.TimedeltaIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex": {
  "lineno": 889,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "class"
 },
 "pandas.tests.test_resample.TestDatetimeIndex._series_name": {
  "lineno": 892,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.create_series": {
  "lineno": 902,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.setup_method": {
  "lineno": 896,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_anchored_lowercase_buglet": {
  "lineno": 1871,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_asfreq_non_unique": {
  "lineno": 1523,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_corner_cases": {
  "lineno": 1850,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.Period",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_custom_grouper": {
  "lineno": 908,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.random.rand",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex",
   "pandas.core.resample.TimeGrouper",
   "pandas.notna",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_downsample_non_unique": {
  "lineno": 1511,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_how_lambda_functions": {
  "lineno": 1911,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_monthly_resample_error": {
  "lineno": 1755,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_nanosecond_resample_error": {
  "lineno": 1762,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.tseries.offsets.Nano",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_nearest_upsample_with_limit": {
  "lineno": 1359,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_numpy_compat": {
  "lineno": 1018,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_ohlc_5min": {
  "lineno": 1491,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_ohlc_5min._ohlc": {
  "lineno": 1492,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.repeat",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_period_with_agg": {
  "lineno": 1677,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_across_dst": {
  "lineno": 2087,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.resample.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_intraday": {
  "lineno": 1785,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_monthstart": {
  "lineno": 1820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_multiday": {
  "lineno": 1828,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_anchored_ticks": {
  "lineno": 1586,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_axis1": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_base": {
  "lineno": 1622,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_base_with_timedeltaindex": {
  "lineno": 1631,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_basic": {
  "lineno": 950,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.TimeGrouper",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_basic_from_daily": {
  "lineno": 1152,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_categorical_data_with_timedeltaindex": {
  "lineno": 1646,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_consistency": {
  "lineno": 1948,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_daily_anchored": {
  "lineno": 1658,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_datetime_values": {
  "lineno": 2223,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dst_anchor": {
  "lineno": 2113,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dtype_coerceion": {
  "lineno": 1724,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dtype_preservation": {
  "lineno": 1706,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_dup_index": {
  "lineno": 1444,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.indexes.period.Period",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_extra_index_point": {
  "lineno": 1340,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_frame_basic": {
  "lineno": 1235,
  "symbols_in_volume": [
   "pandas.core.resample.TimeGrouper",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeTimeDataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_group_info": {
  "lineno": 2047,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.lexsort",
   "numpy.r_",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.searchsorted",
   "pandas.Series",
   "pandas.compat.product",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how": {
  "lineno": 976,
  "symbols_in_volume": [
   "numpy.ones_like",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how._ohlc": {
  "lineno": 987,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.repeat",
   "pandas.isna"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables": {
  "lineno": 1034,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class.__call__": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_how_method": {
  "lineno": 1325,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_loffset": {
  "lineno": 1255,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.random.rand",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.DatetimeIndex",
   "pandas.tseries.offsets.Minute",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_loffset_count": {
  "lineno": 1288,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_median_bug_1688": {
  "lineno": 1896,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_not_monotonic": {
  "lineno": 1886,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_nunique": {
  "lineno": 2003,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_nunique_with_date_gap": {
  "lineno": 2027,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Series.nunique",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc": {
  "lineno": 1367,
  "symbols_in_volume": [
   "pandas.core.resample.TimeGrouper",
   "pandas.tseries.offsets.Minute"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_dataframe": {
  "lineno": 1414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_result": {
  "lineno": 1389,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel": {
  "lineno": 1540,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel.p_apply": {
  "lineno": 1552,
  "symbols_in_volume": [
   "pandas.Panel"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_panel_numpy": {
  "lineno": 1567,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_reresample": {
  "lineno": 1458,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex",
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.Hour"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_rounding": {
  "lineno": 1093,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.StringIO",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_segfault": {
  "lineno": 1690,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_single_group": {
  "lineno": 1602,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.std",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_single_period_timedelta": {
  "lineno": 1075,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_size": {
  "lineno": 2072,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.searchsorted",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timedelta_idempotency": {
  "lineno": 1084,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timedelta_values": {
  "lineno": 2206,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timegrouper": {
  "lineno": 1971,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Grouper",
   "pandas.NaT",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_timestamp_to_period": {
  "lineno": 1468,
  "symbols_in_volume": [
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_to_period_monthly_buglet": {
  "lineno": 1667,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_unequal_times": {
  "lineno": 1937,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_upsample": {
  "lineno": 1310,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_upsampling_picked_but_not_correct": {
  "lineno": 1208,
  "symbols_in_volume": [
   "datetime.datetime.datetime",
   "numpy.arange",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_with_nat": {
  "lineno": 2180,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_resample_with_timedeltas": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.timedelta_range",
   "pandas.to_timedelta",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_upsample_apply_functions": {
  "lineno": 1877,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_upsample_with_limit": {
  "lineno": 1351,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestDatetimeIndex.test_weekly_resample_buglet": {
  "lineno": 1746,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex": {
  "lineno": 2241,
  "symbols_in_volume": [
   "pandas.core.indexes.period.period_range"
  ],
  "type": "class"
 },
 "pandas.tests.test_resample.TestPeriodIndex._check_annual_upsample_cases": {
  "lineno": 2344,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.MONTHS",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex._series_name": {
  "lineno": 2244,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.create_series": {
  "lineno": 2248,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "pandas.Series",
   "pandas.core.indexes.period.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_all_values_single_bin": {
  "lineno": 2805,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample": {
  "lineno": 2392,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_b": {
  "lineno": 2329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_f": {
  "lineno": 2323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_b": {
  "lineno": 2326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_f": {
  "lineno": 2320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_b": {
  "lineno": 2317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_f": {
  "lineno": 2311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_b": {
  "lineno": 2314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_f": {
  "lineno": 2308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_b": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_f": {
  "lineno": 2335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_b": {
  "lineno": 2338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_f": {
  "lineno": 2332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_asfreq": {
  "lineno": 2256,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_asfreq_fill_value": {
  "lineno": 2274,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_basic_downsample": {
  "lineno": 2353,
  "symbols_in_volume": [
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_basic_upsample": {
  "lineno": 2373,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_cant_fill_missing_dups": {
  "lineno": 2587,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.PeriodIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_closed_left_corner": {
  "lineno": 2694,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_default_left_closed_label": {
  "lineno": 2793,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_default_right_closed_label": {
  "lineno": 2781,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.resample.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_evenly_divisible_with_no_extra_bins": {
  "lineno": 2813,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_fill_method_and_how_upsample": {
  "lineno": 2521,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_loffset_returns_datetimeindex": {
  "lineno": 2848,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_monthly_upsample": {
  "lineno": 2421,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_not_subperiod": {
  "lineno": 2365,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_quarterly_resampling": {
  "lineno": 2713,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_quarterly_upsample": {
  "lineno": 2409,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.tseries.frequencies.MONTHS",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_5minute": {
  "lineno": 2592,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_basic": {
  "lineno": 2432,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.Period",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_bms_2752": {
  "lineno": 2760,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_count": {
  "lineno": 2446,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_fill_missing": {
  "lineno": 2577,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_incompat_freq": {
  "lineno": 2468,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas._libs.period.IncompatibleFrequency",
   "pandas.compat.range",
   "pandas.period_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_irregular_sparse": {
  "lineno": 2616,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_same_freq": {
  "lineno": 2457,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_to_quarterly": {
  "lineno": 2548,
  "symbols_in_volume": [
   "pandas.core.indexes.period.period_range",
   "pandas.tseries.frequencies.MONTHS",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_to_timestamps": {
  "lineno": 2541,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_tz_localized": {
  "lineno": 2638,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.mean",
   "numpy.random.randn",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_weekly_all_na": {
  "lineno": 2626,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_weekly_bug_1726": {
  "lineno": 2721,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_with_dst_time_change": {
  "lineno": 2732,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_with_nat": {
  "lineno": 2890,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_resample_with_only_nat": {
  "lineno": 2913,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_selection": {
  "lineno": 2293,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_upsample_daily_business_daily": {
  "lineno": 2603,
  "symbols_in_volume": [
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_upsample_with_limit": {
  "lineno": 2383,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_upsampling_ohlc": {
  "lineno": 2874,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range",
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_weekly_upsample": {
  "lineno": 2529,
  "symbols_in_volume": [
   "pandas.compat.product",
   "pandas.tseries.frequencies.DAYS",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_with_local_timezone_dateutil": {
  "lineno": 2497,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.tz.tzutc",
   "pandas.Series",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestPeriodIndex.test_with_local_timezone_pytz": {
  "lineno": 2474,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_resample.TestResampleAPI.setup_method": {
  "lineno": 58,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.resample.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg": {
  "lineno": 407,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.mean",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.std",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_consistency": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_misc": {
  "lineno": 499,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.mean",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.std",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.OrderedDict",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.core.base.SpecificationError",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_misc.f": {
  "lineno": 597,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_nested_dicts": {
  "lineno": 605,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.rand",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_agg_nested_dicts.f": {
  "lineno": 627,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_changes_v018": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.dtypes.generic.ABCDataFrame",
   "pandas.core.dtypes.generic.ABCSeries",
   "pandas.core.resample.DatetimeIndexResampler",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_changes_v018.f": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_api_compat_before_use": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_apply_without_aggregation": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.Grouper",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_attribute_access": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_attribute_access.f": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_combined_up_downsampling_of_irregular": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_downsample_but_actually_upsampling": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_fillna": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_getitem": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_groupby_resample_api": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_groupby_resample_on_api": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_plot_api": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing._skip_if_no_mpl",
   "pandas.util.testing.assert_is_valid_plot_return_object",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_select_bad_cols": {
  "lineno": 271,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_selection_api_validation": {
  "lineno": 650,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_str": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.test_transform": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandas.Grouper",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResampleAPI.tests_skip_nuisance": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper": {
  "lineno": 2956,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.setup_method": {
  "lineno": 2958,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply": {
  "lineno": 3114,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply.f": {
  "lineno": 3128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply_with_mutated_index": {
  "lineno": 3134,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.Grouper",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_apply_with_mutated_index.f": {
  "lineno": 3140,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_back_compat_v180": {
  "lineno": 2965,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_consistency_with_window": {
  "lineno": 3174,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_deferred_with_groupby": {
  "lineno": 2995,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_getitem": {
  "lineno": 3023,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_getitem_multiple": {
  "lineno": 3037,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_median_duplicate_columns": {
  "lineno": 3187,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_methods": {
  "lineno": 3074,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_nearest": {
  "lineno": 3056,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_resample_groupby_with_label": {
  "lineno": 3154,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestResamplerGrouper.test_tab_complete_ipython6_warning": {
  "lineno": 2982,
  "symbols_in_volume": [
   "IPython.core.completer.provisionalcompleter",
   "pandas.util.testing.assert_produces_warning",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper": {
  "lineno": 3202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_resample.TestTimeGrouper.setup_method": {
  "lineno": 3204,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aaa_group_order": {
  "lineno": 3301,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.resample.TimeGrouper",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aggregate_normal": {
  "lineno": 3323,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.TimeGrouper",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_aggregate_with_nat": {
  "lineno": 3380,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.core.resample.TimeGrouper",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_apply": {
  "lineno": 3208,
  "symbols_in_volume": [
   "pandas.TimeGrouper",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_apply_iteration": {
  "lineno": 3248,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.resample.TimeGrouper",
   "pandas.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_count": {
  "lineno": 3224,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.TimeGrouper",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_fails_on_no_datetime_index": {
  "lineno": 3285,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.zip",
   "pandas.core.resample.TimeGrouper",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.makeCustomIndex",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_numpy_reduction": {
  "lineno": 3240,
  "symbols_in_volume": [
   "numpy.prod",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_panel_aggregation": {
  "lineno": 3265,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Panel",
   "pandas.core.resample.TimeGrouper",
   "pandas.date_range",
   "pandas.util.testing.assert_panel_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_panel_aggregation.f": {
  "lineno": 3278,
  "symbols_in_volume": [
   "pandas.Panel"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimeGrouper.test_repr": {
  "lineno": 3432,
  "symbols_in_volume": [
   "pandas.core.resample.TimeGrouper"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex": {
  "lineno": 2923,
  "symbols_in_volume": [
   "pandas.core.indexes.timedeltas.timedelta_range"
  ],
  "type": "class"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex._index_end": {
  "lineno": 2930,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex._index_start": {
  "lineno": 2926,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex._series_name": {
  "lineno": 2934,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex.create_series": {
  "lineno": 2938,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.core.indexes.timedeltas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample.TestTimedeltaIndex.test_asfreq_bug": {
  "lineno": 2944,
  "symbols_in_volume": [
   "datetime.datetime.timedelta",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.core.indexes.timedeltas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample._simple_pts": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.period.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_resample._simple_ts": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_sorting.TestMerge": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues": {
  "lineno": 199,
  "symbols_in_volume": [
   "collections.defaultdict",
   "itertools.product",
   "numpy.arange",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.choice",
   "numpy.random.permutation",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series.nunique",
   "pandas.concat",
   "pandas.core.sorting.is_int64_overflow_possible",
   "pandas.merge",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues.align": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestMerge.test_int64_overflow_issues.verify_order": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_basic_sort": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.sorting.safe_sort",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_exceptions": {
  "lineno": 428,
  "symbols_in_volume": [
   "pandas.core.sorting.safe_sort",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_labels": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.core.sorting.safe_sort",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_mixed_integer": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "pandas.core.sorting.safe_sort",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_mixed_integer_from_list": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.core.sorting.safe_sort",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSafeSort.test_unsortable": {
  "lineno": 418,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.array",
   "pandas._np_version_under1p10",
   "pandas.compat.PY2",
   "pandas.core.sorting.safe_sort",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.iteritems",
   "pandas.core.common._asarray_tuplesafe",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow_moar": {
  "lineno": 62,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.mean",
   "numpy.median",
   "numpy.random.choice",
   "numpy.random.permutation",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.vstack",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.MultiIndex.from_tuples",
   "pandas.core.sorting.is_int64_overflow_possible",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_int64_overflow_moar.aggr": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.fromiter",
   "numpy.vstack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_lexsort_indexer": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "numpy.nan",
   "pandas.core.sorting.lexsort_indexer",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.TestSorting.test_nargsort": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.nan",
   "pandas.core.sorting.nargsort",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.test_decons": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "numpy.tile"
  ],
  "type": "function"
 },
 "pandas.tests.test_sorting.test_decons.testit": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.core.sorting.decons_group_index",
   "pandas.core.sorting.get_group_index",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_strings.TestStringMethods": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_strings.TestStringMethods.test_api": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Series.str",
   "pandas.core.strings.StringMethods",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_capitalize": {
  "lineno": 343,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_casemethods": {
  "lineno": 381,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.core.strings.str_cat",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat_on_filtered_index": {
  "lineno": 2691,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust": {
  "lineno": 1723,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust_fillchar": {
  "lineno": 1775,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_contains": {
  "lineno": 164,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.array",
   "numpy.bool_",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.core.strings.str_contains",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_contains_nan": {
  "lineno": 2542,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_count": {
  "lineno": 128,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.core.strings.str_count",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods": {
  "lineno": 1211,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "string.maketrans"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods_to_frame": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode": {
  "lineno": 2636,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode_errors": {
  "lineno": 2646,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_endswith": {
  "lineno": 262,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.core.strings.str_endswith",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False": {
  "lineno": 623,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeRangeIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False.check_index": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_None": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_True": {
  "lineno": 775,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_unspecified": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_index_one_two_groups": {
  "lineno": 1131,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.makeDateIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeRangeIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups.check_index": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_series": {
  "lineno": 818,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_single_group_returns_frame": {
  "lineno": 927,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "re.VERBOSE"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_errors": {
  "lineno": 1123,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_no_matches": {
  "lineno": 1075,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract": {
  "lineno": 1151,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract_subject_index": {
  "lineno": 1178,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_single_group": {
  "lineno": 1041,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_single_group_with_quantifier": {
  "lineno": 1061,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_stringindex": {
  "lineno": 1099,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find": {
  "lineno": 1461,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find_nan": {
  "lineno": 1507,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_findall": {
  "lineno": 1437,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get": {
  "lineno": 2475,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies": {
  "lineno": 1354,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies_with_name_dummy": {
  "lineno": 1375,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index": {
  "lineno": 1527,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index._check": {
  "lineno": 1529,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index_str_accessor_visibility": {
  "lineno": 2717,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.core.strings.StringMethods",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_ismethods": {
  "lineno": 1292,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_isnumeric": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.string_types",
   "pandas.isna",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_empty": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_object_try_string": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_single_element": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_join": {
  "lineno": 1392,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_len": {
  "lineno": 1412,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.notna",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_lower_upper": {
  "lineno": 314,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match": {
  "lineno": 564,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match_findall_flags": {
  "lineno": 2611,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_produces_warning",
   "re.IGNORECASE"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_method_on_bytes": {
  "lineno": 2772,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_contains": {
  "lineno": 2512,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_replace": {
  "lineno": 2562,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_normalize": {
  "lineno": 2666,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad": {
  "lineno": 1590,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad_fillchar": {
  "lineno": 1648,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad_width": {
  "lineno": 1674,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_index": {
  "lineno": 2192,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_series": {
  "lineno": 2125,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_to_dataframe": {
  "lineno": 2219,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_with_name": {
  "lineno": 2246,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pipe_failures": {
  "lineno": 2271,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_repeat": {
  "lineno": 533,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace": {
  "lineno": 390,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "re.UNICODE"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace_callable": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.PY2",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace_compiled_regex": {
  "lineno": 471,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "re.IGNORECASE",
   "re.UNICODE",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit": {
  "lineno": 1900,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_dataframe_expand": {
  "lineno": 2039,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_multiindex_expand": {
  "lineno": 2068,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice": {
  "lineno": 2285,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.isna",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice_replace": {
  "lineno": 2327,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split": {
  "lineno": 1854,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_maxsplit": {
  "lineno": 1958,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_nan_expand": {
  "lineno": 2089,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_no_pat_with_nonzero_n": {
  "lineno": 1976,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_noargs": {
  "lineno": 1949,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_dataframe": {
  "lineno": 1982,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_multiindex_expand": {
  "lineno": 2014,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_with_name": {
  "lineno": 2101,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_startswith": {
  "lineno": 231,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.core.strings.str_startswith",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_accessor_no_new_attributes": {
  "lineno": 2765,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_cat_raises_intuitive_error": {
  "lineno": 2708,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_get_syntax": {
  "lineno": 2582,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_out_of_bounds": {
  "lineno": 2598,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip": {
  "lineno": 2365,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args": {
  "lineno": 2419,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args_unicode": {
  "lineno": 2434,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_mixed": {
  "lineno": 2380,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_unicode": {
  "lineno": 2403,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_swapcase": {
  "lineno": 362,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_title": {
  "lineno": 292,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_translate": {
  "lineno": 1684,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.compat.PY3",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal",
   "string.maketrans"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_translate._check": {
  "lineno": 1686,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_wrap": {
  "lineno": 2449,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.u",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_zfill": {
  "lineno": 1832,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.object_",
   "pandas.Series",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_take.TestTake": {
  "lineno": 12,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "class"
 },
 "pandas.tests.test_take.TestTake.test_1d_bool": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.core.algorithms.take_1d",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complex128",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna._test_dtype": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_other_dtypes": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.core.algorithms.take_1d",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out._test_dtype": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.core.algorithms.take_1d",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_bool": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object_",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_datetime64": {
  "lineno": 400,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.empty_like",
   "numpy.int64",
   "numpy.random.randint",
   "pandas._libs.tslib.iNaT",
   "pandas.compat.long",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complex128",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna._test_dtype": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.core.algorithms.take_nd"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_float32": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.empty_like",
   "numpy.float32",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_other_dtypes": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out._test_dtype": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.complex128",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int8",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna._test_dtype": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.core.algorithms.take_nd"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out._test_dtype": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "numpy.random.randint",
   "pandas.core.algorithms.take_nd",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_window": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.test_window.Base": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.Base._create_data": {
  "lineno": 38,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.NaN",
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.DatetimeLike": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.DatetimeLike.check_dtypes": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.Dtype._create_data": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype._create_dtype_data": {
  "lineno": 700,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.check_dtypes": {
  "lineno": 726,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.get_expects": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.test_dtypes": {
  "lineno": 717,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.Dtype_float": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_integer": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_uinteger": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestApi": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestApi.setup_method": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_consistency": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.core.base.SpecificationError",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts.f": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_attribute_access": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_count_nonnumeric_types": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.Period",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.timedelta_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_getitem": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_how_compat": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_preserve_metadata": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_select_bad_cols": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.concat",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.a": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.b": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.tests_skip_nuisance": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestDeprecations.setup_method": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations.test_deprecations": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.Series",
   "pandas.stats.moments.rolling_mean",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_category": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_category._create_dtype_data": {
  "lineno": 796,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_datetime": {
  "lineno": 829,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC._create_data": {
  "lineno": 836,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_float16": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.float16"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float32": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float64": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int16": {
  "lineno": 744,
  "symbols_in_volume": [
   "numpy.int16"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int32": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int64": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int8": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.int8"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_object": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_timedelta": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint16": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.uint16"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint32": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.uint32"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint64": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.uint64"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint8": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestEWM": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestEWM.setup_method": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_constructor": {
  "lineno": 563,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_doc_string": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestEWM.test_numpy_compat": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series",
   "pandas.core.window.EWM",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestExpanding.setup_method": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_constructor": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_doc_string": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_empty_df_expanding": {
  "lineno": 531,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_numpy_compat": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series",
   "pandas.core.window.Expanding",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping": {
  "lineno": 3164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestGrouperGrouping.setup_method": {
  "lineno": 3166,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding": {
  "lineno": 3261,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_apply": {
  "lineno": 3299,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov": {
  "lineno": 3280,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov.func": {
  "lineno": 3294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_getitem": {
  "lineno": 3182,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_getitem_multiple": {
  "lineno": 3200,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated": {
  "lineno": 3171,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated.f": {
  "lineno": 3173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling": {
  "lineno": 3214,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_apply": {
  "lineno": 3252,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov": {
  "lineno": 3233,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov.func": {
  "lineno": 3247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestMoments._check_ew": {
  "lineno": 1744,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_ndarray": {
  "lineno": 1749,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.float_",
   "numpy.isnan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.stats.moments.ewma",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_structures": {
  "lineno": 1794,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_moment_func": {
  "lineno": 1349,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray": {
  "lineno": 1376,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.concatenate",
   "numpy.isnan",
   "numpy.random.randn",
   "pandas.isna",
   "pandas.notna",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray.get_result": {
  "lineno": 1379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures": {
  "lineno": 1461,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.tseries.offsets.BDay",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures.get_result": {
  "lineno": 1464,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.setup_method": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_centered_axis_validation": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_mean": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.stats.moments.rolling_mean",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.stats.moments.rolling_window",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_corner": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.stats.moments.rolling_window",
   "pandas.util.testing._skip_if_no_scipy",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_frame": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_na_min_periods": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_linear_range": {
  "lineno": 1014,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_missing_data": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special": {
  "lineno": 1064,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.zip",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special_linear_range": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.compat.zip",
   "pandas.util.testing._skip_if_no_scipy",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ew_empty_arrays": {
  "lineno": 1735,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.stats.moments.ewma",
   "pandas.stats.moments.ewmvar",
   "pandas.stats.moments.ewmvol",
   "pandas.util.testing.assert_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha": {
  "lineno": 1692,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha_arg": {
  "lineno": 1703,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_domain_checks": {
  "lineno": 1711,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma": {
  "lineno": 1556,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.zeros",
   "pandas.Series",
   "pandas.stats.moments.ewma",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_arg_old_api": {
  "lineno": 1681,
  "symbols_in_volume": [
   "pandas.stats.moments.ewma",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_old_api": {
  "lineno": 1670,
  "symbols_in_volume": [
   "pandas.stats.moments.ewma",
   "pandas.util.testing.assert_numpy_array_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_halflife_arg": {
  "lineno": 1656,
  "symbols_in_volume": [
   "pandas.stats.moments.ewma",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling": {
  "lineno": 1586,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling.simple_wma": {
  "lineno": 1603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_span_com_args": {
  "lineno": 1647,
  "symbols_in_volume": [
   "pandas.stats.moments.ewma",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvar": {
  "lineno": 1641,
  "symbols_in_volume": [
   "pandas.stats.moments.ewmvar"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvol": {
  "lineno": 1644,
  "symbols_in_volume": [
   "pandas.stats.moments.ewmvol"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_fperr_robustness": {
  "lineno": 1315,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "pandas.compat.PY3",
   "pandas.stats.moments.rolling_mean",
   "pandas.stats.moments.rolling_sum",
   "pandas.stats.moments.rolling_var",
   "pytest.skip",
   "sys.byteorder",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply": {
  "lineno": 1209,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.mean",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply.roll_mean": {
  "lineno": 1223,
  "symbols_in_volume": [
   "pandas.stats.moments.rolling_apply"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply_out_of_bounds": {
  "lineno": 1240,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sum",
   "pandas.isna",
   "pandas.stats.moments.rolling_apply",
   "pandas.util.testing.assert_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_count": {
  "lineno": 869,
  "symbols_in_volume": [
   "numpy.isfinite",
   "pandas.stats.moments.rolling_count"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_kurt": {
  "lineno": 1307,
  "symbols_in_volume": [
   "pandas.stats.moments.rolling_kurt",
   "pytest.skip",
   "scipy.stats.kurtosis"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_max": {
  "lineno": 1127,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.max",
   "pandas.stats.moments.rolling_max",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_mean": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.stats.moments.rolling_mean"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_median": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.median",
   "pandas.stats.moments.rolling_median",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_min": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.min",
   "numpy.ones",
   "pandas.stats.moments.rolling_min",
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.alt": {
  "lineno": 1168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.f": {
  "lineno": 1162,
  "symbols_in_volume": [
   "pandas.stats.moments.rolling_quantile"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.scoreatpercentile": {
  "lineno": 1143,
  "symbols_in_volume": [
   "numpy.sort"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile_np_percentile": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.percentile",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile_param": {
  "lineno": 1197,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile_series": {
  "lineno": 1187,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_skew": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pandas.stats.moments.rolling_skew",
   "pytest.skip",
   "scipy.stats.skew"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std": {
  "lineno": 1253,
  "symbols_in_volume": [
   "numpy.std",
   "pandas.stats.moments.rolling_std"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_1obs": {
  "lineno": 1259,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.zeros",
   "pandas.stats.moments.rolling_std",
   "pandas.util.testing.assert_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_neg_sqrt": {
  "lineno": 1277,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isfinite",
   "pandas.stats.moments.ewmstd",
   "pandas.stats.moments.rolling_std",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_sum": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.sum",
   "pandas.stats.moments.rolling_sum"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_var": {
  "lineno": 1293,
  "symbols_in_volume": [
   "numpy.var",
   "pandas.stats.moments.rolling_var"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency": {
  "lineno": 2021,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.max",
   "numpy.mean",
   "numpy.median",
   "numpy.min",
   "numpy.nanmax",
   "numpy.nanmean",
   "numpy.nanmedian",
   "numpy.nanmin",
   "numpy.nanstd",
   "numpy.nansum",
   "numpy.nanvar",
   "numpy.std",
   "numpy.sum",
   "numpy.var",
   "pandas.Series"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew": {
  "lineno": 2572,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.arange",
   "numpy.isnan",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew.func": {
  "lineno": 2573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding": {
  "lineno": 3040,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_ndarray": {
  "lineno": 3000,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.random.randn",
   "pandas.isna",
   "pandas.notna",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_structures": {
  "lineno": 3034,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment": {
  "lineno": 2502,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment.get_result": {
  "lineno": 2503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._create_data": {
  "lineno": 2066,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency": {
  "lineno": 2073,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency._non_null_values": {
  "lineno": 2078,
  "symbols_in_volume": [
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.setup_method": {
  "lineno": 2070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_corr_sanity": {
  "lineno": 2517,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.nan_to_num",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency": {
  "lineno": 2188,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._ewma": {
  "lineno": 2238,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._variance_debiasing_factors": {
  "lineno": 2229,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._weights": {
  "lineno": 2194,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr": {
  "lineno": 2566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr_pairwise": {
  "lineno": 2569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov": {
  "lineno": 2560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov_pairwise": {
  "lineno": 2563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply": {
  "lineno": 2605,
  "symbols_in_volume": [
   "numpy.mean",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply.expanding_mean": {
  "lineno": 2609,
  "symbols_in_volume": [
   "pandas.stats.moments.expanding_apply"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs": {
  "lineno": 2621,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.rand",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs.mean_w_arg": {
  "lineno": 2622,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_consistency": {
  "lineno": 2288,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.mark.slow",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr": {
  "lineno": 2635,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_diff_index": {
  "lineno": 2704,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise": {
  "lineno": 2679,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise_diff_length": {
  "lineno": 2922,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_count": {
  "lineno": 2645,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov": {
  "lineno": 2658,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_diff_index": {
  "lineno": 2686,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise": {
  "lineno": 2671,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise_diff_length": {
  "lineno": 2896,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_max": {
  "lineno": 2668,
  "symbols_in_volume": [
   "numpy.max",
   "pandas.stats.moments.expanding_max"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_quantile": {
  "lineno": 2650,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame": {
  "lineno": 2536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame._check": {
  "lineno": 2537,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_moment": {
  "lineno": 2512,
  "symbols_in_volume": [
   "pandas.core.window._flex_binary_moment",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_moment_functions_zero_length": {
  "lineno": 2802,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_moment_functions_zero_length_pairwise": {
  "lineno": 2863,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_consistency": {
  "lineno": 2363,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.mark.slow",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr": {
  "lineno": 2474,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.nan",
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.makeTimeSeries"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_diff_length": {
  "lineno": 2734,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_pairwise": {
  "lineno": 2490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_with_zero_variance": {
  "lineno": 2494,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.Series",
   "pandas.compat.range",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov": {
  "lineno": 2464,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.random.randn",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_diff_length": {
  "lineno": 2722,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_pairwise": {
  "lineno": 2471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_functions_window_non_shrinkage": {
  "lineno": 2746,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_functions_window_non_shrinkage_binary": {
  "lineno": 2783,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.compat.range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_kurt_edge_cases": {
  "lineno": 2969,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_kurt_eq_value_fperr": {
  "lineno": 2995,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_gh6297": {
  "lineno": 3050,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_how_resample": {
  "lineno": 3068,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_how_resample": {
  "lineno": 3121,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_memory_error": {
  "lineno": 3140,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_how_resample": {
  "lineno": 3102,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.util.testing.assert_series_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_max_numeric_types": {
  "lineno": 3146,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dtype",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_skew_edge_cases": {
  "lineno": 2948,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_skew_eq_value_fperr": {
  "lineno": 2990,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise": {
  "lineno": 1802,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "class"
 },
 "pandas.tests.test_window.TestPairwise.compare": {
  "lineno": 1823,
  "symbols_in_volume": [
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_flex": {
  "lineno": 1832,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_pairwise_with_other": {
  "lineno": 1908,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_no_pairwise_with_self": {
  "lineno": 1868,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_other": {
  "lineno": 1886,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_self": {
  "lineno": 1845,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestPairwise.test_pairwise_with_series": {
  "lineno": 1936,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.util.testing.assert_index_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestRolling.setup_method": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_closed": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor_with_timedelta_window": {
  "lineno": 408,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.append",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor_with_timedelta_window_and_minperiods": {
  "lineno": 426,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.NaN",
   "numpy.append",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor_with_win_type": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_doc_string": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_multi_index_names": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_numpy_compat": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series",
   "pandas.core.window.Rolling",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.tests_empty_df_rolling": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_frame_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS": {
  "lineno": 3309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestRollingTS.setup_method": {
  "lineno": 3314,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all": {
  "lineno": 3839,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all2": {
  "lineno": 3861,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_all2.agg_by_day": {
  "lineno": 3883,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_basic_regular": {
  "lineno": 3487,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_closed": {
  "lineno": 3523,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_doc_string": {
  "lineno": 3328,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_frame_on": {
  "lineno": 3414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_frame_on2": {
  "lineno": 3458,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_groupby_monotonic": {
  "lineno": 3891,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_min_periods": {
  "lineno": 3509,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_monotonic_on": {
  "lineno": 3388,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_non_monotonic": {
  "lineno": 3911,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_on": {
  "lineno": 3368,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_perf_min": {
  "lineno": 3784,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_apply": {
  "lineno": 3819,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_count": {
  "lineno": 3716,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_kurt": {
  "lineno": 3703,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_max": {
  "lineno": 3800,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_mean": {
  "lineno": 3605,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_median": {
  "lineno": 3618,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_min": {
  "lineno": 3765,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_quantile": {
  "lineno": 3631,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_skew": {
  "lineno": 3690,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_std": {
  "lineno": 3644,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_sum": {
  "lineno": 3562,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_ragged_var": {
  "lineno": 3667,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_regular_min": {
  "lineno": 3738,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_rolling_cov_offset": {
  "lineno": 3929,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range",
   "pandas.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestRollingTS.test_valid": {
  "lineno": 3339,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.offsets.Day",
   "pandas.offsets.MonthBegin",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.test_window.TestWindow.setup_method": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow.test_constructor": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing._skip_if_no_scipy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow.test_numpy_compat": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas.Series",
   "pandas.core.window.Window",
   "pandas.errors.UnsupportedFunctionCall",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data": {
  "lineno": 1957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_dataframes": {
  "lineno": 1985,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_series": {
  "lineno": 1958,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.is_constant": {
  "lineno": 1996,
  "symbols_in_volume": [
   "pandas.notna"
  ],
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.no_nans": {
  "lineno": 2000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window._rolling_consistency_cases": {
  "lineno": 2012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.test_window.assert_equal": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tools.test_numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_all_nan": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_coerce_uint64_conflict": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_datetimelike": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.date_range",
   "pandas.to_numeric",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_downcast": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int64",
   "numpy.typecodes",
   "numpy.uint16",
   "pandas.to_numeric",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_downcast_limits": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.Series",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_empty": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int8",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_error": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_error_seen_bool": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_list": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.to_numeric",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_list_numeric": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.to_numeric",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_non_hashable": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric": {
  "lineno": 108,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.inf",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric_dtypes": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_numeric_lists_and_arrays": {
  "lineno": 138,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_period": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.period_range",
   "pandas.to_numeric",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_scalar": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.to_numeric",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_series": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_series_numeric": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_str": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.to_numeric",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_timedelta": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas.timedelta_range",
   "pandas.to_numeric",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tools.test_numeric.TestToNumeric.test_type_check": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tseries.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tseries.conftest.offset_types": {
  "lineno": 5,
  "symbols_in_volume": [
   "pandas.tseries.offsets",
   "pandas.tseries.offsets.__all__",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.conftest.tz": {
  "lineno": 10,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "module"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_code": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.tseries.frequencies._period_code_map",
   "pandas.tseries.frequencies.get_freq",
   "pandas.tseries.frequencies.get_freq_group"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_group": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_freq_group",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_freq_to_reso": {
  "lineno": 420,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.Resolution"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_get_freq_code": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_freq",
   "pandas.tseries.frequencies.get_freq_code",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_get_to_timestamp_base": {
  "lineno": 403,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_freq_code",
   "pandas.tseries.frequencies.get_to_timestamp_base"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyCode.test_resolution_bumping": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.Resolution",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference._check_generated_range": {
  "lineno": 642,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference._check_tick": {
  "lineno": 564,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.Timestamp",
   "pandas.compat.range",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_annual": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_annual_ambiguous": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_annual": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_daily": {
  "lineno": 526,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_daily_look_alike": {
  "lineno": 530,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_monthly": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_business_start_monthly": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_day": {
  "lineno": 535,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_day_corner": {
  "lineno": 538,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_fifth_week_of_month": {
  "lineno": 597,
  "symbols_in_volume": [
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_fifth_week_of_month_infer": {
  "lineno": 602,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_hour": {
  "lineno": 546,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq": {
  "lineno": 675,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_businesshour": {
  "lineno": 728,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_tz": {
  "lineno": 688,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_infer_freq_tz_transition": {
  "lineno": 708,
  "symbols_in_volume": [
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_invalid_index_types": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas.compat.is_platform_windows",
   "pandas.tseries.frequencies.infer_freq",
   "pandas.util.testing.makeFloatIndex",
   "pandas.util.testing.makeIntIndex",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeStringIndex",
   "pandas.util.testing.makeUnicodeIndex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_legacy_offset_warnings": {
  "lineno": 824,
  "symbols_in_volume": [
   "pandas.date_range",
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies.get_offset",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_microsecond": {
  "lineno": 558,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_millisecond": {
  "lineno": 555,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_minute": {
  "lineno": 549,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_monthly": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_monthly_ambiguous": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_nanosecond": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_non_datetimeindex": {
  "lineno": 542,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_non_datetimeindex2": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_not_monotonic": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_quarterly": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_raise_if_period_index": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.core.indexes.period.PeriodIndex",
   "pandas.tseries.frequencies.infer_freq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_raise_if_too_few": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.infer_freq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_second": {
  "lineno": 552,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_series": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series",
   "pandas.date_range",
   "pandas.period_range",
   "pandas.tseries.frequencies.infer_freq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_string_datetimelike_compat": {
  "lineno": 787,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_week_of_month": {
  "lineno": 590,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_week_of_month_fake": {
  "lineno": 607,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.tseries.frequencies.infer_freq"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestFrequencyInference.test_weekly": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_anchored_shortcuts": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.QuarterEnd",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_invalid": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_leading_zero": {
  "lineno": 163,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_multiple": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Nano",
   "pandas.tseries.offsets.Second",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_negative": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.TestToOffset.test_to_offset_pd_timedelta": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Second",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_get_rule_month": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._get_rule_month",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.QuarterEnd",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_is_superperiod_subperiod": {
  "lineno": 849,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.is_subperiod",
   "pandas.tseries.frequencies.is_superperiod",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.tseries.offsets.Nano",
   "pandas.tseries.offsets.Second",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_ms_vs_MS": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_offset",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.MonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_period_str_to_code": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._period_str_to_code"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_period_str_to_code._assert_depr": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies._period_str_to_code",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_frequencies.test_rule_aliases": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.to_offset",
   "pandas.tseries.offsets.Micro"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.setup_method": {
  "lineno": 24,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.tseries.holiday.Timestamp",
   "pandas.tseries.holiday.USFederalHolidayCalendar"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.tseries.holiday.Holiday",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching.TestCalendar": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.tseries.holiday.AbstractHolidayCalendar"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_caching.TestCalendar.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_calendar_observance_dates": {
  "lineno": 70,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.holiday.get_calendar",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestCalendar.test_rule_from_name": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.tseries.holiday.USThanksgivingDay",
   "pandas.tseries.holiday.get_calendar"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_memorial_day": {
  "lineno": 359,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_memorial_day.MemorialDay": {
  "lineno": 360,
  "symbols_in_volume": [
   "pandas.tseries.holiday.AbstractHolidayCalendar",
   "pandas.tseries.holiday.USMemorialDay"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1986": {
  "lineno": 347,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1986.MLKCalendar": {
  "lineno": 349,
  "symbols_in_volume": [
   "pandas.tseries.holiday.AbstractHolidayCalendar",
   "pandas.tseries.holiday.USMartinLutherKingJr"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.check_results": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.tseries.holiday.Timestamp",
   "pytz.utc.localize"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.setup_method": {
  "lineno": 90,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_argument_types": {
  "lineno": 241,
  "symbols_in_volume": [
   "pandas.tseries.holiday.Timestamp",
   "pandas.tseries.holiday.USThanksgivingDay.dates",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_easter": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.tseries.holiday.EasterMonday",
   "pandas.tseries.holiday.GoodFriday",
   "pandas.tseries.holiday.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_factory": {
  "lineno": 273,
  "symbols_in_volume": [
   "pandas.tseries.holiday.AbstractHolidayCalendar",
   "pandas.tseries.holiday.HolidayCalendarFactory",
   "pandas.tseries.holiday.USMemorialDay",
   "pandas.tseries.holiday.USThanksgivingDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_get_calendar": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandas.tseries.holiday.get_calendar"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_get_calendar.TestCalendar": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.tseries.holiday.AbstractHolidayCalendar"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_holidays_within_dates": {
  "lineno": 195,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.holiday.EasterMonday",
   "pandas.tseries.holiday.GoodFriday",
   "pandas.tseries.holiday.Timestamp",
   "pandas.tseries.holiday.USColumbusDay",
   "pandas.tseries.holiday.USLaborDay",
   "pandas.tseries.holiday.USMartinLutherKingJr",
   "pandas.tseries.holiday.USMemorialDay",
   "pandas.tseries.holiday.USPresidentsDay",
   "pandas.tseries.holiday.USThanksgivingDay",
   "pandas.tseries.holiday.get_calendar"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_non_observed_holiday": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.tseries.holiday.Holiday",
   "pandas.tseries.holiday.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_special_holidays": {
  "lineno": 255,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.holiday.DateOffset",
   "pandas.tseries.holiday.Holiday",
   "pandas.tseries.holiday.MO"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_usmemorialday": {
  "lineno": 102,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.holiday.USMemorialDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHoliday.test_usthanksgivingday": {
  "lineno": 177,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.holiday.USThanksgivingDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestHolidayConflictingArguments": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestHolidayConflictingArguments.test_both_offset_observance_raises": {
  "lineno": 380,
  "symbols_in_volume": [
   "pandas.tseries.holiday.DateOffset",
   "pandas.tseries.holiday.Holiday",
   "pandas.tseries.holiday.SA",
   "pandas.tseries.holiday.next_monday",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.setup_method": {
  "lineno": 289,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_after_nearest_workday": {
  "lineno": 339,
  "symbols_in_volume": [
   "pandas.tseries.holiday.after_nearest_workday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_before_nearest_workday": {
  "lineno": 334,
  "symbols_in_volume": [
   "pandas.tseries.holiday.before_nearest_workday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_nearest_workday": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.tseries.holiday.nearest_workday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_monday": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandas.tseries.holiday.next_monday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_monday_or_tuesday": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.tseries.holiday.next_monday_or_tuesday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_next_workday": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas.tseries.holiday.next_workday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_previous_friday": {
  "lineno": 307,
  "symbols_in_volume": [
   "pandas.tseries.holiday.previous_friday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_previous_workday": {
  "lineno": 329,
  "symbols_in_volume": [
   "pandas.tseries.holiday.previous_workday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_sunday_to_monday": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.tseries.holiday.sunday_to_monday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_holiday.TestObservanceRules.test_weekend_to_monday": {
  "lineno": 319,
  "symbols_in_volume": [
   "pandas.tseries.holiday.weekend_to_monday"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tseries.test_offsets.Base": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.Base._get_offset": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.FY5253Quarter",
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.Base.test_apply_out_of_range": {
  "lineno": 131,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.OutOfBoundsDatetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.BusinessHour",
   "pandas.tseries.offsets.CustomBusinessHour",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase": {
  "lineno": 1893,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.setup_method": {
  "lineno": 1895,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testEQ": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testMult1": {
  "lineno": 1923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testMult2": {
  "lineno": 1926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testRAdd": {
  "lineno": 1910,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testRSub": {
  "lineno": 1920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.testSub": {
  "lineno": 1913,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_copy": {
  "lineno": 1943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_hash": {
  "lineno": 1907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_mul": {
  "lineno": 1904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_offsets_compare_equal": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_roundtrip_pickle": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.CustomBusinessMonthBase.test_roundtrip_pickle._check_roundtrip": {
  "lineno": 1935,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthBegin": {
  "lineno": 2416,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthBegin.test_offset": {
  "lineno": 2419,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthBegin.test_offsets_compare_equal": {
  "lineno": 2471,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthBegin.test_onOffset": {
  "lineno": 2461,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthEnd": {
  "lineno": 2478,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthEnd.test_normalize": {
  "lineno": 2519,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthEnd.test_offset": {
  "lineno": 2481,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthEnd.test_offsets_compare_equal": {
  "lineno": 2534,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBMonthEnd.test_onOffset": {
  "lineno": 2526,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterBegin": {
  "lineno": 2996,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterBegin.test_isAnchored": {
  "lineno": 3007,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterBegin.test_offset": {
  "lineno": 3012,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BQuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterBegin.test_repr": {
  "lineno": 2999,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterEnd": {
  "lineno": 3090,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterEnd.test_isAnchored": {
  "lineno": 3101,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterEnd.test_offset": {
  "lineno": 3106,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BQuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterEnd.test_onOffset": {
  "lineno": 3166,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BQuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBQuarterEnd.test_repr": {
  "lineno": 3093,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BQuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearBegin": {
  "lineno": 3966,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BYearBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBYearBegin.test_misspecified": {
  "lineno": 3969,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BYearBegin",
   "pandas.tseries.offsets.BYearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearBegin.test_offset": {
  "lineno": 3973,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BYearBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEnd": {
  "lineno": 4144,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEnd.test_offset": {
  "lineno": 4147,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEnd.test_onOffset": {
  "lineno": 4180,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEndLagged": {
  "lineno": 4105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEndLagged.test_bad_month_fail": {
  "lineno": 4107,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BYearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEndLagged.test_offset": {
  "lineno": 4111,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEndLagged.test_onOffset": {
  "lineno": 4133,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBYearEndLagged.test_roll": {
  "lineno": 4126,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.BYearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay": {
  "lineno": 529,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.setup_method": {
  "lineno": 532,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testCall": {
  "lineno": 566,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testEQ": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testMult1": {
  "lineno": 582,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testMult2": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRAdd": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRSub": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRollback1": {
  "lineno": 588,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRollback2": {
  "lineno": 591,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRollforward1": {
  "lineno": 595,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testRollforward2": {
  "lineno": 598,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.testSub": {
  "lineno": 572,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_apply": {
  "lineno": 627,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_apply_corner": {
  "lineno": 696,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.BMonthEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_apply_large_n": {
  "lineno": 672,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_different_normalize_equals": {
  "lineno": 538,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_hash": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_mul": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_offsets_compare_equal": {
  "lineno": 699,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_onOffset": {
  "lineno": 620,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_repr": {
  "lineno": 545,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_roll_date_object": {
  "lineno": 602,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessDay.test_with_offset": {
  "lineno": 552,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.setup_method": {
  "lineno": 709,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testCall": {
  "lineno": 770,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testEQ": {
  "lineno": 756,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testMult1": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testMult2": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRAdd": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRSub": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRollback1": {
  "lineno": 795,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRollback2": {
  "lineno": 815,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRollforward1": {
  "lineno": 819,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testRollforward2": {
  "lineno": 842,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.testSub": {
  "lineno": 779,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_apply": {
  "lineno": 1103,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_apply_large_n": {
  "lineno": 1276,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_apply_nanoseconds": {
  "lineno": 1335,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_constructor_errors": {
  "lineno": 724,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.tseries.offsets.BusinessHour",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_datetimeindex": {
  "lineno": 1364,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_different_normalize_equals": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_hash": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_normalize": {
  "lineno": 857,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_offsets_compare_equal": {
  "lineno": 1358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_onOffset": {
  "lineno": 899,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_opening_time": {
  "lineno": 938,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_repr": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_roll_date_object": {
  "lineno": 846,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestBusinessHour.test_with_offset": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching": {
  "lineno": 4681,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.run_X_index_creation": {
  "lineno": 4690,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes._daterange_cache"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.setup_method": {
  "lineno": 4686,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes._daterange_cache.clear",
   "pandas.tseries.frequencies._offset_map.clear"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_all_cacheableoffsets": {
  "lineno": 4711,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CacheableOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_bmonth_end_index_creation": {
  "lineno": 4723,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes._daterange_cache",
   "pandas.tseries.offsets.BusinessMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_month_end_index_creation": {
  "lineno": 4718,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes._daterange_cache",
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_should_cache_bmonth_end": {
  "lineno": 4705,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BusinessMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_should_cache_month_end": {
  "lineno": 4702,
  "symbols_in_volume": [
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_should_cache_week_month": {
  "lineno": 4708,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCaching.test_week_of_month_index_creation": {
  "lineno": 4728,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.indexes.datetimes._daterange_cache",
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCommon._check_offsetfunc_works": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas._libs.tslib.Timestamp",
   "pandas._libs.tslib._localize_pydatetime",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.tseries.offsets.Nano",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.setup_method": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_add": {
  "lineno": 444,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_apply": {
  "lineno": 312,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_offset_freqstr": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.tseries.frequencies.get_offset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_offset_n": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_onOffset": {
  "lineno": 428,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.BusinessHour",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_pickle_v0_15_2": {
  "lineno": 476,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.io.pickle.read_pickle",
   "pandas.tseries.offsets",
   "pandas.tseries.offsets.DateOffset",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.MonthBegin",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.YearBegin",
   "pandas.util.testing.assert_dict_equal",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_return_type": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_rollback": {
  "lineno": 366,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCommon.test_rollforward": {
  "lineno": 324,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.numpy.np_datetime64_compat"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay": {
  "lineno": 1656,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.setup_method": {
  "lineno": 1659,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testCall": {
  "lineno": 1694,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testEQ": {
  "lineno": 1685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testMult1": {
  "lineno": 1711,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testMult2": {
  "lineno": 1714,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRAdd": {
  "lineno": 1698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRSub": {
  "lineno": 1708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRollback1": {
  "lineno": 1717,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRollback2": {
  "lineno": 1720,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRollforward1": {
  "lineno": 1724,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testRollforward2": {
  "lineno": 1727,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.testSub": {
  "lineno": 1701,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_apply": {
  "lineno": 1756,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_apply_corner": {
  "lineno": 1821,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.tseries.offsets.CDay",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_apply_large_n": {
  "lineno": 1802,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_calendar": {
  "lineno": 1869,
  "symbols_in_volume": [
   "calendar",
   "datetime.datetime",
   "pandas.tseries.holiday.USFederalHolidayCalendar",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_different_normalize_equals": {
  "lineno": 1666,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_hash": {
  "lineno": 1691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_holidays": {
  "lineno": 1830,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.compat.range",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_mul": {
  "lineno": 1688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_offsets_compare_equal": {
  "lineno": 1824,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_onOffset": {
  "lineno": 1749,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_pickle_compat_0_14_1": {
  "lineno": 1883,
  "symbols_in_volume": [
   "datetime.datetime",
   "os.path.join",
   "pandas.compat.range",
   "pandas.io.pickle.read_pickle",
   "pandas.tseries.offsets.CDay",
   "pandas.util.testing.get_data_path"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_repr": {
  "lineno": 1673,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_roll_date_object": {
  "lineno": 1731,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.CDay",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_roundtrip_pickle": {
  "lineno": 1874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_roundtrip_pickle._check_roundtrip": {
  "lineno": 1875,
  "symbols_in_volume": [
   "pandas.util.testing.round_trip_pickle"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_weekmask": {
  "lineno": 1841,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_weekmask_and_holidays": {
  "lineno": 1860,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessDay.test_with_offset": {
  "lineno": 1680,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour": {
  "lineno": 1400,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.setup_method": {
  "lineno": 1403,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testCall": {
  "lineno": 1463,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testEQ": {
  "lineno": 1442,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testMult1": {
  "lineno": 1480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testMult2": {
  "lineno": 1483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRAdd": {
  "lineno": 1467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRSub": {
  "lineno": 1477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRollback1": {
  "lineno": 1486,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRollback2": {
  "lineno": 1498,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRollforward1": {
  "lineno": 1502,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testRollforward2": {
  "lineno": 1510,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.testSub": {
  "lineno": 1470,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_apply": {
  "lineno": 1585,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_apply_nanoseconds": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CustomBusinessHour",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_constructor_errors": {
  "lineno": 1416,
  "symbols_in_volume": [
   "datetime.time",
   "pandas.tseries.offsets.CustomBusinessHour",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_different_normalize_equals": {
  "lineno": 1425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_hash": {
  "lineno": 1459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_normalize": {
  "lineno": 1525,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_onOffset": {
  "lineno": 1569,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_repr": {
  "lineno": 1432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_roll_date_object": {
  "lineno": 1514,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.BusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessHour.test_with_offset": {
  "lineno": 1436,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.CustomBusinessHour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin": {
  "lineno": 2063,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.testCall": {
  "lineno": 2077,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.testRollback1": {
  "lineno": 2080,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.testRollback2": {
  "lineno": 2084,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.testRollforward1": {
  "lineno": 2087,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_apply": {
  "lineno": 2115,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_apply_large_n": {
  "lineno": 2139,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthBegin",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_datetimeindex": {
  "lineno": 2169,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.holiday.USFederalHolidayCalendar",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_different_normalize_equals": {
  "lineno": 2066,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_holidays": {
  "lineno": 2159,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_onOffset": {
  "lineno": 2108,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_repr": {
  "lineno": 2073,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthBegin.test_roll_date_object": {
  "lineno": 2090,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthBegin",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd": {
  "lineno": 1949,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.testCall": {
  "lineno": 1963,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.testRollback1": {
  "lineno": 1966,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.testRollback2": {
  "lineno": 1970,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.testRollforward1": {
  "lineno": 1973,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_apply": {
  "lineno": 2001,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_apply_large_n": {
  "lineno": 2026,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthEnd",
   "pandas.tseries.offsets.CDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_datetimeindex": {
  "lineno": 2054,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.holiday.USFederalHolidayCalendar",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_different_normalize_equals": {
  "lineno": 1952,
  "symbols_in_volume": [
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_holidays": {
  "lineno": 2045,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_onOffset": {
  "lineno": 1994,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_repr": {
  "lineno": 1959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestCustomBusinessMonthEnd.test_roll_date_object": {
  "lineno": 1976,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.tseries.offsets.CBMonthEnd",
   "pandas.tseries.offsets.Day"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST": {
  "lineno": 4761,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestDST._make_timestamp": {
  "lineno": 4826,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST._test_all_offsets": {
  "lineno": 4785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST._test_offset": {
  "lineno": 4792,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST.test_all_offset_classes": {
  "lineno": 4877,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.BMonthBegin",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.tseries.offsets.BQuarterBegin",
   "pandas.tseries.offsets.BQuarterEnd",
   "pandas.tseries.offsets.BYearBegin",
   "pandas.tseries.offsets.BYearEnd",
   "pandas.tseries.offsets.CBMonthBegin",
   "pandas.tseries.offsets.CBMonthEnd",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.MonthBegin",
   "pandas.tseries.offsets.MonthEnd",
   "pandas.tseries.offsets.QuarterBegin",
   "pandas.tseries.offsets.QuarterEnd",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.YearBegin",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST.test_fallback_plural": {
  "lineno": 4833,
  "symbols_in_volume": [
   "dateutil.__version__",
   "distutils.version.LooseVersion"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST.test_fallback_singular": {
  "lineno": 4862,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST.test_springforward_plural": {
  "lineno": 4852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDST.test_springforward_singular": {
  "lineno": 4871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.setup_method": {
  "lineno": 492,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.frequencies._offset_map.clear"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.test_constructor": {
  "lineno": 506,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.test_copy": {
  "lineno": 519,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.test_eq": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.test_mul": {
  "lineno": 502,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestDateOffset.test_repr": {
  "lineno": 496,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonth": {
  "lineno": 3218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonth.test_apply": {
  "lineno": 3272,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonth.test_onOffset": {
  "lineno": 3220,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter": {
  "lineno": 3464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_equality": {
  "lineno": 3477,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.SUN"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_get_weeks": {
  "lineno": 3650,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_isAnchored": {
  "lineno": 3466,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_offset": {
  "lineno": 3491,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_onOffset": {
  "lineno": 3540,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253LastOfMonthQuarter.test_year_has_extra_week": {
  "lineno": 3613,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.range",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonth": {
  "lineno": 3304,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonth.test_apply": {
  "lineno": 3414,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.SUN"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonth.test_get_target_month_end": {
  "lineno": 3306,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekDay.SAT"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonth.test_get_year_end": {
  "lineno": 3317,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.WeekDay.FRI",
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.SUN",
   "pandas.tseries.offsets.WeekDay.TUE"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonth.test_onOffset": {
  "lineno": 3348,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.THU",
   "pandas.tseries.offsets.WeekDay.TUE"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonthQuarter": {
  "lineno": 3663,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonthQuarter.test_offset": {
  "lineno": 3726,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas.tseries.offsets.FY5253Quarter",
   "pandas.tseries.offsets.WeekDay.THU"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestFY5253NearestEndMonthQuarter.test_onOffset": {
  "lineno": 3665,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.FY5253",
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.THU",
   "pandas.tseries.offsets.WeekDay.TUE"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestLastWeekOfMonth": {
  "lineno": 2342,
  "symbols_in_volume": [
   "pandas.tseries.offsets.LastWeekOfMonth"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestLastWeekOfMonth.test_constructor": {
  "lineno": 2345,
  "symbols_in_volume": [
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestLastWeekOfMonth.test_offset": {
  "lineno": 2354,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.tseries.offsets.WeekDay.SUN"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestLastWeekOfMonth.test_onOffset": {
  "lineno": 2393,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.tseries.offsets.WeekDay.MON",
   "pandas.tseries.offsets.WeekDay.SAT",
   "pandas.tseries.offsets.WeekDay.SUN"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestMonthBegin": {
  "lineno": 2541,
  "symbols_in_volume": [
   "pandas.tseries.offsets.MonthBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestMonthBegin.test_offset": {
  "lineno": 2544,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.MonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestMonthEnd": {
  "lineno": 2582,
  "symbols_in_volume": [
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestMonthEnd.test_day_of_month": {
  "lineno": 2623,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestMonthEnd.test_normalize": {
  "lineno": 2633,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestMonthEnd.test_offset": {
  "lineno": 2585,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestMonthEnd.test_onOffset": {
  "lineno": 2640,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.MonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetAliases": {
  "lineno": 4600,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetAliases.setup_method": {
  "lineno": 4602,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._offset_map.clear"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetAliases.test_alias_equality": {
  "lineno": 4605,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.tseries.frequencies._offset_map"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetAliases.test_rule_code": {
  "lineno": 4611,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._get_freq_str",
   "pandas.tseries.frequencies._offset_map",
   "pandas.tseries.frequencies.get_freq_code",
   "pandas.tseries.frequencies.get_offset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetNames": {
  "lineno": 4481,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestOffsetNames.test_get_offset_name": {
  "lineno": 4483,
  "symbols_in_volume": [
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.tseries.offsets.LastWeekOfMonth",
   "pandas.tseries.offsets.Week",
   "pandas.tseries.offsets.WeekDay.SUN"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestParseTimeString": {
  "lineno": 4537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestParseTimeString.test_parse_time_quarter_w_dash": {
  "lineno": 4546,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.core.tools.datetimes.DateParseError",
   "pandas.core.tools.datetimes.parse_time_string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestParseTimeString.test_parse_time_string": {
  "lineno": 4539,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.core.tools.datetimes.parse_time_string"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterBegin": {
  "lineno": 3749,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterBegin.test_isAnchored": {
  "lineno": 3759,
  "symbols_in_volume": [
   "pandas.tseries.offsets.QuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterBegin.test_offset": {
  "lineno": 3764,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.QuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterBegin.test_repr": {
  "lineno": 3751,
  "symbols_in_volume": [
   "pandas.tseries.offsets.QuarterBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterEnd": {
  "lineno": 3827,
  "symbols_in_volume": [
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterEnd.test_isAnchored": {
  "lineno": 3838,
  "symbols_in_volume": [
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterEnd.test_offset": {
  "lineno": 3843,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterEnd.test_onOffset": {
  "lineno": 3904,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestQuarterEnd.test_repr": {
  "lineno": 3830,
  "symbols_in_volume": [
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestReprNames": {
  "lineno": 4736,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestReprNames.test_str_for_named_is_name": {
  "lineno": 4738,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._offset_map.clear",
   "pandas.tseries.frequencies.get_offset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin": {
  "lineno": 2821,
  "symbols_in_volume": [
   "pandas.tseries.offsets.SemiMonthBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin._get_tests": {
  "lineno": 2824,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.SemiMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin.test_apply_index": {
  "lineno": 2955,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin.test_offset": {
  "lineno": 2950,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin.test_offset_whole_year": {
  "lineno": 2909,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin.test_onOffset": {
  "lineno": 2962,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.SemiMonthBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthBegin.test_vectorized_offset_addition": {
  "lineno": 2972,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.series.Series",
   "pandas.tseries.offsets.SemiMonthBegin",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd": {
  "lineno": 2649,
  "symbols_in_volume": [
   "pandas.tseries.offsets.SemiMonthEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd._get_tests": {
  "lineno": 2652,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.SemiMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd.test_apply_index": {
  "lineno": 2779,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd.test_offset": {
  "lineno": 2774,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd.test_offset_whole_year": {
  "lineno": 2733,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd.test_onOffset": {
  "lineno": 2786,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.SemiMonthEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestSemiMonthEnd.test_vectorized_offset_addition": {
  "lineno": 2797,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.core.indexes.datetimes.DatetimeIndex",
   "pandas.core.series.Series",
   "pandas.tseries.offsets.SemiMonthEnd",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks": {
  "lineno": 4324,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Nano",
   "pandas.tseries.offsets.Second"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Hour": {
  "lineno": 4342,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Hour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Microsecond": {
  "lineno": 4398,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Micro"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Millisecond": {
  "lineno": 4377,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Milli"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_MillisecondTimestampArithmetic": {
  "lineno": 4392,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.Milli"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Minute": {
  "lineno": 4353,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Minute"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Nanosecond": {
  "lineno": 4421,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.timedelta64",
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_NanosecondGeneric": {
  "lineno": 4411,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.Timestamp",
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_Second": {
  "lineno": 4365,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Second"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_compare_ticks": {
  "lineno": 4467,
  "symbols_in_volume": [
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_tick_equalities": {
  "lineno": 4447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_tick_offset": {
  "lineno": 4463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_tick_operators": {
  "lineno": 4456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_tick_zero": {
  "lineno": 4436,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Nano"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestTicks.test_ticks": {
  "lineno": 4328,
  "symbols_in_volume": [
   "pandas._libs.tslib.Timedelta",
   "pandas.tseries.offsets",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Nano",
   "pandas.tseries.offsets.Second"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek": {
  "lineno": 2183,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Week"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_corner": {
  "lineno": 2191,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Week",
   "pandas.util.testing.assert_raises_regex",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_isAnchored": {
  "lineno": 2196,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_offset": {
  "lineno": 2202,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_offsets_compare_equal": {
  "lineno": 2248,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_onOffset": {
  "lineno": 2235,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "pandas.compat.range",
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeek.test_repr": {
  "lineno": 2186,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Week"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeekOfMonth": {
  "lineno": 2255,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestWeekOfMonth.test_constructor": {
  "lineno": 2258,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekOfMonth",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeekOfMonth.test_offset": {
  "lineno": 2274,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeekOfMonth.test_onOffset": {
  "lineno": 2327,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestWeekOfMonth.test_repr": {
  "lineno": 2270,
  "symbols_in_volume": [
   "pandas.tseries.offsets.WeekOfMonth"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearBegin": {
  "lineno": 4012,
  "symbols_in_volume": [
   "pandas.tseries.offsets.YearBegin"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestYearBegin.test_misspecified": {
  "lineno": 4015,
  "symbols_in_volume": [
   "pandas.tseries.offsets.YearBegin",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearBegin.test_offset": {
  "lineno": 4018,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.YearBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearBegin.test_onOffset": {
  "lineno": 4092,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.YearBegin"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearEnd": {
  "lineno": 4193,
  "symbols_in_volume": [
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestYearEnd.test_misspecified": {
  "lineno": 4196,
  "symbols_in_volume": [
   "pandas.tseries.offsets.YearEnd",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearEnd.test_offset": {
  "lineno": 4199,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearEnd.test_onOffset": {
  "lineno": 4232,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearEndDiffMonth": {
  "lineno": 4245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_offsets.TestYearEndDiffMonth.test_offset": {
  "lineno": 4247,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.iteritems",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.TestYearEndDiffMonth.test_onOffset": {
  "lineno": 4281,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.YearEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.assertEq": {
  "lineno": 4294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.assertOnOffset": {
  "lineno": 2176,
  "symbols_in_volume": [
   "datetime.date"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.get_all_subclasses": {
  "lineno": 4672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.get_utc_offset_hours": {
  "lineno": 4755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.makeFY5253LastOfMonth": {
  "lineno": 3214,
  "symbols_in_volume": [
   "pandas.tseries.offsets.FY5253"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.makeFY5253LastOfMonthQuarter": {
  "lineno": 3202,
  "symbols_in_volume": [
   "pandas.tseries.offsets.FY5253Quarter"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.makeFY5253NearestEndMonth": {
  "lineno": 3210,
  "symbols_in_volume": [
   "pandas.tseries.offsets.FY5253"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.makeFY5253NearestEndMonthQuarter": {
  "lineno": 3206,
  "symbols_in_volume": [
   "pandas.tseries.offsets.FY5253Quarter"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_Easter": {
  "lineno": 4308,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.tseries.offsets.Easter"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_apply_ticks": {
  "lineno": 4643,
  "symbols_in_volume": [
   "pandas.tseries.offsets.Hour"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_dateoffset_misc": {
  "lineno": 4656,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_delta_to_tick": {
  "lineno": 4649,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets._delta_to_tick"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_format": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.tools.datetimes.format"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_freq_offsets": {
  "lineno": 4664,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.tseries.offsets.BDay"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_get_offset": {
  "lineno": 4502,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies.get_offset",
   "pandas.tseries.offsets.BDay",
   "pandas.tseries.offsets.BMonthEnd",
   "pandas.tseries.offsets.Week",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_get_offset_legacy": {
  "lineno": 4530,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies.get_offset",
   "pandas.tseries.offsets.Week",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_get_standard_freq": {
  "lineno": 4563,
  "symbols_in_volume": [
   "pandas.tseries.frequencies._INVALID_FREQ_ERROR",
   "pandas.tseries.frequencies.get_standard_freq",
   "pandas.util.testing.assert_produces_warning",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_monthrange": {
  "lineno": 43,
  "symbols_in_volume": [
   "calendar.monthrange",
   "pandas._libs.tslib.monthrange",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_normalize_date": {
  "lineno": 79,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib.normalize_date"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_ole2datetime": {
  "lineno": 59,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.tools.datetimes.ole2datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_quarterly_dont_normalize": {
  "lineno": 4590,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.date.time",
   "datetime.datetime",
   "pandas.tseries.offsets",
   "pandas.tseries.offsets.BQuarterBegin",
   "pandas.tseries.offsets.BQuarterEnd",
   "pandas.tseries.offsets.QuarterBegin",
   "pandas.tseries.offsets.QuarterEnd"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_to_datetime1": {
  "lineno": 67,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.tools.datetimes.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_offsets.test_to_m8": {
  "lineno": 84,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pandas.core.indexes.datetimes._to_m8"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset": {
  "lineno": 27,
  "symbols_in_volume": [
   "datetime.tzinfo"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.dst": {
  "lineno": 40,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.tzname": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.FixedOffset.utcoffset": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneCacheKey": {
  "lineno": 1171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneCacheKey.test_cache_keys_are_distinct_for_pytz_vs_dateutil": {
  "lineno": 1173,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones._p_tz_cache_key",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pytz.common_timezones"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil": {
  "lineno": 938,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.cmptz": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.localize": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_dst": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_trans_pos_plus_1__bug": {
  "lineno": 1059,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "numpy.repeat",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_hour_overflow_dst": {
  "lineno": 977,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_hour_overflow_dst_timestamps": {
  "lineno": 1017,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_convert_tzlocal": {
  "lineno": 1158,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tz_localize_tzlocal": {
  "lineno": 1144,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.tz.tzlocal",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_tzlocal": {
  "lineno": 1130,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.tz.tzlocal",
   "pandas.Timestamp",
   "pandas._libs.tslibs.timezones.maybe_get_tz"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.test_utc_with_system_utc": {
  "lineno": 961,
  "symbols_in_volume": [
   "dateutil.tz.tzutc",
   "pandas.Timestamp",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.util.testing._skip_if_windows"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.tz": {
  "lineno": 940,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones.maybe_get_tz"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportDateutil.tzstr": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.cmptz": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.localize": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_bool": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises",
   "pytz.AmbiguousTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_bool.f": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags": {
  "lineno": 492,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.__version__",
   "distutils.version.LooseVersion",
   "numpy.array",
   "numpy.hstack",
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags.f": {
  "lineno": 546,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pytest.raises",
   "pytz.AmbiguousTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_infer": {
  "lineno": 460,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises",
   "pytz.AmbiguousTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_nat": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_astimezone": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_convert_datetime_list": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_convert_tz_aware_datetime_datetime": {
  "lineno": 747,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixed_tz": {
  "lineno": 290,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixedoffset_noname": {
  "lineno": 304,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_create_with_tz": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_date_range_localize": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_date_range_span_dst_transition": {
  "lineno": 850,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz": {
  "lineno": 914,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz_nat": {
  "lineno": 930,
  "symbols_in_volume": [
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.isna",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_dateutil_tzoffset_support": {
  "lineno": 885,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.tzinfo",
   "dateutil.tz.tzoffset",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_field_access_localize": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_fixed_offset": {
  "lineno": 731,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_fixedtz_topydatetime": {
  "lineno": 738,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas.to_datetime",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_from_records_utc": {
  "lineno": 870,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame.from_records",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_no_datetime64_dtype": {
  "lineno": 784,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.dtypes.dtypes.DatetimeTZDtype",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_frame_reset_index": {
  "lineno": 877,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_getitem_pydatetime_tz": {
  "lineno": 897,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_hongkong_tz_convert": {
  "lineno": 807,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_astype_asobject_tzinfos": {
  "lineno": 685,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_drop_dont_lose_tz": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_index_with_timezone_repr": {
  "lineno": 677,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_infer_tz": {
  "lineno": 639,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslibs.timezones.infer_tzinfo",
   "pytest.raises",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises",
   "pytz.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion_explicit": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises",
   "pytz.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_localized_at_time_between_time": {
  "lineno": 703,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_nonexistent_raise_coerce": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises",
   "pytz.exceptions.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_pass_dates_localize_to_utc": {
  "lineno": 378,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_shift_localized": {
  "lineno": 822,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_static_tzinfo": {
  "lineno": 838,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_string_index_alias_tz_aware": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_take_dont_lose_meta": {
  "lineno": 670,
  "symbols_in_volume": [
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary": {
  "lineno": 207,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary_explicit": {
  "lineno": 220,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz": {
  "lineno": 135,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz_explicit": {
  "lineno": 145,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructor_near_dst_boundary": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pytest.raises",
   "pytz.AmbiguousTimeError",
   "pytz.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_to_datetime_tzoffset": {
  "lineno": 201,
  "symbols_in_volume": [
   "datetime.tzinfo",
   "dateutil.tz.tzoffset",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_convert": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize_explicit": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_tzlocal": {
  "lineno": 770,
  "symbols_in_volume": [
   "dateutil.parser.parse",
   "dateutil.tz.tzlocal",
   "numpy.array",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.to_datetime",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_utc": {
  "lineno": 764,
  "symbols_in_volume": [
   "dateutil.parser.parse",
   "numpy.array",
   "pandas.to_datetime",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_aware_asfreq": {
  "lineno": 829,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_convert_unsorted": {
  "lineno": 814,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.bdate_range",
   "pandas.util.testing.assert_index_equal",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_dti": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.util.testing.assert_numpy_array_equal",
   "pytest.raises",
   "pytz.AmbiguousTimeError",
   "pytz.NonExistentTimeError"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_empty_series": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.Series",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tz_string": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_tzaware_datetime_to_index": {
  "lineno": 844,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_box_timestamp_and_localize": {
  "lineno": 350,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify_explicit": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_with_tz": {
  "lineno": 401,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.bdate_range",
   "pandas.tseries.offsets.Hour",
   "pytest.raises",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.test_with_tz_ambiguous_times": {
  "lineno": 439,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Minute",
   "pytest.raises",
   "pytz.AmbiguousTimeError",
   "pytz.NonExistentTimeError",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.tz": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZoneSupportPytz.tzstr": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pandas._libs.tslibs.timezones"
  ],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_align_aware": {
  "lineno": 1457,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.core.indexes.datetimes.date_range",
   "pytz.UTC"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_ambiguous_compat": {
  "lineno": 1232,
  "symbols_in_volume": [
   "dateutil.__version__",
   "distutils.version.LooseVersion",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_aware": {
  "lineno": 1488,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_aware_naive": {
  "lineno": 1547,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_append_dst": {
  "lineno": 1530,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_arith_utc_convert": {
  "lineno": 1587,
  "symbols_in_volume": [
   "numpy.random.permutation",
   "numpy.random.randn",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_series_equal",
   "pytz.UTC"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_datetimeindex_tz": {
  "lineno": 1631,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_equal_join_ensure_utc": {
  "lineno": 1567,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_index_equals_with_tz": {
  "lineno": 1300,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_intersection": {
  "lineno": 1607,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_join_aware": {
  "lineno": 1424,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.lrange",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_join_utc_convert": {
  "lineno": 1409,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_nat": {
  "lineno": 1702,
  "symbols_in_volume": [
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.NaT",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_normalize_tz": {
  "lineno": 1637,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_normalize_tz_local": {
  "lineno": 1666,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas._libs.tslibs.timezones",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.set_timezone"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_replace": {
  "lineno": 1191,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_replace.f": {
  "lineno": 1224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_replace_tzinfo": {
  "lineno": 1273,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.tzinfo",
   "pandas.Timestamp",
   "pandas.compat.PY3",
   "pandas.util.testing.set_timezone",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_series_frame_tz_convert": {
  "lineno": 1358,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_series_frame_tz_localize": {
  "lineno": 1333,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_timestamp_equality_different_timezones": {
  "lineno": 1617,
  "symbols_in_volume": [
   "pandas.compat.zip",
   "pandas.core.indexes.datetimes.date_range"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_convert_roundtrip": {
  "lineno": 1382,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_localize_naive": {
  "lineno": 1306,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tz_localize_roundtrip": {
  "lineno": 1314,
  "symbols_in_volume": [
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_index_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTimeZones.test_tzaware_offset": {
  "lineno": 1684,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pandas.DatetimeIndex",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.tseries.offsets.Hour",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib": {
  "lineno": 1737,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert": {
  "lineno": 1739,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas._libs.tslib.iNaT",
   "pandas._libs.tslib.tz_convert",
   "pandas._libs.tslibs.timezones.maybe_get_tz",
   "pandas.core.indexes.datetimes.date_range",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert.compare_local_to_utc": {
  "lineno": 1746,
  "symbols_in_volume": [
   "numpy.vectorize",
   "pandas._libs.tslib.tz_convert",
   "pandas._libs.tslib.tz_convert_single",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.tseries.test_timezones.TestTslib.test_tslib_tz_convert.compare_utc_to_local": {
  "lineno": 1740,
  "symbols_in_volume": [
   "numpy.vectorize",
   "pandas._libs.tslib.tz_convert",
   "pandas._libs.tslib.tz_convert_single",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.util.test_hashing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.util.test_hashing.TestHashing": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_hashing.TestHashing.check_equal": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.check_not_equal_with_index": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.util.hash_pandas_object"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.setup_method": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.timedelta_range"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_alread_encoded": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_alternate_encoding": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_categorical_consistency": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_categorical_with_nan_consistency": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas.Categorical.from_codes",
   "pandas.Timestamp",
   "pandas.date_range",
   "pandas.util.hash_array"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_consistency": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.util.hash_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array_errors": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.util.hash_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_array_mixed": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.hash_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_collisions": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.uint64",
   "pandas.util.hash_array",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_keys": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.hash_pandas_object"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_empty_object": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_object": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pandas.date_range",
   "pandas.util.testing.makeMissingDataframe",
   "pandas.util.testing.makeMixedDataFrame",
   "pandas.util.testing.makePeriodIndex",
   "pandas.util.testing.makeTimeDataFrame",
   "pandas.util.testing.makeTimeSeries",
   "pandas.util.testing.makeTimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_pandas_object2": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_scalar": {
  "lineno": 91,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.array",
   "numpy.nan",
   "pandas.Interval",
   "pandas.NaT",
   "pandas.Period",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.core.util.hashing._hash_scalar",
   "pandas.util.hash_array"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuple": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NaT",
   "pandas.Timestamp",
   "pandas.core.util.hashing.hash_tuple",
   "pandas.core.util.hashing.hash_tuples"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuples": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.core.util.hashing.hash_tuples",
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_hash_tuples_err": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.core.util.hashing.hash_tuples",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_invalid_key": {
  "lineno": 243,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_invalid_key.f": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.hash_pandas_object"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_multiindex_objects": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.sort",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_multiindex_unique": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.hash_pandas_object"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_pandas_errors": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.util.hash_pandas_object",
   "pandas.util.testing.makePanel",
   "pytest.raises",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.TestHashing.test_same_len_hash_collisions": {
  "lineno": 260,
  "symbols_in_volume": [
   "pandas.util.hash_array",
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_hashing.test_deprecation": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.tools.hashing.hash_array",
   "pandas.tools.hashing.hash_pandas_object",
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual._assert_almost_equal_both": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual._assert_not_almost_equal_both": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.__getitem__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.keys": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dicts": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_edge_case_ndarrays": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_inf": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.object_"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_iterables": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_null": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int16",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_mixed": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_zeros": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_object": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_pandas": {
  "lineno": 128,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_strings": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertCategoricalEqual": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertCategoricalEqual.test_categorical_equal_message": {
  "lineno": 684,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.util.testing.assert_categorical_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual._assert_equal": {
  "lineno": 585,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual._assert_not_equal": {
  "lineno": 589,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_empty_dtypes": {
  "lineno": 623,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_equal_with_different_row_order": {
  "lineno": 593,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_frame_equal_message": {
  "lineno": 630,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_index_dtype": {
  "lineno": 607,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_multiindex_dtype": {
  "lineno": 614,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertFrameEqual.test_not_equal_with_different_shape": {
  "lineno": 603,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual.test_index_equal_message": {
  "lineno": 344,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertIndexEqual.test_index_equal_metadata_message": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pandas.NaT",
   "pandas.util.testing.assert_index_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_assert_almost_equal_iterable_message": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_copy_flag": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_message": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_object_message": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Timestamp",
   "pandas.compat.is_platform_windows",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas.util.testing.assert_raises_regex",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual._assert_equal": {
  "lineno": 491,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual._assert_not_equal": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_equal": {
  "lineno": 499,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_index_dtype": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_less_precise": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_multiindex_dtype": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_not_equal": {
  "lineno": 503,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestAssertSeriesEqual.test_series_equal_message": {
  "lineno": 559,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestLocale": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestLocale.test_locale": {
  "lineno": 734,
  "symbols_in_volume": [
   "pandas.util.testing.get_locales",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestRNGContext": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestRNGContext.test_RNGContext": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.util.testing.RNGContext"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_testing.TestUtilTesting": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_testing.TestUtilTesting.test_raise_with_traceback": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.util.testing.assert_raises_regex",
   "pandas.util.testing.raise_with_traceback",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tests.util.test_util.TestDecorators": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f1": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f2": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.setup_method._f3": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_bad_deprecate_kwarg": {
  "lineno": 68,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_bad_deprecate_kwarg.f4": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.util._decorators.deprecate_kwarg"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_callable_deprecate_kwarg": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_deprecate_kwarg": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_dict_deprecate_kwarg": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestDecorators.test_missing_deprecate_kwarg": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.setup_class": {
  "lineno": 410,
  "symbols_in_volume": [
   "locale.getlocale",
   "pandas.util.testing._skip_if_windows",
   "pandas.util.testing.get_locales",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.teardown_class": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_get_locales": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.util.testing.get_locales"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_get_locales_prefix": {
  "lineno": 429,
  "symbols_in_volume": [
   "pandas.util.testing.get_locales",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestLocaleUtils.test_set_locale": {
  "lineno": 436,
  "symbols_in_volume": [
   "codecs.lookup",
   "locale.Error",
   "locale.getlocale",
   "os.environ.get",
   "pandas.core.common._all_none",
   "pandas.util.testing._can_set_locale",
   "pandas.util.testing.set_locale",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestMove.test_cannot_create_instance_of_stolenbuffer": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandas.util._move.stolenbuf",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_exactly_one_ref": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.util._move.move_into_mutable_buffer"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned": {
  "lineno": 362,
  "symbols_in_volume": [
   "pandas.compat.intern",
   "pandas.util._move.BadMove",
   "pandas.util._move.move_into_mutable_buffer",
   "pytest.mark.skipif",
   "pytest.raises",
   "sys.version_info",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned.make_string": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_interned.ref_capture": {
  "lineno": 380,
  "symbols_in_volume": [
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_more_than_one_ref": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.util._move.BadMove",
   "pandas.util._move.move_into_mutable_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestMove.test_more_than_one_ref.handle_success": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_arg_length_max_value_multiple": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_arg_length_max_value_single": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_bad_min_fname_arg_count": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_not_all_defaults": {
  "lineno": 132,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_args",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateArgs.test_validation": {
  "lineno": 149,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_args"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_bad_kwarg": {
  "lineno": 163,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_not_all_none": {
  "lineno": 178,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_validate_bool_kwarg": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas.util._validators.validate_bool_kwarg",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargs.test_validation": {
  "lineno": 199,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_kwargs"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_duplicate_argument": {
  "lineno": 291,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_args_and_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_multiple": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args_and_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_one": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.util._validators.validate_args_and_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_no_args_with_kwargs": {
  "lineno": 265,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_args_and_kwargs",
   "pandas.util.testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.TestValidateKwargsAndArgs.test_validation": {
  "lineno": 308,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.util._validators.validate_args_and_kwargs"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.test_make_signature": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandas.util._decorators.deprecate_kwarg",
   "pandas.util._decorators.make_signature",
   "pandas.util._validators.validate_kwargs"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.test_numpy_errstate_is_default": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.geterr"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.test_rands": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pandas.tests.util.test_util.test_rands_array": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.util.testing.rands_array"
  ],
  "type": "function"
 },
 "pandas.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tools.hashing": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "pandas.tools.hashing.outer": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tools.hashing.outer.wrapper": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.util",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tools.merge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tools.merge.concat_wrap": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tools.merge.concat_wrap.wrapper": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.concat",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tools.plotting": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.plotting",
   "sys.modules"
  ],
  "type": "module"
 },
 "pandas.tools.plotting.outer": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tools.plotting.outer.wrapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.plotting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tseries.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tseries.converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tseries.converter.register": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.plotting._converter.register",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.tslib._MONTHS",
   "pandas._libs.tslib._MONTH_ALIASES",
   "pandas._libs.tslib._MONTH_NUMBERS",
   "pandas._libs.tslib._get_rule_month",
   "pandas.compat.long",
   "pandas.tseries.offsets.CDay",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Hour",
   "pandas.tseries.offsets.Micro",
   "pandas.tseries.offsets.Milli",
   "pandas.tseries.offsets.Minute",
   "pandas.tseries.offsets.Nano",
   "pandas.tseries.offsets.Second"
  ],
  "type": "module"
 },
 "pandas.tseries.frequencies.FreqGroup": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.frequencies.Resolution": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "class"
 },
 "pandas.tseries.frequencies.Resolution.get_freq": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_freq_group": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_reso": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_reso_from_freq": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_str": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_str_from_freq": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.Resolution.get_stride_from_decimal": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.frequencies._FrequencyInferer.__init__": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas._libs.tslib.tz_convert"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._get_annual_rule": {
  "lineno": 796,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._get_monthly_rule": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._get_quarterly_rule": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._get_wom_rule": {
  "lineno": 838,
  "symbols_in_volume": [
   "pandas.core.algorithms.unique"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._infer_daily_rule": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer._is_business_daily": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.floor_divide",
   "numpy.mod"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.day_deltas": {
  "lineno": 693,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.deltas": {
  "lineno": 641,
  "symbols_in_volume": [
   "pandas._libs.tslib.unique_deltas",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.deltas_asi8": {
  "lineno": 645,
  "symbols_in_volume": [
   "pandas._libs.tslib.unique_deltas",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.fields": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas._libs.tslib.build_field_sarray",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.get_freq": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.hour_deltas": {
  "lineno": 697,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.is_unique": {
  "lineno": 649,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.is_unique_asi8": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.mdiffs": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas._libs.tslib.unique_deltas",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.month_position_check": {
  "lineno": 709,
  "symbols_in_volume": [
   "calendar.monthrange",
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.rep_stamp": {
  "lineno": 705,
  "symbols_in_volume": [
   "pandas._libs.lib.Timestamp",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._FrequencyInferer.ydiffs": {
  "lineno": 755,
  "symbols_in_volume": [
   "pandas._libs.tslib.unique_deltas",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._TimedeltaFrequencyInferer": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.frequencies._TimedeltaFrequencyInferer._infer_daily_rule": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._get_freq_str": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandas._libs.tslibs.frequencies._reverse_period_code_map.get"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._is_annual": {
  "lineno": 1014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._is_monthly": {
  "lineno": 1030,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._is_multiple": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._is_quarterly": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._is_weekly": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._maybe_add_count": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies._maybe_coerce_freq": {
  "lineno": 882,
  "symbols_in_volume": [
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies._quarter_months_conform": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_base_alias": {
  "lineno": 502,
  "symbols_in_volume": [
   "pandas._libs.tslibs.frequencies._base_and_stride"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_freq": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas._libs.tslibs.frequencies.get_freq_code",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_freq_group": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas._libs.tslibs.frequencies.get_freq_code",
   "pandas.compat.string_types",
   "pandas.tseries.offsets.DateOffset"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_offset": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas._libs.tslibs.frequencies._INVALID_FREQ_ERROR.format",
   "pandas._libs.tslibs.frequencies._dont_uppercase",
   "pandas._libs.tslibs.frequencies._lite_rule_alias.get",
   "pandas.tseries.offsets.prefix_mapping"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_period_alias": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_standard_freq": {
  "lineno": 543,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.get_to_timestamp_base": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.infer_freq": {
  "lineno": 558,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Float64Index",
   "pandas.Index",
   "pandas.Int64Index",
   "pandas.TimedeltaIndex",
   "pandas.core.dtypes.common.is_datetime64_dtype",
   "pandas.core.dtypes.common.is_period_arraylike",
   "pandas.core.dtypes.common.is_timedelta64_dtype",
   "pandas.core.dtypes.generic.ABCSeries",
   "pytz.AmbiguousTimeError"
  ],
  "type": "function"
 },
 "pandas.tseries.frequencies.is_subperiod": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.is_superperiod": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.frequencies.to_offset": {
  "lineno": 391,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.fabs",
   "pandas._libs.tslib.Timedelta",
   "pandas._libs.tslibs.frequencies._INVALID_FREQ_ERROR.format",
   "pandas._libs.tslibs.frequencies._base_and_stride",
   "pandas._libs.tslibs.frequencies._lite_rule_alias.get",
   "pandas._libs.tslibs.frequencies.opattern",
   "pandas.compat.string_types",
   "pandas.compat.zip",
   "pandas.tseries.offsets.DateOffset",
   "pandas.util._decorators.deprecate_kwarg",
   "re.split"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.MO",
   "dateutil.relativedelta.TH",
   "pandas.DateOffset",
   "pandas.tseries.offsets.Day",
   "pandas.tseries.offsets.Easter"
  ],
  "type": "module"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar": {
  "lineno": 322,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp",
   "pandas.compat.add_metaclass"
  ],
  "type": "class"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.__init__": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.holidays": {
  "lineno": 360,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge_class": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.rule_from_name": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.holiday.Holiday.__init__": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.__repr__": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._apply_rule": {
  "lineno": 260,
  "symbols_in_volume": [
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._reference_dates": {
  "lineno": 232,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DateOffset",
   "pandas.DatetimeIndex",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.dates": {
  "lineno": 189,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.in1d",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarFactory": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass.__new__": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.USFederalHolidayCalendar": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.holiday.after_nearest_workday": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.before_nearest_workday": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.get_calendar": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.nearest_workday": {
  "lineno": 71,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday": {
  "lineno": 11,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday_or_tuesday": {
  "lineno": 23,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.next_workday": {
  "lineno": 83,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.previous_friday": {
  "lineno": 38,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.previous_workday": {
  "lineno": 94,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.register": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.holiday.sunday_to_monday": {
  "lineno": 49,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.holiday.weekend_to_monday": {
  "lineno": 58,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas._libs.tslib._MONTH_ALIASES",
   "pandas._libs.tslib._delta_to_nanoseconds"
  ],
  "type": "module"
 },
 "pandas.tseries.offsets.ApplyTypeError": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BQuarterBegin": {
  "lineno": 1917,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BQuarterBegin.apply": {
  "lineno": 1924,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BQuarterEnd": {
  "lineno": 1866,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BQuarterEnd.apply": {
  "lineno": 1878,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib._localize_pydatetime",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BQuarterEnd.onOffset": {
  "lineno": 1905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BYearBegin": {
  "lineno": 2085,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BYearBegin.apply": {
  "lineno": 2091,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BYearEnd": {
  "lineno": 2049,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BYearEnd.apply": {
  "lineno": 2055,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessDay.__init__": {
  "lineno": 602,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay._offset_str": {
  "lineno": 608,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay._offset_str.get_str": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay.apply": {
  "lineno": 639,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay.apply_index": {
  "lineno": 676,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessDay.onOffset": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHour": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessHour.__init__": {
  "lineno": 926,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHour.next_bday": {
  "lineno": 932,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessHourMixin.__init__": {
  "lineno": 697,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._get_business_hours_by_sec": {
  "lineno": 763,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._get_daytime_flag": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._next_opening_time": {
  "lineno": 730,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._onOffset": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._prev_opening_time": {
  "lineno": 748,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._repr_attrs": {
  "lineno": 906,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin._validate_time": {
  "lineno": 705,
  "symbols_in_volume": [
   "datetime.time",
   "datetime.time.strptime",
   "pandas.compat.string_types"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin.apply": {
  "lineno": 801,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin.onOffset": {
  "lineno": 876,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin.rollback": {
  "lineno": 778,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessHourMixin.rollforward": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMixin": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessMixin.__getstate__": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMixin.__setstate__": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMixin._repr_attrs": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMixin.offset": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMonthBegin": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessMonthBegin.apply": {
  "lineno": 1356,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMonthBegin.onOffset": {
  "lineno": 1377,
  "symbols_in_volume": [
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.BusinessMonthEnd": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.BusinessMonthEnd.apply": {
  "lineno": 1333,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CacheableOffset": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.CustomBusinessDay": {
  "lineno": 942,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.CustomBusinessDay.__init__": {
  "lineno": 963,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessDay.apply": {
  "lineno": 982,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.combine",
   "datetime.timedelta",
   "numpy.busday_offset",
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessDay.apply_index": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessDay.onOffset": {
  "lineno": 1013,
  "symbols_in_volume": [
   "numpy.is_busday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessHour": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.CustomBusinessHour.__init__": {
  "lineno": 1030,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessHour.next_bday": {
  "lineno": 1045,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthBegin": {
  "lineno": 1462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.CustomBusinessMonthBegin.__init__": {
  "lineno": 1484,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthBegin.apply": {
  "lineno": 1513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthBegin.cbday": {
  "lineno": 1501,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset": {
  "lineno": 1506,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthEnd": {
  "lineno": 1391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.CustomBusinessMonthEnd.__init__": {
  "lineno": 1413,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthEnd.apply": {
  "lineno": 1440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthEnd.cbday": {
  "lineno": 1428,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset": {
  "lineno": 1433,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.DateOffset.__add__": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDatetimeIndex",
   "pandas.core.dtypes.generic.ABCPeriod",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__call__": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__eq__": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__hash__": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__init__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__mul__": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__ne__": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__neg__": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__radd__": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__repr__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__rmul__": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__rsub__": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCDatetimeIndex",
   "pandas.core.dtypes.generic.ABCSeries"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.__sub__": {
  "lineno": 405,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._beg_apply_index": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._determine_offset": {
  "lineno": 200,
  "symbols_in_volume": [
   "datetime.timedelta",
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._end_apply_index": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.tseries.frequencies.get_freq_code"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._offset_str": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._params": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._prefix": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._repr_attrs": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset._should_cache": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.apply": {
  "lineno": 221,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas._libs.tslib._localize_pydatetime",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.apply_index": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas._libs.Timedelta",
   "pandas._libs.tslib.shift_months"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.copy": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.freqstr": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.isAnchored": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.name": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.nanos": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.onOffset": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.rollback": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.rollforward": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.DateOffset.rule_code": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Day": {
  "lineno": 2808,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.Easter": {
  "lineno": 2643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.Easter.apply": {
  "lineno": 2652,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.easter.easter",
   "pandas._libs.tslib._localize_pydatetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Easter.onOffset": {
  "lineno": 2676,
  "symbols_in_volume": [
   "datetime.date",
   "dateutil.easter.easter"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253": {
  "lineno": 2230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.FY5253.__init__": {
  "lineno": 2273,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._from_name": {
  "lineno": 2471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._get_prefix": {
  "lineno": 2436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._get_suffix_prefix": {
  "lineno": 2439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._get_year_end_last": {
  "lineno": 2425,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._get_year_end_nearest": {
  "lineno": 2412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._offset_lwom": {
  "lineno": 2308,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._parse_suffix": {
  "lineno": 2452,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._relativedelta_backward": {
  "lineno": 2300,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "dateutil.relativedelta.weekday",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253._relativedelta_forward": {
  "lineno": 2292,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "dateutil.relativedelta.weekday",
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.apply": {
  "lineno": 2333,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas._libs.tslib._localize_pydatetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.get_rule_code_suffix": {
  "lineno": 2445,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.get_target_month_end": {
  "lineno": 2406,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.get_year_end": {
  "lineno": 2400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.isAnchored": {
  "lineno": 2315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.onOffset": {
  "lineno": 2320,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253.rule_code": {
  "lineno": 2430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter": {
  "lineno": 2476,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.FY5253Quarter.__init__": {
  "lineno": 2523,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter._from_name": {
  "lineno": 2637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter._offset": {
  "lineno": 2540,
  "symbols_in_volume": [
   "pandas.util._decorators.cache_readonly"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.apply": {
  "lineno": 2550,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.get_weeks": {
  "lineno": 2591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.isAnchored": {
  "lineno": 2547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.onOffset": {
  "lineno": 2613,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.rule_code": {
  "lineno": 2630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week": {
  "lineno": 2601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Hour": {
  "lineno": 2813,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.LastWeekOfMonth": {
  "lineno": 1743,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.LastWeekOfMonth.__init__": {
  "lineno": 1762,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.LastWeekOfMonth._from_name": {
  "lineno": 1817,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.LastWeekOfMonth.apply": {
  "lineno": 1776,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.LastWeekOfMonth.getOffsetOfMonth": {
  "lineno": 1796,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.LastWeekOfMonth.onOffset": {
  "lineno": 1804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.LastWeekOfMonth.rule_code": {
  "lineno": 1809,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Micro": {
  "lineno": 2833,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.Milli": {
  "lineno": 2828,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.Minute": {
  "lineno": 2818,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.MonthBegin": {
  "lineno": 1098,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.MonthBegin.apply": {
  "lineno": 1101,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthBegin.apply_index": {
  "lineno": 1110,
  "symbols_in_volume": [
   "pandas._libs.tslib.shift_months"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthBegin.onOffset": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthEnd": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.MonthEnd.apply": {
  "lineno": 1073,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthEnd.apply_index": {
  "lineno": 1084,
  "symbols_in_volume": [
   "pandas._libs.tslib.shift_months"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthEnd.onOffset": {
  "lineno": 1089,
  "symbols_in_volume": [
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.MonthOffset": {
  "lineno": 1058,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.MonthOffset.name": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Nano": {
  "lineno": 2838,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.QuarterBegin": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.QuarterBegin.apply": {
  "lineno": 1998,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterBegin.apply_index": {
  "lineno": 2016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterEnd": {
  "lineno": 1953,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.QuarterEnd.apply": {
  "lineno": 1963,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterEnd.apply_index": {
  "lineno": 1981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterEnd.onOffset": {
  "lineno": 1985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterOffset": {
  "lineno": 1827,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.QuarterOffset.__init__": {
  "lineno": 1838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterOffset._from_name": {
  "lineno": 1850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterOffset.isAnchored": {
  "lineno": 1847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.QuarterOffset.rule_code": {
  "lineno": 1860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Second": {
  "lineno": 2823,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.SemiMonthBegin": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.SemiMonthBegin._apply": {
  "lineno": 1292,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthBegin._apply_index_days": {
  "lineno": 1326,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthBegin._get_roll": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthBegin.onOffset": {
  "lineno": 1287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthEnd": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.SemiMonthEnd._apply": {
  "lineno": 1235,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthEnd._apply_index_days": {
  "lineno": 1267,
  "symbols_in_volume": [
   "pandas._libs.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthEnd._get_roll": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthEnd.onOffset": {
  "lineno": 1229,
  "symbols_in_volume": [
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.SemiMonthOffset.__init__": {
  "lineno": 1128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset._apply": {
  "lineno": 1170,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset._apply_index_days": {
  "lineno": 1208,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset._from_name": {
  "lineno": 1141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset._get_roll": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pandas.core.common.AbstractMethodError"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset.apply": {
  "lineno": 1150,
  "symbols_in_volume": [
   "dateutil.relativedelta.relativedelta",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset.apply_index": {
  "lineno": 1174,
  "symbols_in_volume": [
   "datetime.time",
   "pandas._libs.Timedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.SemiMonthOffset.rule_code": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.SingleConstructorOffset": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.SingleConstructorOffset._from_name": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick": {
  "lineno": 2692,
  "symbols_in_volume": [
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "pandas._libs.Timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.Tick.__add__": {
  "lineno": 2702,
  "symbols_in_volume": [
   "pandas.core.dtypes.generic.ABCPeriod"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.__eq__": {
  "lineno": 2718,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.__hash__": {
  "lineno": 2731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.__ne__": {
  "lineno": 2734,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas.tseries.frequencies.to_offset"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.apply": {
  "lineno": 2753,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "numpy.datetime64",
   "pandas._libs.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.delta": {
  "lineno": 2745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.isAnchored": {
  "lineno": 2779,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Tick.nanos": {
  "lineno": 2749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Week": {
  "lineno": 1536,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "class"
 },
 "pandas.tseries.offsets.Week.__init__": {
  "lineno": 1548,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Week._from_name": {
  "lineno": 1611,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Week.apply": {
  "lineno": 1563,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.Week.apply_index": {
  "lineno": 1589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Week.isAnchored": {
  "lineno": 1560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Week.onOffset": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.Week.rule_code": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekDay": {
  "lineno": 1620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.WeekOfMonth": {
  "lineno": 1643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.WeekOfMonth.__init__": {
  "lineno": 1664,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekOfMonth._from_name": {
  "lineno": 1731,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekOfMonth.apply": {
  "lineno": 1682,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.relativedelta.relativedelta"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekOfMonth.getOffsetOfMonth": {
  "lineno": 1706,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekOfMonth.onOffset": {
  "lineno": 1716,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.WeekOfMonth.rule_code": {
  "lineno": 1722,
  "symbols_in_volume": [
   "dateutil.relativedelta.weekday"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin": {
  "lineno": 2180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.YearBegin.apply": {
  "lineno": 2185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin.apply._decrement": {
  "lineno": 2194,
  "symbols_in_volume": [
   "datetime.date.day",
   "datetime.date.hour",
   "datetime.date.microsecond",
   "datetime.date.minute",
   "datetime.date.month",
   "datetime.date.second",
   "datetime.date.year",
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin.apply._increment": {
  "lineno": 2187,
  "symbols_in_volume": [
   "datetime.date.hour",
   "datetime.date.microsecond",
   "datetime.date.minute",
   "datetime.date.month",
   "datetime.date.second",
   "datetime.date.year",
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin.apply._rollf": {
  "lineno": 2202,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.date.day",
   "datetime.date.month"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin.apply_index": {
  "lineno": 2218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearBegin.onOffset": {
  "lineno": 2224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd": {
  "lineno": 2117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.YearEnd.apply": {
  "lineno": 2122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd.apply._decrement": {
  "lineno": 2140,
  "symbols_in_volume": [
   "datetime.date.hour",
   "datetime.date.microsecond",
   "datetime.date.minute",
   "datetime.date.month",
   "datetime.date.second",
   "datetime.date.year",
   "datetime.datetime",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd.apply._increment": {
  "lineno": 2124,
  "symbols_in_volume": [
   "datetime.date.day",
   "datetime.date.hour",
   "datetime.date.microsecond",
   "datetime.date.minute",
   "datetime.date.month",
   "datetime.date.second",
   "datetime.date.year",
   "datetime.datetime",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd.apply._rollf": {
  "lineno": 2147,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.date.day",
   "datetime.date.month",
   "datetime.date.year",
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd.apply_index": {
  "lineno": 2168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearEnd.onOffset": {
  "lineno": 2173,
  "symbols_in_volume": [
   "pandas._libs.tslib.monthrange"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.YearOffset": {
  "lineno": 2023,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.tseries.offsets.YearOffset.__init__": {
  "lineno": 2027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearOffset._from_name": {
  "lineno": 2036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.YearOffset.rule_code": {
  "lineno": 2043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._delta_to_tick": {
  "lineno": 2783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._get_calendar": {
  "lineno": 2854,
  "symbols_in_volume": [
   "numpy.busdaycalendar"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets._get_firstbday": {
  "lineno": 2899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._is_normalized": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._tick_comp": {
  "lineno": 2685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._tick_comp.f": {
  "lineno": 2686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets._to_dt64": {
  "lineno": 2884,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas._libs.Timestamp",
   "pandas._libs.tslib.pydt_to_i8",
   "pandas._libs.tslib.tz_convert_single"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.apply_index_wraps": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.apply_index_wraps.wrapper": {
  "lineno": 109,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.apply_wraps": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.apply_wraps.wrapper": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "functools.wraps",
   "numpy.datetime64",
   "pandas._libs.OutOfBoundsDatetime",
   "pandas._libs.Timestamp",
   "pandas._libs.tslib.NaT",
   "pandas._libs.tslib._localize_pydatetime",
   "pandas._libs.tslib.tz_convert_single",
   "pandas.core.tools.datetimes.normalize_date"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.as_datetime": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.tseries.offsets.as_timestamp": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas._libs.OutOfBoundsDatetime",
   "pandas._libs.Timestamp"
  ],
  "type": "function"
 },
 "pandas.tseries.offsets.generate_range": {
  "lineno": 2913,
  "symbols_in_volume": [
   "pandas.core.tools.datetimes.to_datetime",
   "pandas.tseries.frequencies.get_offset"
  ],
  "type": "function"
 },
 "pandas.tseries.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tseries.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.tseries.util.isleapyear": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.logical_and",
   "numpy.logical_or",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tseries.util.pivot_annual": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.nan",
   "pandas.compat.lrange",
   "pandas.core.algorithms.unique1d",
   "pandas.core.dtypes.common._ensure_platform_int",
   "pandas.core.frame.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.tslib": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.types.common": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.types.concat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.types.concat.union_categoricals": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.api.types.union_categoricals",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.util._decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.util._decorators.Appender": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util._decorators.Appender.__call__": {
  "lineno": 240,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pandas.util._decorators.Appender.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.Substitution": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util._decorators.Substitution.__call__": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.Substitution.__init__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.Substitution.from_params": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.Substitution.update": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.deprecate": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.deprecate.wrapper": {
  "lineno": 34,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.compat.callable"
  ],
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.deprecate_kwarg._deprecate_kwarg.wrapper": {
  "lineno": 87,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util._decorators.docstring_wrapper.__call__": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__doc__": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__get__": {
  "lineno": 308,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandas.util._decorators.docstring_wrapper.__init__": {
  "lineno": 300,
  "symbols_in_volume": [
   "functools.update_wrapper"
  ],
  "type": "function"
 },
 "pandas.util._decorators.indent": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.make_signature": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.compat.signature"
  ],
  "type": "function"
 },
 "pandas.util._decorators.rewrite_axis_style_signature": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._decorators.rewrite_axis_style_signature.decorate": {
  "lineno": 124,
  "symbols_in_volume": [
   "inspect.Parameter",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.Signature",
   "pandas.compat.PY2"
  ],
  "type": "function"
 },
 "pandas.util._decorators.rewrite_axis_style_signature.decorate.wrapper": {
  "lineno": 125,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "pandas.util._depr_module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.util._depr_module._DeprecatedModule": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util._depr_module._DeprecatedModule.__dir__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__getattr__": {
  "lineno": 48,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule.__repr__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._depr_module._DeprecatedModule._import_deprmod": {
  "lineno": 96,
  "symbols_in_volume": [
   "importlib.import_module",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pandas.util._doctools": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.show",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.concat"
  ],
  "type": "module"
 },
 "pandas.util._doctools.TablePlotter": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util._doctools.TablePlotter.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._conv": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._get_cells": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._insert_index": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._make_table": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "pandas.plotting.table"
  ],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter._shape": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._doctools.TablePlotter.plot": {
  "lineno": 43,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.subplot",
   "numpy.max"
  ],
  "type": "function"
 },
 "pandas.util._print_versions": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "module"
 },
 "pandas.util._print_versions.get_sys_info": {
  "lineno": 11,
  "symbols_in_volume": [
   "locale.getlocale",
   "os.environ.get",
   "os.path.isdir",
   "platform.uname",
   "struct.calcsize",
   "subprocess.PIPE",
   "subprocess.Popen",
   "sys.byteorder",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandas.util._print_versions.main": {
  "lineno": 140,
  "symbols_in_volume": [
   "optparse.OptionParser"
  ],
  "type": "function"
 },
 "pandas.util._print_versions.show_versions": {
  "lineno": 59,
  "symbols_in_volume": [
   "codecs.open",
   "importlib.import_module",
   "simplejson.dump",
   "sys.modules"
  ],
  "type": "function"
 },
 "pandas.util._tester": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname"
  ],
  "type": "module"
 },
 "pandas.util._tester.test": {
  "lineno": 10,
  "symbols_in_volume": [
   "pytest.main",
   "sys.exit"
  ],
  "type": "function"
 },
 "pandas.util._validators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas.util._validators._check_arg_length": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._validators._check_for_default_values": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool"
  ],
  "type": "function"
 },
 "pandas.util._validators._check_for_invalid_keys": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._validators.validate_args": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._validators.validate_args_and_kwargs": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util._validators.validate_axis_style_args": {
  "lineno": 230,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util._validators.validate_bool_kwarg": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas.core.dtypes.common.is_bool"
  ],
  "type": "function"
 },
 "pandas.util._validators.validate_kwargs": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.decorators": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "pandas.util.hashing": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "pandas.util.hashing.outer": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.hashing.outer.wrapper": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas.util",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas.util.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "numpy.str_",
   "numpy.unicode_",
   "pandas.compat.ResourceWarning",
   "pandas.compat.httplib.HTTPException",
   "pandas.compat.lrange",
   "pandas.compat.map",
   "pandas.compat.u",
   "pandas.compat.unichr",
   "string.ascii_letters",
   "string.digits",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pandas.util.testing.RNGContext": {
  "lineno": 2620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util.testing.RNGContext.__enter__": {
  "lineno": 2640,
  "symbols_in_volume": [
   "numpy.random.get_state",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "pandas.util.testing.RNGContext.__exit__": {
  "lineno": 2645,
  "symbols_in_volume": [
   "numpy.random.set_state"
  ],
  "type": "function"
 },
 "pandas.util.testing.RNGContext.__init__": {
  "lineno": 2637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SimpleMock": {
  "lineno": 2370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util.testing.SimpleMock.__getattribute__": {
  "lineno": 2395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SimpleMock.__init__": {
  "lineno": 2386,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.util.testing.SubclassedCategorical": {
  "lineno": 2760,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "class"
 },
 "pandas.util.testing.SubclassedCategorical._constructor": {
  "lineno": 2762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedDataFrame": {
  "lineno": 2724,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "class"
 },
 "pandas.util.testing.SubclassedDataFrame._constructor": {
  "lineno": 2727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedDataFrame._constructor_sliced": {
  "lineno": 2731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSeries": {
  "lineno": 2712,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "class"
 },
 "pandas.util.testing.SubclassedSeries._constructor": {
  "lineno": 2715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSeries._constructor_expanddim": {
  "lineno": 2719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSparseDataFrame": {
  "lineno": 2748,
  "symbols_in_volume": [
   "pandas.SparseDataFrame"
  ],
  "type": "class"
 },
 "pandas.util.testing.SubclassedSparseDataFrame._constructor": {
  "lineno": 2751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSparseDataFrame._constructor_sliced": {
  "lineno": 2755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSparseSeries": {
  "lineno": 2736,
  "symbols_in_volume": [
   "pandas.SparseSeries"
  ],
  "type": "class"
 },
 "pandas.util.testing.SubclassedSparseSeries._constructor": {
  "lineno": 2739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.SubclassedSparseSeries._constructor_expanddim": {
  "lineno": 2743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.TestSubDict": {
  "lineno": 2083,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util.testing.TestSubDict.__init__": {
  "lineno": 2085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing._AssertRaisesContextmanager": {
  "lineno": 2468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas.util.testing._AssertRaisesContextmanager.__enter__": {
  "lineno": 2492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing._AssertRaisesContextmanager.__exit__": {
  "lineno": 2495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing._AssertRaisesContextmanager.__init__": {
  "lineno": 2473,
  "symbols_in_volume": [
   "re.DOTALL",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.util.testing._AssertRaisesContextmanager.exception_matches": {
  "lineno": 2504,
  "symbols_in_volume": [
   "pandas.compat.raise_with_traceback"
  ],
  "type": "function"
 },
 "pandas.util.testing._can_set_locale": {
  "lineno": 591,
  "symbols_in_volume": [
   "locale.Error"
  ],
  "type": "function"
 },
 "pandas.util.testing._check_if_lzma": {
  "lineno": 354,
  "symbols_in_volume": [
   "pandas.compat.import_lzma"
  ],
  "type": "function"
 },
 "pandas.util.testing._check_isinstance": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing._create_missing_idx": {
  "lineno": 2001,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.random",
   "numpy.random.RandomState",
   "numpy.round"
  ],
  "type": "function"
 },
 "pandas.util.testing._create_missing_idx._gen_unique_rand": {
  "lineno": 2014,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandas.util.testing._default_locale_getter": {
  "lineno": 489,
  "symbols_in_volume": [
   "subprocess.CalledProcessError"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_32bit": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.compat.is_platform_32bit",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_has_locale": {
  "lineno": 419,
  "symbols_in_volume": [
   "locale.getlocale",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_mpl_1_5": {
  "lineno": 335,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "matplotlib.__version__",
   "matplotlib.use",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_ipython": {
  "lineno": 446,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_localpath": {
  "lineno": 397,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_lzma": {
  "lineno": 361,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_mock": {
  "lineno": 435,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_mpl": {
  "lineno": 328,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_pathlib": {
  "lineno": 389,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_scipy": {
  "lineno": 346,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_no_xarray": {
  "lineno": 366,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.importorskip",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_not_us_locale": {
  "lineno": 427,
  "symbols_in_volume": [
   "locale.getlocale",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_windows": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.compat.is_platform_windows",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._skip_if_windows_python_3": {
  "lineno": 377,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.compat.is_platform_windows",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing._valid_locales": {
  "lineno": 613,
  "symbols_in_volume": [
   "locale.normalize",
   "pandas.compat.filter",
   "pandas.compat.map"
  ],
  "type": "function"
 },
 "pandas.util.testing.add_nans": {
  "lineno": 2067,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "pandas.util.testing.add_nans_panel4d": {
  "lineno": 2076,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.all_index_generator": {
  "lineno": 1695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.all_timeseries_index_generator": {
  "lineno": 1711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_almost_equal": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas._libs.testing.assert_almost_equal",
   "pandas.core.dtypes.common.is_bool",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_attr_equal": {
  "lineno": 972,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandas.core.dtypes.common.is_number"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_categorical_equal": {
  "lineno": 1036,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_class_equal": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_class_equal.repr_class": {
  "lineno": 947,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_contains_all": {
  "lineno": 1603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_copy": {
  "lineno": 1608,
  "symbols_in_volume": [
   "pandas.compat.zip"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_dict_equal": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas._libs.testing.assert_dict_equal"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_frame_equal": {
  "lineno": 1289,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_index_equal": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.round",
   "numpy.sum",
   "pandas.Index",
   "pandas.IntervalIndex",
   "pandas.PeriodIndex",
   "pandas._libs.testing.assert_almost_equal",
   "pandas.compat.range",
   "pandas.core.dtypes.common.is_categorical_dtype"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_index_equal._check_types": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_index_equal._get_ilevel_values": {
  "lineno": 873,
  "symbols_in_volume": [
   "pandas.core.algorithms.take_1d"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_is_valid_plot_return_object": {
  "lineno": 1011,
  "symbols_in_volume": [
   "matplotlib.pyplot.Artist",
   "matplotlib.pyplot.Axes",
   "numpy.ndarray",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_numpy_array_equal": {
  "lineno": 1096,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_numpy_array_equal._get_base": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_numpy_array_equal._raise": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.compat.zip",
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_panelnd_equal": {
  "lineno": 1400,
  "symbols_in_volume": [
   "pandas.core.dtypes.missing.array_equivalent"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_produces_warning": {
  "lineno": 2546,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "inspect.getframeinfo",
   "inspect.stack",
   "pandas.core.dtypes.common.is_list_like",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_raises_regex": {
  "lineno": 2423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.assert_series_equal": {
  "lineno": 1172,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.IntervalIndex",
   "pandas.Series",
   "pandas._libs.testing.assert_almost_equal",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.core.dtypes.common.is_datetimelike_v_numeric",
   "pandas.core.dtypes.common.is_datetimelike_v_object",
   "pandas.core.dtypes.common.is_interval_dtype",
   "pandas.core.dtypes.common.needs_i8_conversion"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_sp_array_equal": {
  "lineno": 1475,
  "symbols_in_volume": [
   "pandas.SparseArray",
   "pandas._libs.sparse.SparseIndex"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_sp_frame_equal": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_sp_list_equal": {
  "lineno": 1593,
  "symbols_in_volume": [
   "pandas.SparseList"
  ],
  "type": "function"
 },
 "pandas.util.testing.assert_sp_series_equal": {
  "lineno": 1506,
  "symbols_in_volume": [
   "pandas.SparseSeries"
  ],
  "type": "function"
 },
 "pandas.util.testing.can_connect": {
  "lineno": 2213,
  "symbols_in_volume": [
   "pandas.io.common.urlopen"
  ],
  "type": "function"
 },
 "pandas.util.testing.capture_stderr": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.capture_stderr.wrapper": {
  "lineno": 725,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.compat.StringIO",
   "sys.__stderr__",
   "sys.stderr"
  ],
  "type": "function"
 },
 "pandas.util.testing.capture_stdout": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.capture_stdout.wrapper": {
  "lineno": 677,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.compat.StringIO",
   "sys.__stdout__",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pandas.util.testing.check_output": {
  "lineno": 454,
  "symbols_in_volume": [
   "subprocess.CalledProcessError",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pandas.util.testing.close": {
  "lineno": 312,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.get_fignums"
  ],
  "type": "function"
 },
 "pandas.util.testing.debug": {
  "lineno": 739,
  "symbols_in_volume": [
   "IPython.core.debugger.Pdb",
   "pdb.Pdb"
  ],
  "type": "function"
 },
 "pandas.util.testing.ensure_clean": {
  "lineno": 768,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.close",
   "os.path.dirname",
   "os.path.exists",
   "os.remove",
   "pytest.skip",
   "tempfile.TemporaryFile",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "pandas.util.testing.equalContents": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.getArangeMat": {
  "lineno": 1629,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandas.util.testing.getCols": {
  "lineno": 1625,
  "symbols_in_volume": [
   "string.ascii_uppercase"
  ],
  "type": "function"
 },
 "pandas.util.testing.getMixedTypeDict": {
  "lineno": 1778,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.util.testing.getPeriodData": {
  "lineno": 1763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.getSeriesData": {
  "lineno": 1742,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.getTimeSeriesData": {
  "lineno": 1759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.get_data_path": {
  "lineno": 816,
  "symbols_in_volume": [
   "inspect.currentframe",
   "inspect.getouterframes",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas.util.testing.get_locales": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.compat.PY3",
   "pandas.options.display.encoding",
   "re.compile"
  ],
  "type": "function"
 },
 "pandas.util.testing.is_sorted": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sort",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.isiterable": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.makeBoolIndex": {
  "lineno": 1654,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeCategoricalIndex": {
  "lineno": 1642,
  "symbols_in_volume": [
   "numpy.random.choice",
   "pandas.CategoricalIndex"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeCustomDataframe": {
  "lineno": 1917,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeCustomIndex": {
  "lineno": 1821,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pandas.compat.Counter",
   "pandas.compat.lzip",
   "pandas.compat.range",
   "pandas.compat.string_types",
   "pandas.core.dtypes.common.is_sequence"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeCustomIndex.keyfunc": {
  "lineno": 1888,
  "symbols_in_volume": [
   "pandas.compat.lmap",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeDataFrame": {
  "lineno": 1773,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeDateIndex": {
  "lineno": 1679,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DatetimeIndex",
   "pandas.bdate_range"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeFloatIndex": {
  "lineno": 1674,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.random_sample",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeFloatSeries": {
  "lineno": 1725,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeIntIndex": {
  "lineno": 1662,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeIntervalIndex": {
  "lineno": 1648,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.IntervalIndex.from_breaks"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeMissingCustomDataframe": {
  "lineno": 2028,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeMissingDataframe": {
  "lineno": 2059,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeMixedDataFrame": {
  "lineno": 1791,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeObjectSeries": {
  "lineno": 1735,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePanel": {
  "lineno": 1800,
  "symbols_in_volume": [
   "pandas.Panel.fromDict",
   "string.ascii_uppercase",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePanel4D": {
  "lineno": 1814,
  "symbols_in_volume": [
   "pandas.Panel4D",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePeriodFrame": {
  "lineno": 1795,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePeriodIndex": {
  "lineno": 1689,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.PeriodIndex"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePeriodPanel": {
  "lineno": 1807,
  "symbols_in_volume": [
   "pandas.Panel.fromDict",
   "string.ascii_uppercase",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "pandas.util.testing.makePeriodSeries": {
  "lineno": 1753,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeRangeIndex": {
  "lineno": 1670,
  "symbols_in_volume": [
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeStringIndex": {
  "lineno": 1634,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeStringSeries": {
  "lineno": 1730,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeTimeDataFrame": {
  "lineno": 1768,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeTimeSeries": {
  "lineno": 1747,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeTimedeltaIndex": {
  "lineno": 1685,
  "symbols_in_volume": [
   "pandas.TimedeltaIndex"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeUIntIndex": {
  "lineno": 1666,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.compat.lrange"
  ],
  "type": "function"
 },
 "pandas.util.testing.makeUnicodeIndex": {
  "lineno": 1638,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas.util.testing.network": {
  "lineno": 2237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.network.wrapper": {
  "lineno": 2330,
  "symbols_in_volume": [
   "functools.wraps",
   "pytest.skip",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "pandas.util.testing.optional_args": {
  "lineno": 2145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.optional_args.wrapper": {
  "lineno": 2155,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.compat.callable"
  ],
  "type": "function"
 },
 "pandas.util.testing.optional_args.wrapper.dec": {
  "lineno": 2157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.patch": {
  "lineno": 2767,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pandas.util.testing.pudebug": {
  "lineno": 751,
  "symbols_in_volume": [
   "pudb.runcall"
  ],
  "type": "function"
 },
 "pandas.util.testing.raise_assert_detail": {
  "lineno": 1074,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.dtypes.common.is_categorical_dtype",
   "pandas.io.formats.printing.pprint_thing"
  ],
  "type": "function"
 },
 "pandas.util.testing.randbool": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "pandas.util.testing.rands": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "pandas.util.testing.rands_array": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.choice",
   "numpy.str_"
  ],
  "type": "function"
 },
 "pandas.util.testing.randu": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "pandas.util.testing.randu_array": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.choice",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "pandas.util.testing.reset_display_options": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.reset_option"
  ],
  "type": "function"
 },
 "pandas.util.testing.reset_testing_mode": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.util.testing.round_trip_localpath": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.util.testing.round_trip_pathlib": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pandas.util.testing.round_trip_pickle": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.compat.u",
   "pandas.read_pickle",
   "pandas.to_pickle"
  ],
  "type": "function"
 },
 "pandas.util.testing.set_locale": {
  "lineno": 556,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "locale.LC_ALL",
   "locale.getlocale",
   "locale.setlocale",
   "pandas.core.common._all_not_none"
  ],
  "type": "function"
 },
 "pandas.util.testing.set_testing_mode": {
  "lineno": 62,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas.util.testing.set_timezone": {
  "lineno": 2819,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.environ.get",
   "pandas.compat.is_platform_windows",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing.set_timezone.setTZ": {
  "lineno": 2848,
  "symbols_in_volume": [
   "os.environ",
   "time.tzset"
  ],
  "type": "function"
 },
 "pandas.util.testing.set_trace": {
  "lineno": 756,
  "symbols_in_volume": [
   "IPython.core.debugger.Pdb",
   "pdb.Pdb",
   "sys._getframe"
  ],
  "type": "function"
 },
 "pandas.util.testing.skip_if_no_ne": {
  "lineno": 405,
  "symbols_in_volume": [
   "pandas.core.computation.expressions._NUMEXPR_INSTALLED",
   "pandas.core.computation.expressions._USE_NUMEXPR",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing.skip_if_no_package": {
  "lineno": 2093,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas.util.testing.stdin_encoding": {
  "lineno": 2401,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "sys.stdin"
  ],
  "type": "function"
 },
 "pandas.util.testing.test_parallel": {
  "lineno": 2665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.test_parallel.wrapper": {
  "lineno": 2691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas.util.testing.test_parallel.wrapper.inner": {
  "lineno": 2692,
  "symbols_in_volume": [
   "functools.wraps",
   "pandas.compat.range",
   "threading.Thread"
  ],
  "type": "function"
 },
 "pandas.util.testing.use_numexpr": {
  "lineno": 2650,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pandas.core.computation.expressions._MIN_ELEMENTS",
   "pandas.core.computation.expressions._USE_NUMEXPR",
   "pandas.core.computation.expressions.set_use_numexpr"
  ],
  "type": "function"
 }
}